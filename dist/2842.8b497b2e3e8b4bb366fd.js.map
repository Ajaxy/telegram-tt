{"version":3,"file":"2842.8b497b2e3e8b4bb366fd.js","mappings":"yOAgCA,MA0FA,GAAeA,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA6B,IAA3B,OAAEC,GAAQD,EACjB,MAAME,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1BG,GAAYC,EAAAA,EAAAA,IAAoBN,EAAQE,GAG9C,MAAO,CACLG,YACAE,WAJwBC,EAAAA,EAAAA,KAAeR,GAAQS,YAAcT,EAAOU,WAAWC,uBAAoBC,KAInEP,GAAWQ,IAAMC,QAC/CT,EACIA,EAAUU,kBAAoB,GAAKV,EAAUW,SAC7Cb,GAAQA,EAAKc,gBAAkBd,EAAKe,cAE3C,GAbenB,EAxFgCoB,IAM9C,IAN+C,OACnDjB,EAAM,SACNK,EAAQ,UACRa,EAAS,UACTf,EAAS,gBACTgB,GACDF,EACC,MAAM,8BACJG,EAA6B,4BAC7BC,IACEC,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPC,GAAsBC,EAAAA,EAAAA,KAAY,KACtCN,EAA8B,CAC5BpB,UACA,GACD,CAACoB,EAA+BpB,IAE7B2B,EAAexB,GAAWwB,aAE1BC,GAAsBC,EAAAA,EAAAA,KAAQ,KAClC,IAAKF,EACH,MAAO,GAIT,MAAMG,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KAC9BC,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAOG,OAAOC,OAAOV,GAClBW,MAAM,EAlCiB,GAmCvBC,KAAIC,IAAA,IAAC,GAAE7B,GAAI6B,EAAA,OAAKV,EAAUnB,IAAOuB,EAAUvB,EAAG,IAC9C8B,OAAO7B,QAAQ,GACjB,CAACe,KAEJe,EAAAA,EAAAA,KAAU,KACR,GAAKvC,GAAWQ,KACXN,IAAYF,EAAUW,UAO3B,OALAO,EAA4B,CAC1BV,GAAIR,EAAUQ,GACdgC,YAAY,IAGP,KACLtB,EAA4B,CAC1BV,GAAIR,EAAUQ,GACdgC,YAAY,GACZ,CACH,GACA,CAACxC,GAAWQ,GAAIR,GAAWW,SAAUT,EAAUgB,IAElD,MAAM,aACJuB,EAAY,qBACZC,IACEC,EAAAA,EAAAA,GAAkBlC,QAAQT,GAAaE,IAErC0C,GAA4BC,EAAAA,EAAAA,GAAiB7C,GAAWU,mBAAmB,GAC3EoC,GAA+BD,EAAAA,EAAAA,GAAiBpB,GAAqB,GAE3E,GAAKgB,EAEL,OACEM,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACT,mBACAjC,GAAmB,oBACnBD,EACA2B,GAEFQ,QAAS5B,GAETyB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAASK,EAAK,uBAC9B2B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgBK,EAAK,eAAgBwB,GAA6B,EAAG,OAEtFnC,QAAQqC,GAA8BK,SACrCJ,EAAAA,GAAAC,cAACI,EAAAA,EAAU,CAACC,KAAK,QAAQC,MAAOR,EAA8B/B,UAAU,YAE1EgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACC,OAAK,EAACzC,UAAU,QACrBK,EAAK,iBAEJ,I,yGCrHV,MCsEA,EApDsCN,IAGhC,IAHiC,KACrC2C,EAAI,UACJ1C,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEPqC,GAAcC,EAAAA,EAAAA,OACbC,EAAaC,EAAeC,IAAmBC,EAAAA,EAAAA,IAAQ,GAExDC,GAAgBC,EAAAA,EAAAA,MAA0BrC,EAAAA,EAAAA,OAE1CsC,GAAcxC,EAAAA,EAAAA,KAAQ,KAC1B,IAAKsC,EACH,OAAOP,EAET,IAAKG,EACH,OAAOF,EAAYS,SAAWV,EAGhC,MAAMW,EAAWV,EAAYS,QAEvBE,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAKN,OAAQmB,IAC3BF,GAAYX,EAAKa,KAAOF,EAASE,GACnCD,EAASE,KACPxB,EAAAA,GAAAC,cAAA,OAAKjC,UD3CyE,YC4C5EgC,EAAAA,GAAAC,cAAA,OAAKjC,UD5C8F,YC4ChE0C,EAAKa,IACxCvB,EAAAA,GAAAC,cAAA,OAAKjC,UD7CmJ,WC6CnHyD,eAAgBV,GAAkBM,EAASE,IAChFvB,EAAAA,GAAAC,cAAA,OAAKjC,UD9CyQ,WC8CzOyD,eAAgBV,GAAkBL,EAAKa,MAIhFD,EAASE,KAAKxB,EAAAA,GAAAC,cAAA,YAAOS,EAAKa,KAM9B,OAFAZ,EAAYS,QAAUV,EAEfY,CAAQ,GACd,CAACL,EAAeJ,EAAaH,IAMhC,OAJAlB,EAAAA,EAAAA,KAAU,KACRsB,GAAe,GACd,CAACJ,IAGFV,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GDhEE,WCgE0BlC,GAAY0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAChF2D,EACI,C,kUC1BX,SAAezE,EAAAA,EAAAA,KAzBf,SAAiCkF,GAC/B,MAAM,QACJC,EAAO,OAAEC,EAAM,aAAEC,KAAiBC,GAChCJ,EAEEK,EAAeJ,GAASK,WAAWC,QACnCC,EAAiBP,GAAY,UAASA,EAAQpE,KAC9C4E,GAAiBC,EAAAA,EAAAA,GACrBT,GAAUU,EAAAA,EAAAA,IAAsBV,EAAQpE,SAAMD,EAC9CsE,IAAWC,EACXS,EAAAA,GAAeC,SAEXC,GAASJ,EAAAA,EAAAA,GAASF,EAAgBN,GAExC,OACE9B,EAAAA,GAAAC,cAAC0C,EAAAA,EAAuBC,EAAA,CACtBF,OAAQA,EACRG,WAAYR,EACZJ,aAAcA,GAEVD,GAGV,G,mHCtCA,QAA4C,W,oOCkB5C,MAEMc,EAAoB,IAAIC,IAoD9B,GAAerG,EAAAA,EAAAA,KAlDf,SAAiCkF,GAC/B,MAAM,WACJiB,EAAU,aAAEZ,EAAY,UAAEjE,KAAcgE,GACtCJ,GAEGoB,EAAY,CAAGC,IAAmBjC,EAAAA,EAAAA,GAAQtD,QAAQuE,IACnDiB,GAAkBC,EAAAA,EAAAA,GAAmBH,IAEpCI,EAAeC,EAAiBC,IAAqBtC,EAAAA,EAAAA,GAAQ8B,EAAkBS,IAAIV,IACpFW,GAAoBL,EAAAA,EAAAA,GAAmBC,IAEtCK,EAAkBC,IAAsB1C,EAAAA,EAAAA,IAAQ,GAEjD2C,GAAoBC,EAAAA,EAAAA,IAAgB,KACxCP,IACAP,EAAkBe,IAAIhB,EAAW,IAG7BiB,GAAuBF,EAAAA,EAAAA,IAAgB,KAC3CX,IACAK,IACAS,WAAWL,EAzBY,IAyB2B,KAG9C,KAAEpD,GAASsB,EAEjB,OACE5B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAelC,EDlDT,YCmDjBgG,OAAOC,EAAAA,EAAAA,QAAoBzG,IAAT8C,GAAuB,UAASA,gBAAmBA,SAEpE2B,IAAiBwB,GAEhBzD,EAAAA,GAAAC,cAAA,OAAKiE,IAAKjC,EAAcjE,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAgBjB,GAAkBkB,WAAW,IAEhGvB,IAAeY,GAEdzD,EAAAA,GAAAC,cAAA,OACEiE,IAAKrB,EACL7E,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAgBX,GAC1CY,WAAW,EACXC,OAAQV,IAIZ3D,EAAAA,GAAAC,cAACqE,EAAAA,EAAY1B,EAAA,GAAKZ,EAAU,CAAEqC,OAAQP,KAG5C,G,wUCMO,MAAMS,EAAwBC,OAAOC,WAAW,sBAC1CC,EAAoCF,OAAOC,WAAW,sBA8lBnE,SAASE,EACPC,EACAC,EACAC,GAEA,OACE9E,EAAAA,GAAAC,cAAA,OACEjC,UAAU,WACV+G,IAAKD,GAEJD,EAAexF,KAAIC,IAAA,IAAC,MAAE0F,EAAK,IAAEC,GAAK3F,EAAA,OACjCU,EAAAA,GAAAC,cAAA,OACEjC,UAAU,6BACVgG,MAAQ,SAAgB,IAARgB,cAAwB,IAAY,IAANC,MAC9C,IAEJjF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,0BACdgC,EAAAA,GAAAC,cAAA,KACEjC,UAAU,+BACVgG,MAAQ,yBAAuC,IAAfY,SAGpC5E,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kBACdgC,EAAAA,GAAAC,cAAA,KACEjC,UAAU,uBACVgG,MAAQ,yBAAuC,IAAfY,SAK1C,CAEA,SAAelI,EAAAA,EAAAA,KAznBaqB,IAyBtB,IAzBuB,MAC3BmH,EAAK,QACLC,EAAO,YACPC,EAAW,eACXC,EAAc,OACdC,EAAM,KACNC,EAAI,UACJC,EAAS,UACTxH,EAAS,aACTyH,EAAY,WACZC,EAAU,cACVC,EAAa,eACbC,EAAc,sBACdC,EAAqB,cACrBC,EAAa,qBACbC,EAAoB,YACpBC,EAAW,cACXC,EAAa,SACbC,EAAQ,oBACRC,EAAmB,OACnBC,EAAM,QACNC,EAAO,YACPC,EAAW,eACXC,EAAc,YACdC,GACDzI,EACC,MAAM,2BACJ0I,GAA0B,qBAAEC,GAAoB,gBAAEC,GAAe,sBAAEC,KACjExI,EAAAA,EAAAA,OAGFyI,SACEC,MAAOC,GAAY,MAAEC,GAAK,MAAEC,IAC7B,cAAEC,IACD/B,EACE2B,GAAQC,KAAgBI,EAAAA,EAAAA,IAAuBhC,GAC/CiC,GAAU1J,QAAQsJ,IAASC,IAC3BI,IAAYzG,EAAAA,EAAAA,KAAgB,GAE5BkE,IAAYlE,EAAAA,EAAAA,IAAuB,MACnCvC,IAAOC,EAAAA,EAAAA,MACP,MAAEqD,IAAUtD,IAEZ,SAAEiJ,KAAaC,EAAAA,EAAAA,OACdC,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,GACzCC,GAAaH,KA/CL,EAgDRI,IAAYC,EAAAA,EAAAA,IAAoB1C,EAAS,aACzC2C,IAAexF,EAAAA,EAAAA,GAASsF,IAAW,EAAOpF,EAAAA,GAAeC,SACzDsF,IAASC,EAAAA,EAAAA,IAAc7C,GACvB8C,GAAmB3C,IAAW4C,EAAAA,GAAYC,aAC1CC,GAAYhB,GAAWW,GAAS,eAAiB,QAAW,QAE5DM,IAAY/F,EAAAA,EAAAA,IAChBuF,EAAAA,EAAAA,IAAoB1C,EAAS,WAC5BwC,IACDW,EAAAA,EAAAA,IAAsBnD,EAAS,YAGzBoD,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCZ,EAAAA,EAAAA,IAAoB1C,EAAS,aAC5BQ,GACD2C,EAAAA,EAAAA,IAAsBnD,EAAS,aAG3BuD,IAAkB9E,EAAAA,EAAAA,IAAgB,KACtC6D,IAAe,GACfrB,IAASjB,EAAQ1H,GAAI0H,EAAQrI,OAAO,IAGhC6L,IAAoB/E,EAAAA,EAAAA,IAAgB,KACxC6D,IAAe,EAAM,KAGjB,WACJmB,GAAU,eAAE/D,GAAc,kBAAEgE,GAAiB,eAAEC,KAC7CC,EAAAA,EAAAA,KAEEC,GAAUf,IACV,UACJgB,GAAS,aAAErE,GAAY,UAAEsE,GAAS,eAAEC,GAAc,SAAEC,KAClDC,EAAAA,EAAAA,IACFC,EAAAA,EAAAA,IAAYnE,IACZoE,EAAAA,EAAAA,IAAiBpE,GACjBiD,GACAC,GACAQ,QACArL,EACAsL,GACApL,QAAQ8J,IAAetB,GACvBwC,GACAC,IACAa,EAAAA,EAAAA,IAAerE,IAAY4C,QAC3BvK,EACA6I,EACA2C,GACAjB,KAAWE,IAGPwB,GAAsB,EAAI7E,GAC1B8E,IAAQC,EAAAA,EAAAA,IAAaxE,GACrByE,GAAY7B,IAAUE,GAEtB4B,GAybR,SACE3E,EACA8B,GAMA,IALApC,EAAYkF,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,EACfJ,EAAKI,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACLC,EAAUD,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACVxC,EAAQwC,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACRF,EAASE,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAGT,MAAME,GAAYpJ,EAAAA,EAAAA,IAA0B,OAEpCqJ,KAAMC,EAAM,KAAEC,IAASxL,EAAAA,EAAAA,KAAQ,KACrC,IAAKqI,EACH,OAGF,MAAM,SAAEoD,EAAQ,SAAEhB,GAAapC,EAC/B,IAAKoD,EACH,MAAO,CACLH,KAAM,IAAII,MAAMC,KAAKC,IAAInB,EChoBQ,KDgoB8BoB,KAAK,GACpEL,KAAM,GAIV,MAAM,WAAEM,EAAU,WAAEC,GAtKxB,SAAiCpD,EAAoByC,GACnD,MAAO,CACLU,WAAYnD,EAAY/C,EAAsBoG,QAAU,GAAK,GAAM,GACnED,WAAYpD,EACP/C,EAAsBoG,QACrB,GACCZ,GAAcrF,EAAkCiG,QAAU,GAAK,GAClE,GAER,CA6JuCC,CAAwBtD,EAAUyC,GAC/Dc,EAAiBP,KAAKC,IAAInB,EA7jBT,GA6jBwC,GACzD0B,EAAcR,KAAK7J,MAAMgK,GAAcC,EAAaD,GAAcI,GAClEE,GAAkBC,EAAAA,EAAAA,GAAe,IAAIC,WAAWb,IAEtD,OAAOc,EAAAA,EAAAA,GAAiBH,EAAiBD,EAAY,GACpD,CAACxD,EAAUN,EAAO+C,KAAgB,CAAC,EAwBtC,OAtBAoB,EAAAA,EAAAA,KAAgB,KACd,MAAMC,EAASpB,EAAU5I,QAEpBgK,GAAWlB,QAAmB1M,IAAT2M,GC1oBvB,SACLiB,EACAlB,EACAmB,EAAgBtN,GAIhB,IAHA,KACEoM,EAAI,UAAEmB,EAAS,kBAAEC,GACFxN,EAEjB,MAAMyN,EAZW,EAYHtB,EAAO9J,OAGrBgL,EAAOI,MAAgB,EAARA,EACfJ,EAAOK,OAASA,GAChBL,EAAOpH,MAAMwH,MAAS,GAAEA,MACxBJ,EAAOpH,MAAMyH,OAAU,OAEvB,MAAMC,EAAMN,EAAOO,WAAW,MAC9BD,EAAIE,MAAM,EAAG,GAEb1B,EAAO2B,SAAQ,CAACC,EAAMvK,KACpBmK,EAAIK,YAAexK,EAAI2I,EAAO9J,QAAUiL,EAAY,GAAM,EAC1DK,EAAIJ,UAAYD,EAAW9J,EAAI2I,EAAO9J,OAASmL,EAAoBD,EACnE,MAAMU,EAAc1B,KAAK2B,IAAI,EAAaH,EAAOxB,KAAK2B,IAAI,EAAG9B,GAxBlD,KA8Bf,SACEuB,EAA+BQ,EAAWC,EAAWX,EAAeC,EAAgBW,GANhBC,EAQxD,EAAID,IACdA,EAASZ,GAEPC,EAAS,EAAIW,IACfA,EAASX,EAAS,GAGpBC,EAAIY,YACJZ,EAAIa,OAAOL,EAAIE,EAAQD,GACvBT,EAAIc,MAAMN,EAjB0DG,EAiB/CF,EAAGD,EAjB4CG,EAiBjCF,EAAIV,EAAQW,GAC/CV,EAAIc,MAAMN,EAlB0DG,EAkB/CF,EAAIV,EAAQS,EAAGC,EAAIV,EAAQW,GAChDV,EAAIc,MAAMN,EAAGC,EAAIV,EAAQS,EAAGC,EAAGC,GAC/BV,EAAIc,MAAMN,EAAGC,EAAGD,EApBoDG,EAoBzCF,EAAGC,GAC9BV,EAAIe,WACN,CAtBIC,CAAiBhB,EA3BF,EA2BOnK,GAzBX,GAyBqCyK,GAAe,EA5B/C,EA4B+DA,EA1B9D,GA2BjBN,EAAIlB,MAAM,GAEd,CD4nBImC,CAAevB,EAAQlB,EAAQN,EAAY,EAAIhF,EAAeA,EAAc,CAC1EuF,OACAmB,UALgB5B,EAJa,SAAVxE,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,UAW/CqG,kBALwB7B,EAHa,SAAVxE,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,WAUvD,GACD,CAACwE,EAAOS,EAAMvF,EAAcsF,EAAQhF,EAAO0E,IAEvCI,CACT,CAjf4B4C,CACxB1H,EACA8B,IACCE,IAAkBwC,IAAUE,GAAiBhF,GAAJ,EAC1C8E,IACClE,EACD8B,GACAsC,IAGIiD,GAAe5D,IAAcrE,GAAe,GAAKA,GAAe,GAEtEpF,EAAAA,EAAAA,KAAU,KACRiI,GAAewB,GAAU,GACxB,CAACA,KAEJ,MAAM6D,GAAsBtF,KAAgBoB,IAEtC,YACJmE,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACF/H,EACAE,GAAkBmD,GAClBsE,IAAuBnH,OACJnI,IAAnB6H,IAIA3F,aAAcyN,GACdxN,qBAAsByN,KACpBxN,EAAAA,EAAAA,GAAkBoN,IAEhBK,GAAoBF,KAAwBL,IAAuBC,IAEnEO,IAAoB1J,EAAAA,EAAAA,IAAgB,KACxC,GAAImJ,GACFxG,UADF,CAKA,GAAIwB,GAGF,OAFAnB,GAAsB,CAAEzB,iBACxBmB,MAIG2C,IACH7C,IAASjB,EAAQ1H,GAAI0H,EAAQrI,SAG/BsB,EAAAA,EAAAA,MAAamP,qBAAqB,CAAEjI,WACpCmC,IAAgBD,IAChB0B,IAdA,CAcW,KAGb1J,EAAAA,EAAAA,KAAU,KACJ8G,GAAeY,KAAkB+B,IAAatD,IAChDW,GACF,GACC,CAAC2C,GAAW/B,GAAeZ,EAAaX,IAE3C,MAAM6H,IAAsB5J,EAAAA,EAAAA,IAAgB,KACtC+B,EACFc,GAA2B,CAAEtB,YAE7BuB,GAAqB,CAAEvB,WACzB,IAGIsI,IAAa7J,EAAAA,EAAAA,IAAiB8J,IAClC,GAAIrG,GAAUjG,SAAW0D,GAAU1D,QAAS,CAC1C,MAAM,MAAEoK,EAAK,KAAEmC,GAAS7I,GAAU1D,QAAQwM,wBACpCC,EAAUH,aAAaI,WAAaJ,EAAEG,QAAUH,EAAEK,cAAc,GAAGF,QACzEH,EAAEM,kBAEF7E,GAAemB,KAAK2B,IAAI3B,KAAKC,IAAInB,KAAayE,EAAUF,GAAQnC,GAAQpC,GAAW,IAAM,MAC3F,KAGI6E,IAAkBrK,EAAAA,EAAAA,IAAiB8J,IACnCA,aAAaI,YAA2B,IAAbJ,EAAEQ,SACjC7G,GAAUjG,SAAU,EACpBqM,GAAWC,GAAE,IAGTS,IAAiBvK,EAAAA,EAAAA,IAAgB,KACrCyD,GAAUjG,SAAU,CAAK,IAGrBgN,IAAkBxK,EAAAA,EAAAA,IAAgB,KACtC4C,EAAarB,EAAQ1H,GAAI0H,EAAQrI,OAAO,IAGpCuR,IAAmBzK,EAAAA,EAAAA,IAAgB,KACvC+C,GAAgB,CAAE7J,OAAQqI,EAAQrI,OAAQwR,UAAWnJ,EAAQ1H,IAAK,IAapE,SAAS8Q,KACP,GAAInH,GACF,OAAOhC,GAAe,QAGxB,MAAM,MAAEoJ,EAAK,SAAEC,GAAa3H,GAE5B,OAAO0H,GAASC,CAClB,EAlBAjP,EAAAA,EAAAA,KAAU,KACR,GAAKsF,GAAU1D,SAAYyL,KAAgB5E,GAC3C,OAAOyG,EAAAA,EAAAA,IAAc5J,GAAU1D,QAAS,CACtCuN,UAAWV,GACXW,UAAWT,GACXhO,QAASgO,GACTU,OAAQpB,IACR,GACD,CAACZ,GAAcoB,GAAiBR,GAAYU,GAAgBlG,KAkC/D,MAAM6G,IAAgB5O,EAAAA,EAAAA,GACpB,QACAlC,EACAiK,IAAoB,kBACpB3C,IAAW4C,EAAAA,GAAY6G,QAAU,SACjCrF,IAASpE,IAAW4C,EAAAA,GAAY6G,QAAU,OACzCzJ,IAAW4C,EAAAA,GAAY8G,QAAU1J,IAAW4C,EAAAA,GAAY+G,cAAgB,SACzEvJ,GAAc,qBAGVwJ,GAAmB,CAAC,uBACtB7B,GACF6B,GAAiB1N,KAAK,WAEtB0N,GAAiB1N,KAAKyH,GAAY,QAAU,QAG9C,MAAMkG,IAAmBjP,EAAAA,EAAAA,GAAe,UAAW2M,IAAgB,iBAEnE,SAASuC,KACP,OACEpP,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmR,IACdnP,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,QAAQ0D,IAAI,OAAO8M,MAAOD,OAAoBc,EAAAA,EAAAA,GAAWd,OAEtEvO,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACZN,QAAQ6H,IACPvF,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CACHtR,UAAU,OACVmC,QAASiO,KAERmB,EAAAA,EAAAA,IAAoBlR,GAAa,IAAPkH,MAMlCsH,IACC7M,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBAAqB0D,IAAKC,GAAQ,WAAQnE,GACvDwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyB0D,IAAI,QAC1CkD,GAAe,GAAM,IAAE4K,EAAAA,EAAAA,IAAoBpG,GAAWxE,GAAcwE,OAEtEzE,EAAeC,GAAcC,GAAgBC,MAGhD+H,IAnER,WACE,GAAIzF,GACF,OACEpH,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,GAAQ,WAAQnE,IACxCgS,EAAAA,EAAAA,KAAqBxI,IAASC,IAAQmC,WAK7C,MAAM,UAAEqG,GAAc3I,GAEtB,OACE9G,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,GAAQ,WAAQnE,IACxCgS,EAAAA,EAAAA,IAAoBpG,IACrBpJ,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACxByR,GAAazP,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYwQ,MAAOiB,IAAYJ,EAAAA,EAAAA,GAAWI,IACvEA,GAAarK,GAAepF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACrDoH,GAAepF,EAAAA,GAAAC,cAAA,QAAMuO,MAAOpJ,IAAciK,EAAAA,EAAAA,GAAWjK,IAG5D,CA+CwBsK,GAGxB,CAoCA,OACE1P,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8Q,GAAepN,IAAKrD,GAAKsD,MAAQ,MAAQ,OACtD8D,GACCzF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZ0H,GAAc1F,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBApChCgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,MAAkBgP,KAChClP,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLkP,QAASrI,GACThH,KAAK,UACLtC,UAAU,cACV4R,MAAO9H,GAAe,oBAAsB,UAC5C+H,UAAW5G,GAAY,cAAgB,aACvC9I,QAASmN,GACT3L,MAAOtD,GAAKsD,MACZmO,gBAAiBhI,GACjBiI,eAAgB9H,KAEdA,IAAoBjI,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,UAC/BhI,IAAoBjI,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,UAChChI,IACCjI,EAAAA,GAAAC,cAACqE,EAAAA,EAAY,CACXtG,UAAU,QACV0E,OAAQwN,EAAAA,EAAeC,MACvBJ,gBAAc,EACdK,QAAQ,EACR9P,KAAM,MAIXyH,KAAWE,IACVjI,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,eAcd9C,IACCnN,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBkN,GAAmBC,IAAqB,gBACtFrN,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CACdhF,SAAU4B,GACVqD,aAAW,EACXC,WAAS,EACTjQ,KAAK,IACLH,QAASkN,GAAoBC,QAAoB9P,EACjDgT,SAAUnD,MAIfpF,KAAqBkF,IACpBnN,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,kBAC7BF,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CACdhF,SAAUzG,GACV0L,aAAW,EACXhQ,KAAK,IACLkQ,SAAO,EACPC,eAAgB,EAAI,KAIzB3J,IAASd,IAAgB+G,IACxB/M,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLH,KAAK,OACLtC,UAAU,kBACV6R,UAAWlK,EAAgB,kBAAoB,WAC/CxF,QAASqN,IAETxN,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQyF,EAAgB,aAAe,sBAGvEL,IAAW4C,EAAAA,GAAY8G,QAAUI,KACjC9J,IAAW4C,EAAAA,GAAY8G,QAAUlI,IA6CxC,SACEzI,EACAyI,EACAsC,EACAH,EACArE,EACAC,EACAC,EACA4L,EACAnL,EACA8F,EACA+C,GAEA,MAAM,MACJI,EAAK,UAAEiB,EAAS,SAAEhB,GAChB3H,EACE6J,EAAe1H,GAAcrE,EAAe,GAAKA,EAAe,GAChE,MAAEjD,GAAUtD,EAElB,OACE2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,QAAQ0D,IAAI,OAAO8M,MAAOA,IAAQa,EAAAA,EAAAA,GAAWb,GAASC,IAClEkC,GACC3Q,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACzCwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyB0D,IAAI,SAC1C8N,EAAAA,EAAAA,IAAoBpG,EAAWxE,EAAcwE,IAE/CzE,EAAeC,EAAcC,EAAgBC,KAGhD6L,GAAgBD,GAChB1Q,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACxC6N,EAAY,IAAEuF,EAAAA,EAAAA,IAAkB9J,EAAOxG,KAAO+K,aAAiB7N,GAAWoT,EAAAA,EAAAA,IAAkB9J,EAAOxG,QAGtGqQ,IAAiBD,GACjB1Q,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACzCwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAAW0D,IAAI,SAAQ8N,EAAAA,EAAAA,IAAoBpG,IAC1DqG,GACCzP,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACzBgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAY0D,IAAI,OAAO8M,MAAOiB,IAAYJ,EAAAA,EAAAA,GAAWI,KAGxE/R,QAAQ6H,IACPvF,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACzBgC,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAACtR,UAAU,OAAOmC,QAASiO,IAC7B0C,EAAAA,EAAAA,IAAoBzS,EAAa,IAAPkH,GAAa,MAQxD,CArGiDwL,CACzC1S,GACAyI,GACAsC,GACAH,GACArE,GACAC,GACAC,GACCa,GAAiBoH,GAClBxH,EACA0H,GACAzG,EAAc4H,QAAkB5Q,GAEjC8H,IAAW4C,EAAAA,GAAY+G,cAAgBjI,IAASC,KAAUmI,MACzD9J,IAAW4C,EAAAA,GAAY6G,QAAU9G,KAAqBjB,IAyF9D,SACEA,EACAlC,EACA+E,EACAjF,EACAsC,EACAtB,EACAC,EACAC,EACAC,EACAiL,EACA7K,EACAb,GAEA,OACEtF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,oBACbgC,EAAAA,GAAAC,cAAA,OACEjC,UAAU,WACVoG,WAAW,EACXW,IAAKD,GAEL9E,EAAAA,GAAAC,cAAA,UAAQ8E,IAAK8E,KAEdmH,GAEChR,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACL,QAASA,MACV2F,GAAiBC,IAAyBI,EAC7CA,GAAqBN,GACXD,GACVoL,GACF,GAGAhR,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GACZ,kBACA,OACC4F,GAAiBC,EAAwB,YAAc,mBACvDD,GAAiBC,KAA0BF,GAAyB,sBAGtED,GACC5F,EAAAA,GAAAC,cAAA,OAAKgR,QAAQ,YAAYjT,UAAU,eACjCgC,EAAAA,GAAAC,cAAA,QACEjC,UAAU,eACVwM,KAAK,cACLgB,MAAM,KACNC,OAAO,KACP,eAAa,IACb,kBAAgB,QAChByF,GAAG,IACHC,GAAG,IACHC,OAAO,sBACP,oBAAkB,IAClB,mBAAiB,aAO7BpR,EAAAA,GAAAC,cAAA,KACEjC,WAAWkC,EAAAA,EAAAA,GAAe,iBAAkBoF,IAAW4C,EAAAA,GAAYC,cAAgBjB,GAAiB,UACpGxF,IAAI,QAEc,IAAjBkD,GAAuC,IAAjBA,GACnB4K,EAAAA,EAAAA,IAAoBxI,EAAMoC,WAAYoG,EAAAA,EAAAA,IAAoBxI,EAAMoC,SAAWxE,IAIvF,CA9JQyM,CACErK,GACAlC,GACA+E,GACA9B,GAAS0B,GAAsB7E,GAC/BsC,GACAtB,EACAC,EACAC,EACAC,EACAE,EAAgBoI,QAAmB7Q,EACnC2I,EACAb,GAGA,G,mFEheV,SAAgB,KAAO,WAAW,aAAa,WAAW,UAAY,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,aAAa,WAAW,UAAY,WAAW,oBAAoB,WAAW,gBAAkB,WAAW,cAAc,WAAW,WAAa,WAAW,aAAa,WAAW,UAAY,WAAW,aAAa,WAAW,UAAY,WAAW,OAAS,WAAW,MAAQ,YCa3bgM,EAAgB,EAuCtB,GAAe5U,EAAAA,EAAAA,KA7BkBqB,IAM3B,IAN4B,MAChCwC,EAAK,KACLD,EAAI,UACJtC,EAAS,MACTuT,EAAQD,EAAa,UACrBE,GACDzT,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KACPmT,GAAqB9S,EAAAA,EAAAA,KAAQ,IAC7B6S,KACCjR,GAAOH,QAAUG,EAAMH,QAAUmR,OAAtC,EACQ,KAAGhR,EAAMH,OAASmR,KACzB,CAACC,EAAWjR,EAAOgR,IAEtB,OACEvR,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAelC,EAAWmG,EAAOuN,KAAMvN,EAAQ,QAAO7D,MACjEoB,IAAKrD,EAAKsD,MAAQ,MAAQ,OAEzBpB,GAAOnB,MAAM,EAAGmS,GAAOlS,KAAKsS,GAAS3R,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CAACtR,KAAMA,EAAMqR,KAAMA,EAAM3T,UAAWmG,EAAO0N,WACvFJ,GACCzR,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAAO2N,OACpBL,GAGD,G,8OC/CV,IAAIM,EASW,SAASC,EAA8BC,GACpDF,EAAWG,QACXD,EAAQC,OACV,CAVIC,EAAAA,KACFJ,EAAaK,SAASnS,cAAc,SACpC8R,EAAWM,UAAUxO,IAAI,kCACzBuO,SAASE,KAAKC,YAAYR,I,2QCI5B,MAAMS,EAAa,sB,eCPnB,MAAMC,EAA0B,0BAE1BC,EAAe,CACnBC,KAAM,MACNC,OAAQ,SACRC,UAAW,YACXC,cAAe,eACfC,YAAa,QACbC,UAAW,OAGPC,EAAW,CACfC,OAAQ,IACRP,KAAM,SACNC,OAAQ,KACRC,UAAW,IACXM,WAAY,aACZL,cAAe,MACfC,YAAa,MACbC,UAAW,OAGPI,EAAU,CACd,KACA,KACA,KACA,KACA,KACA,MAGF,SAASC,EAAUC,GAIjB,OAHe,IAAIC,WACAC,gBAAgBF,EAAM,aAE9BhB,IACb,CAEA,SAASmB,GAAeC,EAAYC,GAClC,MAAMC,EAASxB,SAASnS,cAAcgT,EAASC,QAI/C,OAHAU,EAAOD,KAAOA,EACdC,EAAOrB,YAAYmB,EAAKG,WAAU,IAE3BD,CACT,CAEA,SAASE,GAAeJ,EAAY1P,GAClC,MAAM+P,EAAK3B,SAASnS,cAAc+D,GAGlC,OAFA+P,EAAGxB,YAAYmB,EAAKG,WAAU,IAEvBE,CACT,CAEA,SAASC,GAASC,EAAoBC,GACpC,IAAIC,EAAUD,EAAOL,WAAU,GAC/B,OAAKI,GAGDA,EAAMjQ,OAASiQ,EAAMjQ,MAAMoQ,aAAe1B,EAAaC,OACzDwB,EAAUL,GAAeK,EAASlB,EAASN,OAEzCsB,EAAMjQ,OAASiQ,EAAMjQ,MAAMqQ,YAAc3B,EAAaE,SACxDuB,EAAUL,GAAeK,EAASlB,EAASL,SAEzCqB,EAAMjQ,OAASiQ,EAAMjQ,MAAMsQ,iBAAmB5B,EAAaG,YAC7DsB,EAAUL,GAAeK,EAASlB,EAASJ,YAEzCoB,EAAMjQ,OAASiQ,EAAMjQ,MAAMsQ,iBAAmB5B,EAAaI,gBAC7DqB,EAAUL,GAAeK,EAASlB,EAASH,gBAEzCmB,EAAMjQ,OAASiQ,EAAMjQ,MAAMuQ,gBAAkB7B,EAAaK,cAC5DoB,EAAUL,GAAeK,EAASlB,EAASF,cAEzCkB,EAAMjQ,OAASiQ,EAAMjQ,MAAMuQ,gBAAkB7B,EAAaM,YAC5DmB,EAAUL,GAAeK,EAASlB,EAASD,YAGtCmB,GArBEA,CAsBX,CAiBA,SAASK,GAAkBC,GACzB,MAAMf,EAAOe,EAAMZ,WAAU,GAC7B,IAAIM,EAAU/B,SAASsC,eAAehB,EAAKiB,aAAe,IACtDC,EAAalB,EAQjB,MAPsB,MAAlBA,EAAKmB,WACPV,EAAUV,GAAeU,EAAUT,EAA2BC,MAC1D,UAAWD,EAAKoB,WAAW,IAAMpX,QAAQgW,EAAKoB,WAAW,GAAG9Q,SAC9D4Q,EAAalB,EAAKoB,WAAW,KAGjCX,EAAUH,GAASY,EAA2BT,GACvCA,CACT,CAEA,SAASY,GAAarB,GACpB,GAAIA,EAAKoB,aAAepB,EAAKoB,WAAW1U,QAAU,GAAuB,OAAlBsT,EAAKmB,UAAuC,OAAlBnB,EAAKmB,UAAoB,CACxG,IAAIG,EACAb,EAAU/B,SAASsC,eAAehB,EAAKiB,aAAe,IAC1D,GAAsB,OAAlBjB,EAAKmB,UAAuC,OAAlBnB,EAAKmB,UAAuC,OAAlBnB,EAAKmB,SAAmB,CAC9EG,EAAa5C,SAASnS,cAAcyT,EAAKmB,UACzCV,EAAU/B,SAAS6C,yBACnB,MAAMC,EAAQ,GACd,IAAK,IAAI3T,EAAI,EAAGA,EAAImS,EAAKoB,WAAW1U,OAAQmB,IAC1C2T,EAAM1T,QAAQuT,GAAarB,EAAKoB,WAAWvT,KAE7C2T,EAAM7V,KAAKkC,GAAkB4S,EAAQ5B,YAAYhR,IACnD,MAA+C,IAApC6R,EAAQ+B,QAAQzB,EAAKmB,WAC9BG,EAAa5C,SAASnS,cAAcyT,EAAKmB,UACzCV,EAAUK,GAAkBd,EAAKoB,WAAW,KACjB,MAAlBpB,EAAKmB,UACdG,EAAa5C,SAASnS,cAAc,KACpCkU,EA9CN,SAA0BM,GACxB,MAAMf,EAAOe,EAAMZ,WAAU,GAC7B,IAAIM,EAAU/B,SAASsC,eAAehB,EAAKiB,aAAe,IACtDC,EAAaxC,SAASsC,eAAe,IASzC,MARI,UAAWhB,EAAKoB,WAAW,IAAMpX,QAAQgW,EAAKoB,WAAW,GAAG9Q,SAC9D4Q,EAAalB,EAAKoB,WAAW,IAE3BpB,EAAKoB,WAAW,IAAsC,MAAhCpB,EAAKoB,WAAW,GAAGD,WAC3CV,EAAUV,GAAeU,EAAQN,WAAU,GAAQH,EAAKoB,WAAW,GAAyBnB,MAC5FiB,EAAalB,EAAKoB,WAAW,GAAGA,WAAW,IAE7CX,EAAUH,GAASY,EAA2BT,GACvCA,CACT,CAiCgBiB,CAAiB1B,IACA,OAAlBA,EAAKmB,SACdV,EAAUT,GAEVsB,EAAa5C,SAASnS,cAAc,QACpCkU,EAAUK,GAAkBd,IAE9B,OAAIsB,GACFA,EAAWzC,YAAY4B,GAChB,CAACa,IAGH,CAACtB,EAAKG,WAAU,GACzB,CAEA,GAAIH,EAAKoB,WAAY,CACnB,MAAMO,EAAQ,GACd,IAAK,IAAI9T,EAAI,EAAGA,EAAImS,EAAKoB,WAAW1U,OAAQmB,IAC1C8T,EAAM7T,QAAQuT,GAAarB,EAAKoB,WAAWvT,KAE7C,OAAO8T,CACT,CAEA,MAAO,CAAC3B,EACV,CAEA,SAAS4B,GAAW5B,GAClB,OAAyB,IAAlBA,EAAK6B,QACd,CCxJA,MAAMC,GAAkB,0B,gBCYxB,MAsHA,GAhH0BC,CACxBtY,EACAuY,EACAC,EACAC,EACAC,EACAC,EACAC,KAEA,MAAM,iBAAEC,IAAqB5X,EAAAA,EAAAA,MACvBC,GAAOC,EAAAA,EAAAA,MAEbkB,EAAAA,EAAAA,KAAU,KACR,GAAKrC,EA0FL,OAFAiV,SAAS6D,iBAAiB,QAASC,GAAa,GAEzC,KACL9D,SAAS+D,oBAAoB,QAASD,GAAa,EAAM,EAvF3DE,eAAeF,EAAYxI,GACzB,IAAKA,EAAE2I,cACL,OAGF,MAAMC,EAAQlE,SAASmE,cACvB,GAAID,IAAU,CAACE,EAAAA,IAAmBC,EAAAA,IAAyBC,EAAAA,KAAyBC,SAASL,EAAM7Y,IACjG,OAGF,MAAMmZ,EAAalJ,EAAE2I,cAAcQ,QAAQ,QAAQC,UAAU,EAjCxC,MAkCfxD,EAAO5F,EAAE2I,cAAcQ,QAAQ,aAErC,IAAIE,EAAsBzD,GAAO0D,EAAAA,EAAAA,ID9ChC,SAA2B1D,GAChC,IAAI2D,EAAW7E,SAASnS,cAAc,OACtC,IACEqT,GDsKkC4D,ECtKb5D,GDuKD6D,MAAM1E,GAlB9B,SAA0BgC,GACxB,MAAMnC,EAAOF,SAASnS,cAAc,QAC9BoV,EAAQZ,EAAMK,WACdsC,EAAgB/M,MAAMgN,KAAKhC,GAAO9V,OAAO+V,IACzCgC,EAAa,GAEnB,IAAK,MAAM5D,KAAQ0D,EACjBE,EAAW9V,QAAQuT,GAAarB,IAGlC,IAAK,IAAInS,EAAI,EAAGA,EAAI+V,EAAWlX,OAAQmB,IACrC+Q,EAAKC,YAAY+E,EAAW/V,GAAGsS,WAAU,IAG3C,OAAOvB,CACT,CAOSiF,CAAiBlE,EAAU6D,EAAiBM,QAAQ,eAAgB,MAAMC,UAHxEpE,EAAU6D,EAAiBM,QAAQ,eAAgB,KAAKC,SCvKjE,CAAE,MAAOC,GACHC,EAAAA,KAEFC,QAAQC,MAAMH,EAElB,CDgKa,IAAuBR,EC/JpCD,EAASQ,UAAYnE,EAAKkE,QAAQ,UAAW,KAAKA,QAAQhC,GAAiB,IAE3E,MAAMsC,EAAeb,EAASc,iBAAiC,iBAoC/D,OAnCID,EAAa1X,SACf6W,EAAWa,EAAaA,EAAa1X,OAAS,IAGhDiK,MAAMgN,KAAKJ,EAASe,qBAAqB,MAAMnM,SAAS6H,IACtD,GAAMA,aAAgBuE,YAoBtB,OAhBAvE,EAAKwE,gBAAgB,SAGA,OAAjBxE,EAAKyE,SAAkBzE,EAAK0E,YAAY,MACvB,MAAjB1E,EAAKyE,SAAiBzE,EAAKnB,YAAYH,SAASsC,eAAe,OAC9C,QAAjBhB,EAAKyE,SAAsBzE,EAAK2E,QAAQC,YAAY5E,EAAK0E,YAAY1E,EAAK6E,aAAa,QAAU,IAEjG7E,EAAK2E,QAAQG,eAAe9E,EAAK+E,SAEjCC,EAAAA,GAA0BhF,EAAKyE,UACjCzE,EAAKiF,aAAa,mBAAoBD,EAAAA,GAA0BhF,EAAKyE,UAGlEzE,EAAK2E,QAAQC,YAAc5E,EAAKiB,cAAgBjB,EAAKkF,WAAWlF,EAAK0E,YAAY1E,EAAKiB,aAEvFjB,EAAK2E,QAAQQ,KAAKnF,EAAKiF,aAAa,MAAOjF,EAAK2E,QAAQQ,KACpDnF,EAAK2E,QAAQC,YACnB,KAAKQ,EAAAA,GAAsBC,YACzBrF,EAAK0E,YAAY1E,EAAKiB,aAAe,IACrC,MACF,KAAKmE,EAAAA,GAAsBE,YACzBtF,EAAKiB,YAAcjB,EAAK2E,QAAQQ,KAAO,QAxBzCnF,EAAK+E,QA0BP,IAGKxB,EAASQ,UAAUwB,SAC5B,CCFQC,CAAkB5F,QAAO9V,GAAW,QAClCA,EAEAuZ,IAAuBoC,EAAAA,EAAAA,IAAoBpC,IAAwBjB,IACrEiB,GAAsBqC,EAAAA,EAAAA,IAAiBrC,GACvChB,OAGF,MAAM,MAAEb,GAAUxH,EAAE2I,cACpB,IAAIgD,EAA4B,GAUhC,GARA3L,EAAE4L,iBACEpE,EAAM9U,OAAS,IACjBiZ,QAAcE,EAAAA,GAAAA,GAA8BrE,GACxCW,IACFwD,EAAQA,GAAOja,MAAM,EAAG,MAIvBia,GAAOjZ,SAAWwW,EACrB,OAGF,MAAM4C,EAAczC,GAAqB0C,UAAUrZ,OAAS2W,EAAsB,CAAErW,KAAMkW,GAE1F,IAAI8C,GAAiB,EACrB,IAGEA,EA/DmB,2CA6DJ,IAAInG,WACWC,gBAAgBF,EA/DpC,aAgEsBqG,gBAC7BpB,aA/DmB,UAgExB,CAAE,MAAOb,GACP,CAGF,MAAMkC,EAAUJ,GAAeA,EAAY9Y,KAC3C,IAAImZ,EAAuBR,GAAOjZ,SAAWsZ,EAE7C,MAAMI,EAAiBT,QAAcU,QAAQC,IAAIX,EAAMha,KAAK4a,IAASC,EAAAA,EAAAA,GAAgBD,EAAKhK,KAAMgK,MAAU,GACpGE,EAActE,GAAiBiE,GAAgB1Z,SAChDga,EAAAA,EAAAA,IAAuBvE,EAAeiE,EAAe,KAAQpc,QAAQkc,GACpES,GAA6BC,EAAAA,EAAAA,IAAuBR,EAAe,IACnES,EAAY1E,GAAiBA,GAAe2E,UAE9C3E,GAAiBwE,EACnBrE,EAAiB,CAAE7Q,QAAS9G,EAAKkc,EAAY,6BAA+B,kCAI1EA,IACFV,EAAuBM,EAClBN,IAMHA,GACFlE,EAAeE,EAAgBiE,EAAkBW,GAAgBA,EAAYC,OAAOZ,IAGlFF,IACEC,EACFjE,EAAY4D,GAEZ9D,EAA0B8D,EAAalD,GAAO7Y,MAb9CuY,EAAiB,CAAE7Q,QAAS9G,EAAK,+BAgBvC,CAMC,GACA,CACDqX,EAA2BG,EAAeF,EAAgBxY,EAAU2Y,EACpEC,EAAuBH,EAAavX,GACpC,E,+DC9GJ,IAAIsc,IAAW,EAUf,MCVMC,GAAe,IAAI7X,IAAY,CAAC+V,EAAAA,GAAsB+B,QAAS/B,EAAAA,GAAsBgC,M,4BCT3F,MACMC,GAA0B,2CAC1BC,GAAe,4CACfC,GAAiB,CACrBC,SAAU,GACVC,MAAO,GACPC,aAAa,EACbC,gBAAiB,IAGbC,GAASlJ,SAASnS,cAAc,OA2EtC,MAAMsb,IAAsBC,EAAAA,GAAAA,IAAS,CAACN,EAAkBC,EAAeC,KAAyB,CAC9FF,WACAC,QACAC,cACAC,gBAAiBH,EAASO,kB,uCCvF5B,MACMC,GAAiC,IAAIC,OAAQ,IAAGC,EAAAA,IAAgBC,UAAW,K,gBCXjF,MAEMC,GAAmB,CAAEC,YAFP,IAAIC,IAAI,cAAyDrI,KAE7CsI,aAAa,GAC/CC,GAAc,CAAEC,KAAM,aAI5B,IAAIC,GACAC,GACAC,GAEGlG,eAAemG,KAOpB,OANKH,KACHA,GAAsB,qCACtBC,UAAsBD,IAAqBI,QAC3CF,GAAgB,IAAID,GAAaP,KAG5BM,EACT,CAEOhG,eAAepR,GAAMyX,SA6C5BrG,uBACQmG,WACAD,GAActX,OACtB,CA/CQ0X,GAEN,MAAMC,EAAYC,KAAKC,MACvB,IAAIC,EACJ,MAAMC,EAAuB,GACvB3S,EAAqB,GAE3BkS,GAAcU,gBAAmBC,IAC/BF,EAAOvb,KAAKyb,EAAW,EAGzB,MAAMC,EAsCR,SAA6BC,EAAyBC,GACpD,MAAMvB,EAASsB,EAASE,WAClBC,EAAWzB,EAAO0B,QAAQC,iBAChCF,EAASG,QAtEM,GAuEf5B,EAAO6B,QAAQJ,GAEf,MAAMK,EAAaL,EAASM,kBACtBC,EAAY,IAAI5S,WAAW0S,GACjC,IAAIG,GAAc,EAoBlB,OAlBA,SAASC,IACP,GAAID,EACF,OAGFR,EAASU,qBAAqBH,GAE9B,MAEMI,EAFMJ,EAAUK,QAAO,CAACC,EAAK/c,IAAY+c,EAAM/c,GAAS,GAC1Cuc,EACE,IAzDoCM,KAC1D7T,EAAS5I,KAAc,IAATyc,GACdxB,EAAiBwB,EAAO,EAyDxBb,CAAGa,EAvFY,GAuFU,EAAIA,IAE7BG,EAAAA,EAAAA,IAAeL,EACjB,CAEAA,GAEO,KACLD,GAAc,CAAI,CAEtB,CArE0BO,CAAoB/B,IAK5C,MAAO,CACLgC,KAAMA,IAAM,IAAIvE,SAAgB,CAACwE,EAASC,KACxClC,GAAcmC,OAAS,KACrBF,EAAQ,CACNG,KAAM,IAAIC,KAAK5B,EAAQb,IACvB9S,SAAUkB,KAAK7J,QAAQqc,GAAYF,KAAKC,OAASF,GAAa,KAC9DvS,YACA,EAEJkS,GAAcsC,QAAUJ,EAExB,MAAMK,EAAYvU,KAAK2B,IAAI,EAAG0Q,EAhDT,IAgD0CC,KAAKC,OACpE9Y,YAAW,KACTuY,GAAcgC,OACdpB,GAAiB,GAChB2B,EAAU,IAEfC,MAAOA,KACL,MAAMD,EAAYvU,KAAK2B,IAAI,EAAG0Q,EAvDT,IAuD0CC,KAAKC,OACpE9Y,YAAW,KACTuY,GAAcwC,QACdhC,EAAWF,KAAKC,MAChBK,GAAiB,GAChB2B,EAAU,EAGnB,C,4BC7DA,MAQA,GAR4Cjd,IAC1C,MAAM,YAAE6Y,GAAgB7Y,EAClBmd,GAAkBC,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,mBAAoBzE,EAAYra,QAGvF,OAAO2e,EAAkB/e,EAAAA,GAAAC,cAAC8e,EAAoBnd,QAAYpE,CAAS,E,+GCiDrE,MAwMA,IAAed,EAAAA,EAAAA,KAxMkBqB,IAqB3B,IArB4B,OAChCjB,EAAM,SACNqiB,EAAQ,gBACRC,EAAe,eACfC,EAAc,eACdC,EAAc,cACdC,EAAa,cACbC,EAAa,iBACbC,EAAgB,cAChBC,EAAa,WACbC,EAAU,SACVC,EAAQ,YACRC,EAAW,MACX3a,EAAK,uBACL4a,EAAsB,aACtBC,EAAY,WACZC,EAAU,YACVC,EAAW,aACXC,EAAY,oBACZC,EAAmB,eACnBC,GACDriB,EACC,MAAOsiB,EAAkBC,EAAgBC,IAAmBvf,EAAAA,EAAAA,MACrDwf,EAAkBC,EAAkBC,IAAmBC,EAAAA,GAAAA,GAAeN,EAAkBE,GAEzFK,EAAuBrB,GAAiBC,EACxCqB,EAAsBtB,GAAiBC,GAEtCsB,EAAyBC,EAA2BC,IAA+BhgB,EAAAA,EAAAA,KACpFigB,EAAaZ,GAAoBS,EAEjCI,EAAiBd,GAAkBA,GAAgB5F,WACpD9c,SAAQyjB,EAAAA,EAAAA,IAAgBf,KAAmBgB,EAAAA,EAAAA,IAAuBhB,IAChE1iB,SAAQ2jB,EAAAA,EAAAA,IAAgBjB,KAAmBkB,EAAAA,EAAAA,IAAuBlB,KACnEmB,EAASnB,GAAkBA,GAAgB5F,WAAa9c,SAAQ8jB,EAAAA,EAAAA,IAAgBpB,KACjFqB,EAAAA,EAAAA,IAAgBrB,KAAmBsB,EAAAA,EAAAA,IAAmBtB,KAE3D5gB,EAAAA,EAAAA,KAAU,KACJ6gB,GACFK,GACF,GACC,CAACL,EAAkBK,KAEtBlhB,EAAAA,EAAAA,KAAU,KACJyhB,EACFjB,IAEAC,GACF,GACC,CAACgB,EAAYhB,EAAaD,IAE7B,MAAM2B,GAAyB/d,EAAAA,EAAAA,IAAgB,KACzCyc,EACFE,IAEAD,GACF,IAGIsB,GAAmBhe,EAAAA,EAAAA,IAAgB,CAAC8J,EAAUmU,KAClD,MAAM,MAAExI,GAAU3L,EAAEoU,OACdC,GAAiBC,EAAAA,GAAAA,IAAc3I,GAEjC0I,GAAgB3hB,QAClB2f,EAAagC,EAAgBF,EAC/B,IAGII,GAAoBre,EAAAA,EAAAA,IAAgB,MACxCse,EAAAA,GAAAA,GACE7X,MAAMgN,KAAKuJ,EAAuBuB,EAAAA,IAChC5C,EAAgB6C,EAAAA,IAAgCC,EAAAA,KAC/CC,KAAK,MACP5U,GAAMkU,EAAiBlU,GAAG,IAC5B,IAGG6U,GAAuB3e,EAAAA,EAAAA,IAAgB,MAC3Cse,EAAAA,GAAAA,IAAuBzC,GAAoBC,EACvCrV,MAAMgN,KAAKmL,EAAAA,KAA+BF,KAAK,KAC/C,KACE5U,GAAMkU,EAAiBlU,GAAG,IAAO,IAGnC+U,GAAiB7e,EAAAA,EAAAA,IAAgB,KACrC,MAAMqW,EAAO,IAAIyI,KAAK,EAACC,EAAAA,GAAAA,OAAiBC,EAAAA,IAAoB,CAAEzG,KAAM,eACpE4D,EAAa,CAAC9F,GAAM,IAGhB4I,GAAOlkB,EAAAA,EAAAA,KAAQ,IACZghB,EACHzgB,OAAOC,OAAOwgB,GAAYpgB,QAAQujB,MAC7BlD,IAAakD,EAAIC,qBACL,SAAbnD,GAAuBkD,EAAIrlB,KAAOX,IAAUgmB,EAAIE,oBAAoBrM,SAAS,UAG1EmM,EAAIE,oBAAqBrM,SAASiJ,WAEzCpiB,GACH,CAACmiB,EAAY7iB,EAAQ8iB,IAElBvhB,GAAOC,EAAAA,EAAAA,KAEb,GAAK8gB,EAIL,OACEpf,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cAEXoiB,GAAkBD,EAChBngB,EAAAA,GAAAC,cAACgjB,GAAAA,EAAqB,CACpBxlB,GAAG,sBACHO,UAAWqiB,EAAmB,+BAAiC,qBAC/D5f,OAAK,EACLmP,MAAM,cACNsT,WAAYvB,EACZ9R,UAAU,wBACVsT,aAAa,wBACbC,UAAQ,GAERpjB,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAK,aAGbjQ,EAAAA,GAAAC,cAACgjB,GAAAA,EAAqB,CACpBxlB,GAAG,qBACH4lB,SAAU3lB,QAAQ0iB,GAClBpiB,UAAWqiB,EAAmB,+BAAiC,qBAC/D5f,OAAK,EACLmP,MAAM,cACNsT,WAAYvB,EACZ9R,UAAU,oBACVsT,aAAa,uBACbC,UAAQ,GAERpjB,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAK,YAIjBjQ,EAAAA,GAAAC,cAACqjB,GAAAA,EAAI,CACH7lB,GAAG,uBACH8lB,OAAQtC,EACRuC,WAAS,EACTC,UAAU,QACVC,UAAU,SACVC,QAASpD,EACTviB,UAAU,yBACV4lB,oBAAqBrD,EACrBsD,aAAeC,EAAAA,QAAkCtmB,EAAnBgjB,EAC9BuD,aAAeD,EAAAA,QAAkCtmB,EAAnBijB,EAC9BuD,mBAAoBF,EAAAA,GACpBG,eAAe,uBAMb5E,GACArf,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CAAClmB,UAAU,iBAAiBqlB,UAAQ,GAAC,uDAE/ChE,GACCrf,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGgQ,IAAwBU,GACvBvhB,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CAACC,KAAK,QAAQhkB,QAAS8hB,GAC7B5jB,EAAKuiB,EAAuB,8BACxBrB,EAAgB,4BAA8B,+BAGpDE,GAAoBC,KAAmBwB,GAEtClhB,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CAACC,KAAK,WAAWhkB,QAASoiB,GAChClkB,GAAMohB,GAAoBC,EAAgB,4BAA8B,mBAG9ED,GAAoBK,GACnB9f,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CAACC,KAAK,MAAMhkB,QAASsiB,GAC3BpkB,EAAK,mBAKbihB,IAAmBc,GAClBpgB,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CAACC,KAAK,OAAOhkB,QAAS+f,GAAe7hB,EAAK,UAGnD+hB,IAAmBD,IAAwBN,GAAegD,GAAMxjB,KAAKyjB,GACrE9iB,EAAAA,GAAAC,cAACmkB,GAAAA,EAAa,CACZtB,IAAKA,EACLhmB,OAAQA,EACRqiB,SAAUA,EACVja,MAAOA,EACPmf,aAActD,EACduD,aAActD,OAIhB,IClPV,GAR2Cpf,IACzC,MAAM,OAAE2hB,GAAW3hB,EACb2iB,GAAiBvF,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmBqE,GAGzE,OAAOgB,EAAiBvkB,EAAAA,GAAAC,cAACskB,EAAmB3iB,QAAYpE,CAAS,E,4BCcnE,MAwDA,IAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAgC,IAA9B,UAAEgP,GAAWhP,EACpB,MAAM,OAAExC,IAAW0nB,EAAAA,EAAAA,KAAyB5nB,IAAW,CAAC,EACxD,OAAKE,EAIE,CAAEqI,SAASsf,EAAAA,EAAAA,KAAkB7nB,EAAQE,EAAQwR,IAH3C,CAAC,CAGsD,GAPhD3R,EAxD+BoB,IAE7C,IAF8C,OAClDwlB,EAAM,QAAEpe,EAAO,QAAEwe,GAClB5lB,EACC,MAAM,qBAAE2mB,IAAyBtmB,EAAAA,EAAAA,MAE3BC,GAAOC,EAAAA,EAAAA,MAENkiB,EAAkBC,IAAoBE,EAAAA,GAAAA,GAAe4C,EAAQI,IAC9D,oBAAEgB,GAAwBxf,GAAW,CAAC,EAEtCyf,GAAcjmB,EAAAA,EAAAA,KAAQ,KAC1B,MAAMkmB,EAAuB,GAK7B,OAJA1f,GAAS2f,gBAAiBjZ,SAASkZ,IACjCF,EAAMrjB,KAAKujB,EAAI1lB,KAAK6O,IAAW8W,EAAAA,GAAAA,GAAyB3mB,EAAM6P,KAAS,IAGlE2W,CAAK,GACX,CAACxmB,EAAM8G,GAAS2f,kBAEnB,GAAK3f,GAAYA,EAAQ2f,gBAIzB,OACE9kB,EAAAA,GAAAC,cAACqjB,GAAAA,EAAI,CACHC,OAAQA,EACRC,UAAWmB,EACXlB,UAAU,QACVC,UAAU,SACVC,QAASA,EACT3lB,UAAU,kBACV4lB,oBAAqBD,EACrBE,aAAeC,EAAAA,QAAkCtmB,EAAnBgjB,EAC9BuD,aAAeD,EAAAA,QAAkCtmB,EAAnBijB,EAC9BwE,WAAS,GAETjlB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACZmH,EAAQ2f,gBAAgBzlB,KAAI,CAAC0lB,EAAKxjB,IACjCvB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OACZ+mB,EAAI1lB,KAAI,CAAC6O,EAAQgX,IAChBllB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLmP,QAAM,EACN0T,SAA0B,gBAAhBnV,EAAOiO,KAEjBhc,QAASA,IAAMukB,EAAqB,CAAEpW,UAAWnJ,EAAQ1H,GAAIyQ,YAE5D0W,IAAcrjB,GAAG2jB,UAMvB,KCrBX,IAAexoB,EAAAA,EAAAA,KA7CqBqB,IAK9B,IAL+B,OACnCwlB,EAAM,QACNpjB,EAAO,KACPO,EAAI,WACJykB,GACDpnB,EAEC,MAAMqnB,GAAUxkB,EAAAA,EAAAA,IAAwB,MAuBxC,OArBApB,EAAAA,EAAAA,KAAU,KACR,MAAM6lB,EAASD,EAAQhkB,QACvB,IAAKikB,EAAQ,OAEb,MAAM7Z,EAAQ6Z,EAAOC,YAAc,EAEhBD,EAAOE,QAAQ,aACvBvhB,MAAMwhB,YAAY,wBAA0B,GAAEha,MAAU,GAClE,CAAC+X,EAAQ7iB,KAEZlB,EAAAA,EAAAA,KAAU,KACR,MAAM6lB,EAASD,EAAQhkB,QACvB,IAAKikB,EAAQ,OAEb,MAAMI,EAAaJ,EAAOE,QAAQ,aAElC,MAAO,KACLE,EAAWzhB,MAAM0hB,eAAe,wBAAwB,CACzD,GACA,IAGD1lB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLxC,WAAWkC,EAAAA,EAAAA,GAAe,WAAYqjB,GAAU,QAChD9iB,OAAK,EACLmP,MAAM,cACNyT,SAAU8B,EACVhlB,QAASA,EACT0P,UAAU,6BAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiB,OAAQ,cAAeqjB,GAAU,UAC/EvjB,EAAAA,GAAAC,cAAA,QAAM8E,IAAKqgB,EAASpnB,UAAU,iBAAiB0C,GACxC,ICtCb,GAR+CkB,IAC7C,MAAM,OAAE2hB,GAAW3hB,EACb+jB,GAAqB3G,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,sBAAuBqE,GAGjF,OAAOoC,EAAqB3lB,EAAAA,GAAAC,cAAC0lB,EAAuB/jB,QAAYpE,CAAS,E,iDC4D3E,MA8SA,IAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAEW,IAFT,uBACPsmB,EAAsB,OAAE9oB,EAAM,SAAEqiB,EAAQ,gBAAE0G,GAC3CvmB,EACC,MACEwmB,iBAAiB,WACfC,EAAU,SAAEC,EAAUC,WAAYC,EAAiB,UAAEC,EAAS,WAAEC,EAAU,aAAEC,GAC7E,+BACDC,IACElpB,EAAAA,EAAAA,KAAeR,GAEb2pB,EAAgC,cAApBV,GACdW,EAAAA,EAAAA,KAAyB5pB,EAAQE,IACjC2pB,EAAAA,EAAAA,KAAgB7pB,EAAQE,EAAQqiB,GAC9Ble,GAAgBC,EAAAA,EAAAA,KAA0BtE,KAAY0pB,EACtDI,EAAeV,IAAalpB,EAC5B6pB,EAAoBT,GAAmB7mB,KAAK5B,IAAOgnB,EAAAA,EAAAA,KAAkB7nB,EAAQmpB,EAAatoB,KAE1FmpB,GAAQC,EAAAA,EAAAA,KAAYjqB,EAAQE,EAAQqiB,GACpC2H,EAAYF,GAAOE,UACnBC,EAAgBD,GAAWC,cAC3BC,EAAaD,GAAgB/pB,EAAAA,EAAAA,KAAWJ,EAAQmqB,QAAiBvpB,EAEvE,IAAI2H,EASA8hB,EAEJ,GAVIV,EACFphB,GAAU+hB,EAAAA,EAAAA,KAAqBtqB,EAAQE,EAAQqiB,EAAU0G,GAChDa,GAA8C,IAA9BR,EAAmB9lB,OAC5C+E,EAAUwhB,IAAoB,GACrBG,IAAclB,IACvBzgB,GAAUsf,EAAAA,EAAAA,KAAkB7nB,EAAQkqB,EAAUC,eAAiBjqB,EAAQgqB,EAAUK,eAK/EZ,GAAaphB,EACf8hB,GAASG,EAAAA,EAAAA,KAAaxqB,EAAQuI,QACzB,GAAIuhB,EACLvhB,IACF8hB,GAASI,EAAAA,EAAAA,KAAsBzqB,EAAQuI,GAClC8hB,IACHA,GAASG,EAAAA,EAAAA,KAAaxqB,EAAQuI,KAG7B8hB,IACHA,GAASK,EAAAA,EAAAA,KAAW1qB,EAAQmpB,SAEzB,GAAIe,GAAa3hB,IAAYygB,EAAwB,CAC1D,MAAM,YAAE2B,GAAgBpiB,EAClBqiB,GAAiBC,EAAAA,EAAAA,KAAqB7qB,EAAQE,GAChDyqB,IAAgBA,EAAYG,eAAiBF,KAC/CP,GAASI,EAAAA,EAAAA,KAAsBzqB,EAAQuI,IAGpC8hB,GAAYM,GAAaI,iBAAkBjqB,QAAQopB,EAAUc,aAChEX,GAASG,EAAAA,EAAAA,KAAaxqB,EAAQuI,GAElC,CAEA,MAAM0iB,EAAuBlB,GAAmBmB,MAAMC,GACpDA,GAASlhB,QAAQnG,MAAQxB,OAAO8oB,KAAKD,EAAQlhB,SAASzG,OAAS,IAG3D6nB,EAAwBvB,GAA8C,IAA9BR,EAAmB9lB,QAC5D1C,QAAQyH,GAAS0B,QAAQqhB,WAExBC,EAAsBrB,GAAWK,eAAiBhI,IAAa2H,EAAUC,cAE/E,MAAO,CACLD,YACAP,YACAphB,UACA8hB,SACAhmB,gBACAmnB,uBAAwB1B,EAAeR,EAAmB9lB,YAAS5C,EACnE2oB,YACAC,aACAyB,uBACAQ,sBAAsBC,EAAAA,EAAAA,KAA2B1rB,GACjDqrB,wBACAE,sBACAI,0BAA2BlC,EAC3BC,iCACAU,aACD,GAnFerqB,EA5SuCoB,IAkBrD,IAlBsD,UAC1D+oB,EAAS,UACTP,EAAS,QACTphB,EAAO,OACP8hB,EAAM,cACNhmB,EAAa,uBACbmnB,EAAsB,UACtBjC,EAAS,WACTC,EAAU,qBACVyB,EAAoB,uBACpBjC,EAAsB,qBACtByC,EAAoB,sBACpBJ,EAAqB,oBACrBE,EAAmB,QACnBK,EAAO,0BACPD,EAAyB,+BACzBjC,EAA8B,WAC9BU,GACDjpB,EACC,MAAM,oBACJ0qB,EAAmB,qBACnBC,EAAoB,aACpBC,EAAY,aACZC,EAAY,gBACZC,EAAe,oBACfC,EAAmB,qBACnBC,EAAoB,gBACpBC,EAAe,kCACfC,IACE7qB,EAAAA,EAAAA,MAEE2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7BvC,GAAOC,EAAAA,EAAAA,KAEP4qB,EAAwD,gBAAlC/jB,GAAS0B,QAAQsiB,QAAQhN,KAC/CiN,EAAiBtC,IAAclB,EAC/ByD,EAAmB3rB,QAAQopB,GAAWc,WAEtClB,EAAehpB,QAAQ0qB,GAEvBkB,IACAf,KACApjB,IAAY2hB,IAAaP,MACzBU,IAAUP,KAIV,aACJhnB,EAAY,qBAAEC,IACZC,EAAAA,EAAAA,GACF0pB,IAAYJ,IAAwBf,OACpC3qB,GACCyD,OACDzD,GACCyD,EAxDkB,KA0DlBA,IAEHzB,EAAAA,EAAAA,KAAU,KACJ8mB,GACF2C,EAAkC,CAAE3C,gCAAgC,GACtE,IAGF,MAAMiD,GAAgB3lB,EAAAA,EAAAA,IAAgB,KAChC2iB,EACFoC,EAAa,CAAEra,eAAW9Q,IACjB4qB,EACTY,IACSlC,IAAclB,GACvB6C,IAEFD,KAAW,KAGbhpB,EAAAA,EAAAA,KAAU,IAAO8pB,GAAUE,EAAAA,GAAAA,GAAsBD,QAAiB/rB,GAAY,CAAC8rB,EAASC,IAExF,MAAM,kBACJE,EAAiB,oBAAEC,EAAmB,kBAAEC,EAAiB,uBACzDC,EAAsB,sBAAEC,IACtBC,EAAAA,EAAAA,GAAuB/kB,GAKrBglB,GAAqBnmB,EAAAA,EAAAA,IAAiB8J,IAC1Cic,EAAkBjc,EAAE,IAGhBsc,GAAmBpmB,EAAAA,EAAAA,IAAiB8J,IACxCA,EAAEM,kBACFub,IACAM,GAAuB,IAEnBI,EAAiCd,GAC9B,KACLS,IACAT,GAAQ,EAGNe,IAAkCtmB,EAAAA,EAAAA,GAAgBqmB,EAA8BpB,IAChFsB,IAAyBvmB,EAAAA,EAAAA,GAAgBqmB,GAnBjBG,KAC5BxB,EAAa,CAAE9rB,OAAQqI,EAASrI,OAAQwR,UAAWnJ,EAAS1H,GAAI4sB,mBAAmB,GAAO,KAmBtFC,IAAyB1mB,EAAAA,EAAAA,GAAgBqmB,GAC7C,IAAMvB,EAAqB,CAAEd,eAAWpqB,OAEpC+sB,IAAkC3mB,EAAAA,EAAAA,GAAgBqmB,EAA8BpB,IAChF2B,IAAwB5mB,EAAAA,EAAAA,GAAgBqmB,EAA8BV,IAEtEkB,IAAoB7mB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,UAC9CspB,IAAiB9mB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,UAC3CupB,IAAiB/mB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,QAASwpB,cAAc,oCAElE,UACJnH,GAAS,UAAEC,GAAS,iBAAEmH,GAAgB,iBAAEC,GAAkB9mB,MAAO+mB,KAC/DC,EAAAA,GAAAA,GACFtB,EACAe,GACAC,GACAC,KAGFnrB,EAAAA,EAAAA,KAAU,KACHE,IACHkqB,IACAC,IACF,GACC,CAACD,EAAwBC,EAAuBnqB,IAEnD,MAAM1B,IAAYkC,EAAAA,EAAAA,GAAe,0BAA2BP,GACtDsrB,IAAkBnrB,EAAAA,GAAAA,GAAiBmnB,GAAQ,GAC3CiE,IAAiBhrB,EAAAA,EAAAA,GACrB,iCACAirB,EAAAA,EAAAA,GAAkBF,KAGdG,IAAWzsB,EAAAA,EAAAA,KAAQ,IACnB4nB,EACK,OAELG,EACK,UAEL0C,EACK,aADT,GAKC,CAAC7C,EAAWG,EAAc0C,IAEvBiC,GAAajD,GAA0BA,EAAyB,EAClE/pB,EAAK,wBAAyB+pB,QAC9B5qB,EAEE8tB,IAAkB3sB,EAAAA,EAAAA,KAAQ,KAC9B,IAAKwG,IAAYuhB,IAAiBvhB,EAAQ0B,QAAQnG,OAASylB,GAAakC,EAAsB,OAAOljB,EAErG,MAAMomB,GAAenS,EAAAA,EAAAA,IAAiBjU,EAAQ0B,QAAQnG,MACtD,MAAO,IACFyE,EACH0B,QAAS,IACJ1B,EAAQ0B,QACXnG,KAAM6qB,GAET,GACA,CAAClD,EAAsB3B,EAAcvhB,EAASghB,IAE3CqF,IAAoB1rB,EAAAA,GAAAA,GAAiBsrB,IAAU,GAErD,GAAK1rB,EAIL,OACEM,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,GAAW+G,IAAKA,EAAK0mB,cAAe9B,GAClD3pB,EAAAA,GAAAC,cAAA,OAAKjC,UAAWktB,IACdlrB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBAAqBmC,QAASwpB,GAC1C6B,IAAqBxrB,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAMub,KACjC9tB,QAAQopB,GAAWc,YAClB5nB,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAK,QAAQjS,UAAU,iBAGjCgC,EAAAA,GAAAC,cAACyrB,GAAAA,EAAuB,CACtBnI,OAAQ+F,EACRtrB,UAAU,eACV8oB,UAAWA,EACX6E,cAAY,EACZxmB,QAASmmB,GACTrE,OAASd,OAAqB3oB,EAATypB,EACrBoE,WAAYA,GACZ7c,MAAQ+X,IAAc6C,EAAkB/qB,EAAK,eACzC8nB,EAAY9nB,EAAK,qCAAkCb,EACvD2C,QAAS4pB,EACT/C,WAAYA,IAEdhnB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLxC,UAAU,kBACVyC,OAAK,EACLmrB,OAAK,EACLhc,MAAM,cACNC,UAAWxR,EAAK,UAChB8B,QAAS6pB,GAEThqB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAEborB,GAAkB1C,KAAkBuB,GACpCjoB,EAAAA,GAAAC,cAACqjB,GAAAA,EAAI,CACHC,OAAQkG,EACRoB,iBAAkBA,GAClBC,iBAAkBA,GAClBrH,UAAWA,GACXC,UAAWA,GACX1f,MAAO+mB,GACP/sB,UAAU,uBACV2lB,QAASiG,EACThG,oBAAqBiG,GAEpBnD,GACC1mB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CACPC,KAAOgC,OAAkC3oB,EAAtB,oBACnBquB,WAAY1F,EAAYnmB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,+BAA6BR,EAElE2C,QAASA,IAAM2oB,EAAoB,CACjC3C,WAAW,KAGZ9nB,EAAK+pB,EAAyB,EAAI,kBAAoB,oBAEzDpoB,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CACPC,KAAMgC,EAAY,yBAAsB3oB,EACxCquB,WAAa1F,OAAsD3oB,EAA1CwC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEtCmC,QAASA,IAAM2oB,EAAoB,CACjC3C,WAAW,KAGZ9nB,EAAK+pB,EAAyB,EAAI,kBAAoB,oBAExDP,GACC7nB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAC6rB,GAAAA,EAAa,MACd9rB,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CACPC,KAAOiC,OAAmC5oB,EAAtB,oBACpBquB,WAAYzF,EAAapmB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,+BAA6BR,EAEnE2C,QAASA,IAAM4oB,EAAqB,CAClC3C,YAAY,KAGb/nB,EAAK+pB,EAAyB,EAAI,0CAA4C,gBAEjFpoB,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CACPC,KAAMiC,EAAa,yBAAsB5oB,EACzCquB,WAAazF,OAAuD5oB,EAA1CwC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEvCmC,QAASA,IAAM4oB,EAAqB,CAClC3C,YAAY,KAGb/nB,EAAK+pB,EAAyB,EAAI,0CAA4C,iBAIrFpoB,EAAAA,GAAAC,cAAC6rB,GAAAA,EAAa,MACd9rB,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CAACC,KAAK,UAAUhkB,QAAS+pB,IAC/B7rB,EAAK,wBAIX+qB,GACCppB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CACPC,KAAK,eACLhkB,QAASgqB,IAER9rB,EAAK,yBAEPgrB,GACCrpB,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CACPC,KAAK,eACLhkB,QAASmqB,IAERjsB,EAAK,gBAGV2B,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CAACC,KAAK,UAAUhkB,QAASoqB,IAC/BlsB,EAAK,uBAER2B,EAAAA,GAAAC,cAACikB,GAAAA,EAAQ,CAACC,KAAK,SAAShkB,QAASqqB,IAC9BnsB,EAAK,kBAOd,K,wCC3WV,MAQA,GARqCuD,IACnC,MAAM,OAAE2hB,GAAW3hB,EACbmqB,GAAW/M,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,YAAaqE,GAG7D,OAAOwI,EAAW/rB,EAAAA,GAAAC,cAAC8rB,EAAanqB,QAAYpE,CAAS,E,gBCLvD,MAQA,GAR6CoE,IAC3C,MAAM,OAAE2hB,GAAW3hB,EACboqB,GAAmBhN,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,oBAAqBqE,GAG7E,OAAOyI,EAAmBhsB,EAAAA,GAAAC,cAAC+rB,EAAqBpqB,QAAYpE,CAAS,ECGvE,GAR2CoE,IACzC,MAAM,OAAE2hB,GAAW3hB,EACbqqB,GAAiBjN,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmBqE,GAGzE,OAAO0I,EAAiBjsB,EAAAA,GAAAC,cAACgsB,EAAmBrqB,QAAYpE,CAAS,E,gBCLnE,MAQA,GARsCoE,IACpC,MAAM,OAAE2hB,GAAW3hB,EACbsqB,GAAYlN,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,aAAcqE,GAG/D,OAAO2I,EAAYlsB,EAAAA,GAAAC,cAACisB,EAActqB,QAAYpE,CAAS,ECGzD,GARuCoE,IACrC,MAAM,OAAE2hB,GAAW3hB,EACbuqB,GAAanN,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,cAAeqE,GAGjE,OAAO4I,EAAansB,EAAAA,GAAAC,cAACksB,EAAevqB,QAAYpE,CAAS,ECG3D,GAR2CoE,IACzC,MAAM,OAAE2hB,GAAW3hB,EACbwqB,GAAiBpN,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmBqE,GAGzE,OAAO6I,EAAiBpsB,EAAAA,GAAAC,cAACmsB,EAAmBxqB,QAAYpE,CAAS,E,4BC4BnE,MACM6uB,GAAU,IAAI1Q,OAAO2Q,EAAAA,IAAkB,KA8F7C,IAAe5vB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAuC,IAArC,OAAExC,EAAM,SAAEqiB,GAAU7f,EAC3B,MAAMitB,GAAYC,EAAAA,EAAAA,KAAgB5vB,EAAQE,EAAQqiB,GAClD,MAAO,CACLja,OAAOunB,EAAAA,EAAAA,KAAY7vB,GACnB8vB,gBAAgBtvB,EAAAA,EAAAA,KAAeR,GAAQ8vB,eACvCH,YACD,GAPe5vB,EA5F8BoB,IAQ5C,IAR6C,OACjDjB,EAAM,SACNqiB,EAAQ,QACRwN,EAAO,WACPxH,EAAU,eACVuH,EAAc,UACdH,EAAS,MACTrnB,GACDnH,EACC,MAAM,mBACJ6uB,EAAkB,oBAClBC,EAAmB,qBACnBC,IACE1uB,EAAAA,EAAAA,MAEE2uB,GAA2BnsB,EAAAA,EAAAA,MAE3BosB,GAAsBC,EAAAA,EAAAA,KAAqB,KAC/C,MAAMC,GAAgBlW,EAAAA,EAAAA,IAAyB2V,KACzCQ,EAAaD,EAAczT,UAAU2T,MAAMC,GAC/CA,EAAOlR,OAASrD,EAAAA,GAAsB+B,UAKxC,OAFAkS,EAAyB3rB,QAAU8rB,EAE5BC,GAAYG,KAAOJ,EAAcxsB,KAAKyW,MAAMkV,MAAW,EAAE,GAC/D,CAACM,GA7Bc,KA6BS,GAErBY,GAAUC,EAAAA,EAAAA,GAAiBR,EAAqB,CAACA,EAAqBL,IAAU,IAEtFntB,EAAAA,EAAAA,KAAU,KACR,MAAMiuB,EAAOF,IACPL,EAAgBH,EAAyB3rB,QAE3CqsB,EACFb,EAAmB,CAAElsB,KAAMwsB,KAE3BL,IACAC,EAAqB,CAAEhwB,SAAQqiB,aACjC,GACC,CAACoO,EAASzwB,EAAQqiB,KAErBuO,EAAAA,EAAAA,IAAc,KACZb,IACAC,EAAqB,CAAEhwB,SAAQqiB,YAAW,GACzC,CAACriB,EAAQ+vB,EAAqB1N,EAAU2N,IAE3C,MAAMxD,GAAUqE,EAAAA,EAAAA,IAAgB,IACvBjwB,QAAQgvB,GAAkBC,MAAcJ,IAAcpH,IAC5D,CAACA,EAAYwH,EAASJ,EAAWG,KAC9B,aAAEhtB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkB0pB,GAE3DsE,GAAmB9tB,EAAAA,GAAAA,GAAiB4sB,GAAgB,GAEpDmB,GAA4BjqB,EAAAA,EAAAA,IAAgB,KAChDkpB,EAAqB,CAAEhwB,SAAQqiB,WAAUoN,WAAW,GAAO,IAG7D,IAAK7sB,IAAiBkuB,EACpB,OAIF,MAAM,MAAEE,KAAUC,GAAwBH,EACpCI,EAAc,CAClBnnB,QAAS,CACPonB,QAASF,IAIb,OACE/tB,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,iBAAkBP,IAC/CK,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,wBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,4BACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAEfgC,EAAAA,GAAAC,cAACiuB,GAAAA,EAAO,CAAC/oB,QAAS6oB,EAAaG,WAAS,EAACjpB,MAAOA,IAChDlF,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLxC,UAAU,uBACVyC,OAAK,EACLmrB,OAAK,EACLhc,MAAM,cACNC,UAAU,wBACV1P,QAAS0tB,GAET7tB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGb,K,wCC5HV,MAQA,GAR+C4D,IAC7C,MAAM,OAAE2hB,GAAW3hB,EACbwsB,GAAqBpP,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,sBAAuBqE,GAGjF,OAAO6K,EAAqBpuB,EAAAA,GAAAC,cAACmuB,EAAuBxsB,QAAYpE,CAAS,E,gBC+OtE6wB,GAAe,SAAfA,GAAe,OAAfA,EAAe,YAAfA,EAAe,gBAAfA,EAAe,YAAfA,EAAe,oBAAfA,EAAe,kBAAfA,EAAe,0BAAfA,CAAe,EAAfA,IAAe,IAapB,MAwrDA,IAAe3xB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0xB,KAEW,IAFT,OACPxxB,EAAM,SAAEqiB,EAAQ,QAAEoP,EAAO,gBAAE1I,EAAe,SAAEve,EAAQ,KAAE6U,GACvDmS,EACC,MAAMvxB,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1B0xB,EAAU1xB,IAAW2xB,EAAAA,KAAkBC,EAAAA,EAAAA,KAAU9xB,EAAQE,QAAUU,EACnEmxB,EAAgBjxB,QAAQ8wB,GACxBhH,GAAiBC,EAAAA,EAAAA,KAAqB7qB,EAAQE,GAC9C8xB,GAAiBC,EAAAA,EAAAA,IAAS/xB,GAC1BgyB,EAAkBH,GAAgBI,EAAAA,EAAAA,KAAmBnyB,EAAQ4xB,EAAQ/wB,SAAMD,EAC3EwxB,EAAgBJ,OAAsDpxB,GAArCyxB,EAAAA,EAAAA,KAAmBryB,EAAQE,GAC5DoyB,GAAgCP,IAAkBC,KACnDO,EAAAA,EAAAA,KAA0CvyB,EAAQE,EAAQqiB,GACzDiQ,GAAeC,EAAAA,EAAAA,KAAmBzyB,EAAQE,EAAQqiB,IAClD,SACJmQ,EAAQ,sBAAEC,EAAqB,yBAAEC,EAAwB,4BAAEC,GACzD7yB,EAAO8yB,SAASC,MACdC,EAAoBhzB,EAAOizB,cAAcC,EAAAA,KACzCD,EAAgBP,IAAaQ,EAAAA,IAA0BlzB,EAAOizB,cAAcP,QAAY9xB,EACxFuyB,EAAuBb,EAA+BA,EAA6BzxB,QAAKD,EACxFwyB,EAAkBD,GAAuBtL,EAAAA,EAAAA,KAAkB7nB,EAAQE,EAAQizB,QAAwBvyB,GACnG,cAAEyyB,GAAkBrzB,EACpBszB,GAAcC,EAAAA,EAAAA,KAAWvzB,EAAQqzB,GACjCG,EAAkBpB,EAAeA,GAAcqB,UAAYJ,OAAgBzyB,EAC3E6yB,EAAWtzB,GAAMuzB,eAAiBF,IACtCrzB,EAAKuzB,cAAcxI,MAAMnW,GAASA,EAAKlU,KAAO2yB,IAC1CA,EACCrzB,GAAMwzB,aAAaC,UAAYzzB,GAAMU,QAAKD,GAE3CizB,EAAaJ,GAAWF,EAAAA,EAAAA,KAAWvzB,EAAQyzB,QAAY7yB,EACvDkzB,GAAcD,GAAcJ,GAAWrzB,EAAAA,EAAAA,KAAWJ,EAAQyzB,QAAY7yB,EACtEmzB,GAAiBC,EAAAA,EAAAA,KAAqBh0B,EAAQE,GAC9C+zB,GAAsBC,EAAAA,EAAAA,KAA0Bl0B,EAAQE,GAExDi0B,GAAW3zB,EAAAA,EAAAA,KAAeR,GAC1Bo0B,EAAoBtzB,QAAQqzB,EAASE,YAAY1C,SAEjD2C,GAAqB1M,EAAAA,EAAAA,KAAyB5nB,GAC9Cu0B,EAA0Br0B,IAAWo0B,GAAoBp0B,QAC1DqiB,IAAa+R,GAAoB/R,UACjC0G,IAAoBqL,GAAoB/U,OACvC6U,EACAI,GAAOjB,EAAAA,EAAAA,KAAWvzB,EAAQE,GAC1Bu0B,GAAyBD,KAASrC,EAAAA,EAAAA,KAAmBnyB,EAAQw0B,EAAK3zB,KAAK6zB,mBAAoB,EAC3FC,EAAWvC,GAAcuC,SACzBlJ,GAAuBC,EAAAA,EAAAA,KAA2B1rB,GAElD40B,EAAmC,cAApB3L,GACjB4L,EAAAA,EAAAA,KAA4B70B,EAAQE,IACpC40B,EAAAA,EAAAA,KAAmB90B,EAAQE,EAAQqiB,GAEjCwS,EAAQpD,IAAWqD,EAAAA,EAAAA,KAAgBh1B,EAAQE,EAAQyxB,GACnDsD,EAAoBF,GAAS,iBAAkBA,EAAQA,EAAMG,kBAAet0B,EAC5EopB,GAAQC,EAAAA,EAAAA,KAAYjqB,EAAQE,EAAQqiB,GACpC4S,EAAiBnL,GAAOE,WAC1BrC,EAAAA,EAAAA,KAAkB7nB,EAAQE,EAAQ8pB,EAAME,UAAUK,mBAClD3pB,EACEw0B,EAAej1B,GAAMk1B,SAAWl1B,EAAKm1B,mBAAqB/S,IAAagT,EAAAA,IAAkBJ,GAC3FK,EAAAA,EAAAA,KAAuBx1B,EAAQm1B,QAC/Bv0B,EACE60B,EAAwC,cAApBxM,EAEpByM,EAAsB1D,IAAmBD,IAAkB0D,IAAsB7K,EAEvF,MAAO,CACL+K,mBAA6B,UAATpW,EAAmBvf,EAAO41B,UAAUD,wBAAqB/0B,EAC7Ei1B,aAAuB,UAATtW,EAAmBvf,EAAO41B,UAAUC,kBAAej1B,EACjEk1B,eAAgB3B,EAAS4B,UACzBvS,gBAAgB8G,EAAAA,EAAAA,KAAqBtqB,EAAQE,EAAQqiB,EAAU0G,GAC/De,QACA7pB,OACA4xB,gBACAnH,iBACA2J,0BACAyB,wBAAwBC,EAAAA,EAAAA,KAA6Bj2B,EAAQE,GAC7Dg2B,UAAW/1B,GAAOg2B,EAAAA,EAAAA,IAAch2B,QAAQS,EACxCw1B,oBAAoBC,EAAAA,EAAAA,KAAyBr2B,EAAQ0K,GACrD4rB,oBAAoBC,EAAAA,EAAAA,KAAqBv2B,GACzCw2B,oBACsB,WAApBvN,GACGnoB,QAAQ0xB,GAAchvB,QAE3BiyB,oBACAtC,uBACAsD,uBAAwBrD,GAAiBsD,oBACzC5M,aAAc5pB,IAAWi0B,EAASjL,gBAAgBE,SAClDuN,UAAWxC,EAASwC,UACpBC,iBAAkB52B,EAAO62B,SAASC,SAASD,SAC3CE,oBAAqB/2B,EAAOg3B,aAAaF,SAASD,SAClDzE,eACA6E,gBAAiBj3B,EAAOk3B,eAAeC,QACvC9D,gBACAC,cACA8D,qBAAsBjD,EAASiD,qBAC/BzE,wBACAC,2BACAC,8BACAwE,aAAcr3B,EAAOq3B,aACrBrE,kBAAmBA,GAAmBsE,SACtCrE,cAAeA,GAAeqE,SAC9BC,WAAYpD,EAASoD,WAAWC,WAChCC,mBAAoBtD,EAASoD,WAAWG,UACxCC,YAAazF,EAAmBA,EAAgB0F,SAASC,WAAY,OAASj3B,EAC9Ek3B,cAAe5F,GAAiB0F,SAASG,WACzClE,aACAC,aACAL,WACAmB,eACAb,iBACAE,sBACAlR,WAAY/iB,EAAOg4B,WAAW/R,KAC9BgS,oBAAoBC,EAAAA,EAAAA,KAAel4B,EAAQE,GAC3CoI,OAAOunB,EAAAA,EAAAA,KAAY7vB,GACnBm4B,eAAeC,EAAAA,EAAAA,GAAmBp4B,EAAQ,sBAAwBq4B,EAAAA,IAClEC,cAAcF,EAAAA,EAAAA,GAAmBp4B,EAAQ,iBACzCyrB,uBACAgJ,wBACA8D,mBAAoBv4B,EAAOu4B,mBAC3B5D,WACAL,qBACAkE,sBAAsBC,EAAAA,EAAAA,KAA2Bz4B,GACjD04B,eAAgBjN,KAAyBkN,EAAAA,EAAAA,KAA+B34B,GACxE44B,uBAAuBC,EAAAA,EAAAA,KAA4B74B,GACnD84B,qBAAsBlO,GAAkBoH,IAAmBD,IAAkB0D,EAC7EvS,uBAAwBljB,EAAO8yB,SAASC,MAAM7P,uBAC9C+R,oBACA8D,YAAa/4B,EAAOg5B,QAAQD,YAC5B3D,eACA6D,mBAAoBj5B,EAAOk5B,aAAaC,aACxCD,aAAcl5B,EAAOk5B,aAAa/2B,KAClCuzB,sBACD,GAnIe31B,EA9qDwBoB,IAiFtC,IAjFuC,KAC3Coe,EAAI,cACJuW,EAAa,cACbsD,EAAa,kBACb3D,EAAiB,uBACjBO,EAAsB,QACtBqD,EAAO,SACP3uB,EAAQ,WACR4uB,EAAU,QACVC,EAAO,OACPC,EAAM,eACNhW,EAAc,OACdtjB,GAAM,SACNqiB,GAAQ,QACRoP,GAAO,mBACP2C,GAAkB,gBAClBrL,GAAe,MACfe,GAAK,KACL7pB,GAAI,aACJiyB,GAAY,aACZgD,GAAY,wBACZb,GAAuB,qBACvB9I,GAAoB,sBACpBgJ,GAAqB,cACrB1C,GAAa,eACbnH,GAAc,UACdsL,GAAS,cACTiC,GAAa,mBACb/B,GAAkB,mBAClBE,GAAkB,qBAClBkC,GAAoB,aACpB1O,GAAY,UACZ6M,GAAS,qBACTxD,GAAoB,uBACpBsD,GAAsB,iBACtBgD,GAAgB,oBAChBjD,GAAmB,iBACnBI,GAAgB,oBAChBG,GAAmB,gBACnBE,GAAe,cACf5D,GAAa,YACbC,GAAW,aACXgF,GAAY,qBACZlB,GAAoB,sBACpBzE,GAAqB,yBACrBC,GAAwB,kBACxBI,GAAiB,cACjBC,GAAa,aACboE,GAAY,WACZE,GAAU,mBACVE,GAAkB,YAClBE,GAAW,WACX9D,GAAU,WACVC,GAAU,SACVL,GAAQ,aACRmB,GAAY,eACZb,GAAc,oBACdE,GAAmB,cACnB6D,GAAa,WACb/U,GAAU,mBACVkV,GAAkB,mBAClBM,GAAkB,MAClBjwB,GAAK,SACLqsB,GAAQ,4BACR9B,GAA2B,yBAC3B6G,GAAwB,gBACxBC,GAAe,QACfC,GAAO,UACPx4B,GAAS,mBACTu0B,GAAkB,aAClBE,GAAY,cACZ6C,GAAa,sBACbE,GAAqB,uBACrB1V,GAAsB,kBACtB+R,GAAiB,YACjB8D,GAAW,oBACXD,GAAmB,mBACnBG,GAAkB,aAClBC,GAAY,oBACZxD,GAAmB,UACnBmE,IACD14B,EACC,MAAM,YACJ24B,GAAW,WACXC,GAAU,WACVC,GAAU,gBACV9Q,GAAe,cACf+Q,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBthB,GAAgB,oCAChBuhB,GAAmC,wBACnCC,GAAuB,oBACvBC,GAAmB,kBACnBC,GAAiB,YACjBC,KACEv5B,EAAAA,EAAAA,MAEEC,IAAOC,EAAAA,EAAAA,KAGPs5B,IAAWh3B,EAAAA,EAAAA,IAAuB,MAGlCi3B,IAAmBj3B,EAAAA,EAAAA,IAA0B,OAE5C+rB,GAASmL,KAAWC,EAAAA,EAAAA,IAAU,KAC9BC,GAAWC,KAAgBvwB,EAAAA,EAAAA,KAAS,GACrCwwB,IAAoBC,EAAAA,EAAAA,GAAqB7B,IACzC8B,IAA6Bx3B,EAAAA,EAAAA,MAC7By3B,IAAoBC,EAAAA,EAAAA,GAAYtC,IAC9BxqB,MAAO+sB,IAAgBC,EAAAA,EAAWC,MAEpCC,GAA2B,gBAATvc,EAClBwc,GAA2B,UAATxc,EAClBmU,GAAgBoI,GAAkB37B,IAAMuzB,mBAAgB9yB,EACxDo7B,GAAgBtI,KAChBA,GAAclwB,OAAS,IAAMkwB,GAAcxI,MAAMnW,GAASA,EAAKlU,KAAOwyB,OAErE4I,GAAoBC,GAAqBC,KAA6B/3B,EAAAA,EAAAA,KACvEg4B,IAAoBC,EAAAA,EAAAA,GAAqBn8B,GAAQqiB,KAChD+Z,GAAiBC,GAAmBC,KAAuBp4B,EAAAA,EAAAA,MAC3Dqf,GAAkBgZ,GAAkBC,KAAqBt4B,EAAAA,EAAAA,KAE1Du4B,GAAqBnZ,IAAkBD,EAAAA,EAAAA,IAAoBC,IAE3D,SAAEoZ,GAAUC,QAASC,GAAkBnF,YAAaoF,IAAoB3K,IAAgB,CAAC,EACzF4K,GAAiBJ,IAAU/7B,GAE3Bo8B,MAA2BhI,MAAqB,aAAcA,MAChEA,GAAkBiI,WAAaC,EAAAA,IAAeD,UAElDt6B,EAAAA,EAAAA,IAAUw6B,EAAAA,GAAmC,CAACrN,KAE9C,MAAMsN,IAAgCr5B,EAAAA,EAAAA,IAAO,IAEtCs5B,GAAiBC,KAAYC,EAAAA,EAAAA,GAClC1B,IAAmB9F,EACnBmG,KAGFsB,EAAAA,EAAAA,IAAW,KACTpC,IAAa,EAAK,GAvJW,MA0J/Bz4B,EAAAA,EAAAA,KAAU,KACJk5B,IAEJjB,IAAqB,GACpB,CAACiB,GAAiBnK,MAErB/uB,EAAAA,EAAAA,KAAU,KACR44B,GAA2Bh3B,aAAU5D,CAAS,GAC7C,CAACV,MAEJ0C,EAAAA,EAAAA,KAAU,KACJ1C,IAAUm5B,IAAY0C,IACxB5B,GAAqB,CAAEj6B,WACzB,GACC,CAACm5B,EAASn5B,GAAQqiB,GAAUwZ,MAE/Bn5B,EAAAA,EAAAA,KAAU,KACJ1C,IAAUC,KAASuzB,IAAiB2F,IAAWqE,EAAAA,EAAAA,IAAiBv9B,KAClEo6B,GAAW,CAAEr6B,WACf,GACC,CAACC,GAAMD,GAAQm5B,EAASkB,GAAY7G,KAEvC,MAAMiK,IAA+B35B,EAAAA,EAAAA,KAAO,IAC5C8sB,EAAAA,EAAAA,IAAcpuB,IAAqC,IAAnCk7B,EAAYC,GAAkBn7B,EAE5Ci7B,GAA6Bn5B,QAAU1D,QAAQZ,KAAW09B,GAAclK,KAAkBmK,EAAkB,GAC3G,CAAC39B,GAAQwzB,KAEZ,MAAO7V,GAAa9E,KAAkBjO,EAAAA,EAAAA,IAA0B,IAC1DgzB,GAAiBh9B,QAAQ+c,GAAYra,SACpCu6B,GAAU/kB,KAAelO,EAAAA,EAAAA,SAAuClK,IAEjE,gBACJo9B,GAAe,YAAEC,GAAW,eAAExb,GAAc,eAAEC,GAAc,oBAAEwb,GAAmB,cACjFC,GAAa,iBAAEC,GAAgB,cAAEtb,GAAa,cAAEF,GAAa,cAAED,GAAa,iBAAEE,KAC5E9gB,EAAAA,EAAAA,KACF,KAAMs8B,EAAAA,EAAAA,IAA4Bl+B,GAAMiyB,GAAcL,GAAegK,KACrE,CAAC57B,GAAMiyB,GAAcL,GAAegK,KAGhCuC,IAAqBF,KAAqB5a,EAE1C+a,IAA4Bv3B,EAAAA,EAAAA,IAAgB,SAACw3B,GAAyD,IAAxCC,EAAiBvxB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGysB,GACtF,GAAI8E,IAAc9E,IAAmB2E,GAAmB,OACxD,MAAMI,EAAY92B,OAAO+2B,eACzB,IAAIC,EAOJ,GALEA,EADEH,IAAc9E,GACDnkB,SAASwY,cAA8B0L,IAEvClkB,SAASqpB,eAAeJ,GAGrCC,EAAUI,WAAY,CACxB,MAAMC,EAAiBL,EAAUM,WAAW,GAC5C,IAAIC,EAAAA,EAAAA,GAAuBF,EAAgBN,GAGzC,OAFAS,EAAAA,EAAAA,IAAsBV,QACtBI,EAAaO,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,IAG7D,CAEAnE,GAAS,GAAEnL,OAAYyO,MAGvBc,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBX,EAAa,GAEtC,IAEM9lB,IAA4B9R,EAAAA,EAAAA,IAAgB,SAChDlD,GACG,IADW26B,EAAiBvxB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGysB,GAElC,MAAM6E,GAAU/rB,EAAAA,EAAAA,GAAW3O,EAAM,CAAC,cAAe,aAAc,YAC5D4hB,KAAK,IACL9K,QAAQ,WAAY,KACvB2jB,GAA0BC,EAASC,EACrC,IAEMe,IAAqCx4B,EAAAA,EAAAA,IAAgB,SACzDlD,GACG,IADqB26B,EAAiBvxB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGysB,GAE5C,MAAM6E,GAAUiB,EAAAA,EAAAA,GAA0B37B,GAC1Cy6B,GAA0BC,EAASC,EACrC,IAEMiB,IAAmC14B,EAAAA,EAAAA,IAAgB,SAAC24B,GAA2D,IAAxClB,EAAiBvxB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGysB,GAC/F4E,IAA0BqB,EAAAA,EAAAA,IAAqBD,GAAQlB,EACzD,IAEMoB,IAAiB74B,EAAAA,EAAAA,IAAgB,KAChC+2B,KACLyB,GAAmCzB,GAAUpE,IAC7C3gB,QAAYpY,GAAU,KAGlB,yBACJqkB,GAAwB,uBACxB6a,GAAsB,kBACtBC,GAAiB,kBACjBC,GAAiB,iBACjBhb,GAAgB,gBAChBib,GAAe,uBACfC,GAAsB,qBACtBC,ICvgBW,SAA2Bh/B,GAwBvC,IAxBwC,YACzC0c,EAAW,cACXsa,EAAa,QACb+C,EAAO,eACPniB,EAAc,OACd7Y,EAAM,cACN4iB,EAAa,cACbF,EAAa,cACbD,EAAa,iBACbE,EAAgB,eAChBgd,EAAc,cACd5mB,GAaD9X,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,sBAAE0+B,EAAqB,oCAAEzF,EAAmC,iBAAEvhB,IAAqB5X,EAAAA,EAAAA,OAClFu+B,EAAmBM,IAAwBv1B,EAAAA,EAAAA,KAAkB,IAC7Dg1B,EAAwBQ,IAA6Bx1B,EAAAA,EAAAA,KAAkB,IACvEma,EAA0Bsb,IAA+Bz1B,EAAAA,EAAAA,SAA8BlK,GAExFs/B,GAAyBl5B,EAAAA,EAAAA,IAAgB,KAC7C+R,EAAeynB,EAAAA,GACfX,GAAgB,IAGZM,GAAuBn5B,EAAAA,EAAAA,IAC1By5B,IACC,MAAMvjB,EAAqC,mBAAbujB,EAA0BA,EAAS5iB,GAAe4iB,EAChF,GAAKvjB,EAAe1Z,OAKpB,GAAI0Z,EAAegO,MAAMwV,IACvB,MAAMnhB,GAAOohB,EAAAA,EAAAA,IAAkBD,GAE/B,MAAiB,UAATnhB,IAAqBuD,IAAkBD,GAChC,UAATtD,IAAqBqD,IAAkBC,GAC9B,UAATtD,IAAqBoD,IAAkBE,GAC9B,SAATtD,IAAoBsD,CAAiB,IAE3C8X,EAAoC,CAAEz6B,gBACjC,GAAIgd,EAAegO,MAAKxoB,IAAA,IAAC,KAAEgB,GAAMhB,EAAA,OAAKgB,EAAOy0B,CAAa,IAC/DiI,EAAsB,CACpBzrB,MAAO,2BAEJ,CACLoE,EAAemE,GACf,MAAM0jB,EAAc1jB,EAAegO,MAAMwV,IACvC,MAAMnhB,GAAOohB,EAAAA,EAAAA,IAAkBD,GAE/B,MAAiB,UAATnhB,IAAqBuD,GACd,UAATvD,IAAqBqD,GACZ,UAATrD,IAAqBoD,CAAc,IAG3C0d,EAAqBv/B,QAAQ8/B,GAAe/d,IAC5Cyd,GAA2Bzd,EAC7B,MA7BEqd,GA6BF,IA+CJ,MAAO,CACLjb,2BACA+a,mBA7CwBh5B,EAAAA,EAAAA,IAAgBwS,MAAOiD,EAAeokB,KAC9D,GAAI5nB,EAAe,CACjB,MAAM6nB,QAAsBxjB,EAAAA,EAAAA,GAAgBb,EAAM,GAAGpJ,KAAMoJ,EAAM,IAC3Dc,EAAatE,IAAiBuE,EAAAA,EAAAA,IAAuBvE,EAAe6nB,GAEtE7nB,GAAe2E,UACbL,EACF4iB,EAAqB,CAACW,IAEtB1nB,EAAiB,CAAE7Q,QAAS9G,EAAK,gCAGnC0+B,EAAqB,CAACW,GAE1B,KAAO,CACL,MAAM5jB,QAAuBC,QAAQC,IAAIX,EAAMha,KAAK4a,IAClDC,EAAAA,EAAAA,GAAgBD,EAAKhK,KAAMgK,EAAM,CAAE0jB,oBAAqBF,QAAajgC,OAEvEu/B,EAAqB,IAAItiB,KAAgBX,GAC3C,KA2BA8H,kBAxBuBhe,EAAAA,EAAAA,IAAgBwS,MAAOiD,EAAeukB,KAC7D,GAAI/nB,EAAe,CACjB,MAAM6nB,QAAsBxjB,EAAAA,EAAAA,GAAgBb,EAAM,GAAGpJ,KAAMoJ,EAAM,IAC3Dc,EAAatE,IAAiBuE,EAAAA,EAAAA,IAAuBvE,EAAe6nB,GAEtE7nB,GAAe2E,UACbL,EACF4iB,EAAqB,CAACW,IAEtB1nB,EAAiB,CAAE7Q,QAAS9G,EAAK,gCAGnC0+B,EAAqB,CAACW,GAE1B,KAAO,CACL,MAAM5jB,QAAuBC,QAAQC,IAAIX,EAAMha,KAAK4a,IAASC,EAAAA,EAAAA,GAAgBD,EAAKhK,KAAMgK,MACxF8iB,EAAqBjjB,EACvB,CACAqjB,EAA4BS,EAAmB,IAO/Cf,gBAAiB/E,EACjBgF,yBACAC,uBACAL,yBACAC,oBAEJ,CD0YMkB,CAAmB,CACrBpjB,eACAqd,WACAniB,kBACAof,iBACAj4B,UACA4iB,iBACAF,iBACAD,iBACAE,oBACAgd,kBACA5mB,cAAeuK,KAGV0d,GAAmBC,GAAiBC,KAAoBh9B,EAAAA,EAAAA,MACxDi9B,GAAsBC,GAAoBC,KAAuBn9B,EAAAA,EAAAA,MACjEo9B,GAAkBC,GAAgBC,KAAmBt9B,EAAAA,EAAAA,MACrDu9B,GAAkBC,GAAgBC,KAAmBz9B,EAAAA,EAAAA,MACrD09B,GAAmBC,GAAiBC,KAAoB59B,EAAAA,EAAAA,MACxD69B,GAAiBC,GAAcC,KAAe/9B,EAAAA,EAAAA,MAE/C,oBACJg+B,GAAmB,mBACnBC,GAAkB,oBAClBC,GAAmB,qBACnBC,GAAoB,kBACpBC,GACAC,gBAAiBC,GAAa,mBAC9BC,GAAkB,kBAClBC,GAAiB,qBACjBC,GAAoB,sBACpBC,IEtiBsBC,MAExB,MAAMN,GAAkBz+B,EAAAA,EAAAA,IAA0B,OAC3Cu+B,EAAsBS,IAA2Bl4B,EAAAA,EAAAA,MAClD63B,GAAqB3+B,EAAAA,EAAAA,OACpBw+B,EAAmBS,IAAwBn4B,EAAAA,EAAAA,OAC3C83B,EAAmBC,IAAwB/3B,EAAAA,EAAAA,KAAS,IAE3DlI,EAAAA,EAAAA,KAAU,KAEJsgC,EAAAA,IAAaC,EAAAA,IACVC,IACP,GACC,IAEH,MAAMhB,GAAsBp7B,EAAAA,EAAAA,IAAgBwS,UAC1C,IACE,MAAM,KAAEkI,EAAI,MAAEQ,SAAgBkhB,IAAsBC,IAC9CZ,EAAgBj+B,UACdm+B,EAAmBn+B,SAAWwb,KAAKC,MAAQ,GAAM,IACnDqjB,EAAAA,EAAAA,KAAgB,KACTb,EAAgBj+B,UACrBi+B,EAAgBj+B,QAAQ4C,MAAMm8B,UAAa,SAA4B,IAAnBF,GAAc,uBAA2B,IAGjGJ,EAAqBjjB,KAAKC,OAC5B,IAEF0iB,EAAmBn+B,QAAUwb,KAAKC,MAClCgjB,EAAqBjjB,KAAKC,OAE1B+iB,EAAwB,CAAEthB,OAAMQ,SAClC,CAAE,MAAOpH,GAEPE,QAAQC,MAAMH,EAChB,KAGIwnB,GAAsBt7B,EAAAA,EAAAA,IAAgB,KAC1C,GAAKu7B,EAAL,EAIAe,EAAAA,EAAAA,KAAgB,KACVb,EAAgBj+B,UAClBi+B,EAAgBj+B,QAAS4C,MAAMm8B,UAAY,OAC7C,IAGF,IACE,OAAOhB,EAAsBrgB,OAC/B,CAAE,MAAOpH,GAGP,YADAE,QAAQC,MAAMH,EAEhB,CAdA,CAcA,IAGIunB,GAAqBr7B,EAAAA,EAAAA,IAAgB,KACzC,GAAKu7B,EAAL,CAIAS,OAAwBpiC,GACxB+hC,EAAmBn+B,aAAU5D,EAC7BqiC,OAAqBriC,IAErB0iC,EAAAA,EAAAA,KAAgB,KACVb,EAAgBj+B,UAClBi+B,EAAgBj+B,QAAQ4C,MAAMm8B,UAAY,OAC5C,IAGF,IACE,OAAOhB,EAAsB7gB,MAC/B,CAAE,MAAO5G,GAGP,YADAE,QAAQC,MAAMH,EAEhB,CAlBA,CAkBA,KAGFlY,EAAAA,EAAAA,KAAU,IACD2/B,GAAuB3V,EAAAA,GAAAA,GAAsByV,QAAsBzhC,GACzE,CAAC2hC,EAAsBF,IAE1B,MAAMS,GAAwB97B,EAAAA,EAAAA,IAAgB,KAC5C67B,GAAsBD,EAAkB,IAG1C,MAAO,CACLR,sBACAE,sBACAD,qBACAE,uBACAC,oBACAC,kBACAE,qBACAC,oBACAC,uBACAC,wBACD,EFkcGC,GAEES,GAA4BjP,KAA4BwH,IAC9D0H,EAAAA,EAAAA,IAAY,KACVrH,GAAkB,CAAE7c,KAAM,eAAgB,GACzCikB,GAA4BjB,IAAwBmB,EAAAA,SAA+B9iC,IAEtFgC,EAAAA,EAAAA,KAAU,KACH2xB,KAA2BwH,KAC3BwG,IACHnG,GAAkB,CAAE7c,KAAM,WAC5B,GACC,CAACgjB,GAAsBhO,GAAyBwH,GAAiBK,KAEpE,MAAMuH,IAAeC,EAAAA,EAAAA,GAAY9iC,QAAQ0iB,KACzC5gB,EAAAA,EAAAA,KAAU,KACH2xB,KAA2BwH,IAC5BhM,OAAc4T,GAAan/B,SAC7B43B,GAAkB,CAAE7c,KAAM,UAC5B,GACC,CAACwQ,GAAS4T,GAAcpP,GAAyBwH,GAAiBK,KAErE,MAAMyH,GAAU1jC,KAAQ2jC,EAAAA,EAAAA,IAAY3jC,KAE9B,mBACJ4jC,GAAkB,kBAClBC,GAAiB,eACjBC,GAAc,qBACdC,GAAoB,YACpBC,KACEC,EAAAA,GAAAA,GACFtjC,QAAQu4B,GAAWvD,IAAkBiG,IAAmBxH,KACnD5B,KAA0BmL,IAC/B/N,GACAmL,QACAt6B,EACAy2B,GACArE,GACAC,KAGI,yBACJoR,GAAwB,wBACxBC,GAAuB,kBACvBC,KACEC,EAAAA,GAAAA,GACF1jC,QAAQu4B,GAAWvD,IAAkBiG,IAAmBxH,KACnD3B,KAA6BkL,IAClC/N,GACAmL,GACAI,GACAN,GACAjE,KAGI,qBACJ0N,GAAoB,oBACpBC,IjB1lBW,SACbC,EACA5U,EACA8G,GAEA,MAAM,qBAAE+N,EAAoB,sBAAEC,IAA0BrjC,EAAAA,EAAAA,OAEjDsjC,EAAkBC,EAAoBC,IAAwB5gC,EAAAA,EAAAA,IAAQ,GAEvE6gC,GAAiBrU,EAAAA,EAAAA,IAAiB,KACtC,MAAMla,EAAOqZ,IACb,IAAK4U,IAAcjuB,GAASwuB,EAAAA,IAAsBxuB,EAAKlT,OAdxC,EAc8D,OAG7E,IADiBkT,EAAK6D,MAAM2qB,EAAAA,GAAqBC,GAAAA,EAAenmB,EAAAA,KACjD,OAEf,MAAMomB,GAAYC,EAAAA,EAAAA,GAAiB3uB,GAMnC,OALsB0uB,IACnBF,EAAAA,IAA0D,KAApCI,EAAAA,GAAAA,GAAqBF,KACvCF,EAAAA,IAAsBpkC,QAAQ4V,EAAK6D,MAAMuE,MAI3ComB,EAAAA,GAAqBE,EAAYA,EAAU7qB,MAAM,gBAAgB,QAClE3Z,CAAS,GACZ,CAACmvB,EAAS4U,IAEPpkC,GAAWwwB,EAAAA,EAAAA,IAAgB,IAAMjwB,QAAQmkC,MAAmB,CAACA,IAC7DM,EAAczkC,QAAQ+1B,GAAUrzB,QAiBtC,OAfAZ,EAAAA,EAAAA,KAAU,KACR,IAAK+hC,IAAcpkC,EAAU,OAE7B,MAAMilC,EAAcP,IAChBO,EACGD,GACHX,EAAqB,CAAEjF,MAAO6F,IAGhCX,GACF,GACC,CAACF,EAAWpkC,EAAU0kC,EAAgBM,EAAaX,EAAsBC,KAE5EjiC,EAAAA,EAAAA,IAAUoiC,EAAsB,CAACA,EAAsBjV,IAEhD,CACL0U,qBAAsB3jC,QAAQP,GAAYglC,IAAgBT,GAC1DJ,oBAAqBK,EAEzB,CiB0iBMU,CACF3kC,QAAQu4B,GACHvD,IACCiG,IAAmBxH,KACpB5B,IACAqL,KACCF,IACN/N,GACA6G,KAGI,qBACJ8O,GAAoB,oBACpBC,GAAmB,cACnBC,GAAa,qBACbC,KACEC,EAAAA,GAAAA,GACFhlC,QAAQg7B,IAAmBzC,GAAW9E,KAA4BuJ,IAClE/N,GACAmL,GACAI,GACAN,GACA8B,GACA7F,GACA5D,KAIA1M,OAAQof,GACRC,MAAOC,GACPC,UAAWC,GACXC,SAAUC,GACVC,cAAeC,GACfC,QAASC,GACTC,aAAcC,GACdC,KAAMC,GACNC,SAAUC,IlBxnBC,SACbpC,EACAzkC,EACA6vB,EACAwH,GAEA,MAAM,eAAEyP,EAAc,eAAEC,EAAc,mBAAEC,IAAuB1lC,EAAAA,EAAAA,OAExDsjC,EAAkBC,EAAoBC,IAAwB5gC,EAAAA,EAAAA,IAAQ,GAEvE+iC,GAA2BC,EAAAA,EAAAA,KAAqB,KACpD,MAAM1wB,EAAOqZ,IACb,OAAO4U,GAAajuB,EAAK2wB,WAAW,KAoExC,SAAuB3wB,GACrB,IAAKA,EAAK2wB,WAAW,KACnB,OAAOhpB,GAGT,MAAMva,EASR,SAAsB4S,GASpB,OARAgI,GAAO7D,UAAYnE,EAAKkE,QAAQ,QAAS,MAEzC8D,GAAOvD,iBAA8B,SAASlM,SAASkI,IAChDA,EAAG6E,YACN7E,EAAG6E,UAAY7E,EAAGwE,aAAa,OACjC,IAGK+C,GAAO1C,SAChB,CAnBesrB,CAAa5wB,GACpBY,EAASxT,EAAKyW,MAAM4D,IAC1B,OAAK7G,EAIEqH,GAAoBrH,EAAO,GAAIA,EAAO,GAAkB,KAAdA,EAAO,KAAcxT,EAAKyW,MAAM6D,KAHxEC,EAIX,CAhF+CkpB,CAAc7wB,GAAQ2H,EAAc,GAC9E,CAAC0R,EAAS4U,GAzBE,MA0BT,SACJrmB,EAAQ,MAAEC,EAAK,YAAEC,EAAW,gBAAEC,IAC5BsS,EAAAA,EAAAA,GAAgBoW,EAA0B,CAACA,EAA0BpX,IAAU,IAEnFe,EAAAA,EAAAA,IAAc3vB,IAAoB,IAAlBqmC,GAAarmC,EACvBqmC,GACFP,EAAe,CAAE3oB,SAAUkpB,GAC7B,GACC,CAAClpB,EAAU2oB,KAEdrkC,EAAAA,EAAAA,KAAU,KACH6b,GAELuoB,EAAe,CACb9mC,SAAQoe,SAAUG,EAAiBF,SACnC,GACD,CAACre,EAAQqe,EAAOyoB,EAAgBvoB,KAEnC7b,EAAAA,EAAAA,IAAUoiC,EAAsB,CAACA,EAAsBjV,IAEvD,MACElvB,GAAImlC,EAAK,SACTI,EAAQ,cACRE,EAAa,OACbmB,EAAM,QACNjB,EAAO,UACPN,EAAS,KACTU,GACGnoB,GAAmB8Y,IAAa9Y,IAAqB,CAAC,EAErDkI,EAAS7lB,SAAS0lC,GAAShjC,QAAU4iC,KAActB,IAEzDliC,EAAAA,EAAAA,KAAU,KACH+jB,GAAWrI,GACd4oB,GACF,GACC,CAACvgB,EAAQugB,EAAoB5oB,IAEhC,MAAMwoB,GAAW9/B,EAAAA,EAAAA,IAAgB,KAC1ByX,GAELuoB,EAAe,CACb9mC,SAAQoe,SAAUG,EAAiBF,QAAOkpB,UAC1C,IAGJ,MAAO,CACL9gB,SACAqf,QACAE,YACAE,WACAE,gBACAE,UACAE,aAAc3B,EACd6B,KAAMpoB,GAAeooB,EAAQ,IAAGtoB,KAAYsoB,SAAShmC,EACrDkmC,WAEJ,CkBkjBMY,CACF5mC,QAAQg7B,IAAmBzC,GAAW9E,KAA4BuJ,IAClE59B,GACA6vB,GACAwH,IAGIoQ,GAAkB7mC,QAAQo4B,IAAgB52B,OAAO8oB,KAAK8N,IAAc11B,SAGxEmjB,OAAQihB,GACRC,MAAOC,GACPC,oBAAqBC,GACrBC,qBAAsBC,IxBjpBX,SACbvD,EACA5U,EACA4H,EACAoF,EACA7D,GAEA,MAAO6O,EAAqBI,IAA0Br9B,EAAAA,EAAAA,OAC/Cm9B,EAAsBG,IAA2Bt9B,EAAAA,EAAAA,OACjDg6B,EAAkBC,EAAoBC,IAAwB5gC,EAAAA,EAAAA,IAAQ,GAEvEikC,GAAyBjB,EAAAA,EAAAA,KAAqB,KAClD,MAAM1wB,EAAOqZ,IACb,OAAO4U,GAAajuB,EAAK2wB,WAAW,MAAOhC,EAAAA,EAAAA,GAAiB3uB,GAAM6D,MAAM3E,KAAc,GAAG0yB,YAAS1nC,CAAS,GAC1G,CAACmvB,EAAS4U,GAhBE,KAkBT4D,GAAa3X,EAAAA,EAAAA,GACjByX,EAAwB,CAACA,EAAwBtY,IAAU,GA8B7D,OA3BAntB,EAAAA,EAAAA,KAAU,KACR,MAAM4lC,EAAUD,IACV1Q,EAAWF,GAAeoF,EAChC,IAAKyL,IAAa3Q,IAAaqB,EAG7B,OAFAiP,OAAuBvnC,QACvBwnC,OAAwBxnC,GAI1B,MAAM+B,EAAS6lC,EAAQtuB,UAAU,GAC3BuuB,EAA0B5Q,GAAUl1B,QAAQ+lC,IAAO/lC,GAAU+lC,EAAEF,QAAQnB,WAAW1kC,KAExFwlC,EACEM,GAAyBjlC,OAASilC,OAA0B7nC,GAG9D,MAAM+nC,EAA0BrmC,OAAOC,OAAO22B,GAAgB,CAAC,GAAGv2B,QAAQimC,IACvEjmC,GAAUimC,EAAWC,SAASxB,WAAW1kC,KAG5CylC,EACEO,GAAyBnlC,OAASmlC,OAA0B/nC,EAC7D,GACA,CAAC2nC,EAAY5Q,EAAaoF,EAAiB7D,KAE9Ct2B,EAAAA,EAAAA,IAAUoiC,EAAsB,CAACA,EAAsBjV,IAEhD,CACLpJ,OAAQ7lB,SAASinC,GAAqBvkC,QAAUykC,GAAsBzkC,UAAYshC,GAClF+C,MAAO9C,EACPgD,sBACAE,uBAEJ,CwB6lBMa,CACFhoC,QAAQg7B,IACHzC,GACA9E,KACEoD,IAAeA,IAAan0B,QAAWu5B,IAAiBv5B,QAAWmkC,IAAmBjS,KAC7F3F,GACA4H,GACAoF,GACArH,GAAsBwD,QAAet4B,GpBxoBxBO,KAgBX,IAhBY,MAChB6oB,EAAK,OACL9pB,EAAM,SACNqiB,EAAQ,QACRwN,EAAO,QACPmL,EAAO,cACPjiB,EAAa,WACbsP,GASDpnB,EACC,MAAM,UAAE4nC,EAAS,WAAEhP,EAAU,iBAAEiP,IAAqBxnC,EAAAA,EAAAA,MAE9CynC,GAAejlC,EAAAA,EAAAA,KAAO,IAE5BpB,EAAAA,EAAAA,KAAU,KACR,MAAM8T,EAAOqZ,IACPmZ,OAAkCtoC,IAAnBopB,GAAOmf,SACxB1J,EAAAA,EAAAA,GAA0BzV,GAAOlmB,QAAU4S,GAASwyB,EAGtDD,EAAazkC,SAAU,EAFvBykC,EAAazkC,SAAU,CAGzB,GACC,CAACwlB,EAAO+F,KACXntB,EAAAA,EAAAA,KAAU,KACRqmC,EAAazkC,SAAU,CAAK,GAC3B,CAACtE,EAAQqiB,IAEZ,MAAM6mB,EAAYtoC,QAAQmY,GAEpBowB,GAAcriC,EAAAA,EAAAA,IAAgB,WAA8D,IAA7DsiC,EAAmDp8B,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1F,GAAIqb,GAAc6gB,IAAcH,EAAazkC,QAAS,OAEtD,MAAMkS,EAAOqZ,IAETrZ,GACF8K,EAAAA,EAAAA,KAAe,KACbunB,EAAU,CACR7oC,OAAQopC,EAAUppC,QAAUA,EAC5BqiB,SAAU+mB,EAAU/mB,UAAYA,EAChCze,MAAMsW,EAAAA,EAAAA,IAAyB1D,IAC/B,IAGJqjB,EAAW,CACT75B,OAAQopC,EAAUppC,QAAUA,EAC5BqiB,SAAU+mB,EAAU/mB,UAAYA,EAChCgnB,iBAAiB,GAGvB,IAEMC,GAA2BC,EAAAA,GAAAA,GAAgBC,EAAAA,KAAgB,OAAM9oC,EAAW,CAACV,EAAQqiB,KAG3FonB,EAAAA,GAAAA,IAA4BjnC,IAA2C,IAAzCk7B,EAAYgM,EAAcC,GAAUnnC,EAChE,GAAI6lB,EACF,OAEF,MAAMuhB,EAAYb,EAAazkC,QAE/B,GAAItE,IAAW09B,GAAcrb,IAAaqnB,EAAc,CACtD,GAAIE,IAAc9f,EAAO,OAKzB,IAJKA,GAAS6f,GACZ3O,EAAQ,IAGN4O,EAAW,MACjB,CAEA,GAAI7wB,IAAkB+Q,EACpB,OAGFkR,GAAQuE,EAAAA,EAAAA,GAA0BzV,EAAMlmB,OAExC,MAAMimC,EAAiB/f,EAAMlmB,MAAM+Y,UAC/Bpa,KAAKguB,GAAWA,EAAOlR,OAASrD,EAAAA,GAAsBE,aAAeqU,EAAOuZ,aAC7ErnC,OAAO7B,UAAY,GAClBipC,EAAevmC,QAAQwlC,EAAiB,CAAEiB,IAAKF,GAAiB,GACnE,CAAC7pC,EAAQqiB,EAAUyH,EAAO+F,EAASmL,EAASjiB,EAAesP,KAG9Dha,EAAAA,EAAAA,KAAgB,KACd,IAAIga,EAIJ,MAAO,KACA6gB,GACHC,EAAY,CAAEnpC,SAAQqiB,aAvG5BxE,IAAW,GAEXyD,EAAAA,EAAAA,KAAe,KACbzD,IAAW,CAAK,GAuGN,CACT,GACA,CAAC7d,EAAQqiB,EAAU6mB,EAAWC,EAAa9gB,IAE9C,MAAM2hB,GAAYtG,EAAAA,EAAAA,GAAY1jC,GACxBiqC,GAAcvG,EAAAA,EAAAA,GAAYrhB,IAChC3f,EAAAA,EAAAA,KAAU,KACR,GAAI2lB,GAAcxK,GAChB,OAGF,IAAKgS,IAGH,YAFAsZ,IAKF,MAAMe,EAAeF,EAAU1lC,QACzB6lC,EAAiBF,EAAY3lC,QAEnCglC,GAAyB,KACnBU,EAAU1lC,UAAY4lC,GAAgBD,EAAY3lC,UAAY6lC,GAChEhB,GACF,GACA,GACD,CAACa,EAAWna,EAASxH,EAAYihB,EAA0BW,EAAad,KAE3EiB,EAAAA,GAAAA,GAAkBjB,IAClBkB,EAAAA,GAAAA,GAAgBlB,EAAY,EoB4gB5BmB,CAAS,CACPxgB,SACA9pB,UACAqiB,YACAwN,WACAmL,WACAjiB,cAAeuK,EACf+E,WAAYwT,IAAmBj7B,QAAQizB,MAGzC,MAAM0W,IAAgBzjC,EAAAA,EAAAA,IAAgB,WAAoBkG,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,IAEtDguB,GAAQ,IAGVniB,GAAeynB,EAAAA,GACfxnB,QAAYpY,GAEZojC,KACAM,KACAI,KACAiB,KAEIj7B,EAEFvD,YAAW,IAAMu6B,MApbY,KAsb7BA,IAEJ,KAEOgJ,GAAoBC,GAAkB3hB,InBjrB5B4hB,EACjB7a,EACAmL,EACAjiB,EACAwxB,EACA1I,EACA7hC,EACAqiB,EACAhD,EACAyK,EACA4K,KAEA,MAAM,YAAEmG,EAAW,gBAAE8P,EAAe,qBAAE3a,IAAyB1uB,EAAAA,EAAAA,OACxDwnB,EAAwB8hB,IAA6BhgC,EAAAA,EAAAA,KAAS,GAE/DigC,EAAe/gB,GAAOE,WAAWK,cAEvCygB,EAAAA,EAAAA,IAAsB7pC,IAA2C,IAAzC8pC,EAAmBC,GAAiB/pC,EAC1D,IAAK8X,EACH,OAGF,GAAI8xB,GAAgBG,IAAqBH,EAGvC,OAFA7P,EAAQ,SACR4P,GAA0B,GAI5B,GAAIG,GAAmBpqC,KAAOoY,EAAcpY,IAAMkqC,IAAiBG,EACjE,OAGF,MAAMpnC,GAAQmnC,GAAqBrW,GAAc9wB,KAAKN,OAASoxB,EAAe3b,EAAchP,QAAQnG,KAC9F4S,GAAO+oB,EAAAA,EAAAA,GAA0B37B,GAEvCo3B,EAAQxkB,GACRo0B,GAA0B,IAE1BxL,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAeppB,SAASwY,cAA8Bmd,EAAAA,KACxDvM,IACFW,EAAAA,EAAAA,GAAqBX,GAAc,EACrC,GACA,GACD,CAAC3lB,EAAe8xB,EAAcnW,EAAcsG,KAE/Ct4B,EAAAA,EAAAA,KAAU,KACR,IAAKqW,EACH,OAGF,MAAMmyB,IAAuB,YAAanyB,EAAchP,UACnDgP,EAAchP,QAAQnG,MAAM+Y,UAAUqO,MAAMuF,GAAWzS,GAAarX,IAAI8pB,EAAOlR,QAEpF2Q,EAAqB,CACnBhwB,SACAqiB,WACAoN,UAAWyb,GACX,GACD,CAAClrC,EAAQqiB,EAAUtJ,KAEtBrW,EAAAA,EAAAA,KAAU,KACR,GAAKqW,EACL,MAAO,KACL,MAAMoyB,GAASjxB,EAAAA,EAAAA,IAAyB2V,KAClCub,EAASD,EAAOvnC,KAAKN,OAAS6nC,OAASzqC,EAE7CiqC,EAAgB,CACd3qC,SAAQqiB,WAAUhD,OAAMzb,KAAMwnC,GAC9B,CACH,GACA,CAACprC,EAAQ+Y,EAAe8W,EAAS8a,EAAiBtoB,EAAUhD,IAE/D,MAAM6Q,GAAsBC,EAAAA,EAAAA,KAAqB,KAC/C,IAAKpX,EAAe,OAAO,EAE3B,MAAMoyB,GAASjxB,EAAAA,EAAAA,IAAyB2V,KACxC,QAAS,YAAa9W,EAAchP,UAC/BgP,EAAchP,QAAQnG,MAAM+Y,UAAUqO,MAAMuF,GAAWzS,GAAarX,IAAI8pB,EAAOlR,UAC7E8rB,EAAOxuB,UAAUqO,MAAMuF,GAAWzS,GAAarX,IAAI8pB,EAAOlR,OAAO,GACvE,CAACtG,EAAe8W,GAlFD,KAkFwB,GAEpCwb,GAAmC3a,EAAAA,EAAAA,GAAiBR,EAAqB,CAACA,EAAqBL,IAAU,IAE/Gib,EAAAA,EAAAA,IAAsBtoC,IAAyB,IAAvBuoC,GAAkBvoC,EACnCuW,GAAiBgyB,GAAmBpqC,KAAOoY,EAAcpY,IAI1D0qC,KACFrb,EAAqB,CACnBhwB,SACAqiB,WACAoN,WAAW,GAEf,GACC,CAAC1W,EAAe/Y,EAAQ6vB,EAASxN,EAAUgpB,IAE9C,MAAMC,GAA8BxkC,EAAAA,EAAAA,IAAgB,KAC7CgjB,IAGLxI,EAAAA,EAAAA,KAAe,KACb0Z,GAAQuE,EAAAA,EAAAA,GAA0BzV,EAAMlmB,QAGxCw7B,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAeppB,SAASwY,cAA8Bmd,EAAAA,KACxDvM,IACFW,EAAAA,EAAAA,GAAqBX,GAAc,EACrC,GACA,GACF,IAGE+L,GAAmB3jC,EAAAA,EAAAA,IAAgB,KACvCyjC,IACAe,GAA6B,IAGzBd,GAAqB1jC,EAAAA,EAAAA,IAAgB,KACzC,MAAM,KAAElD,EAAI,SAAE+Y,IAAazC,EAAAA,EAAAA,IAAyB2V,KAE/C9W,IAIAnV,IAAS2nC,EAAAA,EAAAA,IAAgBxyB,IAK9B8hB,EAAY,CACV2Q,YAAa,CAAExrC,SAAQqiB,WAAUhD,QACjCzb,OACA+Y,aAGF4tB,IACAe,KAXEzJ,IAW2B,IAGzB4J,GAAa3kC,EAAAA,EAAAA,IAAgB,KACjC,IAAKiS,EAAe,OACpB,MAAMoyB,GAASjxB,EAAAA,EAAAA,IAAyB2V,KAClCub,EAASD,EAAOvnC,KAAKN,OAAS6nC,OAASzqC,EAE7CiqC,EAAgB,CACd3qC,SAAQqiB,WAAUhD,OAAMzb,KAAMwnC,GAC9B,IAMJ,OAHAhB,EAAAA,GAAAA,GAAkBqB,IAClBpB,EAAAA,GAAAA,GAAgBoB,GAET,CAACjB,EAAoBC,EAAkB3hB,EAAuB,EmBshBE4hB,CACrE7a,GACAmL,GACA1X,EACAinB,GACA1I,GACA7hC,GACAqiB,GACA0G,GACAe,GACA4K,IAIIgX,IAAmBhI,EAAAA,EAAAA,GAAY6G,IAC/BoB,IAAwBjI,EAAAA,EAAAA,GAAYvB,KAC1Cz/B,EAAAA,EAAAA,KAAU,IACD,KAELipC,GAAsBrnC,UAEtBonC,GAAiBpnC,SAAS,GAE3B,CAACtE,GAAQqiB,GAAUqpB,GAAkBC,KAExC,MAAMC,IAAqC9kC,EAAAA,EAAAA,IAAgB,KACzD,MAAM+kC,EAAqB1O,GAA8B74B,QAWvD4U,GAVG2yB,EAUc,CACfxjC,QAAS9G,GAAK,2BACd8qB,OAAQ,CACNA,OAAQ,WACRyf,QAAS,CAAEnrC,GAAIwyB,GAAe4Y,sBAAsB,IAEtDC,WAAYzqC,GAAK,SAfF,CACf8G,QAAS9G,GAAK,0BACd8qB,OAAQ,CACNA,OAAQ,mBACRyf,QAAS,CAAEG,eAAgB,mBAE7BD,WAAYzqC,GAAK,iBAYrB47B,GAA8B74B,QAAU4nC,QAAQL,EAAmB,IAG/DM,IAAkBtb,EAAAA,EAAAA,IAAgB,IACjCuL,KAAmBzC,IAAe9J,OAAc+N,GAIjDta,GAAkBwF,GACbyI,GAAgB6a,MAGrBnJ,EAAAA,IAAiCZ,IAAyBzY,IAAkBiG,OAAc+N,GAI1FrI,EACKhE,GAAgB8a,SAGlB9a,GAAgB+a,KAPd/a,GAAgBgb,OARhBhb,GAAgBib,SAgBxB,CACDnK,GAAsB/e,EAAgBuM,GAAS+N,GAAgBhU,GAAcwS,GAAiBzC,GAC9F7Q,GAAwByM,IAEpBkX,IAAyBlX,GAG7B5I,kBAAmB+f,GAAoB,kBACvC7f,GAAiB,uBACjBC,GAAsB,sBACtBC,KACEC,EAAAA,EAAAA,GAAuBwV,KAAiB2J,KAAoB5a,GAAgB+a,MAAQG,MAGtF7f,oBAAqB+f,GACrB9f,kBAAmB+f,GACnBC,wBAAyBC,GACzB/f,sBAAuBggB,KACrB/f,EAAAA,EAAAA,GAAuB+N,IAAmBc,KAE9Cn5B,EAAAA,EAAAA,KAAU,KACJ41B,IAEAqU,KACFjS,GAAwB,CACtBsS,OAAQhtC,GACRyxB,QAASA,GACTwb,SAAUN,KAEZI,KACF,GACC,CAAC/sC,GAAQ+sC,GAAkCzU,GAAsB7G,GAASkb,KAE7Eh0B,GACE0b,IAA2BwH,GAC3ByD,GACAW,GACAnnB,GACAwK,GACCiI,KAAyBb,GAC1BkhB,IAGF,MAAMsB,IAAsBpmC,EAAAA,EAAAA,IAAgB,KACtCwc,GACFmnB,IACF,IAGI0C,IAAqBrmC,EAAAA,EAAAA,IAAgB,CAAClD,EAAcwpC,KACxD,MAAMC,EAAYD,EAAoBhV,GAhjBf,KAijBvB,GAAIx0B,GAAMN,OAAS+pC,EAAW,CAC5B,MAAMC,EAAc1pC,EAAKN,OAAS+pC,EAYlC,OAXAvT,GAAW,CACT3sB,KAAM,CACJ9E,QAAS,4CACTklC,WAAY,CACV,sBAAuBD,EAAYE,WACnC,aAAcF,EAAc,EAAI,IAAM,IAExCG,aAAa,MAIV,CACT,CACA,OAAO,CAAI,IAGPC,IAAgB5mC,EAAAA,EAAAA,IAAgB,KACpC,GAAI2tB,KAAakP,GAAS,CACxB,MAAMjF,EAAeppB,SAASwY,cAA8B0L,IAEtDmU,GAAaC,EAAAA,EAAAA,MACbC,EAA0BvS,GAA2Bh3B,SACtDkJ,KAAKsgC,MAAMH,EAAarS,GAA2Bh3B,SAClDypC,EAAyBtZ,GAASuZ,cAAgBvZ,GAASuZ,aAAeL,EAEhF,GACGE,GAA2BA,EAA0BpZ,GAASwZ,SAC5DF,EACH,CACA,MAAMG,EAAmBH,EACrBtZ,GAASuZ,aAAgBL,EACzBlZ,GAASwZ,QAAUJ,EAWvB,OAVA/T,GAAW,CACT3sB,KAAM,CACJ9E,QAAS9G,GAAK,gBAAgBmR,EAAAA,EAAAA,IAAoBw7B,IAClDC,YAAY,EACZV,aAAa,KAIjB/O,GAAc0P,QAEP,CACT,CACF,CACA,OAAO,CAAI,IAGPC,IAAkBvnC,EAAAA,EAAAA,IAAgB/G,IAclC,IAbJ4d,YAAa2wB,EAAiB,eAC9BC,EAAiBlW,GAAmBmW,eAAc,YAClDC,EAAcpW,GAAmBqW,kBAAiB,SAClDC,EAAQ,YACRC,EAAW,gBACXC,GAQD9uC,EACC,IAAKq0B,KAAuB3C,GAC1B,OAGF,MAAM,KAAE7tB,EAAI,SAAE+Y,IAAazC,EAAAA,EAAAA,IAAyB2V,OAC/CjsB,GAAS0qC,EAAkBhrC,SAG3B6pC,GAAmBvpC,GAAM,IACzB8pC,OAELmB,EAAkBjrC,GAAQ2qC,GAAkBE,EAAcI,OAAkBnuC,EAExE4iB,EACFuX,GAAY,CACV2Q,YAAapX,GACbxwB,OACA+Y,WACAgB,aAAamxB,EAAAA,EAAAA,GAAyBR,EAAmBC,KAG3D3U,GAAY,CACV4R,YAAapX,GACbxwB,OACA+Y,WACAiyB,cACAD,WACAhc,+BACAhV,aAAamxB,EAAAA,EAAAA,GAAyBR,EAAmBC,GACzDQ,oBAAqBN,EACrBI,oBAIJvT,GAA2Bh3B,SAAUspC,EAAAA,EAAAA,MAErC/T,GAAW,CAAE75B,UAAQgvC,aAAa,KAGlC1tB,EAAAA,EAAAA,KAAe,KACbipB,IAAe,IACf,IAGE0E,IAAiCnoC,EAAAA,EAAAA,IAAgB,CACrDynC,EACAE,EACAI,KAEAR,GAAgB,CACd1wB,eACA4wB,iBACAE,cACAI,mBACA,IAGEK,IAAwBpoC,EAAAA,EAAAA,IAAgB,CAC5CynC,EACAE,EACAE,EACAC,EACAC,KAEAR,GAAgB,CACd1wB,eACA4wB,iBACAE,cACAE,WACAC,cACAC,mBACA,IAGEM,IAAaroC,EAAAA,EAAAA,IAAgBwS,iBAAkD,IAA3Cq1B,EAAQ3hC,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAAU4hC,EAAoB5hC,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAC9E,IAAK0zB,KAAuB3C,GAC1B,OAGF,IAAI2d,EAAqBzxB,GAEzB,GAAI0kB,GAAsB,CACxB,MAAMgN,QAAelN,KACfmN,EAAa5M,GAAoB6M,EAAAA,SAA6B7uC,EACpE,GAAI2uC,EAAQ,CACV,MAAM,KAAEztB,EAAI,SAAEtV,EAAQ,SAAEgB,GAAa+hC,EACrCD,EAAqB,OAAOhyB,EAAAA,EAAAA,GA9sBH,8BAgtBvBwE,EACA,CAAE1X,MAAO,CAAEoC,WAAUgB,YAAYgiC,eAErC,CACF,CAEA,MAAM,KAAE1rC,EAAI,SAAE+Y,IAAazC,EAAAA,EAAAA,IAAyB2V,MAEpD,GAAIuf,EAAmB9rC,OAMrB,YALA+qC,GAAgB,CACd1wB,YAAayxB,EACbR,cACAD,aAKJ,IAAK/qC,IAASgmB,GACZ,OAGF,IAAKujB,GAAmBvpC,GAAO,OAE/B,MAAM86B,EAAeppB,SAASwY,cAA8B0L,IAE5D,GAAI51B,EAAM,CACR,IAAK8pC,KAAiB,OAEtB9T,GAAY,CACV4R,YAAapX,GACbxwB,OACA+Y,WACAiyB,cACAD,WACAhc,gCAEJ,CAEI/I,IACFZ,GAAgB,CACd4lB,cACAD,aAIJrT,GAA2Bh3B,SAAUspC,EAAAA,EAAAA,MACrC/T,GAAW,CACT75B,UAAQqiB,YAAU2sB,aAAa,EAAM3F,gBAAiBzf,KAGpDvU,EAAAA,IAAUqpB,GAAgBA,IAAiBppB,SAASmE,eACtDvE,EAA8BwpB,IAIhCpd,EAAAA,EAAAA,KAAe,KACbipB,IAAe,GAEnB,IAEMiF,IAAqB1oC,EAAAA,EAAAA,IAAgB,KACb,WAAxB8wB,IAAevY,MAInBkb,GAAc,CACZv6B,UAAQwwB,IAAKoH,GAAcpH,IAAKnO,aAChC,IAGEotB,IAA+B3oC,EAAAA,EAAAA,IAAgB,KACnD06B,KACAJ,IAAoB,IAGhBsO,IAAwB5oC,EAAAA,EAAAA,IAAgB,CAC5C6oC,EAA4Bf,EAAqBpD,KAEjD,GAAImE,GAAQ,YAAaA,EAAM,CAC7B,MAAM,GAAEhvC,EAAE,QAAEivC,EAAO,SAAEjB,GAAagB,EAQlC,YAPAvV,GAAoB,CAClBz5B,KACAivC,UACAhB,cACAD,WACAnD,eAGJ,CAEA,MAAM,SAAEmD,KAAakB,GAAaF,GAAQ,CAAC,EAE3C,GAAKA,GAAyC,IAAjCvtC,OAAO8oB,KAAK2kB,GAAUvsC,OAE5B,QAA4B5C,IAAxBivC,EAAKpB,qBAAqD7tC,IAArBivC,EAAKlB,YAA2B,CAC9E,MAAM,eAAEF,GAAiB,EAAK,YAAEE,GAAc,EAAK,gBAAEI,GAAoBc,EACpET,GAAsBX,EAAgBE,EAAaE,EAAUC,EAAaC,EACjF,MACEjV,GAAY,IACP+V,EACHnE,cACAoD,qBARGO,GAAWvuC,QAAQ+tC,GAAWC,EAUrC,KAGF9D,EAAAA,EAAAA,IAAsBgF,IAAgC,IAA9BC,GAAyBD,EAC3C1b,IAAsB8C,IAAwBA,KAAyB6Y,GACzE3S,IAAiBwR,IACfc,GAAsBxY,GAAsB0X,EAAaxa,GAAmB,GAEhF,GACC,CAAC8C,GAAsB9C,GAAoBsb,GAAuBtS,MAErE16B,EAAAA,EAAAA,KAAU,KACJmxB,KACFyL,GAAmCzL,IACnCyG,MAEA8E,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAeppB,SAASqpB,eAAelF,KAC7C4F,EAAAA,EAAAA,GAAqBX,GAAc,EAAK,IAE5C,GACC,CAACjF,GAAiB5F,GAAgByG,GAAwBU,MAE7Dt4B,EAAAA,EAAAA,KAAU,KACJqxB,IAAqBzwB,SAClBwhB,GAAiBiP,IACtBuG,KACF,GACC,CAACxV,GAAkBiP,GAAqBuG,KAE3C,MAAM0V,IAA0BlpC,EAAAA,EAAAA,IAAgB,CAAC24B,EAAmBlB,KAClE,MAAM0R,EAAa,OAAQxQ,EAAMyQ,gBAAkBzQ,EAAMyQ,eAAevvC,GACnE8+B,EAAM0Q,QAAW5kB,IAAyBb,IAAkBulB,IAAenT,GAKhF0C,GAAiCC,EAAOlB,GAJtCqN,IAIgD,IAG9CwE,IAAyCtpC,EAAAA,EAAAA,IAAiB24B,IAC9DuQ,GAAwBvQ,EAAO9lB,EAAAA,IAAwB,IAGnD02B,IAAkBvpC,EAAAA,EAAAA,IAAgB,CAACwpC,EAAe3B,EAAoB4B,MACrEnc,IAAuB3C,MAIxB8D,GAAqBgb,GACvBvU,KACAoB,IAAiBwR,IACf3S,KACAyT,GAAsB,CAAEY,MAAK3B,YAAYC,EAAaxa,KACtD9S,EAAAA,EAAAA,KAAe,KACbipB,IAAc,EAAK,GACnB,MAGJ3Q,GAAY,CAAE4R,YAAapX,GAAoBkc,MAAK3B,cACpDrtB,EAAAA,EAAAA,KAAe,KACbipB,IAAc,EAAK,KAEvB,IAGIiG,IAAsB1pC,EAAAA,EAAAA,IAAgB,SAC1C/B,EACA4pC,EACA4B,GAGG,IAFHE,EAAmBzjC,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACnB0jC,EAAmC1jC,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,GAE9B0zB,IAAuB3C,MAI5B1sB,EAAU,IACLA,EACH4rC,qBAAqB,GAGnBpb,GAAqBgb,GACvBvU,KACAoB,IAAiBwR,IACf3S,KACAyT,GAAsB,CAAE3qC,UAAS4pC,YAAYC,EAAaxa,KAC1D9S,EAAAA,EAAAA,KAAe,KACbipB,GAAckG,EAAoB,GAClC,MAGJ7W,GAAY,CACV4R,YAAapX,GACbrvB,UACA4pC,WACAhc,4BAA6BA,IAA+B+d,IAE9D7W,GAAW,CAAE75B,UAAQqiB,YAAU2sB,aAAa,KAE5C1tB,EAAAA,EAAAA,KAAe,KACbipB,GAAckG,EAAoB,KAGxC,IAEMG,IAAwB9pC,EAAAA,EAAAA,IAAgB,CAC5C+pC,EAA4DlC,EAAoB4B,KAEhF,IAAKnc,KAAuB3C,GAC1B,OAGE8D,GAAqBgb,EACvBnT,IAAiBwR,IACfc,GAAsB,CACpB/uC,GAAIkwC,EAAalwC,GACjBivC,QAASiB,EAAajB,QACtBjB,YACCC,EAAaxa,GAAoB,IAGtCgG,GAAoB,CAClBz5B,GAAIkwC,EAAalwC,GACjBivC,QAASiB,EAAajB,QACtBjB,WACAnD,YAAapX,KAIjB,MAAMsK,EAAeppB,SAASwY,cAA8B0L,IACxDnkB,EAAAA,IAAUqpB,GAAgBA,IAAiBppB,SAASmE,eACtDvE,EAA8BwpB,GAGhC7E,GAAW,CAAE75B,UAAQgvC,aAAa,KAClC1tB,EAAAA,EAAAA,KAAe,KACbipB,IAAe,GACf,IAGEuG,IAAyBhqC,EAAAA,EAAAA,IAAgB,KAC7C+yB,GAAW,CAAE75B,UAAQgvC,aAAa,KAClC1tB,EAAAA,EAAAA,KAAe,KACbipB,IAAe,GACf,IAGEwG,IAAiBjqC,EAAAA,EAAAA,IAAiBkqC,IACjC5c,KAIDmB,GACF6H,IAAiBwR,IACfc,GAAsB,CAAEsB,QAAQpC,EAAaxa,GAAmB,IAElE4F,OAEAJ,GAAY,CAAE4R,YAAapX,GAAoB4c,SAC/ChX,MACF,IAGIiX,IAAanqC,EAAAA,EAAAA,IAAiBoqC,IAClC,GAAI3b,EACF6H,IAAiBwR,IACfc,GAAsB,IAAKwB,EAAgBvC,UAAU,GAAQC,EAAaxa,GAAoB,SAE3F,GAAI8c,IAAmB,mBAAoBA,GAAkB,gBAAiBA,GAAiB,CACpG,MAAM,eAAE3C,GAAiB,EAAK,YAAEE,GAAc,EAAK,gBAAEI,GAAoBqC,EACpEhC,GAAsBX,EAAgBE,GAAa,OAAM/tC,EAAWmuC,EAC3E,MACOM,IAAW,EAClB,IAGIgC,IAAuBrqC,EAAAA,EAAAA,IAAgB,KAC3C,MAAM43B,EAAeppB,SAASwY,cAA8B0L,IAE5D,IAAKhvB,GAAYk0B,IAAiBppB,SAASmE,cAIzC,OAHA4nB,KACAG,UACAE,KAIFhD,GAAc0P,OACdnnC,YAAW,KACTo6B,KACAG,KACAE,IAAgB,GAl/BgB,IAm/BD,KAGnCh/B,EAAAA,EAAAA,KAAU,KACH07B,IAELpD,GAAQ,GAAG,GACV,CAACoD,GAAmBpD,GAASrd,KAEhC,MAAMyzB,IAA2CtqC,EAAAA,EAAAA,IAAiBlD,IAChEgV,GAA0BhV,EAAM+V,EAAAA,IAAwB,IAGpD03B,IAAevqC,EAAAA,EAAAA,IAAgB,WAAiC,IAAhCy3B,EAASvxB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGysB,GAChD,MAAM+E,EAAY92B,OAAO+2B,eAEzB,GAAID,EAAUI,WAAY,CACxB,MAAMC,EAAiBL,EAAUM,WAAW,GAC5C,IAAIC,EAAAA,EAAAA,GAAuBF,EAAgBN,GAEzC,YADAjpB,SAASg8B,YAAY,UAAU,EAGnC,CAEAtW,GGzxCW,SAA6CxkB,GAC1D,MAAM+6B,EAAYj8B,SAASnS,cAAc,OACzCouC,EAAUC,gBAAkB,OAC5BD,EAAUrqC,MAAM+lC,SAAW,WAC3BsE,EAAUrqC,MAAM2J,KAAO,WACvB0gC,EAAUrqC,MAAMuqC,IAAM,WACtBF,EAAU52B,UAAYnE,EACtB+6B,EAAUrwC,UAAY,kBACtBoU,SAASE,KAAKC,YAAY87B,GAC1B,IAAIG,EAAUH,EAAUI,UAExB,GAAID,EAAQC,UAEV,KAAOD,EAAQC,WACbD,EAAUA,EAAQC,UAKtB,MAAMC,EAAaF,EAAQ75B,YAAavU,OAClCuuC,EAAQv8B,SAASw8B,cACjBtT,EAAY92B,OAAO+2B,eAGzBoT,EAAME,SAASL,EAASE,GACxBC,EAAMG,OAAON,EAASE,GACtBpT,EAAUyT,kBACVzT,EAAU0T,SAASL,GACnBv8B,SAASg8B,YAAY,UAAU,GAE/B,MAAMl6B,EAASm6B,EAAU52B,UAGzB,OAFArF,SAASE,KAAK28B,YAAYZ,GAEnBn6B,CACT,CHuvCYg7B,CAAoCviB,MAC9C,IAEMwiB,IAA8BvrC,EAAAA,EAAAA,IAAgB,KAClDuqC,GAAa13B,EAAAA,IAAwB,IAGjC24B,IAA0BxrC,EAAAA,EAAAA,IAAgB,KAC9CozB,GAAW,CACTl6B,UAAQqiB,YAAUhD,KAAM,YAAakO,mBAAmB,GACxD,KAGJ7qB,EAAAA,EAAAA,KAAU,KACJwzB,IAAsB1rB,GACxBg3B,IACF,GACC,CAACtL,GAAoBsL,GAAiBh3B,KAEzC9H,EAAAA,EAAAA,KAAU,KACHy2B,IAED/C,GACF4L,KAEA/6B,YAAW,KACTg7B,IAAa,GApiCa,KAsiC9B,GACC,CAAC7L,GAAoB6L,GAAaD,GAAc7I,IAEnD,MAAMoZ,GAAoB1gB,IAAyC,WAAxB+F,IAAevY,OAAsBiE,EAC1EkvB,IAAsB3hB,EAAAA,EAAAA,IAAgB,IACnC0hB,KAAsB1iB,OAAcwS,IAC1C,CAACkQ,GAAmB1iB,GAASwS,MAEzBoQ,GAAyBC,KAAwB7wC,EAAAA,EAAAA,KAAQ,IAC1D4yB,IAAUuZ,aACL,CAAC,eAAgBvZ,GAASuZ,cAG/BnV,IAAa8Z,aAAe9W,GACvB,CAAC,wBAAyBhD,GAAY8Z,aAGxC,IACN,CAAC9W,GAAiBpH,IAAUuZ,aAAcnV,IAAa8Z,cAEpDC,GAAqB5R,IAAqBM,IAAoBuC,IAAsBpC,IACrF+D,IAAwBK,IAA0BjE,IAAqBT,IAAwB5d,IAC/FghB,IAAwBmD,IAA4BvD,IAA4BqO,IAClF9F,IAAwB9rC,QAAQyhC,KAAyB1kB,GAAYra,OAAS,GAAK84B,GAChFyW,GAAyBD,KAAuBta,IAAwBuD,KAAoBtY,KAC5F+d,GACAwR,GAAgC7yC,IAAMk1B,SAAWl1B,IAAMm1B,mBAAqB/S,KAAagT,EAAAA,GAC1FH,GACC3zB,GAAK,oCAAqC2zB,GAAaxjB,OACvDnQ,GAAK,6CACPb,GAEJgC,EAAAA,EAAAA,KAAU,KACJkwC,GACFvZ,MAEAC,KACF,GACC,CAACsZ,GAAoBtZ,EAAQD,IAEhC,MACEz2B,aAAcmwC,GACdlwC,qBAAsBmwC,KACpBlwC,EAAAA,EAAAA,GAAkB+vC,IAChBI,KAA6B9G,KAAoB5a,GAAgBgb,QAChEhqB,IAAmBgS,IAA0B0J,IAE9CiV,IAAoBpsC,EAAAA,EAAAA,IAAgB,KACxC,OAAQqlC,IACN,KAAK5a,GAAgBib,QACnB7S,OACA,MACF,KAAKpI,GAAgB+a,KACd6C,KACL,MACF,KAAK5d,GAAgBgb,OACf0G,GACG1e,GAIO0J,IACVxD,GAAoC,CAAEz6B,YAJtCkZ,GAAiB,CACf7Q,QAAS9G,GAAK,mCAAoCtB,IAAMyR,UAM5DixB,IAAqB,GAChBT,MAEP,MAEF,KAAK3Q,GAAgB6a,KACnB5B,KACA,MACF,KAAKjZ,GAAgB8a,SAInB,GAHIhK,IACFD,MAEGhO,GACH,OAEFgJ,IAAiBwR,IACfc,GAAsB,CAAC,EAAGd,EAAaxa,GAAmB,IAKhE,IAGI2W,IAAoBvP,EAAAA,EAAAA,GAAYlY,GAAgB,GAChD6vB,GAAwB7vB,GAAkBynB,GAE1CqI,GAAuB,IAAItzB,KACjCszB,GAAqBC,WAAW,GAChCD,GAAqBE,gBAAgB,GAErC,MAAMC,GAAmB,IAAIzzB,KAC7ByzB,GAAiBC,YAAYD,GAAiBE,cAAgB,GAE9D,IAAIC,GAAsB,cAC1B,OAAQvH,IACN,KAAK5a,GAAgBib,QACnBkH,GAAsB,UACtB,MACF,KAAKniB,GAAgB6a,KACnBsH,GAAsB,sBACtB,MACF,KAAKniB,GAAgBgb,OACnBmH,GAAuBnxB,GAEnB,uBADA,sCAIR,MAAMvQ,IAAgB5O,EAAAA,EAAAA,GACpB,YACCgzB,IAAsB,QACvB2L,IAAmB,iBACnB7G,IAAa,UACbh6B,IAGIyyC,IAAuB7sC,EAAAA,EAAAA,IAAiB8sC,IAC5C,IAAIhwC,EACA+Y,EAEJ,GAAI,aAAci3B,EAChBhwC,EAAOgwC,EAAS5W,aACX,CACL,MAAMj4B,GAAUhD,EAAAA,EAAAA,MAAY+0B,aAAa70B,KAAK2xC,EAAS9J,YACvD,IAAK/kC,EACH,OAGF,IAAKA,EAAQorC,SAAW5kB,KAAyBb,GAE/C,YADAkhB,KAGF,MAAMiI,GAAqB35B,EAAAA,EAAAA,KAAyBwlB,EAAAA,EAAAA,IAAqB36B,IACzEnB,EAAOiwC,EAAmBjwC,KAC1B+Y,EAAWk3B,EAAmBl3B,QAChC,CAEAid,GAAY,CAAEh2B,OAAM+Y,WAAUm3B,YAAY,IAC1CnZ,IAAqB,IAGjBoZ,IAA2BjtC,EAAAA,EAAAA,IAAiBmmC,IAChDvS,GAAwB,CACtBsS,OAAQhtC,GACRyxB,QAASA,GACTwb,WACA+G,eAAe,GACf,IAGEC,IAAkBntC,EAAAA,EAAAA,IAAgB,KACtC,MAAM8sC,EAAW7e,QAAoBr0B,EAAYu8B,EAAAA,IACjDrC,GAAkB,CAChBoS,OAAQhtC,GACRyxB,QAASA,GACTyiB,aAAaC,EAAAA,EAAAA,IAAYn0C,GAAQyxB,IACjCmiB,YACA,IAGEQ,IAAsBttC,EAAAA,EAAAA,IAAgB,KAC1Cs2B,IAAiBwR,IACfc,GAAsB,CAAC,EAAGd,EAAaxa,GAAoB,GAC3D,IAGEigB,IAAmBvtC,EAAAA,EAAAA,IAAgB,KACvCmqC,IAAY,IAGRqD,IAAuBxtC,EAAAA,EAAAA,IAAgB,KAC3C4oC,GAAsB,CAAC,EAAG6E,EAAAA,IAAuBngB,GAAoB,IAGjEogB,IAAiC1tC,EAAAA,EAAAA,IACrC,CAACynC,EAAyBE,EAAsBI,KAC9CzR,IAAiBwR,IACfc,GAAsB,CAAEnB,iBAAgBE,cAAaI,mBAAmBD,EAAaxa,GAAoB,GACzG,IAIAqgB,IAA8B3tC,EAAAA,EAAAA,IAClC,CAACynC,EAAyBE,EAAsBI,KAC9CoC,GAAW,CAAE1C,iBAAgBE,cAAaI,mBAAkB,IAI1D6F,IAAS7yC,EAAAA,EAAAA,KAAQ,KACrB,OAAQsqC,IACN,KAAK5a,GAAgB6a,KACnB,OAAO5B,GACT,KAAKjZ,GAAgB8a,SACnB,OAAO+H,GACT,QACE,OAAOjF,GACX,GACC,CAAChD,GAAiB3B,KAEfmK,GAAkB9iB,IAAyC,aAAxB+F,IAAevY,OAAwBiE,IAC3D,IAAhBmU,KAA0B4K,GAE/B,OACEn/B,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8Q,IACb4pB,IAAmBrZ,IAAkB4W,GACpCj2B,EAAAA,GAAAC,cAAC8rB,GAAQ,CACPxI,OAAQyS,IAAkB0b,GAAAA,EAAcC,KACxCC,UAAW5b,IAAkB0b,GAAAA,EAAcG,WAAaxZ,KAAsBqZ,GAAAA,EAAcG,UAC5FC,OAAQ5b,EACRnW,aAAc6B,GACdxB,eAAgBA,IAGnByvB,IACC7vC,EAAAA,GAAAC,cAAC8xC,GAAAA,EAAgB,CACftf,aAAcA,GACduf,sBAAuBzf,GACvB0f,iBAAkBxB,GAClByB,WAAS,EACTjc,QAASA,EACTX,cAAeA,GACfjN,qBAAsBA,GACtB8pB,kBAAmB3qB,GACnBmR,gBAAiBA,GACjBnD,sBAAuBA,GACvB4c,WAAYvB,GACZ7yC,UAAW8xC,KAGf9vC,EAAAA,GAAAC,cAAC8e,GAAe,CACdjiB,OAAQA,GACRqiB,SAAUA,GACVoqB,sBAAuBA,GACvB9uB,YAAaA,GACbkS,QAASA,GACTsJ,QAASA,EACTpU,yBAA0BA,GAC1B6a,uBAAwBA,GACxBC,kBAAmBA,GACnBxL,wBAAyBA,GACzBkhB,aAAc3Z,GACd4Z,eAAgBjgB,EAChBkgB,eAAgB5Z,GAChBkE,gBAAiBA,GACjB2V,aAAcjB,GACdC,OAAQzF,GACR0G,gBAAiBnB,GACjBoB,aAAc9V,GACdpU,QAASsU,GACT6V,oBAAqB5V,GACrB6V,oBAAqB1F,GACrB2F,eAAgB1D,GAChB2D,cAAe5E,GACf9tB,eAAgBA,IAElBpgB,EAAAA,GAAAC,cAACisB,GAAS,CACR3I,OAAQgQ,GAAUhQ,OAClBwvB,OAAQxf,GAAUwf,OAClBC,kBAAmBlgB,GACnBtK,QAASsO,GACT0a,OAAQ3D,KAEToC,IACCjwC,EAAAA,GAAAC,cAACmuB,GAAkB,CACjB7K,OAAQmb,GACRuU,WAAgC,cAApBptB,GACZlC,QAASib,GACTz5B,QAAS8qC,KAGbjwC,EAAAA,GAAAC,cAACksB,GAAU,CACT5I,OAAQgb,GACR5a,QAAS8a,GACT3hC,OAAQA,GACRo2C,iBAAkB7iB,GAClBC,cAAeA,GACfjI,qBAAsBA,KAExBroB,EAAAA,GAAAC,cAACgsB,GAAc,CACb1I,OAAQ+e,GACR6Q,cAAe1Q,GACf2Q,iBAAkB5Q,GAClB7e,QAAS4e,KAEXviC,EAAAA,GAAAC,cAAC0lB,GAAkB,CACjBpC,OAAQihB,GACR1nC,OAAQA,GACRu2C,aAAc31C,QAAQi8B,IACtBpF,YAAaqQ,GACb9O,aAAcgP,GACdnY,QAASA,GACT2mB,KAAMpjB,GACN2F,mBAAoBA,GACpB11B,QAASytC,GACTjqB,QAAS+gB,KAEX1kC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,mBAAoBy4B,IAAmB,sBACpE34B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAewN,MAAM,IAAIC,OAAO,MAC7CzL,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,UACEiM,EAAE,OACFC,EAAE,SACFX,MAAM,OACNC,OAAO,SACP8nC,YAAY,oBACZ91C,GAAG,oBAEHuC,EAAAA,GAAAC,cAAA,YAAUuzC,GAAG,IAAIC,GAAG,cAAcv/B,OAAO,uBACzClU,EAAAA,GAAAC,cAAA,kBAAgByzC,aAAa,IAAID,GAAG,qBAAqBv/B,OAAO,qBAChElU,EAAAA,GAAAC,cAAA,iBACEd,OAAO,4EACPs0C,GAAG,uBAITzzC,EAAAA,GAAAC,cAAA,KAAGuK,KAAK,OAAO,YAAU,WACvBxK,EAAAA,GAAAC,cAAA,QAAM0zC,EAAE,0FAA0FnpC,KAAK,OAAOjL,OAAO,2BACrHS,EAAAA,GAAAC,cAAA,QAAM0zC,EAAE,0FAA0FnpC,KAAK,OAAOxM,UAAU,aAG3H06B,IACC14B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAC+rB,GAAgB,CACfzI,OAAQof,GACRC,MAAOC,GACPC,UAAWC,GACXM,iBAAkBA,GAClBL,SAAUC,GACVC,cAAeC,GACfO,SAAUC,GACViQ,gBAAiBpsB,GACjBqT,YAAaA,GACbxS,qBAAsBA,GACtBwrB,eAAgBnG,GAChB/pB,QAAS4f,KAEXvjC,EAAAA,GAAAC,cAAC6zC,GAAuB,CACtBtrB,QAASwhB,GACTpkB,uBAAwBloB,QAAQkoB,IAA0BxF,GAC1DtjB,OAAQA,GACRqiB,SAAUA,GACV0G,gBAAiBA,KAEnB7lB,EAAAA,GAAAC,cAAC8zC,GAAc,CACbj3C,OAAQA,GACRqiB,SAAUA,GACVwN,QAASA,GACTxH,YAAa2V,IAAuBJ,MAI1C16B,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,yBAAyBirB,EAAAA,EAAAA,GAAkB+E,MACvEwI,IACC14B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGw+B,IACCrvC,EAAAA,GAAAC,cAAC+zC,GAAa,CACZzwB,OAAQ+rB,GACR5uC,KAAMg0B,GAAch0B,KACpBykB,WAAYznB,QAAQyhC,IACpBh/B,QAASmsC,KAGZmF,IACCzxC,EAAAA,GAAAC,cAACgjB,GAAAA,EAAqB,CACpBjlB,WAAWkC,EAAAA,EAAAA,GAAe,eAAgB+9B,IAAwB,aAClEx9B,OAAK,EACL4iB,cAA0B7lB,IAAhB+2B,GACV3kB,MAAM,cACNsT,WAAYqpB,GACZ18B,UAAU,6BAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mCAGhB46B,KAAkBnI,IAAcC,KAC/B1wB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLmP,MAAM,cACNzP,QAASo+B,GAAmBE,GAAkBwP,GAC9Cp+B,UAAWxR,GAAK,sBAChBL,WAAWkC,EAAAA,EAAAA,GACT,iBACAq6B,GAA6Bn5B,SAAW,qBAG1CpB,EAAAA,GAAAC,cAAC2R,GAAAA,EAAM,CACLD,KAAM8e,IAAcC,GACpBpwB,KAAK,aAMZ46B,IAAqBL,IAAeD,KACrC56B,EAAAA,GAAAC,cAACg0C,GAAAA,EAAgB,CACfn3C,OAAQA,GACRqiB,SAAUA,GACV7X,SAAUA,EACV2uB,QAASA,EACTmI,iBAAkBA,GAClBC,eAAgBA,GAChBC,gBAAiBA,GACjB1D,gBAAiBA,GACjBC,YAAaA,GACbqZ,kBAAmBxb,GACnByb,YAAahH,GACbiH,gBAAiB9G,GACjBsF,oBAAqB9F,GACrB+F,eAAgB1E,GAChB2E,cAAep9B,GACfyoB,oBAAqBA,GACrBM,gBAAiBA,GACjB5F,mBAAoBA,GACpBmC,kBAAmBE,GACnBmZ,iBAAkB/d,GAClBge,SAAUn4B,EACVo2B,eAAgB5Z,KAGpB34B,EAAAA,GAAAC,cAACs0C,GAAAA,EAAY,CACXxvC,IAAK6yB,GACLn6B,GAAI+4B,GACJD,gBAAiBA,GACjBie,kBAAmBr4B,EACnBs4B,aAAc9b,GACd77B,OAAQA,GACRk+B,kBAAmBE,GACnB/b,SAAUA,GACV8W,QAASA,EACT94B,UAAWu9B,GACX/N,QAASA,GACT+nB,YACEvV,IAAwB5G,IA99CG,IA+9CvB,GACE2C,GAEA78B,GAAK,kCADJg1B,IAA0BgD,IAAoBh4B,GAAKuxC,IAAiC,WAG7FJ,qBAAsBA,GACtBD,wBAAyBA,GACzBoF,kBAAmBlR,GACnBmR,aAAc3e,GAAW9E,KAA4BuJ,IAAkBhC,GACvEmc,oBAAqBna,GACrBoa,oBAAqBxtC,GAAY82B,GACjC2W,4BAA6BpU,IAAsB2B,IAAwBK,GAC3EqS,SAAUld,GACV0Z,OAAQA,GACRyD,kBAAmB3W,GACnBnI,QAASgD,GACT/C,OAAQgD,KAETV,IACC14B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGwjB,IAAsB32B,QAAQmlC,KAC7B7iC,EAAAA,GAAAC,cAACi1C,GAAAA,EAAO,CAACtlC,MAAM,SAEhBwjB,IACCpzB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLmrB,OAAK,EACL5tB,UAAU,mBACV4R,MAAM,cACNzP,QAASivC,GACTv/B,UAAU,2BAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,wBAGhBN,QAAQqyB,MAA0BoP,KAAyB/e,GAC1DpgB,EAAAA,GAAAC,cAACgjB,GAAAA,EAAqB,CACpBjlB,UAAW8/B,GAAoB,YAAc,GAC7Cr9B,OAAK,EACLmP,MAAM,cACNsT,WAAY6a,GACZluB,UAAU,6BAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,4BAKpBmhC,IAAwBzhC,QAAQ0hC,KAC/Bp/B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,oBACbm3C,EAAAA,EAAAA,IAA0B/V,GAAoBG,GAAmBn+B,UAGtEpB,EAAAA,GAAAC,cAACm1C,GAAU,CACTt4C,OAAQA,GACRqiB,SAAUA,GACViB,eAAgBA,EAChBD,oBAAqBoZ,GACrBna,iBAAkB+f,GAClB9f,eAAgBA,GAChBC,eAAgBA,GAChBC,cAAeA,GACfC,cAAeA,GACfC,iBAAkBA,GAClBC,cAAeA,GACfK,aAAc6B,GACd1B,aAAc2W,GACdhX,YAAawS,EACb1S,WAAY+Y,GAAkB/Y,QAAaniB,EAC3CoiB,SAAUiV,GACV/U,uBAAwBA,GACxB5a,MAAOA,GACP8a,WAAYqZ,GACZpZ,YAAaqZ,KAEdZ,IAAmBh7B,QAAQqyB,KAC1B/vB,EAAAA,GAAAC,cAACo1C,GAAe,CACd/mC,UAAWyhB,GACXxM,OAAQua,GACRna,QAASqa,KAGZtF,IAAmBnE,IAClBv0B,EAAAA,GAAAC,cAACskB,GAAc,CACbhB,OAAQ0a,GACR1J,YAAaA,GACb5Q,QAASwa,KAGbn+B,EAAAA,GAAAC,cAACq1C,GAAAA,EAAkB,CACjBC,IAAM,wBAAuBhf,KAC7Bz5B,OAAQA,GACRymB,OAAQ0d,GACR2R,oBAAqBzR,GACrB7J,qBAAsBA,GACtB3T,QAASud,KAEXlhC,EAAAA,GAAAC,cAACmsB,GAAc,CACbmpB,IAAM,mBAAkBhf,KACxBz5B,OAAQA,GACRqiB,SAAUA,GACVoE,OAAQ8d,GACR+S,gBAAiB9G,GACjB3pB,QAAS2d,KAEXthC,EAAAA,GAAAC,cAACu1C,GAAAA,EAAY,CACXD,IAAM,iBAAgBhf,KACtBhT,OAAQod,GACR8U,OAAQ5U,GACRjN,aAAckN,GACd7J,eAAgBA,GAChBK,qBAAsBA,GACtBwb,cAAe/R,GACf6R,oBAAqB7R,GACrBpd,QAASid,OAIdlL,IAAuByJ,IACtBn/B,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLxC,WAAWkC,EAAAA,EAAAA,GAAe,YAAas/B,IAAqB,UAC5D/+B,OAAK,EACLmP,MAAM,YACNC,UAAWxR,GAAK,oCAChB8B,QAASu/B,IAET1/B,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAK,cACXjQ,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAK,gBAGdkvB,IACCn/B,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLmP,MAAM,SACN5R,UAAU,SACVmC,QAAS8+B,GACTpvB,UAAU,0BAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGhB26B,KAAoBwG,IACnBn/B,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLzC,UAAU,wBACV4R,MAAM,YACNzP,QAAS4wC,GACTtlB,cAAeie,GACfgM,YAAa9L,GACb/5B,UAAWxR,GAAK,gBAChB0G,IAAK8yB,IAEJhG,IACC7xB,EAAAA,GAAAC,cAAC01C,GAAAA,EAAqB,CACpBJ,IAAK,eAAgB1jB,GAAoBA,GAAkB+U,WAAa/U,GAAkBiI,SAC1FkX,aAAaC,EAAAA,EAAAA,IAAYn0C,GAAQyxB,IACjCmiB,SAAU7e,GACV+jB,eAAgB/b,OAGjBhI,IAAqBgI,KACtB75B,EAAAA,GAAAC,cAAA,KACEjC,WAAWkC,EAAAA,EAAAA,GACT,OACA,aACA25B,IAA4B,wBAE9B,oBAKR75B,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLuE,IAAKu6B,GACL7+B,OAAK,EACLmP,MAAM,YACN5R,WAAWkC,EAAAA,EAAAA,GACT+oC,GACA,eACChT,GAAW,YACZkJ,IAAwB,aAE1B9b,SAAU0sB,GACV8F,oBAAkB,EAClBC,aAAW,EACXjmC,UAAWxR,GAAKmyC,IAChBrwC,QAAS6vC,GACTvkB,cACEwd,KAAoB5a,GAAgB+a,MAAQG,GAAwB5f,QAAoBnsB,GAG1FwC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,6BACZy4B,IAAaz2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAC1B06B,IAAmB14B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBAChC06B,IAAmB14B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAElCurC,IACCvpC,EAAAA,GAAAC,cAAC81C,GAAAA,EAAc,CACbxyB,OAAQimB,GACRwM,YAAatd,KAAoB8G,GACjC5M,uBAAwBA,IAA2B4M,GACnDgT,aAAehrB,QAAoChqB,EAAnB2zC,GAChC8E,eAAiB5jB,OAA0C70B,EAAtB0zC,GACrCgF,iBAAkB9E,GAClBztB,QAASiG,GACThG,oBAAqBiG,GACrB+pB,gBAAiBpsB,KAGpB2S,GACG,I,wII/4DV,MAiMA,GAAez9B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA0C,IAAxC,KAAEvC,EAAI,cAAEo5C,GAAe72C,EAC9B,MAAM82C,GAAgBvnB,EAAAA,EAAAA,IAAS9xB,EAAKU,IAC9B+pB,GAAiBC,EAAAA,EAAAA,KAAqB7qB,EAAQG,EAAKU,IACnD2zB,EAAOglB,IAAiBjmB,EAAAA,EAAAA,KAAWvzB,GAAQy5C,EAAAA,EAAAA,IAAqBt5C,IAChEu5C,EAAQllB,IAAQmlB,EAAAA,EAAAA,IAAUnlB,KAAUr0B,EAAKy5C,UACzCC,EAAmBL,IAAkB5uB,IAAmB8uB,IAAUH,EAClEO,EAAcN,GAChBO,EAAAA,EAAAA,KAAuBxmB,EAAAA,EAAAA,KAAWvzB,GAAQy5C,EAAAA,EAAAA,IAAqBt5C,UAC/DS,EAEJ,MAAO,CACL44C,gBACA5uB,iBACA8uB,QACAxjB,WAAWC,EAAAA,EAAAA,IAAch2B,GACzB65C,cAAcC,EAAAA,EAAAA,IAAiB95C,GAC/B+5C,cAAcxc,EAAAA,EAAAA,IAAiBv9B,GAC/BkzB,cAAerzB,EAAOqzB,cACtBwmB,kBACAC,cACD,GArBe/5C,EAjM+BoB,IAe7C,IAf8C,OAClDwlB,EAAM,KACNxmB,EAAI,cACJo5C,EAAa,UACbrjB,EAAS,cACTsjB,EAAa,eACb5uB,EAAc,MACd8uB,EAAK,aACLM,EAAY,aACZE,EAAY,cACZ7mB,EAAa,gBACbwmB,EAAe,YACfC,EAAW,QACX/yB,EAAO,oBACPC,GACD7lB,EACC,MAAM,aACJg5C,EAAY,cACZC,EAAa,mBACbC,EAAkB,cAClBC,EAAa,eACbC,EAAc,UACdC,IACEh5C,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KACP+4C,GAAYC,EAAAA,EAAAA,IAAaj5C,EAAMtB,GAE/Bw6C,GAAqB/4C,EAAAA,EAAAA,KAAY,KACrCw4C,EAAc,CAAEl6C,OAAQC,EAAKU,GAAI+5C,oBAAoB,IAErD7zB,GAAS,GACR,CAAC5mB,EAAKU,GAAIkmB,IAEP8zB,GAAsBj5C,EAAAA,EAAAA,KAAY,KACtCw4C,EAAc,CAAEl6C,OAAQC,EAAKU,GAAI+5C,oBAAoB,IACrDJ,EAAU,CAAEM,OAAQ36C,EAAKU,KAEzBkmB,GAAS,GACR,CAAC5mB,EAAKU,GAAIkmB,IAEPg0B,GAAmBn5C,EAAAA,EAAAA,KAAY,KAC/B23C,EACFc,EAAmB,CAAEn6C,OAAQC,EAAKU,KACzB24C,EACTY,EAAc,CAAEl6C,OAAQC,EAAKU,GAAI+5C,oBAAoB,IAC5CZ,GACTO,EAAe,CAAEr6C,OAAQC,EAAKU,GAAIi6C,OAAQznB,IAC1C+mB,EAAc,CAAEl6C,OAAQC,EAAKU,GAAI+5C,oBAAoB,MAC3C1kB,IAAagkB,GAAkB/5C,EAAK66C,WAEpC9kB,GAAagkB,IAAiB/5C,EAAK66C,WAC7CV,EAAc,CAAEp6C,OAAQC,EAAKU,KAF7Bs5C,EAAa,CAAEj6C,OAAQC,EAAKU,KAI9BkmB,GAAS,GACR,CACDyyB,EACAQ,EACA9jB,EACAgkB,EACA7mB,EACAlzB,EAAK66C,UACL76C,EAAKU,GACL04C,EACAxyB,IAGIk0B,GAAkBr5C,EAAAA,EAAAA,KAAY,KAC9Bs0B,GAAagkB,GACfC,EAAa,CAAEj6C,OAAQC,EAAKU,KAC5BkmB,KAEAg0B,GACF,GACC,CAAC56C,EAAKU,GAAIk6C,EAAkB7kB,EAAWgkB,EAAcC,EAAcpzB,IAgFtE,OACE3jB,EAAAA,GAAAC,cAAC63C,EAAAA,EAAK,CACJv0B,OAAQA,EACRvlB,UAAU,kBACV+5C,OAhFA/3C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAe0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACtDwC,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACLtR,KAAK,OACLqR,KAAM5U,EACN62C,gBAAiBpsB,IAEnBxnB,EAAAA,GAAAC,cAAA,MAAIjC,UAAU,eAAeK,EAM7B83C,EACK3uB,EAAiB,2BAA6B,2BAGnDsL,IAAc/1B,EAAK66C,UACd,eAGL9kB,GAAa/1B,EAAK66C,UACb,gBAGLhB,GAAgBE,EACX,mBAGF,oBAqDLnzB,QAASA,EACTC,oBAAqBA,GAlDnBuyB,EAEAn2C,EAAAA,GAAAC,cAAA,UACGoP,EAAAA,EAAAA,GACCmY,EAAiBnpB,EAAK,8BAAgCA,EAAK,4BAA6Bg5C,GACxF,CAAC,kBAAmB,WAKxBvkB,GAAa/1B,EAAK66C,UAElB53C,EAAAA,GAAAC,cAAA,UACGoP,EAAAA,EAAAA,GAAWhR,EAAK,2CAA4Cg5C,GAAY,CAAC,kBAAmB,WAK9FvkB,IAAc/1B,EAAK66C,WAAchB,GAAgBE,EAC7C92C,EAAAA,GAAAC,cAAA,UAAIoP,EAAAA,EAAAA,GAAWhR,EAAK,4BAA6Bg5C,GAAY,CAAC,kBAAmB,WAGnFr3C,EAAAA,GAAAC,cAAA,UAAIoP,EAAAA,EAAAA,GAAWhR,EAAK,kCAAmCq4C,GAAc,CAAC,kBAAmB,WA+B9F12C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACZs4C,IAAUH,GACTn2C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACoP,MAAM,SAAS5R,UAAU,wBAAwBg6C,QAAM,EAAC73C,QAASs3C,GACtEp5C,EAAK,kBAGTo4C,GACCz2C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACoP,MAAM,SAAS5R,UAAU,wBAAwBg6C,QAAM,EAAC73C,QAASo3C,GACtEb,GAAcrnC,EAAAA,EAAAA,GAAWhR,EAAK,6BAA8Bq4C,IAAgBr4C,EAAK,kBAGpF+3C,GAAiBr5C,EAAK66C,YAAczB,GACpCn2C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACoP,MAAM,SAAS5R,UAAU,wBAAwBg6C,QAAM,EAAC73C,QAASw3C,GACtEt5C,EAAK,iBAGV2B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLoP,MAAM,SACN5R,UAAU,wBACVg6C,QAAM,EACN73C,QAAUi2C,GAAiBD,EAAiBwB,EAAmBE,GAE9Dx5C,EAjDH83C,EACK,SAGLrjB,IAAc/1B,EAAK66C,UACd,eAEL9kB,GAAa/1B,EAAK66C,UACb,oBAGLhB,GAAgBE,EACX,mBAGFL,EAAkB,gCAAkC,WAoCvDz2C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACxC,UAAU,wBAAwBg6C,QAAM,EAAC73C,QAASwjB,GAAUtlB,EAAK,YAErE,I,gMCzLZ,MACM45C,EAAiB,IAAIl1C,IAAI,CAAC,MAAO,SA8JvC,GAAerG,EAAAA,EAAAA,KA5JgBqB,IAkBzB,IAlB0B,QAC9BoH,EAAO,oBACP+yC,EAAmB,QACnBC,EAAO,YACPC,EAAW,sBACXC,EAAqB,eACrBhzC,EAAc,SACdizC,EAAQ,SACRC,EAAQ,UACRv6C,EAAS,OACTipB,EAAM,WACNvhB,EAAU,aACVD,EAAY,mBACZ+yC,EAAkB,cAClB7yC,EAAa,eACbY,EAAc,aACdkyC,EAAY,YACZjyC,GACDzI,EACC,MAAM,2BAAE0I,EAA0B,qBAAEC,EAAoB,iBAAEgyC,IAAqBt6C,EAAAA,EAAAA,MAGzE2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7BvC,GAAOC,EAAAA,EAAAA,MACNq6C,EAAiBC,EAAeC,IAAkB73C,EAAAA,EAAAA,MAClD83C,EAAuBC,IAA4BrxC,EAAAA,EAAAA,KAAS,GAE7D0K,EAAWjN,EAAQ0B,QAAQuL,WAAa4mC,EAAAA,EAAAA,IAA0B7zC,IAElE,SAAEsJ,EAAQ,KAAEnO,EAAI,UAAE24C,GAAc7mC,EAChC8mC,GAAYC,EAAAA,EAAAA,IAAqB/mC,IAAa,GAE9CgnC,GAAiBC,EAAAA,EAAAA,IAAkBt0C,EAAKmzC,IACvCoB,EAAgBC,IAAmBv4C,EAAAA,EAAAA,MAC1CxB,EAAAA,EAAAA,KAAU,KACJ45C,GACFG,GACF,GACC,CAACH,EAAgBG,IAGpB,MAAOC,EAAeC,IAAoB/xC,EAAAA,EAAAA,IACxC0wC,KAAiBC,GAAyB/3C,GA9CzB,QA8CiC+3C,IAG9CqB,EAAiBh8C,QAAQiI,GAAkB6zC,GAAiBF,GAE5DK,IAAe9xC,EAAAA,EAAAA,IAAoB1C,EAAS,aAC1CoD,aAAcC,GAAgB,UAAEH,KAAcI,EAAAA,EAAAA,GACpDkxC,IAAeD,GAAgBpxC,EAAAA,EAAAA,IAAsBnD,EAAS,iBAAa3H,GAAW,GAElFI,GAAWF,QAAQ2K,KAEnB,YACJ0E,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACF/H,EACAE,GAAkBmD,GAClBkxC,IAAmB97C,QACAJ,IAAnB6H,GAGIu0C,IAAaC,EAAAA,EAAAA,IAAsBznC,GACnCnQ,GAAe23C,IAAaE,EAAAA,EAAAA,IAA4B30C,QAAW3H,EACnEu8C,GAAeH,GAAaxnC,EAAS/P,oBAAiB7E,EACtDw8C,IAAc13C,EAAAA,EAAAA,IAASuF,EAAAA,EAAAA,IAAoB1C,EAAS,cAAei0C,GAEnEa,GAAkBxB,GAAgB/6C,QAAQ0U,EAAS8nC,aACvD73B,EAAAA,IAA8B9e,IAAI6O,EAAS+nC,WAAa/3B,EAAAA,IAA8B7e,IAAI6O,EAAS+nC,WAG/FC,IAAiBx2C,EAAAA,EAAAA,IAAgB,KACrC8C,EAAqB,CAAEvB,WAAU,IAG7Bk1C,IAAcz2C,EAAAA,EAAAA,IAAgB,KAC9BmJ,GACExG,GACFA,IAKAZ,EACFc,EAA2B,CAAEtB,YAI3B6H,GACFysC,GAAiB,GAIfQ,GACFxB,IAIER,EAAe10C,IAAI21C,IAAcV,EACnCI,IAIFwB,IAAgB,IAGZE,IAAmB12C,EAAAA,EAAAA,IAAgB,KACvC80C,EAAiB,CAAEF,oBAAqBM,IACxCD,IACAuB,IAAgB,IAGZhsC,IAAkBxK,EAAAA,EAAAA,IAAgB,KACtC4C,EAAarB,EAAQ1H,GAAI0H,EAAQrI,OAAO,IAG1C,OACEkD,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACyiB,EAAAA,EAAI,CACH3d,IAAKA,EACLkL,KAAMxB,EACNyqC,UAAWA,EACX54C,KAAMA,EACN24C,UAAWX,EAAWC,GAAYU,OAAYz7C,EAC9C+8C,iBAAkBt4C,GAClB+3C,YAAaD,IAAgBC,GAC7B7B,QAASA,EACTnrC,eAAgBA,GAChBD,YAAaA,GACbE,iBAAkBA,GAClBjP,UAAWA,EACXipB,OAAQA,EACRxhB,aAAcA,EACdC,WAAYA,EACZ80C,WAAYP,IAAmBQ,EAAAA,EAAAA,IAAuBt1C,GAAW,OAAS,MAAS,WACnFhF,QAASk6C,GACT7zC,YAAaA,EAAc4H,QAAkB5Q,IAE/CwC,EAAAA,GAAAC,cAACy6C,EAAAA,EAAa,CACZn3B,OAAQo1B,EACRh1B,QAASk1B,EACT8B,eAAgBL,IAEfj8C,EAAK,0BACN2B,EAAAA,GAAAC,cAAC26C,EAAAA,EAAQ,CACP58C,UAAU,kBACV68C,QAAS/B,EACTgC,MAAOz8C,EAAK,2BACZ08C,QAAShC,KAGZ,G,kFC/LP,MAUA,EAVmCh7C,IAA4B,IAA3B,QAAE8I,EAAO,UAAE7I,GAAWD,EACxD,MAAMM,GAAOC,EAAAA,EAAAA,KACb,OACE0B,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBlC,GAAY0D,IAAKrD,EAAKsD,MAAQ,MAAQ,SACnF0N,EAAAA,EAAAA,GAAWxI,GACZ7G,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,aACX,C,gMCyBX,MAiIA,GAAetB,EAAAA,EAAAA,KAjIYqB,IAmBrB,IAnBsB,IAC1BgH,EAAG,KACHkL,EAAI,KACJ3P,EAAI,UACJ44C,EAAY,GAAE,UACdD,EAAS,OACThyB,EAAM,iBACNszB,EAAgB,YAChBP,EAAW,UACXh8C,EAAS,QACTm6C,EAAO,eACPnrC,EAAc,YACdD,EAAW,aACXtH,EAAY,WACZC,EAAU,iBACVuH,EAAgB,WAChButC,EAAU,QACVr6C,EAAO,YACPqG,GACDzI,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAI08C,GAAap6C,EAAAA,EAAAA,IAAuB,MACpCmE,IACFi2C,EAAaj2C,GAGf,MAAM,SAAEuC,IAAaC,EAAAA,EAAAA,OACd0zC,IAAavzC,EAAAA,EAAAA,KAAUsyC,GACxBkB,EAAUx9C,QAAQs8C,GAClBmB,GAAWC,EAAAA,EAAAA,GAAcb,EAAkBW,EAAS5zC,IAAa+zC,EAAAA,IACjEn4C,GAAkBC,EAAAA,EAAAA,IAAoB+3C,IAG1Cx7C,aAAc47C,EACd37C,qBAAsByN,IACpBxN,EAAAA,EAAAA,GAAkBoN,OAAgBxP,GAAW,GAE3CoS,GAAQ2rC,EAAAA,EAAAA,IAAsBrC,GAC9BsC,GAAa5qC,EAAAA,EAAAA,IAAkBtQ,GAC/Bm7C,GAAW98C,EAAAA,EAAAA,KAAQ,IAClBqO,GAAmBC,EAChB,IAAE2D,EAAAA,EAAAA,IAAkBtQ,EAAO2M,QAAuBuuC,IADTA,GAEhD,CAACxuC,EAAgB1M,EAAMk7C,EAAYvuC,KAEhC,MAAEzB,EAAK,OAAEC,IAAWiwC,EAAAA,EAAAA,IAA+BvD,GAEnDrpC,GAAgB5O,EAAAA,EAAAA,GACpB,OACAlC,EACAm6C,GAAW,UACXh4C,IAAY4M,GAAe,cAC3BrH,GAAc,oBAGhB,OACE1F,EAAAA,GAAAC,cAAA,OAAK8E,IAAKi2C,EAAYh9C,UAAW8Q,EAAepN,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACvEiI,GACCzF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZ0H,GAAc1F,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGhCgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,sBAAsBmC,QAAS4M,OAAcvP,EAAY2C,GACrEo6C,GAAoBP,EACnBh6C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,4BACbgC,EAAAA,GAAAC,cAAA,OACEiE,IAAK81C,EACLh8C,UAAU,aACVwN,MAAOA,EACPC,OAAQA,EACRrH,WAAW,EACXyU,IAAI,KAELoiC,GACCj7C,EAAAA,GAAAC,cAAA,UACE8E,IAAKo2C,EACLn9C,WAAWkC,EAAAA,EAAAA,GAAe,YAAa,oBAAqBgD,MAKlElD,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,aAAY4R,KAC1BspC,EAAU94C,QAAU,GACnBJ,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAAW0D,IAAI,QAAQw3C,IAI5CoC,GACCt7C,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiB0P,EAAOxC,IACrDpN,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CACdhF,SAAU4B,EACV3M,KAAM63C,EAAU,IAAM,IACtBh4C,QAAS4M,EAAc5M,OAAU3C,KAItC2C,GACCH,EAAAA,GAAAC,cAAA,KACEjC,WAAWkC,EAAAA,EAAAA,GACT,cACA,OACAs6C,EAAc,QAAOA,IAAe,gBACpCc,GAAuB,aAK/Bt7C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aAAa0D,IAAI,OAAO8M,MAAOyB,IAAOZ,EAAAA,EAAAA,GAAWY,IAChEjQ,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBAAgB0D,IAAI,QACjC1B,EAAAA,GAAAC,cAAA,YACGw7C,GAEFx0B,GAAUjnB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAeqR,EAAAA,EAAAA,GAAW4X,KACnDA,GAAUvpB,QAAQu7C,IAClBj5C,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAChBgC,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAACnP,QAASqG,IAAcsK,EAAAA,EAAAA,IAAoBzS,EAAkB,IAAZ46C,GAAkB,OAKhFhyB,GAAUvpB,QAAQu7C,IACjBj5C,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAACnP,QAASqG,IAAc+I,EAAAA,EAAAA,IAAoBlR,EAAkB,IAAZ46C,IAErD,G,iOCpIV,MAAM0C,EAAkB,IAAMC,EAAAA,EAgP9B,GAAel/C,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAuC,IAArC,OAAExC,EAAM,SAAEqiB,GAAU7f,EAC3B,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1B++C,EAAa18B,GAAW28B,EAAAA,EAAAA,KAAiBl/C,EAAQE,EAAQqiB,QAAY3hB,EACrEu+C,EAAch/C,GAAOi/C,EAAAA,EAAAA,KAAsBp/C,EAAQG,QAAQS,EAC3Dy+C,EAAoBv+C,SAAQw+C,EAAAA,EAAAA,KAAmBt/C,EAAQE,IACvDq/C,EAAQh9B,EAAWpiB,GAAMq/C,SAASj9B,QAAY3hB,EAIpD,MAAO,CACLT,OACA8+C,aACAE,cACAI,QACAF,oBACAI,cAToBF,IAASG,EAAAA,EAAAA,KAA0B1/C,EAAQE,EAAQqiB,GAUvEm0B,MATWnjB,EAAAA,EAAAA,KAAWvzB,EAAQA,EAAOqzB,eAUtC,GAlBetzB,EAzM6BoB,IA6B3C,IA7B4C,aAChDw+C,EAAY,UACZv+C,EAAS,WACTw+C,EAAU,WACVC,EAAa,SAAQ,SACrBC,EAAQ,OACRC,EAAM,SACNC,EAAQ,gBACR3C,EAAe,aACf5G,EAAY,aACZwJ,EAAY,mBACZC,EAAkB,aAClBC,EAAY,WACZlB,EAAU,MACVmB,EAAK,KACLjgD,EAAI,YACJg/C,EAAW,kBACXE,EAAiB,MACjBE,EAAK,cACLE,EAAa,iBACbY,EAAgB,UAChBC,EAAS,kBACTC,EAAiB,cACjBC,EAAa,gBACbC,EAAe,cACflH,EAAa,KACb7C,EAAI,QACJnzC,EAAO,mBACPm9C,GACDv/C,EACC,MAAM,aACJw/C,EAAY,gBACZC,EAAe,kBACfC,IACEr/C,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPw4C,EAAe/5C,IAAQu9B,EAAAA,EAAAA,IAAiBv9B,GACxC2gD,EAAUhgD,QAAQX,GAAMk1B,SAAW4pB,GAAcM,IAC/C1+C,GAAIX,EAAM,MAAE6gD,EAAK,aAAEC,GAAiB7gD,GAAQ,CAAC,GAErDyC,EAAAA,EAAAA,KAAU,KACJ1C,IAAW6gD,IACTd,GAAcU,EAAa,CAAEzgD,WAC7Bm9C,GAAiBwD,EAAkB,CAAEI,UAAW/gD,IACtD,GACC,CAACA,EAAQ6gD,EAAOd,EAAcU,EAAcE,EAAmB3G,EAAcmD,IAEhF,MAAM6D,IAAyBl6C,EAAAA,EAAAA,IAC7B,CAAC8J,EAAiDqwC,KAC5ChhD,GAAQghD,IACVrwC,EAAEM,kBACFwvC,EAAgB,CACdQ,cAAejhD,EAAKU,GACpBwgD,QAAS,EACT34C,OAAuB,UAAfm3C,EAAyByB,EAAAA,GAAkBC,cAAgBD,EAAAA,GAAkBE,qBAEzF,IAIEC,IAAe1/C,EAAAA,EAAAA,KAAQ,IAAM5B,GAAQs2C,IAAgBiL,EAAAA,EAAAA,IAAgBvhD,IAAO,CAACA,EAAMs2C,IAEzF,GAAKt2C,EA+DL,OACEiD,EAAAA,GAAAC,cAAA,OACEjC,WACEkC,EAAAA,EAAAA,GAAe,WAAYlC,GAE7B0D,KAAMs7C,GAAS3+C,EAAKsD,MAAQ,WAAQnE,EACpC2C,QAASA,IAEPu8C,IAAagB,GACb19C,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGslC,GAAiB7C,GAChBtzC,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL2jC,IAAI,iBACJj1C,KAAMm8C,EACN9qC,KAAM2hC,EACNM,iBAAe,EACf51C,UAAU,wBAGdgC,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL2jC,IAAKx4C,EAAKU,GACVO,WAAWkC,EAAAA,EAAAA,GAAei2C,GAAiB,kBAC3C71C,KAAMm8C,EACN9qC,KAAM5U,EACNmgD,UAAWA,EACXC,kBAAmBA,EACnBoB,gBAAgB,cAChBpI,cAAeA,EACfh2C,QAAS85C,EAAkB6D,QAAyBtgD,KAIzDkgD,GACC19C,EAAAA,GAAAC,cAACu+C,EAAAA,EAAS,CACRrC,MAAOA,EACPn+C,UAAU,oBACVsC,KAAMq7C,IAGV37C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACZm+C,EACGn8C,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,UAAU,aAAYqR,EAAAA,EAAAA,GAAW8sC,EAAM3tC,QAEtDxO,EAAAA,GAAAC,cAACw+C,EAAAA,EAAa,CACZ9sC,KAAM5U,EACNsgD,gBAAiBA,EACjBqB,iBAAkBtB,EAClBjH,cAAeA,EACfmH,mBAAoBA,KAGxBL,GA9GR,WACE,GAAIN,EACF,OAAOC,EACL58C,EAAAA,GAAAC,cAAC0+C,EAAAA,EAAY,CAAC3gD,UAAU,SAAS6I,QAAS81C,IAE1C38C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC1B86C,GAAcx8C,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UAAU,cAAciS,KAAMusC,KAClDntC,EAAAA,EAAAA,GAAWstC,IAKlB,GAAIG,IAAuBb,IAAsB2B,EAC/C,OACE59C,EAAAA,GAAAC,cAAC0+C,EAAAA,EAAY,CAAC3gD,UAAU,SAAS6I,QAASxI,EAAK,cAInD,IAAKtB,EACH,OAGF,GAAIw/C,EACF,OAAOv8C,EAAAA,GAAAC,cAAC2+C,EAAAA,EAAY,CAACrC,aAAcA,IAGrC,GAAImB,EACF,OACE19C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC3B1B,EAAAA,GAAAC,cAAC4+C,EAAAA,GAAU,CACT5uC,KAAK,OACL6uC,qBAAmB,EACnBC,eAA6BvhD,IAAlB6+C,EAA8B,EAAI,EAC7Cr+C,UAAU,iCAESR,IAAlB6+C,GAA+Bh+C,EAAK,WAAYg+C,EAAe,OAMxE,GAAIU,EACF,OACE/8C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAAQrD,GAAK2gD,EAAAA,EAAAA,IAAkBjiD,KAIhE,MAAMkiD,EAqEV,SAAwB5gD,EAActB,GACpC,MAAMmiD,EAAiB7gD,GAAK2gD,EAAAA,EAAAA,IAAkBjiD,KACxC,aAAEoiD,GAAiBpiD,EAEzB,OAAIA,EAAK6gD,aACmB,YAAnBsB,EAA+B,0BAA4B,wBAG/DC,EAKD9gD,EADsB,YAAnB6gD,EACE,cACA,UADeC,EAAc,KAJ7BD,CAMX,CApFwBE,CAAe/gD,EAAMtB,GACnCsiD,EAAetD,EAAe,KAAI19C,EAAK,cAAe09C,EAAa,YAASv+C,EAElF,OACEwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UACbqgD,IAAgBr+C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,qBAAqBqgD,IACtDr+C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgBihD,GAC/BI,GAAgBr/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,iBAAiBqhD,GAGxD,CAqD4BC,IAEpB,I,gFC/OV,MAgBA,GAAe5iD,EAAAA,EAAAA,KAhBuBqB,IAA4C,IAA3C,QAAEoH,EAAO,eAAEo6C,EAAc,UAAEC,GAAWzhD,EAC3E,MAAMM,GAAOC,EAAAA,EAAAA,KAEPmhD,EAAiBD,GAAaA,EAAYr6C,EAAQI,KACxD,OACEvF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACZuhD,IAAmBE,GAClBz/C,EAAAA,GAAAC,cAACy/C,EAAAA,EAAqB,CAAC/C,OAAQ4C,IAEjCv/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SACbuR,EAAAA,EAAAA,IAAoBlR,EAAoD,KAA7CohD,EAAiBD,EAAYr6C,EAAQI,QAE/D,G,gKC9BV,MC0HA,GAAe7I,EAAAA,EAAAA,KAhGkBqB,IAO3B,IAP4B,MAChCyQ,EAAK,KACLif,EAAI,WACJtI,EAAU,UACVnnB,EAAS,UACT2hD,EAAS,SACTC,GACD7hD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,iBAAE0X,EAAgB,kBAAE6pC,IAAsBzhD,EAAAA,EAAAA,OAE1C,SAAEkJ,IAAaC,EAAAA,EAAAA,MAEfu4C,GAAcF,EAEdG,GAAWn8C,EAAAA,EAAAA,IAAgB,MAC/Bo8C,EAAAA,EAAAA,IAAoBvyB,GACpBzX,EAAiB,CACf7Q,QAAS9G,EAAK,eACd,IAGE4hD,GAAkBr8C,EAAAA,EAAAA,IAAgB,KAClCuhB,GACJ46B,GAAU,IAGNG,GAAct8C,EAAAA,EAAAA,IAAgB,KAClCi8C,EAAkB,CAAEn/C,KAAM,CAAEA,KAAM+sB,IAAS,IAGvC0yB,GAAyExhD,EAAAA,EAAAA,KAAQ,IAC9EW,IAAA,IAAC,UAAE8gD,EAAS,OAAE78B,GAAQjkB,EAAA,OAC3BU,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLkP,QAASrI,EACThH,KAAK,UACLsP,MAAM,cACN5R,UAAWulB,EAAS,SAAW,GAC/BpjB,QAASigD,EACTvwC,UAAWxR,EAAK,sBAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACN,GAEV,CAACsJ,EAAUjJ,IAEd,OACE2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,GACdgC,EAAAA,GAAAC,cAAA,KAAGjC,UD3EmG,YC4EnGK,EAAKmQ,GAAS,0BAEjBxO,EAAAA,GAAAC,cAAA,OAAKjC,UD9EmB,YC+EtBgC,EAAAA,GAAAC,cAAA,SACEjC,WAAWkC,EAAAA,EAAAA,GAAe,eDhFa,YCiFvCmgD,MAAO5yB,EACP6yB,UAAQ,EACRngD,QAAS8/C,IAEVH,EACC9/C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLoP,MAAM,cACN5R,UDxF6E,WCyF7EsC,KAAK,UACLG,OAAK,EACL4iB,SAAU8B,EACVhlB,QAAS8/C,GAETjgD,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,UAGbjQ,EAAAA,GAAAC,cAACsgD,EAAAA,EAAY,CACXviD,UDlG2D,WCmG3DwiD,QAASL,EACT18B,UAAU,SAEVzjB,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAACC,KAAK,OAAOhkB,QAAS8/C,EAAiB58B,SAAU8B,GAAa9mB,EAAK,SAC3EuhD,GACC5/C,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAACC,KAAK,SAAShkB,QAASy/C,EAAUa,aAAW,GAAEpiD,EAAK,mBAKpEshD,GACC3/C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,UACL+iB,SAAU8B,EACVhlB,QAAS+/C,GAER7hD,EAAK,qCAGN,G,+JCpFV,MA6DA,GAAe3B,EAAAA,EAAAA,KA7DaqB,IAMtB,IANuB,QAC3BoH,EAAO,SACPmvC,EAAW,eAAc,YACzBoM,EAAW,oBACXxI,EAAmB,QACnB/3C,GACDpC,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7Bw4C,GAAiBC,EAAAA,EAAAA,IAAkBt0C,EAAKmzC,GACxCj2C,GAAe63C,EAAAA,EAAAA,IAA4B30C,GAC3Cw7C,GAAer+C,EAAAA,EAAAA,IAASuF,EAAAA,EAAAA,IAAoB1C,EAAS,cAAei0C,GACpEz5C,GAAuBwD,EAAAA,EAAAA,GAAmBw9C,GAE1C15C,GAAQoa,EAAAA,EAAAA,IAAgBlc,GAExBy7C,GAAaC,EAAAA,EAAAA,IAAoB17C,IAChC27C,EAAe,CAAGC,IAAe//C,EAAAA,EAAAA,GAAQ4/C,GAE1CvG,GAAcz2C,EAAAA,EAAAA,IAAgB,KAClCm9C,IACA5gD,EAASgF,EAAQ1H,GAAI0H,EAAQrI,OAAO,IAGtC,OACEkD,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACLtH,GAAK,GAAE62C,KAAW0M,EAAAA,EAAAA,IAAiB77C,EAAQ1H,MAC3CO,UAAU,oBACVmC,QAASA,EAAUk6C,OAAc78C,GAEjCwC,EAAAA,GAAAC,cAAA,OACEiE,IAAKjC,EACLjE,UAAU,kBACV6a,IAAI,GACJzU,WAAYs8C,EACZO,SAAS,QACTx1B,cAAei1B,EAAcQ,EAAAA,OAAY1jD,IAE3CwC,EAAAA,GAAAC,cAAA,OACEiE,IAAKy8C,EACL3iD,WAAWkC,EAAAA,EAAAA,GAAe,aAAc,kBAAmBP,GAC3DkZ,IAAI,GACJzU,WAAYs8C,EACZO,SAAS,QACTx1B,cAAei1B,EAAcQ,EAAAA,OAAY1jD,IAE1CojD,GACC5gD,EAAAA,GAAAC,cAACkhD,EAAAA,EAAY,CACXl/C,aAAc0+C,GAAgB1+C,EAC9Bm/C,UAAWN,EACX9iD,UAAU,kBAGbiJ,GAASjH,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kBAAkBiJ,EAAMo6C,MAAQ,OAAQ7xC,EAAAA,EAAAA,IAAoBvI,EAAMmC,WAC3Fs3C,GAAe1gD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAC5B,G,8FC3FV,MCqEA,GAAetB,EAAAA,EAAAA,KA/CoBqB,IAO7B,IAP8B,UAClCqjD,EAAS,cACTE,EAAa,aACbr/C,EAAY,UACZjE,EAAS,MACTwN,EAAK,OACLC,GACD1N,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,OAE7B,aAAElB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAC7CwhD,OAAW5jD,GAAW,GAAM8jD,QAAwB9jD,OAAWA,EAdxC,KAgBnBwM,GAAYoxC,EAAAA,EAAAA,GAAcn5C,GAAevC,OAAclC,EAjB3C,GAiBmEgO,EAAOC,GAEtF4uC,GAAcz2C,EAAAA,EAAAA,IAAiB8J,IACnC,IAAK3I,EAAI3D,QAAS,OAClB,MAAMmgD,EAAO7zC,EAAE8zC,cAAc5zC,wBACvB1B,EAAIwB,EAAEG,QAAU0zC,EAAK5zC,KACrBxB,EAAIuB,EAAE+zC,QAAUF,EAAKhT,IACrBmT,EAASx1C,EAAKq1C,EAAK/1C,MAAQ,EAC3Bm2C,EAASx1C,EAAKo1C,EAAK91C,OAAS,EAClC1G,EAAI3D,QAAQuX,aAAa,QAAU,oBAAmB+oC,yBAA8BC,MAAW,IAGjG,GAAKjiD,EAIL,OACEM,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDtDM,WCsDsBP,EAAsB3B,EAAWsjD,GDtDA,YCuDxEv8C,IAAKA,EACL5E,QAASmhD,EAAgBjH,OAAc78C,GAEvCwC,EAAAA,GAAAC,cAAA,UACE8E,IAAKiF,EACLhM,WAAWkC,EAAAA,EAAAA,GD5DgJ,WC4DlH,qBACzCsL,MAAOA,EACPC,OAAQA,IAEVzL,EAAAA,GAAAC,cAAA,OAAKjC,UDhEoI,aCiErI,G,qECpDL4jD,EAAI,SAAJA,GAAI,OAAJA,EAAAA,EAAI,mBAAJA,EAAAA,EAAI,qBAAJA,EAAAA,EAAI,yBAAJA,EAAAA,EAAI,eAAJA,CAAI,EAAJA,GAAI,IAIT,MAcA,GAAellD,EAAAA,EAAAA,KAd6BqB,IAAgB,IAAf,OAAE4+C,GAAQ5+C,EACrD,OACEiC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACbgC,EAAAA,GAAAC,cAAC4+C,EAAAA,GAAU,CAAC5uC,KAAK,SAAS8uC,UAAW6C,EAAKjF,IAC5B,WAAXA,EACC38C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,iCACbgC,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,oBAEXjQ,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAO,WAAU0sC,OAEzB,G,6FCZV,MAAMkF,EAAe,iBAcrB,GAAenlD,EAAAA,EAAAA,KAZoBqB,IAA0C,IAAzC,KAAE2C,EAAOmhD,EAAY,YAAEC,GAAa/jD,EACtE,MAAMM,GAAOC,EAAAA,EAAAA,MACP,qBAAEqB,IAAyBC,EAAAA,EAAAA,IAAkB,GAEnD,OACEI,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,EAAsBmiD,GAAe,qBACjFphD,EACAohD,GAAe9hD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,gBAAeqR,EAAAA,EAAAA,GAAWhR,EAAKyjD,GAAc,CAAC,QACvE,G,qJCUV,MAgIA,GAAeplD,EAAAA,EAAAA,KAhIoBqB,IAgB7B,IAhB8B,UAClCu2B,GAAY,EAAK,kBACjBytB,EAAiB,MACjBlqC,EAAK,KACLmqC,EAAI,YACJtN,EAAc,WAAU,YACxBuN,EAAc,OAAM,YACpBH,EAAW,iBACXI,EAAgB,iBAChBC,EAAgB,6BAChBC,GAA+B,EAAK,SACpCC,GAAW,EAAK,WAChBC,EAAU,2BACVC,EAA0B,cAC1BC,EAAa,SACbC,GACD1kD,EAEC,MAAM65B,GAAWh3B,EAAAA,EAAAA,IAAyB,MACpCvC,GAAOC,EAAAA,EAAAA,MAEP,SAAEgJ,IAAaC,EAAAA,EAAAA,OACdm7C,EAAUC,IAAej7C,EAAAA,EAAAA,IAAS,KAClCk7C,EAAWC,IAAgBn7C,EAAAA,EAAAA,KAAS,GACrCo7C,EAAsBx7C,EAAW,IAAM,IAgE7C,OA9DA9H,EAAAA,EAAAA,KAAU,KACJ2iD,GACFQ,EAAY,GACd,GACC,CAACR,KAEJ9nB,EAAAA,EAAAA,IAAW,KACJvW,EAAAA,IACH8T,EAASx2B,QAAS8Q,OACpB,GACC4wC,IAEHtjD,EAAAA,EAAAA,KAAU,KACJqY,IACFqoB,EAAAA,EAAAA,KAAgB,KACdtI,EAASx2B,QAAS8Q,QAClB0lB,EAASx2B,QAAS2hD,QAAQ,GAE9B,GACC,CAAClrC,IA4CF7X,EAAAA,GAAAC,cAAA,QAAMkpB,OAAO,GAAGs5B,SAAUA,EAzB5B,SAAsBO,GACpBA,EAAM1pC,iBAEFgb,GAIAsuB,GACFH,EAAUC,EAEd,EAesDxB,EAAAA,EAAW+B,aAAa,OAC1EjjD,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,6BAA8BwiD,GAAY,UAAW7qC,GAAS,SACxFnW,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzB4kD,GAhBHpiD,EAAAA,GAAAC,cAAA,SACEkc,KAAK,WACL1e,GAAG,mBACHwlD,aAAa,MACbjlD,UAAU,kBACVklD,UAAW,IAYXljD,EAAAA,GAAAC,cAAA,SACE8E,IAAK6yB,EACL55B,UAAU,eACVme,KAAM4lC,EAAoB,OAAS,WACnCtkD,GAAG,mBACH4iD,MAAOqC,GAAY,GACnBO,aAAcb,EAA+B,gBAAkB,mBAC/De,SAvDR,SAA0Bz1C,GACpBmK,GACFyqC,IAGF,MAAM,OAAExgC,GAAWpU,EACnBi1C,EAAY7gC,EAAOu+B,OACnBwC,EAAa/gC,EAAOu+B,MAAMjgD,QAAUgjD,EAAAA,KAChCZ,GACFA,EAAc1gC,EAAOu+B,MAEzB,EA6CQlW,UAAW,IACXzoC,IAAI,SAEN1B,EAAAA,GAAAC,cAAA,aAAQ4X,GAASmqC,GAAQtN,GACzB10C,EAAAA,GAAAC,cAAA,OACEjC,UAAU,6BACVmC,QAjDR,WACEoiD,GAA4BR,EAC9B,EAgDQsB,KAAK,SACLH,SAAU,EACV10C,MAAM,6BACN,aAAW,8BAEXxO,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQ6hD,EAAoB,WAAa,uBAGzED,GAAe9hD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAe8jD,GAC3CW,IAAaG,GAAaV,IACzBliD,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAAC2b,KAAK,SAASxM,QAAS0yC,EAAU/tB,UAAWA,EAAWjR,UAAWu/B,GACvEX,GAGA,G,uNCvGX,MAqQA,GAAevlD,EAAAA,EAAAA,KAhQcqB,IA0BvB,IA1BwB,UAC5BC,EAAS,WACTslD,EAAU,QACVC,EAAO,mBACPC,EAAkB,YAClBC,EAAW,YACXC,EAAW,kBACXC,EAAiB,aACjBC,EAAY,cACZC,EAAa,UACbvvB,EAAS,gBACTwvB,EAAe,aACfC,EAAY,gBACZC,EAAe,kBACfC,EAAiB,oBACjBC,EAAmB,yBACnBC,EAAwB,cACxBC,EAAa,WACbC,EAAU,2BACVC,EAA0B,oBAC1BC,EAAmB,eACnBC,EAAc,gBACdC,EAAe,WACfC,EAAU,cACVC,EAAa,YACbC,GACD7mD,EAEC,MAAM65B,GAAWh3B,EAAAA,EAAAA,IAAyB,MACpCikD,EAAiBpB,EAAYrjD,OAhCd,IAkCrBZ,EAAAA,EAAAA,KAAU,KACHukD,GACLhgD,YAAW,MACTqa,EAAAA,EAAAA,KAAe,KACbwZ,EAASx2B,QAAS8Q,OAAO,GACzB,GAzCe,IA0CD,GACjB,CAAC6xC,IAEJ,MAAMe,GAAuBnmD,EAAAA,EAAAA,KAAQ,IAAM,IAAIoE,IAAIkhD,IAAoB,CAACA,IAClEc,GAAyBpmD,EAAAA,EAAAA,KAAQ,IAAM,IAAIoE,IAAImhD,IAAsB,CAACA,IAEtEc,GAAsBrmD,EAAAA,EAAAA,KAAQ,IAC3B8kD,EAAYlkD,QAAQ9B,IAAQqnD,EAAqBvhD,IAAI9F,MAC3D,CAACqnD,EAAsBrB,IAEpBwB,GAAmBtmD,EAAAA,EAAAA,KAAQ,IAC1B2kD,GACE4B,EAAAA,EAAAA,IAAqB5B,EAAY,QADhB,CAAC,GAExB,CAACA,IAEE6B,GAAgBxmD,EAAAA,EAAAA,KAAQ,KAC5B,GAAI+kD,EACF,OAAOH,EAGT,MAAM6B,EAAiC,GACjCC,EAA2B,GAC3BC,EAAqC,GAY3C,OAVA/B,EAAQ13C,SAASpO,IACXqnD,EAAqBvhD,IAAI9F,GAC3B2nD,EAAqB5jD,KAAK/D,GACjBsnD,EAAuBxhD,IAAI9F,GACpC6nD,EAAyB9jD,KAAK/D,GAE9B4nD,EAAe7jD,KAAK/D,EACtB,IAGK2nD,EAAqB1qC,OAAO2qC,EAAgBC,EAAyB,GAC3E,CAAC5B,EAAaH,EAASuB,EAAsBC,IAE1CQ,GAAkB3hD,EAAAA,EAAAA,IAAiBnG,IACvC,GAAIqnD,EAAqBvhD,IAAI9F,GAC3BgnD,IAAkBhnD,GAAI,QAIxB,GAAIsnD,EAAuBxhD,IAAI9F,GAC7BgnD,IAAkBhnD,GAAI,OADxB,CAKA,GAAIwnD,EAAiBxnD,GAAK,CACxB,MAAM+nD,EAAeP,EAAiBxnD,GAAI0e,KACpCspC,EAAwBjC,GAAoBpkD,SAAW,GACzDqmD,EAAsB9uC,SAAS6uC,GACjCC,EAAsBC,OAAOD,EAAsBtwC,QAAQqwC,GAAe,GAE1EC,EAAsBjkD,KAAKgkD,GAE7BlB,IAA6BmB,EAC/B,KAAO,CACL,MAAME,EAAiBlC,EAAYrkD,QAC/BumD,EAAehvC,SAASlZ,GAC1BkoD,EAAeD,OAAOC,EAAexwC,QAAQ1X,GAAK,GAElDkoD,EAAenkD,KAAK/D,GAEtB8mD,IAAsBoB,EACxB,CACAnB,IAAiB,GApBjB,CAoBoB,IAGhBoB,GAAqBhiD,EAAAA,EAAAA,IAAiB8J,IAC1C,MAAM,MAAE2yC,GAAU3yC,EAAE8zC,cACpBgD,IAAiBnE,EAAM,KAGlBwF,EAAaC,IAAWC,EAAAA,EAAAA,GAAkBrB,EAAYS,EAAeznD,QAAQgmD,IAE9ErlD,GAAOC,EAAAA,EAAAA,KAEP0nD,IAAiBrnD,EAAAA,EAAAA,KAAQ,KAC7B,GAAKimD,EACL,OAAOM,EAAAA,EAAAA,IAAqBN,EAAa,OAAO,GAC/C,CAACA,IAEEqB,IAAiBriD,EAAAA,EAAAA,IAAiBsiD,GAEpClmD,EAAAA,GAAAC,cAACkmD,EAAAA,EAAe,CACdC,WAAYF,MAKZG,IAAiBziD,EAAAA,EAAAA,IAAiBnG,IACtC,MAAM6oD,EAAiBvB,EAAuBxhD,IAAI9F,GAClD,GAAIknD,GAAiBqB,GAAgB,CACnC,MAAMO,EAAUP,GAAevoD,GAC/B,OAAOuC,EAAAA,GAAAC,cAAA,WAAMsmD,EAAQC,YACvB,CAAO,OAAI33B,EAAAA,EAAAA,IAASpxB,GAEhBuC,EAAAA,GAAAC,cAACkmD,EAAAA,EAAe,CACd/B,cAAeA,EACf1M,OAAQj6C,EACRk/C,OAAQ2J,EAAiBnC,OAA2B3mD,IAIjDwC,EAAAA,GAAAC,cAACwmD,EAAAA,EAAa,CAAC3pD,OAAQW,EAAIk/C,OAAQ2J,EAAiBnC,OAA2B3mD,GACxF,IAGIkpD,IAAaloD,EAAAA,EAAAA,KAAY,CAACf,EAAYkpD,KAC1C,MAAMT,EAAWS,EAAa1B,EAAiBxnD,QAAMD,EAC/CopD,EAAuB7B,EAAuBxhD,IAAI9F,GAClDopD,EAAW/B,EAAqBvhD,IAAI9F,IAAOmpD,EAC3CE,EAAYZ,EAAW1C,GAAoB7sC,SAASuvC,EAAS/pC,MAAQsnC,EAAY9sC,SAASlZ,GAC1FspD,EAAiBA,IACb1C,GAAcuC,OAAwBppD,EAC5CwC,EAAAA,GAAAC,cAAC26C,EAAAA,EAAQ,CACPE,MAAM,GACNz3B,SAAUwjC,EACVhM,QAASiM,EACTrmD,MAAOujD,IAIb,OACEhkD,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CACPzR,IAAK93C,EACLO,WAAWkC,EAAAA,EAAAA,GAAe,uCAAwC8jD,GAAmB,aACrF3gC,SAAUwjC,EACVI,SAAU5C,EACVxO,mBAAoBn4C,QAAQ+mD,GAC5ByC,cAAeN,EAAuB,kBAAeppD,EAErD2C,QAASA,IAAMolD,EAAgB9nD,GAC/BkS,QAAM,GAEJq0C,OAAqCxmD,EAAnBupD,IACnBb,EAAWD,GAAeC,GAAYG,GAAe5oD,GACrDumD,EAAkB+C,SAAmBvpD,EAC7B,GAEZ,CACDynD,EAAkBjB,EAAiBK,EAAYS,EAAsBC,EACrEN,EAAiB4B,GAAgB7C,EAAoBC,IAGjD0D,IAAiBxoD,EAAAA,EAAAA,KAAQ,IAE3BqB,EAAAA,GAAAC,cAAA,OAAKs1C,IAAI,cACN73C,QAAQ4lD,GAAYljD,SACnBJ,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBAAyBK,EAAK,qBAE9CilD,GAAYjkD,KAAK6mD,GAAaQ,GAAWR,EAAS/pC,MAAM,KACzDnc,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBAAyBK,EAAK,kBAGhD,CAACilD,EAAYjlD,EAAMqoD,KAEtB,OACE1mD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUlC,IACtC+lD,GACC/jD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,8BAA8B0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACpEgmD,GAAoBnkD,KAAK6mD,GACxBlmD,EAAAA,GAAAC,cAACmnD,EAAAA,EAAkB,CACjBhB,WAAYnB,EAAiBiB,GAC7B/lD,QAASolD,EACT8B,SAAUnB,EACVoB,UAAQ,MAGXrD,GAAmB5kD,KAAI,CAAC5B,EAAI8D,IAC3BvB,EAAAA,GAAAC,cAACmnD,EAAAA,EAAkB,CACjBtd,OAAQrsC,EACR8pD,YAAa1C,GAAkBtjD,EAAIkiD,EAAYrjD,OApN7B,EAqNlBgkD,cAAeA,EACfjkD,QAASolD,EACT8B,SAAU5pD,MAGbunD,EAAoB3lD,KAAI,CAAC5B,EAAI8D,IAC5BvB,EAAAA,GAAAC,cAACmnD,EAAAA,EAAkB,CACjBtd,OAAQrsC,EACR8pD,YACE1C,GAAkBtjD,GAAK0iD,GAAmB7jD,QAAU,GAAKqjD,EAAYrjD,OA9NrD,EAgOlBknD,UAAQ,EACRnnD,QAASolD,EACT8B,SAAU5pD,MAGduC,EAAAA,GAAAC,cAACunD,EAAAA,EAAS,CACR/pD,GAAIomD,EACJ9+C,IAAK6yB,EACLyoB,MAAOqD,EACPP,SAAUyC,EACVlR,YAAaiP,GAAqBtlD,EAAK,iBAK5CwnD,GAAazlD,OACZJ,EAAAA,GAAAC,cAACwnD,EAAAA,EAAc,CACbzpD,WAAWkC,EAAAA,EAAAA,GAAe,cAAe,gBAAiB8jD,GAAmB,uBAC7E9uC,MAAO2wC,EACPsB,eAAgBA,GAChBzC,WAAYoB,EACZhC,gBAAiBA,GAEhB+B,EAAYxmD,KAAK5B,GAAOipD,GAAWjpD,MAEnC62B,IAAauxB,GAAgBA,EAAYzlD,OAG5CJ,EAAAA,GAAAC,cAACynD,EAAAA,EAAO,MAFR1nD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,cAAc4lD,GAAgB,yBAIzC,G,oJChRV,MA6EA,GAAelnD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAEwqC,EAAM,cAAEsa,GAAe9kD,EAChC,IAAKwqC,EACH,MAAO,CAAC,EAGV,MAAM/sC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQktC,GAC1B1Y,GAAOjB,EAAAA,EAAAA,KAAWvzB,EAAQktC,GAGhC,MAAO,CACL/sC,OACAq0B,OACAwiB,iBALuBwQ,GAAiBhzB,GAAQA,EAAKu2B,OAMtD,GAdehrD,EA7EkCoB,IAchD,IAdiD,KACrDomB,EAAI,MACJ3V,EAAK,YACL+4C,EAAW,SACXD,EAAQ,SACRD,EAAQ,KACRtqD,EAAI,KACJq0B,EAAI,WACJg1B,EAAU,UACVpoD,EAAS,MACT4pD,EAAK,gBACLhU,EAAe,eACfiU,EAAc,QACd1nD,GACDpC,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAIwpD,EACAC,EAEJ,GAAI5jC,GAAQ3V,EACVs5C,EACE9nD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACbgC,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAMkU,KAIhB4jC,EAAYv5C,OACP,GAAI43C,GAAch1B,GAAQr0B,EAAM,CACrC+qD,EACE9nD,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACLD,KAAMy0C,GAAch1B,GAAQr0B,EAC5BuD,KAAK,QACLszC,gBAAiBA,IAIrB,MAAM3jC,EAAQm2C,GAAc/nD,EAAK+nD,EAAW4B,aACrCjrD,GAASq0B,IAASwiB,GACnB+C,EAAAA,EAAAA,IAAuBvlB,IACvBkmB,EAAAA,EAAAA,IAAaj5C,EAAMtB,EAAM62C,IAE/BmU,EAAY93C,GAAOZ,EAAAA,EAAAA,GAAWY,QAAQzS,CACxC,CAEA,MAAMsR,GAAgB5O,EAAAA,EAAAA,GACpB,qBACAlC,GACCjB,GAAMk1B,SAAWm0B,GAAY6B,iBAAmB,gBACjDV,GAAe,YACfD,GAAY,YACZM,GAAS,QACTC,IAAkB18B,EAAAA,EAAAA,GAAkBi7B,GAAcrpD,GAAQq0B,IAG5D,OACEpxB,EAAAA,GAAAC,cAAA,OACEjC,UAAW8Q,EACX3O,QAASA,IAAMA,EAAQknD,GACvB74C,MAAO+4C,EAAcQ,OAAYvqD,EACjCkE,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzBsqD,GACCP,GACAvnD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YAAY0D,IAAI,QAC5BqmD,GAGJT,GACCtnD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eACbgC,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,WAGX,I,yGClHV,QAA2f,WAA3f,EAA8gB,WC4H9gB,GAAevT,EAAAA,EAAAA,KAnGoBqB,IAO7B,IAP8B,SAClCmqD,EAAQ,UACRC,EAAS,kBACTC,EAAiB,kBACjBC,EAAiB,SACjBh9C,EAAQ,UACRrN,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEPgqD,GAAmB1nD,EAAAA,EAAAA,IAAuB,MAE1C2nD,GAAqB3nD,EAAAA,EAAAA,IAAuB,OAE3C8gD,EAAQ8G,IAAa9gD,EAAAA,EAAAA,IAAS,IAC9B+gD,EAAcC,IAAmBhhD,EAAAA,EAAAA,IAAS,GAE3CihD,EAAsBA,KAC1B,GAAIL,EAAiBlnD,SAAWmnD,EAAmBnnD,cAAwB5D,IAAb6N,EAAwB,CACpF,MAAMu9C,EAAaN,EAAiBlnD,QAAQynD,YACtCC,EAAcP,EAAmBnnD,QAAQynD,YACzCE,EAAWH,EAAa,EACxBI,EAAWF,EAAcF,EAAa,EACtCK,EAAe59C,EAAWy9C,EAC1BI,EAAY5+C,KAAK2B,IAAI88C,EAAUz+C,KAAKC,IAAI0+C,EAAcD,IAI5D,IAAIG,EAFJX,EAAUU,EAAYJ,GAIpBK,EADEF,EAAeF,EACE19C,EAAWy9C,GAA2B,EAAXC,GACrCE,EAAeD,EAEN,IADM39C,EAAY29C,EAAWF,IAAiB,EAAIE,EAAWF,GACrC,GAExB,GAEpBJ,EAAgBS,EAClB,IAGF3pD,EAAAA,EAAAA,IAAUmpD,EAAqB,CAACt9C,KAEhC+9C,EAAAA,EAAAA,GAAkBb,EAAoBI,GAEtC,MAAMU,EAAmB3rD,QAAQ2qD,GAAqBD,GAChDkB,EAAiB5rD,QAAQ2N,IAAaA,EAAW,IAEvD,OACErL,EAAAA,GAAAC,cAAA,OACE8E,IAAKwjD,EACLvqD,WAAWkC,EAAAA,EAAAA,GD5EM,WC8EfmpD,GD9EsC,WC+EtCrrD,GAEFgG,OAAOC,EAAAA,EAAAA,QACQzG,IAAb6N,GAA2B,eAAcA,SACxB7N,IAAjBirD,GAA+B,oBAAmBA,IACjD,cAAa/G,MAGf2H,GACCrpD,EAAAA,GAAAC,cAAA,OAAKjC,UDxF6D,YCyFhEgC,EAAAA,GAAAC,cAAA,OAAKjC,UDzF4K,YC0F/KgC,EAAAA,GAAAC,cAAA,OAAKjC,UD1F8Q,WC0F7O+G,IAAKujD,GACxCD,GAAqBroD,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAMo4C,EAAmBrqD,UD3FoW,aC4FxZoqD,GACCpoD,EAAAA,GAAAC,cAAA,OAAKjC,UD7Fod,WC6F9a0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAClE4qD,IAIPpoD,EAAAA,GAAAC,cAAA,OAAKjC,UDlGsV,YCmGzVgC,EAAAA,GAAAC,cAAA,OAAKuL,MAAM,KAAKC,OAAO,KAAKwF,QAAQ,YAAYzG,KAAK,QACnDxK,EAAAA,GAAAC,cAAA,QAAM0zC,EAAE,uTAAuTnpC,KAAK,gBAM9UxK,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,YAAOioD,IAETloD,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,YAAOkoD,IAETnoD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDhH8gB,WCgH9eopD,GDhHwgB,aCiHtjBtpD,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,YAAOioD,IAETloD,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,YAAOkoD,KAGP,G,2MCrDV,MAsLA,GAAezrD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAEo4C,EAAM,cAAE0M,GAAe9kD,EAChC,MAAM,SAAEiqD,GAAa3sD,EACfw0B,EAAOsmB,GAASvnB,EAAAA,EAAAA,KAAWvzB,EAAQ86C,QAAUl6C,EAC7CgsD,EAAa9R,GAAS+R,EAAAA,EAAAA,KAAiB7sD,EAAQ86C,QAAUl6C,EACzDo2C,GAAmBwQ,GAAiBhzB,GAAQA,EAAKu2B,OACjDrU,EAAOM,EAAkBxiB,GAAOjB,EAAAA,EAAAA,KAAWvzB,EAAQA,EAAOqzB,eAGhE,MAAO,CACLmB,OACAo4B,aACA5V,kBACAqI,kBANwBv+C,QAAQg6C,IAAUwE,EAAAA,EAAAA,KAAmBt/C,EAAQ86C,IAOrEpE,OACAiW,WACD,GAhBe5sD,EAtL+BoB,IAgC7C,IAhC8C,WAClDqoD,EAAU,aACV7J,EAAY,WACZE,EAAa,SAAQ,OACrBE,EAAM,WACNH,EAAU,SACVI,EAAQ,gBACR3C,EAAe,aACf5G,EAAY,UACZ6J,EAAS,aACTL,EAAY,mBACZC,EAAkB,gBAClBO,EAAe,iBACfJ,EAAgB,cAChBG,EAAa,OACbsM,EAAM,WACNC,EAAU,MACV3M,EAAK,KACL5rB,EAAI,WACJo4B,EAAU,KACVlW,EAAI,gBACJM,EAAe,cACfuC,EAAa,kBACb8F,EAAiB,YACjB2N,EAAW,OACXj6C,EAAM,UACN3R,EAAS,kBACTm/C,EAAiB,SACjBoM,EAAQ,mBACRjM,EAAkB,YAClBwK,EAAW,aACX+B,GACD9rD,EACC,MAAM,aACJ+rD,EAAY,gBACZtM,EAAe,kBACfC,IACEr/C,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAIi6C,GAAWtmB,GAAQ,CAAC,GAEhC5xB,EAAAA,EAAAA,KAAU,KACJk4C,IACEmF,GAAgB0M,GAAUO,EAAa,CAAEpS,WACzCuC,GAAiBwD,EAAkB,CAAEI,UAAWnG,IACtD,GACC,CAACA,EAAQmF,EAAc5C,EAAiBsP,IAE3C,MAAMzL,GAAyBl6C,EAAAA,EAAAA,IAC7B,CAAC8J,EAAiDqwC,KAC5C3sB,GAAQ2sB,IACVrwC,EAAEM,kBACFwvC,EAAgB,CACdQ,cAAe5sB,EAAK3zB,GACpBwgD,QAAS,EACT34C,OAAuB,UAAfm3C,EAAyByB,EAAAA,GAAkBC,cAAgBD,EAAAA,GAAkBE,qBAEzF,IAIEC,GAAe1/C,EAAAA,EAAAA,KAAQ,IAAMyyB,GAAQiiB,IAAgBiL,EAAAA,EAAAA,IAAgBltB,IAAO,CAACA,EAAMiiB,IAEzF,IAAKjiB,IAASg1B,EACZ,OA+CF,MAAM2D,EAAcH,EAChBA,EAAYG,aAAe1rD,EAAKurD,EAAYI,QAAU,uBAAyB,6BAC/ExsD,EAkCJ,OACEwC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,WAAYlC,GAAY0D,KAAMs7C,GAAS3+C,EAAKsD,MAAQ,WAAQnE,GACxF24C,GAAiB7C,GAChBtzC,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL2jC,IAAI,iBACJj1C,KAAMm8C,EACN9qC,KAAM2hC,EACNM,iBAAe,EACf51C,UAAU,wBAGdgC,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL2jC,IAAKnkB,GAAM3zB,GACX6C,KAAMm8C,EACN9qC,KAAMy0C,GAAch1B,EACpBpzB,WAAWkC,EAAAA,EAAAA,GAAei2C,GAAiB,kBAC3CvC,gBAAiBA,EACjBuC,cAAeA,EACf+G,UAAWA,EACXC,kBAAmBA,EACnBoB,gBAAgB,cAChBp+C,QAAS85C,EAAkB6D,OAAyBtgD,IAEtDwC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QAtDb+rD,EAEA/pD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACbgC,EAAAA,GAAAC,cAACw+C,EAAAA,EAAa,CACZ9sC,KAAMyf,EACNstB,iBAAkBtB,EAClBC,gBAAiBA,EACjBzJ,gBAAiBA,EACjBuC,cAAeA,EACfmH,mBAAoBA,IAErByM,GAAe/pD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgB+rD,IAMpD/pD,EAAAA,GAAAC,cAACw+C,EAAAA,EAAa,CACZ9sC,KAAMy0C,GAAch1B,EACpBs4B,OAAQA,EACRC,WAAYA,EACZjL,iBAAkBtB,EAClBC,gBAAiBA,EACjBzJ,gBAAiBA,EACjBuC,cAAeA,EACfmH,mBAAoBA,EACpBwK,YAAaA,KA8BXnL,IAAY/I,IAAoBqJ,IAzGxC,WACE,GAAIN,EACF,OAAOC,EACL58C,EAAAA,GAAAC,cAAC0+C,EAAAA,EAAY,CAAC3gD,UAAU,SAAS6I,QAAS81C,IAE1C38C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC1B86C,GAAcx8C,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UAAU,cAAciS,KAAMusC,KAClDntC,EAAAA,EAAAA,GAAWstC,IAKlB,GAAIG,IAAuBb,EACzB,OACEj8C,EAAAA,GAAAC,cAAC0+C,EAAAA,EAAY,CAAC3gD,UAAU,SAAS6I,QAASxI,EAAK,cAInD,GAAI+nD,GAAY6D,YACd,OACEjqD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC3B1B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,QAAQrD,EAAK+nD,EAAW6D,eAKhE,IAAK74B,EACH,OAGF,GAAImrB,EACF,OAAOv8C,EAAAA,GAAAC,cAAC2+C,EAAAA,EAAY,CAACrC,aAAcA,IAGrC,MAAM2N,GAAmBC,EAAAA,EAAAA,IAAc9rD,EAAM+yB,EAAMo4B,GAC7CY,GAAwBlqD,EAAAA,EAAAA,GAAe,SAAUgqD,GAAoB,cAC3E,OACElqD,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAe,UAAUmqD,EAAAA,EAAAA,IAAaj5B,EAAMo4B,GAAY,IAAS,WAC/EnL,GAAgBr+C,EAAAA,GAAAC,cAAA,QAAMjC,UAAWosD,GAAwB/L,GACzD6L,GAAoBlqD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,QAAQwoD,GAGrE,CA+D8D5K,IAEzD3vC,GAAU3P,EAAAA,GAAAC,cAACqqD,EAAAA,EAAY,MACvBT,EACG,I,qWCxMV,MAqIA,GAAentD,EAAAA,EAAAA,KArIoBqB,IAQ7B,IAR8B,KAClChB,EAAI,KACJq0B,EAAI,MACJtD,EAAK,gBACL8lB,EAAe,cACfuC,EAAa,aACboU,EAAY,QACZpqD,GACDpC,EAEC,MAAMysD,GAAW5pD,EAAAA,EAAAA,IAAyB,MAEpCvC,GAAOC,EAAAA,EAAAA,MACP,SAAEgJ,IAAaC,EAAAA,EAAAA,MAEfkjD,EAAYr5B,IAAQs5B,EAAAA,EAAAA,IAAct5B,GAClCu5B,EAAgB5tD,IAAQ6tD,EAAAA,EAAAA,IAAqB7tD,EAAKU,IAClDotD,EAAsB9tD,IAAQ+tD,EAAAA,EAAAA,IAAwB/tD,EAAKU,IAC3DkU,EAAOyf,GAAQr0B,EACfguD,EAAep5C,IAASiiC,IAAoB6W,IAAcE,IAAkBE,GAC5E,QAAEG,GAAYl9B,GAAS,CAAC,EAExBm9B,EAAaF,IAAgBG,EAAAA,EAAAA,IAAkBv5C,EAAM,UACrDw5C,GAAgB7oD,EAAAA,EAAAA,GAAS2oD,GAEzBG,EAAYL,GAAgBj9B,IAAUk9B,GAAY,QAAOl9B,EAAMrwB,YAC/D4tD,GAAe/oD,EAAAA,EAAAA,GAAS8oD,GAExBE,EAAYP,GAAgBj9B,GAASk9B,IAAWO,EAAAA,EAAAA,IAAwBz9B,GAGxE09B,GAFelpD,EAAAA,EAAAA,GAASgpD,IAEQD,GAC/BI,EAAcC,IAAkB1qD,EAAAA,EAAAA,KACjC2qD,EAAmBjuD,QAAQ8tD,KAAmBR,GAAWS,IACzD9rD,GAAuBwD,EAAAA,EAAAA,GAAmBwoD,GAC1CC,EAAiBb,IAAiBY,IAAqBR,GAAiBr9B,GAAO5rB,WAAWC,QAC1F0pD,GAAwBzQ,EAAAA,EAAAA,GAC5BttB,GAAO5rB,WAAWC,SAAUypD,EAAgBtkD,IAAa+zC,EAAAA,IAErD0C,EAAWjwB,GAASq9B,GAAiBS,GAE3CpsD,EAAAA,EAAAA,KAAU,KACJgrD,EAASppD,UAAYmpD,IACvBC,EAASppD,QAAQ0qD,YAAc,EACjC,GACC,CAACvB,IAEJ,MAAMwB,GAAcptD,EAAAA,EAAAA,KAAQ,IACtBi1C,EACKuC,EAAgB,WAAa,wBAGlCsU,EACK,yBAGLE,EACK,eAGLE,EACK,qBADT,GAKC,CAACA,EAAqBJ,EAAWtU,EAAewU,EAAe/W,IAElE,IAAI/sC,EAEJ,GAAIklD,EACFllD,EAAU7G,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAM87C,EAAa1I,KAAK,aACnC,GAAItF,EACTl3C,EACE7G,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG+6C,EACC5rD,EAAAA,GAAAC,cAAA,UAAQ8E,IAAK8mD,EAAuB7tD,UAAU,4BAE9CgC,EAAAA,GAAAC,cAAA,OAAKiE,IAAKinD,EAAe/mD,WAAW,EAAOpG,UAAU,QAAQ6a,IAAI,KAElEiV,IACCk9B,EACEhrD,EAAAA,GAAAC,cAAC+rD,EAAAA,EAAc,CACbC,QAAS1B,EACTxlD,IAAKylD,EACLtmD,IAAKsnD,EACLxtD,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,GAC1CusD,OAAK,EACLC,yBAAuB,EACvBC,MAAI,EACJC,aAAW,EACXC,QAASZ,IAGX1rD,EAAAA,GAAAC,cAAA,OACEiE,IAAKsnD,EACLxtD,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,GAC1CkZ,IAAI,YAMT,GAAIuY,EAAM,CACf,MAAMm7B,GAAeC,EAAAA,EAAAA,IAAgBp7B,GACrCvqB,EAAU0lD,GAAeE,EAAAA,EAAAA,IAAgBF,EAAc,QAAK/uD,CAC9D,MAAO,GAAIT,EAAM,CACf,MAAMyR,GAAQ8oC,EAAAA,EAAAA,IAAaj5C,EAAMtB,GACjC8J,EAAU2H,IAASi+C,EAAAA,EAAAA,IAAgBj+C,GAAOqgB,EAAAA,EAAAA,IAAS9xB,EAAKU,IAAM,EAAI,EACpE,MACEoJ,EACE7G,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACbgC,EAAAA,GAAAC,cAACi1C,EAAAA,EAAO,CAACtlC,MAAM,WAKrB,MAAMd,GAAgB5O,EAAAA,EAAAA,GACpB,gBACAirB,EAAAA,EAAAA,GAAkBxZ,GAClBiiC,GAAmB,iBACnBiX,GAAuB,qBACvBJ,GAAa,kBACbE,GAAiB,uBACf/W,IAAoBmK,GAAa,YAGrC,OACE/9C,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8Q,EAAe3O,QAAS49C,EAAW59C,OAAU3C,GACvC,iBAAZqJ,GAAuBwI,EAAAA,EAAAA,GAAWxI,EAAS,CAAC,aAAeA,EAC/D,I,eC9KV,QAA6D,WAA7D,EAAwF,WAAxF,EAA2H,WAA3H,EAA6J,WAA7J,EAAwN,WAAxN,EAA6V,WC4X7V,GAAenK,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA6B,IAA3B,OAAEo4C,GAAQp4C,EACjB,MAAM,SAAEiqD,GAAa3sD,EACfw0B,GAAOjB,EAAAA,EAAAA,KAAWvzB,EAAQ86C,GAC1BxF,GAAYrjB,EAAAA,EAAAA,IAAS6oB,GACrB8R,GAAaC,EAAAA,EAAAA,KAAiB7sD,EAAQ86C,GACtC36C,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQ86C,IAC1B,QAAEuG,EAAO,cAAED,IAAkB5gD,EAAAA,EAAAA,KAAeR,GAAQ8vD,YACpDz6B,EAAUl1B,GAAMk1B,SACd9S,SAAUwtC,IAAmBnoC,EAAAA,EAAAA,KAAyB5nB,IAAW,CAAC,EACpEu/C,EAAQlqB,GAAW06B,EAAiB5vD,GAAMq/C,SAASuQ,QAAkBnvD,EACrEovD,EAAe1a,GAAYnjB,EAAAA,EAAAA,KAAmBnyB,EAAQ86C,QAAUl6C,EAChEwxB,EAAgBkjB,OAAiD10C,GAArCyxB,EAAAA,EAAAA,KAAmBryB,EAAQ86C,GAEvDmV,GAAez7B,GAAQr0B,IAAO8vD,YAC9BC,EAAqBD,EAAcjwD,EAAOg3B,aAAa70B,KAAK8tD,EAAYjmB,iBAAcppC,EAE5F,MAAO,CACL+rD,WACAn4B,OACAo4B,aACAzsD,OACAgwD,kBAAmBH,GAAcI,cACjCC,iBAAkBL,GAAcM,aAChCC,kBAAmBP,GAAcQ,cACjCC,iBAAkBr+B,GAAck+B,aAChCjP,UACAD,gBACA8O,wBACI3Q,GAAS,CACXA,QACAE,eAAeC,EAAAA,EAAAA,KAA0B1/C,EAAQ86C,EAAQiV,IAE5D,GAjCehwD,EAvT2BoB,IAgBzC,IAhB0C,cAC9CqmD,EAAa,aACbmG,EAAY,KACZn5B,EAAI,WACJo4B,EAAU,KACVzsD,EAAI,SACJwsD,EAAQ,QACRtL,EAAO,cACPD,EAAa,MACb7B,EAAK,cACLE,EAAa,kBACb0Q,EAAiB,iBACjBE,EAAgB,kBAChBE,EAAiB,iBACjBE,EAAgB,mBAChBP,GACD/uD,EACC,MAAM,aACJ+rD,EAAY,gBACZtM,EAAe,iBACf8P,EAAgB,eAChBC,EAAc,+BACdC,IACEpvD,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAIi6C,GAAWtmB,GAAQ,CAAC,GACxB3zB,GAAIX,GAAWC,GAAQ,CAAC,EAC1B0wD,EAASr8B,GAAMq8B,QAAU1wD,GAAM0wD,QAAUrwB,EAAAA,EACzCswB,GAAcp1B,EAAAA,EAAAA,GAAY2lB,GAC1B0P,GAAoBr1B,EAAAA,EAAAA,GAAY0lB,GAChC4P,GAAaptB,EAAAA,EAAAA,GAAYyd,IACxB4P,GAAmBC,KAAwBpmD,EAAAA,EAAAA,KAAS,GAErDqmD,GAAiBF,GAAqBxvD,EAAKsD,MAAQ,WAAa,QAAW,QAE1EqsD,GAAmBC,KAAwBvmD,EAAAA,EAAAA,IAAS,GACrDwmD,GAAUT,EAAOrtD,QAAU,GAA2B,IAAtB4tD,GAChCG,GAASV,EAAOrtD,QAAU,GAAK4tD,KAAsBP,EAAOrtD,OAAS,GAG3EZ,EAAAA,EAAAA,KAAU,KACJmuD,QAAqCnwD,IAAhBkwD,QAAyClwD,IAAZygD,IACpD6P,IAAqB,GACrBG,GAAqBP,GACvB,GACC,CAACzP,EAASyP,EAAaC,KAG1BnuD,EAAAA,EAAAA,KAAU,KACRsuD,IAAqB,GACrBG,GAAqBL,EAAWxsD,SAAW,EAAE,GAC5C,CAACwsD,EAAYH,KAGhBjuD,EAAAA,EAAAA,KAAU,KACJwuD,GAAoBP,EAAOrtD,SAC7B0tD,IAAqB,GACrBG,GAAqB3jD,KAAK2B,IAAI,EAAGwhD,EAAOrtD,OAAS,IACnD,GACC,CAAC4tD,GAAmBP,EAAOrtD,UAE9BZ,EAAAA,EAAAA,KAAU,KACJ+pD,GAAY7R,IAAW0M,GACzB0F,EAAa,CAAEpS,UACjB,GACC,CAACA,EAAQoS,EAAcP,EAAUnF,IChIvB,SACbqJ,EACAW,IAEA5uD,EAAAA,EAAAA,KAAU,KACRiuD,EAAOruD,MAAMgvD,EAAcA,EAPL,GAOuCviD,SAASiiB,IAClDugC,EAAAA,GAA2B,QAAOvgC,EAAMrwB,cAExD4wD,EAAAA,GAAmB,QAAOvgC,EAAMrwB,YAAa+E,EAAAA,GAAeC,QAC9D,GACA,GACD,CAAC2rD,EAAcX,GACpB,CDsHEa,CAAiBb,EAAQO,IAEzB,MAAMO,IAA0B3qD,EAAAA,EAAAA,IAAgB,KAC9C45C,EAAgB,CACdQ,cAAetG,GAAU56C,EACzBmhD,QAAS+P,GACT1oD,OAAQ8+C,EAAgBlG,EAAAA,GAAkBsQ,eAAiBtQ,EAAAA,GAAkBC,eAC7E,IAGEsQ,IAAoB7qD,EAAAA,EAAAA,IAAgB,KACnC8zC,EAOL4V,EAAiB,CAAEoB,WAAYhX,IAN7B6V,EAAe,CACbvgB,eAAgB8f,EAAoB9f,gBAKA,IAGpC2hB,IAAsB/qD,EAAAA,EAAAA,IAAgB,KACtCsqD,KAGJJ,IAAqB,GACrBG,GAAqBD,GAAoB,GAAE,IAGvCY,IAAkBhrD,EAAAA,EAAAA,IAAgB,KAClCuqD,KAGJL,IAAqB,GACrBG,GAAqBD,GAAoB,GAAE,IAGvCa,IAA6BjrD,EAAAA,EAAAA,IAAgB,KACjD4pD,EAA+B,CAAE1wD,OAAQC,EAAMU,GAAIqxD,YAAY,GAAQ,IAgCzE,IAtBAtvD,EAAAA,EAAAA,KAAU,KACR,MAAMgvC,EAAUp8B,SAASwY,cAA+B,IAAGzmB,KAC3D,GAAKqqC,EAIL,OAAO9/B,EAAAA,EAAAA,IAAc8/B,EAAS,CAC5BugB,wBAAyB,8BACzBC,QAASlrC,EAAAA,GAAe,CAACpW,EAAGuhD,IACtBA,IAAcC,EAAAA,GAAeC,OAC/BR,MACO,GACEM,IAAcC,EAAAA,GAAeE,OACtCR,MACO,QAIPpxD,GACJ,GACD,CAACoxD,GAAiBD,KAEhBv9B,GAASr0B,EA2Fd,OAAIo/C,EArFAn8C,EAAAA,GAAAC,cAAA,OAAKjC,UDtNgkB,YCuNnkBgC,EAAAA,GAAAC,cAACu+C,EAAAA,EAAS,CACRrC,MAAOA,EACP77C,KAtJe,IAuJftC,UD1NgnB,WC2NhnBqxD,gBD3N4oB,WC4N5oBC,aAAW,IAEbtvD,EAAAA,GAAAC,cAAA,MAAIjC,UD9NulB,WC8NzjB0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,IAAY6R,EAAAA,EAAAA,GAAW8sC,EAAO3tC,QAC1FxO,EAAAA,GAAAC,cAAA,KAAGjC,UD/N6qB,YCgO7qBq+C,EAAgBh+C,EAAK,mBAAoBg+C,EAAe,KAAOh+C,EAAK,2BAgF3E2B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,cAAekkD,GDjTxB,YCkTjB1iD,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAE1BwC,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GA9EpB,WACE,GAAKspD,KAAUA,EAAOrtD,QAAU,GAIhC,OACEJ,EAAAA,GAAAC,cAAA,OAAKjC,UD5OsO,YC6OxOyvD,EAAOpuD,KAAI,CAACkwD,EAAGhuD,IACdvB,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GD9O6O,WC8O5MqB,IAAMysD,ID9OqO,gBCkPrS,CAmEOwB,IACCpL,GAAiB2I,GACjB/sD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GACdiE,EACA+pD,IAAW/pD,IAGXnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACb9F,EAAK0uD,EAAkB/B,QAAU,uBAAyB,0BAIhE5G,GAAiB+I,GAChBntD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GACdiE,GACC+pD,IAAWC,KAAWhqD,IAGvBnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAA8BhE,QApJxD,WACO+tD,KACLJ,IAAqB,GACrBG,GAAqBR,EAAOrtD,OAAS,GACvC,IAiJc+tD,IACAnuD,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACLkc,MAAOq/B,EACPnvD,UD3U4K,WC4U5KsC,KAAK,SAGRjC,EAAK8uD,EAAkBnC,QAAU,uBAAyB,0BAIjEhrD,EAAAA,GAAAC,cAAC4+C,EAAAA,GAAU,CAACE,UAAWiP,GAAmB/9C,KAAM89C,IAC7C0B,KAGDvB,IACAluD,EAAAA,GAAAC,cAAA,UACEkc,KAAK,SACLza,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BQ,WAAWkC,EAAAA,EAAAA,GAAeiE,ED3VoV,YC4V9W,aAAY9F,EAAK,oBACjB8B,QAASwuD,MAGXR,IACAnuD,EAAAA,GAAAC,cAAA,UACEkc,KAAK,SACLza,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BQ,WAAWkC,EAAAA,EAAAA,GAAeiE,EDpW6Y,YCqWva,aAAY9F,EAAK,QACjB8B,QAASyuD,MAKf5uD,EAAAA,GAAAC,cAAA,OAAKjC,UD3W8B,WC2WN0D,IAAKrD,EAAKsD,MAAQ,MAAQ,SACnDyvB,GAAQr0B,IACRiD,EAAAA,GAAAC,cAACw+C,EAAAA,EAAa,CACZ9sC,KAAOyf,GAAQr0B,EACf2hD,iBAAe,EACfrB,gBA9Sc,GA+SdC,mBAAoBmR,GACpBa,aAAW,EACXI,cAAY,IA7GtB,WACE,MAAM5lB,EAAUhtC,GAAU46C,EAG1B,KAD4BoT,EAAAA,EAAAA,IAAwBhhB,GAGpD,OAAI1Y,EAEApxB,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACTiE,EACA,UACAkmD,EAAAA,EAAAA,IAAaj5B,EAAMo4B,IAAe,WAGpCxpD,EAAAA,GAAAC,cAAA,QAAMjC,UDrRgf,WCqRld0D,IAAI,SACrCyoD,EAAAA,EAAAA,IAAc9rD,EAAM+yB,EAAMo4B,IAE5BA,GAAYmG,0BACX3vD,EAAAA,GAAAC,cAAA,QAAMjC,UDzR6hB,WCyRhgBmC,QAAS0uD,IAC1C7uD,EAAAA,GAAAC,cAAA,YAAO5B,EAAK,uBAQpB2B,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAe,UAAWzC,IAAI,SAC5DqxB,EAAAA,EAAAA,IAAch2B,GACVsB,EAAK,cAAetB,EAAMoiD,cAAgB,EAAG,KAC7C9gD,EAAK,UAAWtB,EAAMoiD,cAAgB,EAAG,KAInD,CA6EOyQ,KAlIP,SAASH,GAAYtyD,GACnB,MAGM+vD,GAHQO,EAAOrtD,OAAS,EAC1BqtD,EAAOO,SACPxwD,IAC0BuvD,GAAqBE,GAAoBI,GAAoBF,EAE3F,OACEntD,EAAAA,GAAAC,cAAC4vD,EAAY,CACXta,IAAKyY,GACL58B,KAAMA,EACNr0B,KAAMA,EACN+wB,MAAOo/B,EACP3C,aAAc7sD,QAAQP,GAAYotD,GAClCpqD,QAASouD,IAGf,CAoHQ,I,+HE7VV,MAqDA,GAAe7xD,EAAAA,EAAAA,KArD2BqB,IAOpC,IAPqC,SACzC2yC,EAAQ,mBACRne,EAAkB,UAClBv0B,EAAS,KACTsC,EAAI,cACJwvD,EAAa,oBACb5X,GACDn6C,EACC,MAAMgyD,EAAW,eAAgBrf,EAC3Bsf,GAAoBrxD,EAAAA,EAAAA,KAAQ,IAChC4zB,GAAoBnF,MAAM6iC,IAAcC,EAAAA,EAAAA,IAAeD,EAAUvf,SAAUA,MAC1E,CAACne,EAAoBme,IAClByf,EAAeH,GAAmBI,YAAY3yD,GAC9C4K,GAAY/F,EAAAA,EAAAA,GAAU,WAAU6tD,KAAiBA,EAAc3tD,EAAAA,GAAeC,SAE9E9C,GAAuBwD,EAAAA,EAAAA,GAAmBkF,GAE1CgoD,EAAqB,aAAc3f,GAAkC,OAAtBA,EAAS5W,SACxDw2B,EAA6BR,GAAiB,aAAcpf,GAAkC,MAAtBA,EAAS5W,SAEvF,OAAIi2B,EAEA/vD,EAAAA,GAAAC,cAAC+Y,EAAAA,EAAW,CACV4tB,WAAY8J,EAAS9J,WACrB5oC,WAAWkC,EAAAA,EAAAA,GAAe,sBAAuBlC,GACjDsC,KAAMA,EACNiwD,8BAA+BrY,IAKjCoY,EAEAtwD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sCAAsCgG,MAAQ,cAAa1D,eAAkBA,QAK5FN,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACT,sBACAmwD,GAAsB,mBACtB1wD,EACA3B,GAEFgG,MAAO1D,EAAQ,UAASA,gBAAmBA,WAAW9C,EACtD0G,IAAKmE,GAAamoD,EAClB33C,IAAKm3C,GAAmBxhD,MACxBpK,WAAW,GACX,G,yICjDN,MA2GA,GAAe1H,EAAAA,EAAAA,KA3GmBqB,IAS5B,IAT6B,OACjCwlB,EAAM,QACNktC,EAAU,WAAU,OACpB3mB,EAAM,MACNhc,EAAK,WACL7H,EAAU,QACVsI,EAAO,QACP5K,EAAO,oBACPC,GACD7lB,EACC,MAAM,eACJ2yD,EAAc,WACdC,EAAU,mBACVC,EAAkB,YAClBC,EAAW,sBACXC,IACE1yD,EAAAA,EAAAA,OAEG2yD,EAAgBC,IAAqBtpD,EAAAA,EAAAA,IAA0B,SAC/Do6C,EAAamP,IAAkBvpD,EAAAA,EAAAA,IAAS,IAEzCwpD,GAAettD,EAAAA,EAAAA,IAAgB,KACnC,OAAQ6sD,GACN,IAAK,WACHC,EAAe,CAAEzqC,WAAYA,EAAakrC,OAAQJ,EAAgBjP,gBAClEgP,IACA,MACF,IAAK,OACHH,EAAW,CAAE7zD,OAAQgtC,EAAQqnB,OAAQJ,EAAgBjP,gBACrD,MACF,IAAK,QACH8O,EAAmB,CACjB9zD,OAAQgtC,EAAQhc,QAAOqjC,OAAQJ,EAAgBjP,gBAEjD,MACF,IAAK,QACH+O,EAAY,CACV/mB,OAAQA,EAASvb,QAASA,EAAU4iC,OAAQJ,EAAgBjP,gBAGlEn+B,GAAS,IAGLytC,GAAqBxtD,EAAAA,EAAAA,IAAiBy8C,IAC1C2Q,EAAkB3Q,EAAyB,IAGvCgR,GAA0BztD,EAAAA,EAAAA,IAAiB8J,IAC/CujD,EAAevjD,EAAEoU,OAAOu+B,MAAM,IAG1BhiD,GAAOC,EAAAA,EAAAA,KAEPgzD,GAA8D3yD,EAAAA,EAAAA,KAAQ,IAAM,CAChF,CAAE0hD,MAAO,OAAQvF,MAAOz8C,EAAK,2BAC7B,CAAEgiD,MAAO,WAAYvF,MAAOz8C,EAAK,+BACjC,CAAEgiD,MAAO,cAAevF,MAAOz8C,EAAK,kCACpC,CAAEgiD,MAAO,aAAcvF,MAAOz8C,EAAK,kCACnC,CAAEgiD,MAAO,YAAavF,MAAOz8C,EAAK,+BAClC,CAAEgiD,MAAO,eAAgBvF,MAAO,iBAChC,CAAEuF,MAAO,kBAAmBvF,MAAO,oBACnC,CAAEuF,MAAO,QAASvF,MAAOz8C,EAAK,8BAC7B,CAACA,IAEJ,GACe,aAAZoyD,IAA2BxqC,GACZ,SAAZwqC,IAAuB3mB,GACX,UAAZ2mB,KAAyB3mB,IAAWhc,IACxB,UAAZ2iC,KAAyBliC,IAAYub,GAEzC,OAGF,MAAMt7B,EACFnQ,EADsB,aAAZoyD,EACL,2BACA,qBAET,OACEzwD,EAAAA,GAAAC,cAAC63C,EAAAA,EAAK,CACJv0B,OAAQA,EACRI,QAASA,EACT4tC,QAAShuC,EAAS2tC,OAAe1zD,EACjComB,oBAAqBA,EACrB5lB,WAAWkC,EAAAA,EAAAA,GAAe,SAAsB,UAAZuwD,GAAuB,wBAC3DjiD,MAAOA,GAEPxO,EAAAA,GAAAC,cAACuxD,EAAAA,EAAU,CACTvhD,KAAK,iBACLwhD,QAASH,EACTnO,SAAUiO,EACVM,SAAUX,IAEZ/wD,EAAAA,GAAAC,cAACunD,EAAAA,EAAS,CACR1M,MAAOz8C,EAAK,iCACZgiD,MAAOyB,EACPqB,SAAUkO,IAEZrxD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACbgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACoP,MAAM,SAAS5R,UAAU,wBAAwBg6C,QAAM,EAAC73C,QAAS+wD,GACtE7yD,EAAK,sBAER2B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACxC,UAAU,wBAAwBg6C,QAAM,EAAC73C,QAASwjB,GAAUtlB,EAAK,YAErE,G,wEChHZ,MAqCA,GAAe3B,EAAAA,EAAAA,KAlCiBqB,IAQ1B,IAR2B,MAC/Bo+C,EAAK,UACLn+C,EAAS,gBACTqxD,EAAe,KACf/uD,EAAI,YACJgvD,EAAW,oBACXpX,EAAmB,QACnB/3C,GACDpC,EACC,OAAIo+C,EAAMwV,aAXY,MAWGxV,EAAMwV,YAE3B3xD,EAAAA,GAAAC,cAAC+Y,EAAAA,EAAW,CACV4tB,WAAYuV,EAAMwV,YAClB3zD,UAAWA,EACXsC,KAAMA,EACNiwD,8BAA+BrY,EAC/B0Z,UAAYtC,OAA2B9xD,EAnB5B,EAoBX2C,QAASA,IAMbH,EAAAA,GAAAC,cAAC4xD,EAAAA,EAAgB,CACfC,UAAW3V,EAAM2V,UACjBtjD,MAAO2tC,EAAM3tC,MACbujD,QAAS5V,EAAM1+C,GACfO,UAAWA,EACXqxD,gBAAiBA,EACjBlvD,QAASA,GACT,G,mHC5BN,MAkBA,GAAezD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAmC,IAAjC,aAAEi9C,GAAcj9C,EACvB,OAAKi9C,EAAa7E,OAMX,CAAEsa,YAFU7hC,EAAAA,EAAAA,KAAWvzB,EAAQ2/C,EAAa7E,SAH1C,CAAC,CAKW,GARL/6C,EAlB4BoB,IAAkC,IAAjC,aAAEw+C,EAAY,WAAEyV,GAAYj0D,EAC3E,MAAMM,GAAOC,EAAAA,EAAAA,KACP2zD,EAAiBD,IAAeA,EAAWrK,SAAUhR,EAAAA,EAAAA,IAAuBqb,GAC5EnrD,EAAUxI,EAAKk+C,EAAapzB,QAE/B3R,QAAQ,SAAU,IAClBA,QAAQ,UAAW+kC,EAAahgB,OAAS,IAAI2I,OAEhD,OACEllC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,gBAAgB0D,IAAKrD,EAAKsD,MAAQ,MAAQ,QACpDswD,GACCjyD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,SAAQ2N,EAAAA,EAAAA,GAAW4iD,IAEvDjyD,EAAAA,GAAAC,cAAC0+C,EAAAA,EAAY,CAAC93C,QAASA,IACrB,I,0KCZR,MAyGA,GAAenK,EAAAA,EAAAA,KA3FeqB,IAExB,IAFyB,QAC7BoH,EAAO,YAAEC,EAAW,YAAEs7C,EAAW,oBAAExI,EAAmB,eAAEga,GACzDn0D,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAI6zD,GAAgDC,EAAAA,EAAAA,IAAkBjtD,GAEtE,IAAKgtD,EAAU,CACb,MAAM1kC,GAAO4kC,EAAAA,EAAAA,IAAsBltD,GACnC,GAAIsoB,EAAM,CACR,MAAM,IAAEH,EAAG,OAAEglC,GAAW7kC,EAExB0kC,EAAW,CACTI,SAAUD,EAAO96C,QAAQ,QAAS,IAClC8V,IAAKA,EAAI3W,SAAS,OAAS2W,EAAMA,EAAI3W,SAAS,KAAQ,UAAS2W,IAAS,UAASA,IACjFklC,sBAAsBC,EAAAA,EAAAA,IAAettD,KAAamoB,GAC9ColC,EAAAA,EAAAA,GAAqBr0D,EAAM8G,OAAS3H,OAAWA,EA9BnC,UA+BZA,EAER,CACF,CAEA,MAAMusB,GAAqBnmB,EAAAA,EAAAA,IAAgB,KACzCsuD,EAAe/sD,EAAQ1H,GAAI0H,EAAQrI,OAAO,IAG5C,IAAKq1D,EACH,OAGF,MAAM,SACJI,EAAQ,IACRjlC,EAAG,WACHqlC,EAAU,MACVnkD,EAAK,YACLszC,EAAW,qBACX0Q,EAAoB,MACpB1kC,EAAK,MACL7mB,GACEkrD,EAEES,GAAwBxtD,GAAe08C,IAAe+Q,EAAAA,EAAAA,GAAS/Q,EAvD/C,KAyDhB9jD,GAAYkC,EAAAA,EAAAA,GAChB,uBACE4tB,IAAU7mB,GAAU,iBAGlB6rD,EAAkBxlC,EAAI9V,QAAQ,UAAW,KAAOm7C,EAEtD,OACE3yD,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACX,gBAAeu0D,GAAYI,GAAY,GACvCjxD,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzBswB,GACC9tB,EAAAA,GAAAC,cAAC8yD,EAAAA,EAAK,CAAC5tD,QAASA,EAASu7C,YAAaA,EAAaxI,oBAAqBA,IAE1El4C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAAC3N,MAAOtD,EAAKsD,MAAO3D,UAAU,aAAamC,QAAS4pB,IACtD1a,EAAAA,EAAAA,GAAWb,GAAS+jD,GAAYI,KAEjCC,GAAwBJ,IACxBxyD,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAAC3N,MAAOtD,EAAKsD,MAAO3D,UAAU,mBAAmBmC,QAAS4pB,GAC5DyoC,GAAyBI,IAAwBvjD,EAAAA,EAAAA,GAAWujD,IAGjE5yD,EAAAA,GAAAC,cAAC+yD,EAAAA,EAAQ,CACP1lC,IAAKA,EACLtvB,UAAU,YACV0C,KAAMoyD,EACNnxD,MAAOtD,EAAKsD,QAEbyD,GAAepF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBAAeqR,EAAAA,EAAAA,GAAWjK,KAE1DA,GACCpF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CACHtR,UAAU,OACVmC,QAAS4pB,EACTpoB,MAAOtD,EAAKsD,QAEX4N,EAAAA,EAAAA,IAAoBlR,EAAqB,IAAf8G,EAAQI,QAIrC,G,mRC7DV,MAAM0tD,EAAO,IAGPC,EAAgCn1D,IAiBhC,IAjBiC,UACrCC,EAAS,QACTmH,EAAO,UACP2hB,EAAS,OACTG,EAAM,WACND,EAAU,cACVmsC,EAAa,MACb3kD,EAAK,WACL6c,EAAU,YACVq1B,EAAW,aACX/0B,EAAY,aACZynC,EAAY,iBACZC,EAAgB,iCAChBC,EAAgC,8BAChCC,EAA6B,8BAC7BhD,EAA6B,QAC7BpwD,GACDpC,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7Bw4C,GAAiBC,EAAAA,EAAAA,IAAkBt0C,EAAKwuD,GAExCC,GAAe70D,EAAAA,EAAAA,KAAQ,KAC3B,MAAM80D,EAAiC,YAApB3sC,GAAW3K,MAAsB2K,EAAU2sC,WAC9D,GAAKA,EACL,MAAO,CACL5sD,QAAS4sD,EACV,GACA,CAAC3sC,IAEE65B,GAAer+C,EAAAA,EAAAA,GAAS6C,IAAW0C,EAAAA,EAAAA,IAAoB1C,EAAS,cAAei0C,GAC/Esa,GAAiBC,EAAAA,EAAAA,GAAaxuD,GAAWquD,GACzCI,EAAel2D,QAAQyH,IAAW0uD,EAAAA,EAAAA,IAAqB1uD,IACvDs4B,EAAY//B,QAAQyH,IAAW07C,EAAAA,EAAAA,IAAoB17C,IACnD2uD,EAAUp2D,QAA4B,YAApBopB,GAAW3K,MAAsB2K,EAAUgtC,SAC7DC,EAAuC,YAApBjtC,GAAW3K,KAAqB2K,EAAUktC,eAAYx2D,EAEzEy2D,EAAkB9uD,IAAW+uD,EAAAA,EAAAA,IAAsB/uD,IACnD,eAAEgvD,IAAmBC,EAAAA,EAAAA,GACzBf,EAAkBluD,GAASrI,OAAQm3D,EAAkB9uD,GAAS1H,QAAKD,EAAW81D,GAG1Ej1D,GAAOC,EAAAA,EAAAA,KAEP8G,EAAc6hB,GAASotC,EAAAA,EAAAA,IAAeh2D,EAAM4oB,GAC7C8sC,GAAkBpsC,gBAAkBxiB,GAASoiB,aAAaI,eACzD2sC,EAAkBttC,GAAaqtC,EAAAA,EAAAA,IAAeh2D,EAAM2oB,QAAcxpB,EAClE+2D,EAAqBpB,GAAgBkB,EAAAA,EAAAA,IAAeh2D,EAAM80D,GAC5DhuD,GAASoiB,aAAaI,eACpB6sC,EAAiBvtC,GAAUA,EAAOxpB,KAAO01D,GAAe11D,IAExD,YAAE48C,GAAW,gBAAEoa,KAAoBC,EAAAA,EAAAA,GAAav0D,GAgGtD,OACEH,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACL/G,WAAWkC,EAAAA,EAAAA,GACT,kBACAlC,GACAmtB,EAAAA,EAAAA,GAAkBlE,EAAQmsC,GAAc,GACxCU,GAAW,WACXJ,GAAkB,cAEpBhyD,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1B2C,QAASk6C,GACT3E,YAAa+e,IAEZf,GAyBP,SACEzxD,EACA0yD,EACAf,EACAlT,EACAjjB,GAEA,MAAM,MAAEjyB,EAAK,OAAEC,IAAWmpD,EAAAA,EAAAA,MAEpBC,EAASF,GAAW1yD,EAE1B,OACEjC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,iBAAkB0zD,GAAgB,WAC7Dn2B,GACAz9B,EAAAA,GAAAC,cAAA,OACEiE,IAAK2wD,EACLrpD,MAAOA,EACPC,OAAQA,EACRoN,IAAI,GACJ7a,UAAU,YACVoG,WAAW,IAGfpE,EAAAA,GAAAC,cAACkhD,EAAAA,EAAY,CAACl/C,aAAc4yD,EAAQzT,UAAW1jD,QAAQ+/B,GAAYjyB,MAAOA,EAAOC,OAAQA,IACxFi1C,GAAe1gD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAGtC,CApDyB82D,CAAgBpB,EAAgB/S,EAAciT,EAAclT,EAAajjB,GAC3FxW,GAAQrX,OAAOmlD,mBACd/0D,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAmB,CAClBC,gBAAiBhuC,EAAOrX,MAAMmlD,kBAC9B/2D,UAAU,sCAGdgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,wBAAyB4zD,GAAW,cAnH7C,YAApBhtC,GAAW3K,MAAsB2K,EAAUc,WACtCstC,EAAAA,EAAAA,GAAuB,CAC5Bx0D,KAAMomB,EAAUc,UAAUlnB,KAC1B+Y,SAAUqN,EAAUc,UAAUnO,SAC9B07C,aAAcxpC,EACdypC,UA7DW,KAiEVjwD,GAIDkwD,EAAAA,EAAAA,IAAgBlwD,GAEhBnF,EAAAA,GAAAC,cAACq1D,EAAAA,EAAa,CACZnwD,QAASA,EACTowD,YAAU,EACVhC,8BAA+BA,EAC/BhD,8BAA+BA,IAMnCvwD,EAAAA,GAAAC,cAACu1D,EAAAA,EAAc,CACbn3D,KAAMA,EACN8G,QAASA,EACTswD,QAAS/3D,QAAQg2D,GACjBS,eAAgBA,EAChBZ,8BAA+BA,EAC/BhD,8BAA+BA,EAC/B6E,UAxFW,KAkEN/pC,GA2BX,SAAgCqqC,GAC9B,IAAKA,GAASA,EAAM7uD,QAAQnG,KAAM,OAAOuyD,EACzC,MAAMnR,GAAc6T,EAAAA,EAAAA,IAA+Bt3D,EAAMq3D,EAAM7uD,SAC/D,OAAKi7C,GAAeA,IAAgB8T,EAAAA,IAElC51D,EAAAA,GAAAC,cAAA,aACGoP,EAAAA,EAAAA,GAAWyyC,IAHkDmR,CAMpE,CApCyB4C,CAAuBrC,IAAiBP,GA4G3DjzD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,iBAhErB,WACE,GAAIwQ,EACF,OAAOa,EAAAA,EAAAA,GAAWb,GAGpB,IAAKpJ,EACH,OAAO6tD,EAGT,IAAI9uC,EACA6C,KACE+L,EAAAA,EAAAA,IAAc/L,KAChB7C,EAAO,mBAGL2xC,EAAAA,EAAAA,IAAY9uC,KACd7C,EAAO,iBAIX,MAAM4xC,EAAiBpqC,GAAgBjuB,QAAQopB,GAAa,cAAeA,GAAaA,GAAWc,WAEnG,OACE5nB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,OA5BGmW,MACD6H,EAAAA,EAAAA,IAAS7H,GAAYvpB,KACrBupB,EAAWvpB,KAAOwpB,GAAQxpB,KA4BxBuC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,oBACbqR,EAAAA,EAAAA,GAAW0mD,EAAiB13D,EAAK,eAAgB+G,GAAeA,IAGpE+e,GAAQnkB,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAMkU,EAAMnmB,UAAU,uBACpCmmB,GAAQmwC,GACPt0D,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBACbqR,EAAAA,EAAAA,GAAWilD,IAKtB,CA4BS0B,GACAzB,IAAuBC,GACtBx0D,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAMkjD,EAAgB,eAAiB,UAAWn1D,UAAU,0BACjEqR,EAAAA,EAAAA,GAAWklD,MAKhB,EAiCG7oC,GAA0BuqC,EAAAA,EAAAA,GAAiB/C,GAExD,G,iMC7RA,MC2BMgD,EAAiC,CACrC,CACEC,OAAQ,GAAIC,MAAO,GAAIC,QAAS,IAAMzqD,MAAO,KAE/C,CACEuqD,OAAQ,GAAIC,MAAO,GAAIC,QAAS,GAAKzqD,MAAO,GAE9C,CACEuqD,OAAQ,GAAIC,MAAO,GAAIC,QAAS,IAAMzqD,MAAO,KAE/C,CACEuqD,OAAQ,GAAIC,MAAO,GAAIC,QAAS,IAAMzqD,MAAO,GAE/C,CACEuqD,OAAQ,GAAIC,MAAO,EAAGC,QAAS,GAAKzqD,MAAO,MAE7C,CACEuqD,OAAQ,GAAIC,MAAO,GAAIC,QAAS,GAAKzqD,MAAO,GAE9C,CACEuqD,OAAQ,IAAKC,MAAO,GAAIC,QAAS,GAAKzqD,MAAO,MAE/C,CACEuqD,OAAQ,IAAKC,MAAO,GAAIC,QAAS,GAAKzqD,MAAO,MAI3C0qD,EAAa1a,EAAAA,EAsHnB,GAAel/C,EAAAA,EAAAA,KA7GaqB,IAGZ,IAHa,gBAC3Bk3D,EAAe,UACfj3D,GACSD,EAET,MAAMiM,GAAYpJ,EAAAA,EAAAA,IAA0B,MAEtC21D,GAAe31D,EAAAA,EAAAA,IAAuB,OAErC41D,EAAYC,IAAiB/uD,EAAAA,EAAAA,MAE9BgvD,GAAMC,EAAAA,EAAAA,KAENt4D,GAAOC,EAAAA,EAAAA,MAEP,YAAEs4D,IAAgBC,EAAAA,EAAAA,GAAe5B,GACjC6B,EAAmBF,GAAcr0D,EAAAA,EAAAA,IAAsBq0D,EAAYn5D,SAAMD,EACzEqF,GAAaP,EAAAA,EAAAA,GAASw0D,GAEtBC,GAAcC,EAAAA,EAAAA,GAAwBT,GAEtCU,GAA6BC,EAAAA,EAAAA,KAA6B,KACzDr0D,IACLs0D,EAAAA,EAAAA,IAAat0D,GAAYu0D,KAAKX,EAAc,GAC3C,CAAC5zD,KAEJrD,EAAAA,EAAAA,KAAU,KACRy3D,GAA4B,GAC3B,CAACA,IAEJ,MAAMI,GAAezzD,EAAAA,EAAAA,IAAgB,KACnC,MAAMwH,EAASpB,EAAU5I,QACzB,IAAKgK,IAAWorD,IAAeO,EAAa,OAE5C,MAAMx5C,EAAUnS,EAAOO,WAAW,OAC5B,MAAEH,EAAK,OAAEC,GAAWL,EAE1BmS,EAAQ+5C,UAAU,EAAG,EAAG9rD,EAAOC,GAE/ByqD,EAAerqD,SAAQvM,IAEjB,IAFkB,OACtB62D,EAAM,MAAEC,EAAK,QAAEC,EAAO,MAAEzqD,GACzBtM,EACC,MAAM4M,GAAK7N,EAAKsD,MAAQw0D,EAAS3qD,EAAQkrD,EAAMP,GAAUO,EACnDvqD,EAAIiqD,EAAQM,EAEZtB,EAAYkB,EAAaI,EAE/Bn5C,EAAQg6C,OACRh6C,EAAQxR,YAAcsqD,EACtB94C,EAAQi6C,UAAUtrD,EAAGC,GACrBoR,EAAQ3R,MAAMA,EAAOA,GACrB2R,EAAQk6C,UAAUjB,GAAapB,EAAY,GAAIA,EAAY,EAAGA,EAAWA,GACzE73C,EAAQm6C,SAAS,IAGnB,MAAMC,EAAa,GAAEZ,IAAcH,EAAagB,SA/DxB,KACI,OAgE5Br6C,EAAQg6C,OACRh6C,EAAQjS,UAAYqsD,EACpBp6C,EAAQs6C,yBAA2B,cACnCt6C,EAAQu6C,SAAS,EAAG,EAAGtsD,EAAOC,GAC9B8R,EAAQm6C,SAAS,IAGbK,GAAkCb,EAAAA,EAAAA,IAA6BG,EAAc,CAACA,KAEpF73D,EAAAA,EAAAA,KAAU,KACRu4D,GAAiC,GAChC,CAACvB,EAAYn4D,EAAKsD,MAAOo1D,EAAagB,IAEzC,MAAMC,GAAmBd,EAAAA,EAAAA,KAA6B,CAACpO,EAAqBmP,MAC1E/3B,EAAAA,EAAAA,KAAgB,KACd,MAAM90B,EAASpB,EAAU5I,QACpBgK,IAELA,EAAOI,MAAQs9C,EAAc4N,EAC7BtrD,EAAOK,OAASwsD,EAAevB,EAE/BtrD,EAAOpH,MAAMwH,MAAS,GAAEs9C,MACxB19C,EAAOpH,MAAMyH,OAAU,GAAEwsD,MAEzBZ,IAAc,GACd,GACD,CAACX,IAEEwB,GAAehB,EAAAA,EAAAA,KAA8BiB,IACjD,MAAM,MAAE3sD,EAAK,OAAEC,GAAW0sD,EAAMC,YAEhCJ,EAAiBxsD,EAAOC,EAAO,GAC9B,CAACusD,IAaJ,OAXA5O,EAAAA,EAAAA,GAAkBmN,EAAc2B,IAEhC14D,EAAAA,EAAAA,KAAU,KACR,MAAM64D,EAAY9B,EAAan1D,QAC/B,IAAKi3D,EAAW,OAEhB,MAAM,MAAE7sD,EAAK,OAAEC,GAAW4sD,EAAUzqD,wBAEpCoqD,EAAiBxsD,EAAOC,EAAO,GAC9B,CAACusD,IAGFh4D,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDtKG,WCsKyBlC,GAAY+G,IAAKwxD,GAC3Dv2D,EAAAA,GAAAC,cAAA,UAAQ8E,IAAKiF,IACT,G,kBCvKH,SAASsuD,EAAqBC,EAA4BC,GAC/D,MAAM,MACJC,EAAK,OAAEC,EAAM,mBAAEC,EAAkB,gBAAEC,EAAe,WAAEC,EAAU,iBAAEC,GAC9DP,EAEEQ,EAAiBP,GAAmBE,IAAWC,GAAsBE,EAW3E,MAAO,CACLG,aAVmBD,EAAiBN,EAAQ,EAAIA,EAWhDQ,aAVmBv7D,QAAQk7D,GAW3BF,SACAQ,eAVsBN,GAAmBG,EAAkB,GACxDL,EAASC,IAAuBC,EAAkBD,GAUrDQ,gBATsBP,EAAkBA,EAAkBF,EAAS,EAUnEU,gBARqC57D,IAApBo7D,EASjBE,mBAEJ,C,kECzBe,SAASO,EAAen+C,EAAkBo+C,GACvD,OAAOA,EAAkB,GAAEC,EAAAA,MAAkBr+C,IAAc,IAAGA,GAChE,C,0HCeO,SAASs+C,EAAiBz7D,GAoB9B,IApB+B,QAChCoH,EAAO,UACPs0D,EAAS,UACTrE,EAAS,SACTsE,EAAQ,eACRC,EAAc,YACdjZ,EAAW,cACXkZ,EAAa,mBACbC,EAAkB,iBAClBC,GAWD/7D,EACC,MAAM,KAAE2C,EAAI,SAAE+Y,GAAatU,EAAQ0B,QAAQnG,MAAQ,CAAC,EAEpD,IAAKA,EAAM,CACT,MAAMq5D,GAA0BtH,EAAAA,EAAAA,IAAettD,GAC/C,OAAO40D,EAA0B,EAAClH,EAAAA,EAAAA,GAASkH,EAAyBJ,SAAmBn8D,CACzF,CAEA,MAAMw8D,GAAaC,EAAAA,EAAAA,IAAc90D,GAEjC,OAAO+vD,EAAAA,EAAAA,GAAuB,CAC5Bx0D,MAAMmyD,EAAAA,EAAAA,GAASnyD,EAAMi5D,GACrBlgD,WACAggD,YACArE,YACAyE,qBACA7oB,YAAc,GAAE8oB,EAAmB,MAAQ,KAAKE,IAChDN,WACAhZ,cACAkZ,iBAEJ,CAGO,SAASlH,EACdr0D,EACA8G,GAIY,IAHZswD,EAAO3rD,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACP2vD,EAAkB3vD,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAClBm8D,EAAc7vD,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGowD,EAAAA,GAEjB,MAAM,SAAEzgD,GAAatU,EAAQ0B,QAAQnG,MAAQ,CAAC,EAExCy5D,EAAc1gD,GAAUqO,MAAMpa,GAAMA,EAAEyO,OAASrD,EAAAA,GAAsBshD,UACrEC,EAAiB5gD,GAAUqO,MAAMpa,GAAMA,EAAEyO,OAASrD,EAAAA,GAAsBE,cAC9E,IAAKmhD,IAAgBE,EAAgB,CACnC,MAAM35D,GAAOmyD,EAAAA,EAAAA,IAASyH,EAAAA,EAAAA,IAAsBj8D,EAAM8G,EAASswD,GAAUkE,GAErE,OAAIF,GACKpqD,EAAAA,EAAAA,GAAW3O,EAAM,CAAC,QAAS,aAAc,CAAE+4D,eAE3CpqD,EAAAA,EAAAA,GAAW3O,EAEtB,CAEA,MAAM67B,GAASk5B,IAAW8E,EAAAA,EAAAA,IAAuBp1D,GAC3Cq1D,EAAiBj+B,EAAS,GAAEA,KAAW,GAEvC77B,EAAO84D,EAAkB,CAC7Br0D,UAASs0D,YAAWC,UAAU,EAAMC,mBAEhC7X,GAAc2Y,EAAAA,EAAAA,IAA6Bp8D,EAAM8G,EAASzE,GAEhE,MAAO,KACF2O,EAAAA,EAAAA,GAAWmrD,MACVnwD,MAAMqwD,QAAQ5Y,GAAeA,EAAc,CAACA,IAChDviD,OAAO7B,QACX,C,wEC3FA,MAAMi9D,EAAyB,IACzBC,EAAuB,IAEd,SAASC,EACtBC,GAGA,IAFAC,EAAwBjxD,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACxBkxD,EAAsBlxD,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAGtB,MAAMZ,GAASiC,EAAAA,EAAAA,MACf,OAAOo8D,EAAAA,EAAAA,IAAQH,GAAUr9D,IACvB,MAAMV,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQa,GAChC,IAAKV,EACH,OAAO,EAGT,IAAIm+D,EAAW,EAEf,MAAMC,GAAcC,EAAAA,EAAAA,KAAsBx+D,EAAQa,GAalD,OAZI09D,IACFD,GAAYC,EAAY51D,MAGtBw1D,GAA4Bh+D,EAAKs+D,aACnCH,GAAYP,GAGVK,GAAeA,EAAYrkD,SAASlZ,KACtCy9D,EAAWt+C,KAAKC,MAAQ+9C,GAAwBI,EAAY56D,OAAS46D,EAAY7lD,QAAQ1X,KAGpFy9D,CAAQ,GACd,OACL,C,yTCpCA,MAAMI,EAAc,KACdC,EAAe,MAKd,SAASC,IACd,MAAM3+C,EAAM,IAAID,KAChBC,EAAI4+C,SAAS,EAAG,EAAG,EAAG,GACtB,MAAMC,EAAM7+C,EAAI8+C,SACVC,EAAO/+C,EAAIg/C,UAAYH,GAAe,IAARA,GAAa,EAAI,GACrD,OAAO,IAAI9+C,KAAKC,EAAIi/C,QAAQF,IAAOG,SACrC,CASO,SAASC,EAAgBC,EAAuCC,GACrE,GAAc,IAAVA,EAAa,OAAOD,EAExB,MAAME,EAA+C,GAErD,IAAK,MAAMxtB,KAASstB,EAAQ,CAC1B,IAAIj3D,GAAS2pC,EAAMytB,YAAcF,GAASX,EACtCt2D,GAAO0pC,EAAM0tB,UAAYH,GAASX,EAElCv2D,EAAQ,IAAGA,GAASu2D,GACpBt2D,GAAO,IAAGA,GAAOs2D,GAEjBv2D,EAAQC,GACVk3D,EAAc36D,KAAK,CAAE46D,YAAap3D,EAAOq3D,UAAWd,QACpDY,EAAc36D,KAAK,CAAE46D,YAAa,EAAGC,UAAWp3D,KAEhDk3D,EAAc36D,KAAK,CAAE46D,YAAap3D,EAAOq3D,UAAWp3D,GAExD,CAKA,OAHAk3D,EAAcG,MAAK,CAACC,EAAGC,IAAMD,EAAEH,YAAcI,EAAEJ,cAGxCD,EAAcj+C,QAAsC,CAACC,EAAKwwB,KAC/D,MAAM8tB,EAAOt+C,EAAIA,EAAI/d,OAAS,GAM9B,OALIq8D,GAAQA,EAAKJ,WAAa1tB,EAAMytB,YAClCK,EAAKJ,UAAY/xD,KAAK2B,IAAIwwD,EAAKJ,UAAW1tB,EAAM0tB,WAEhDl+C,EAAI3c,KAAKmtC,GAEJxwB,CAAG,GACT,GACL,C,4FCtDA,QAA8R,WC2BxRu+C,EAAOryD,MAAMgN,KAAK,CAAEjX,OAAQ,IAAK,CAACmvD,EAAGhuD,IAAMA,IA0KjD,GAAe7E,EAAAA,EAAAA,KApKOqB,IAEN,IAFO,cACrB4+D,GACS5+D,EAET,MAAM6+D,GAAgBh8D,EAAAA,EAAAA,IAAuB,OACtCi8D,EAAYC,EAAQC,IAAY/7D,EAAAA,EAAAA,IAAQ,IACxCg8D,EAAUC,EAAcC,IAAmBl8D,EAAAA,EAAAA,IAAQ,GACpD3C,GAAOC,EAAAA,EAAAA,KACP6+D,GAAcC,EAAAA,EAAAA,MAEpB/8B,EAAAA,EAAAA,GAAY88B,EAAa,KAEzB,MAAME,GAAiBC,EAAAA,EAAAA,IAAmB1gE,GAAWA,EAAO2gE,WAAWx+D,OACjEw+D,GAAY5vC,EAAAA,EAAAA,GAAgB0vC,EAAgB,CAACA,IAC7CG,GAA2B7+D,EAAAA,EAAAA,KAAQ,KACvC,IAAK4+D,EAAW,OAAO,EACvB,MAAME,EAAWF,EAAUZ,EAAce,YAEzC,QFhCuC,IAAlC,IAAI9gD,MAAO+gD,oBEgCGF,EAASG,WAAa,EAAE,GAC1C,CAACjB,EAAce,WAAYH,IAExBM,GAAYl/D,EAAAA,EAAAA,KAAQ,KACxB,MAAMm/D,EAAYtC,IAEZuC,EFDH,SAAmB9B,GACxB,MAAM8B,EAAsD,CAAC,EAE7D,IAAK,MAAMpvB,KAASstB,EAAQ,CAC1B,MAAMj3D,EAAQ2pC,EAAMytB,YACdn3D,EAAM0pC,EAAM0tB,UAEZ2B,EAAW1zD,KAAKsgC,MAAM5lC,EAAQs2D,GAC9B2C,EAAS3zD,KAAKsgC,OAAO3lC,EAAM,GAAKq2D,GAEtC,IAAK,IAAII,EAAMsC,EAAUtC,GAAOuC,EAAQvC,IACjCqC,EAAKrC,KACRqC,EAAKrC,GAAO,IAGdqC,EAAKrC,GAAKl6D,KAAK,CACb46D,YAAa9xD,KAAK2B,IAAI,EAAGjH,EAAQ02D,EAAMJ,GACvCe,UAAW/xD,KAAKC,IAAI+wD,EAAar2D,EAAMy2D,EAAMJ,IAGnD,CAEA,OAAOyC,CACT,CEtBiBG,CADQlC,EAAgBW,EAAckB,UAAWb,EAAWQ,EAA2B,IAE9FtpD,EAAmC,CAAC,EAiB1C,OAfAwoD,EAAK7wD,SAAS6vD,IACZ,MAAMyC,EAAWJ,EAAKrC,GAMtBxnD,EAAOwnD,GALFyC,EAKSA,EAAS9+D,KAAIC,IAAgC,IAA/B,YAAE88D,EAAW,UAAEC,GAAW/8D,EACpD,OAAI+8D,EAAYD,GAAgB,KAAgB/9D,EAAK,8BAG7C,IAFM+/D,EAAAA,EAAAA,IAAW//D,EAAMy/D,EAA0B,GAAd1B,EAAmB,WAClDgC,EAAAA,EAAAA,IAAW//D,EAAMy/D,EAAwB,GAAZzB,EAAiB,MAChC,IARZ,CAACh+D,EAAK,0BASpB,IAGG6V,CAAM,GACZ,CAACyoD,EAAckB,UAAWb,EAAU3+D,EAAMm/D,IAEvCa,GAAiB1/D,EAAAA,EAAAA,KAAQ,KAC7B,MAAM2/D,EAAiBtC,EAAgBW,EAAckB,UAAWL,GAE1DM,EAAYtC,IAEZ+C,IADM,IAAI3hD,MAAOm/C,UACc+B,GAAa,IAAO,GAEzD,OAAOQ,EAAex2C,MAAKjrB,IAAA,IAAC,YAAEu/D,EAAW,UAAEC,GAAWx/D,EAAA,OACpDu/D,GAAemC,GAAyBA,GAAyBlC,CAAS,GAC1E,GACD,CAACM,EAAckB,UAAWL,IAEvBgB,GAAa7/D,EAAAA,EAAAA,KAAQ,KACb,IAAIie,KAAKA,KAAKC,OAASmgD,EAAW,EAA+B,GAA3BQ,EAAgC,MACtE7B,SAAW,GAAK,GAC3B,CAACqB,EAAUQ,IAERnjB,GAAcz2C,EAAAA,EAAAA,IAAgB,KAC9Bi5D,EACFE,IAEAD,GACF,IAGI2B,GAAsB76D,EAAAA,EAAAA,IAAiB8J,IAC3CA,EAAEM,kBAEEgvD,EACFE,IAEAD,GACF,KAGFz9D,EAAAA,EAAAA,KAAU,KACR,IAAKq9D,EAAY,OACjB,MAAM6B,EAAQtsD,SAASwY,cAA4B,IAAG+zC,EAAAA,SAA8Bx6D,KACpF,IAAKu6D,EAAO,OAEZ,MAAMjzD,EAASizD,EAAME,cACrB1+B,EAAAA,EAAAA,KAAgB,KACd08B,EAAcx7D,QAAS4C,MAAMyH,OAAU,GAAEA,KAAU,GACnD,GACD,CAACoxD,IAEJ,MAAMgC,GAAuBj7D,EAAAA,EAAAA,IAAgB,KAC3C,MAAM86D,EAAQtsD,SAASwY,cAA4B,IAAGk0C,EAAAA,SAA0B36D,MAEhFia,EAAAA,EAAAA,KAAe,KACb,MAAM3S,EAASizD,EAAME,cACrB1+B,EAAAA,EAAAA,KAAgB,KACd08B,EAAcx7D,QAAS4C,MAAMyH,OAAU,GAAEA,KAAU,GACnD,GACF,IAGJ,OACEzL,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CACP7iC,KAAK,QACL46C,cD1IoD,WC2IpDC,WAAS,EACThhE,UD5IiB,WC6IjBihE,SAAUpC,EACVltD,QAAM,EACNuvD,QAAM,EACNC,qBAAmB,EACnBh/D,QAASk6C,GAETr6C,EAAAA,GAAAC,cAAA,OAAKjC,UDnJ6B,YCoJhCgC,EAAAA,GAAAC,cAAA,OAAKjC,UDpJ+D,YCqJlEgC,EAAAA,GAAAC,cAAA,WAAM5B,EAAK,yBACX2B,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDtJ0F,WCsJ5Dm+D,GDtJ6G,aCuJvIhgE,EAAjBggE,EAAsB,8BAAsC,mCAGjEr+D,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UD1J0K,WC0JjJiS,KAAM4sD,EAAa,KAAO,UAE1DA,GACC78D,EAAAA,GAAAC,cAAA,OAAKjC,UD7JmF,YC8JrFN,QAAQ8/D,IACPx9D,EAAAA,GAAAC,cAAA,OACEjC,UDhKiO,WCiKjOqlD,KAAK,SACLH,SAAU,EACVxN,YAAc5xB,EAAAA,QAAqCtmB,EAAtBihE,EAC7Bt+D,QAAS2jB,EAAAA,GAAe26C,OAAsBjhE,GAE7Ca,EAAK2+D,EAAW,+BAAiC,oCAGtDh9D,EAAAA,GAAAC,cAAC4+C,EAAAA,GAAU,CACT7gD,UD1K2P,WC2K3P+G,IAAK63D,EACL3sD,KAAK,OACL8uC,UAAW/V,OAAOg0B,GAClBoC,QAASP,GAET7+D,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GACZu4D,EAAKr9D,KAAKq8D,GACT17D,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,MAAIjC,WAAWkC,EAAAA,EAAAA,GDnLwS,WCmLzQw7D,IAAQ8C,GDnLkT,cCoLrWa,EAAAA,EAAAA,IAAchhE,EAAc,IAARq9D,EAAY,EAAIA,EAAM,IAE7C17D,EAAAA,GAAAC,cAAA,MAAIjC,UDtL8R,YCuL/R6/D,EAAUnC,GAAKr8D,KAAKigE,GACnBt/D,EAAAA,GAAAC,cAAA,WAAMq/D,YASb,I,+CCjMf,MC8BMC,EAAgB,CAAC,KAAM,KAAM,MAiLnC,GAAe7iE,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KACjBC,IACC,MAAM,gBAAE4iE,EAAe,qBAAEC,GAAyB7iE,EAClD,MAAO,CACL4iE,kBACAC,uBACAC,0BAA0BnqC,EAAAA,EAAAA,KAA+B34B,GAC1D,GAPeD,EAjKCoB,IAOQ,IAPP,KACpBqzB,EAAI,SACJuuC,EAAQ,yBACRD,EAAwB,gBACxBF,EAAe,qBACfC,EAAoB,aACpBG,GACsB7hE,EACtB,MAAM,qBAAE8hE,EAAoB,gBAAEC,IAAoB1hE,EAAAA,EAAAA,MAE5C2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7Bm/D,GAAqBn/D,EAAAA,EAAAA,KAAO,IAC3Bo/D,EAAoBC,EAAeC,IAAiBl/D,EAAAA,EAAAA,KAErD3C,GAAOC,EAAAA,EAAAA,MAEP,cACJ6hE,EAAa,QACbC,EAAO,IACPC,IACE1hE,EAAAA,EAAAA,KAAQ,KACV,MAAM2hE,EAAQ,IAAI1jD,KACZrX,EAAO,IAAIqX,KAUjB,OATI+iD,EAASY,MACXh7D,EAAK+qC,YAAYqvB,EAASY,MAE5Bh7D,EAAKi7D,SAASb,EAASc,MAAQ,GAC/Bl7D,EAAKu2D,QAAQ6D,EAASjE,KACtBn2D,EAAKk2D,SAAS,EAAG,EAAG,EAAG,GAIhB,CACL0E,eAHgBO,EAAAA,EAAAA,GAAmBn7D,EAAMlH,EAAKsiE,MAAM,EAAM,QAI1DP,QAHsB76D,EAAKs2D,YAAcyE,EAAMzE,WAAat2D,EAAKq7D,aAAeN,EAAMM,WAItFP,IAAKV,EAASY,MAAQM,EAAOt7D,GAC9B,GACA,CAACo6D,EAAUthE,IAERyiE,GAAgBniE,EAAAA,EAAAA,KAAQ,KAC5B,IAAK0hE,IAAQD,EAAS,OACtB,MAAMW,EAAUvB,GAAiB/rC,UAAUl0B,QAAOD,IAAA,IAAC,MAAEi9B,GAAOj9B,EAAA,OAAKi9B,GAAOykC,SA3DhD,KA2D6E,IACrG,IAAKD,EAAS,OACd,MAAME,GAAU/b,EAAAA,EAAAA,IAAqB6b,EAAS,SAG9C,OADkBV,EAAI/1B,WAAW42B,MAAM,IACtB7hE,KAAK8hE,GAAUF,EAAQE,EAhEhB,OAgE6C,GACpE,CAACd,EAAKb,GAAiB/rC,SAAU2sC,IAE9BgB,GAAgBziE,EAAAA,EAAAA,KAAQ,KAC5B,IAAKyhE,EAAS,OACd,MAAMiB,EAAe9B,EAAcj1D,KAAKsgC,MAAMtgC,KAAKg3D,SAAW/B,EAAcn/D,SAC5E,OAAOq/D,GAAsBhsC,UAAUrG,MAAKvwB,IAAA,IAAC,MAAE0/B,GAAO1/B,EAAA,OAAK0/B,IAAU8kC,CAAY,GAAC,GACjF,CAAC5B,GAAsBhsC,SAAU2sC,KAGpC5gE,EAAAA,EAAAA,KAAU,KACR,GAAK4gE,GAAYU,IAEjBA,EAAcj1D,SAAShK,IACrB,MAAM0/D,GAAOC,EAAAA,EAAAA,IAAoB3/D,EAAQpE,IACzC4wD,EAAAA,GAAkBkT,EAAM/+D,EAAAA,GAAeC,QAAQ,IAG7C2+D,GAAe,CACjB,MAAMK,GAAaD,EAAAA,EAAAA,IAAoBJ,EAAc3jE,IACrD4wD,EAAAA,GAAkBoT,EAAYj/D,EAAAA,GAAeC,QAC/C,IACC,CAAC2+D,EAAehB,EAASU,KAE5BzmC,EAAAA,EAAAA,GAAW6lC,EAAeF,EApFD,SAoF2CxiE,IAEpEgC,EAAAA,EAAAA,KAAU,KACR,GAAIwgE,EAAoB,CACtBD,EAAmB3+D,SAAU,EAE7B,MAAMsgE,EAAStvD,SAASqpB,eAAemkC,EAAe,aAAe,eACrE,IAAK8B,EAAQ,QAEbtjD,EAAAA,EAAAA,KAAe,KACb,MAAM,IACJmwB,EAAG,KAAE5gC,EAAI,MAAEnC,EAAK,OAAEC,GAChBi2D,EAAO9zD,wBAEXkyD,EAAgB,CACdvxB,MACA5gC,OACAnC,QACAC,SACAzH,MAAO,YACP,GAEN,IACC,CAAC47D,EAAcI,IAElB,MAAM2B,EAAY,kBAAiBvB,EAAU,QAAU,UAAUC,EAAM,OAAS,KAE1EuB,EAAiBxB,IAAYhvC,EAAKywC,YAAczwC,EAAKu2B,SAAW+X,EAEhEoC,GAAsBl+D,EAAAA,EAAAA,IAAgB,KAC1Ci8D,EAAqB,CAAEkC,WAAY,CAAC3wC,EAAK3zB,KAAM,IAG3C48C,GAAcz2C,EAAAA,EAAAA,IAAgB,KAC7Bw8D,IAEDwB,GAAkB7B,EAAmB3+D,QACvC0gE,IAIF7B,IAAe,IAGXhB,GAAYmB,IAAYwB,EAE9B,OACE5hE,EAAAA,GAAAC,cAAA,OAAKjC,UDnKc,YCoKjBgC,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CACP7iC,KAAK,WACL+iC,cAAe0a,EAAiB,YAASpkE,EACzCwkE,uBDvKyL,WCwKzLhD,WAAS,EACTE,QAAM,EACNn6D,IAAKA,EACL4K,QAASsvD,EACT9+D,QAASk6C,EACT4kB,SAAUA,EACVgD,qBAAsBH,GAEtB9hE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,UAASqR,EAAAA,EAAAA,GAAWhR,EAAKsjE,EAAU,CAACxB,EAAeE,QAAM7iE,EAAW6iE,KACnFrgE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,EAAK+hE,EAAU,uBAAyB,qBAErEJ,GAAsBkC,EAAAA,IAA4BpB,GAAezhE,KAAI,CAACwC,EAASsgE,IAC9EniE,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDrLsB,WCqLQiiE,EAAQ,GDrL4F,YCsL7In+D,MAAQ,mBAAkBm+D,KAE1BniE,EAAAA,GAAAC,cAACmiE,EAAAA,EAAW,CACV7L,aAAcxxD,EACdlD,QAASA,EACTvB,KA9JgB,IA+JhB+hE,aAAW,OAIhBrC,GAAsBoB,GACrBphE,EAAAA,GAAAC,cAAA,OAAKjC,UDjM8J,YCkMjKgC,EAAAA,GAAAC,cAACmiE,EAAAA,EAAW,CACV7L,aAAcxxD,EACdlD,QAASu/D,EACT9gE,KAtKQ,IAuKRgiE,YAAU,EACVD,aAAW,KAIb,KAgBV,SAASxB,EAAO0B,GACd,MAAMjC,EAAQ,IAAI1jD,KAClB,IAAIyjD,EAAMC,EAAM/vB,cAAgBgyB,EAAUhyB,cAC1C,MAAMiyB,EAAIlC,EAAMM,WAAa2B,EAAU3B,WAKvC,OAJI4B,EAAI,GAAY,IAANA,GAAWlC,EAAMzE,UAAY0G,EAAU1G,YACnDwE,IAGKA,CACT,CCpOA,QAAmC,WCyE7BoC,EAAqB,CACzBj3D,MAAO,GACPC,OAAQ,GACRi3D,KAAM,IAGFC,GAAeC,EAAAA,EAAAA,KAAUxlD,GAAOA,KAAM,KAAK,GAqTjD,GAAe1gB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAAkD,IAAhD,aAAEgmE,EAAY,cAAE1sB,GAAet5C,EACtC,MAAQ+nD,aAAeke,WAAYC,IAAoBnmE,EAEjDG,EAAO8lE,GAAe7lE,EAAAA,EAAAA,KAAWJ,EAAQimE,QAAgBrlE,EACzD4zB,EAAOyxC,GAAe1yC,EAAAA,EAAAA,KAAWvzB,EAAQimE,QAAgBrlE,EACzDy0B,EAAUl1B,GAAMk1B,QAChB+wC,EAAUjmE,IAAQkmE,EAAAA,EAAAA,IAAkBlmE,GAAMmmE,EAAAA,EAAAA,KAAqBtmE,IAASumE,EAAAA,EAAAA,KAAuBvmE,KAC/F,SAAEuiB,IAAaqF,EAAAA,EAAAA,KAAyB5nB,IAAW,CAAC,EACpDm1D,EAAU9/B,EAAU+W,OAAO7pB,QAAY3hB,EAEvCwxB,EAAejyB,IAAQkyB,EAAAA,EAAAA,KAAmBryB,EAAQG,EAAKU,IACvDmvD,EAAex7B,IAAQrC,EAAAA,EAAAA,KAAmBnyB,EAAQw0B,EAAK3zB,IAEvD2lE,EAAiBp0C,GAAcq0C,WAE/BvhB,EAAc8K,GAAc0W,KAAOt0C,GAAcu0C,MAevD,MAAO,CACLR,gBACAhmE,OACAq0B,OACAw7B,eACA4W,eAlBqBzmE,IAASq0B,MAC5B2B,EAAAA,EAAAA,IAAch2B,MAAU0mE,EAAAA,EAAAA,IAAkB1mE,EAAM,iBAC/C2mE,EAAAA,EAAAA,IAAiB3mE,EAAM,gBAiB1BimE,UACAjR,UACAqR,iBACAthB,cACA6hB,UAlBgB5R,GAAU6R,EAAAA,EAAAA,KAAgBhnE,EAAQimE,EAAc9Q,QAAWv0D,EAmB3EqmE,kBAjBwB1tB,GAAiBv5C,EAAOqC,MAAM6kE,QAAQC,OAAOptD,SAASksD,GAkB9EmB,gBAhBsBpX,GAAcqX,mBAClCjnE,EAAAA,EAAAA,KAAWJ,EAAQgwD,EAAaqX,wBAChCzmE,EAeH,GA5Ceb,EAnTyBoB,IAevC,IAfwC,aAC5C8kE,EAAY,KACZzxC,EAAI,KACJr0B,EAAI,aACJ6vD,EAAY,aACZgT,EAAY,eACZ4D,EAAc,QACdR,EAAO,cACPD,EAAa,QACbhR,EAAO,YACPjQ,EAAW,eACXshB,EAAc,UACdO,EAAS,iBACTE,EAAgB,gBAChBG,GACDjmE,EACC,MAAM,iBACJiY,EAAgB,qBAChBkuD,EAAoB,sBACpBC,EAAqB,gBACrBC,EAAe,gBACfC,EAAe,aACfC,EAAY,uBACZC,IACEnmE,EAAAA,EAAAA,OAGFX,GAAIi6C,EAAM,UACV8sB,EAAS,YACTC,EAAW,OACX9c,GACEv2B,GAAQ,CAAC,GACL3zB,GAAIX,EAAQ0nE,UAAWE,GAAkB3nE,GAAQ,CAAC,EACpD+sC,EAAS4N,GAAU56C,GACnB,iBACJ6nE,GAAgB,kBAChBC,GAAiB,yBACjBC,GAAwB,SACxBlF,IACE/S,GAAgB,CAAC,EACfvuD,IAAOC,EAAAA,EAAAA,MAENwmE,GAAyBC,KAA8Br9D,EAAAA,EAAAA,KAAUs7D,IAExExjE,EAAAA,EAAAA,KAAU,KACRulE,IAA4B/B,EAAQ,GACnC,CAACA,KAEJp7B,EAAAA,EAAAA,IAAsBtoC,IAAkB,IAAhB0lE,GAAW1lE,EAC5BwqC,GAAUk7B,IAAel7B,IAC1B1Y,GAASr0B,IAAQg2B,EAAAA,EAAAA,IAAch2B,KACjCqnE,EAAgB,CAAEt6B,UACpB,GACC,CAACA,EAAQ/sC,EAAMq0B,IAElB,MAAM,MAAE5lB,GAAK,OAAEC,GAAM,KAAEi3D,IAASD,EAC1B/L,IAAMC,EAAAA,EAAAA,KACNsO,GAAoBN,IAAkBO,MACvCC,EAAAA,EAAAA,IAAmBR,GAAiBO,IAAK15D,GAAOC,GAAQi3D,GAAMhM,IAC7D0O,IAAkB9iE,EAAAA,EAAAA,GAAS2iE,IAE3BI,IAAyB1mE,EAAAA,EAAAA,KAAQ,KACrC,GAAKgmE,IAAkBO,IACvB,OAAIE,GACKplE,EAAAA,GAAAC,cAAA,OAAKiE,IAAKkhE,GAAiBvsD,IAAI,GAAG7a,UAAWmG,IAG/CnE,EAAAA,GAAAC,cAACqlE,EAAAA,EAAQ,CAACtnE,UAAWmG,GAA2B,GACtD,CAACwgE,GAAkBS,KAEhBG,GAAc7nE,QAAQq0D,GAAWA,IAAY5/B,EAAAA,IAC7CqzC,GAAwBzoE,IAAQg2B,EAAAA,EAAAA,IAAch2B,IAAUq0B,GAAMywC,UAE9D4D,IAAkB9mE,EAAAA,EAAAA,KAAQ,KAC9B,MAAMuV,EAASswD,GAAWjlE,QAAQmmE,GAAMA,EAAEvoE,WAE1C,OAAO+W,GAAQ9T,OAAS8T,OAAS1W,CAAS,GACzC,CAACgnE,IAEEmB,IAAsBhnE,EAAAA,EAAAA,KAAQ,KAClC,MAAMuV,EAAUkd,OAAkD5zB,EAA3CknE,GAAenlE,QAAQmmE,GAAMA,EAAEvoE,WAEtD,OAAO+W,GAAQ9T,OAAS8T,OAAS1W,CAAS,GACzC,CAACknE,EAAetzC,IAEb3D,IAAO9uB,EAAAA,EAAAA,KAAQ,KACnB,GAAK5B,EAIL,OAAOwoE,GAAc5B,GAAaiC,EAAAA,EAAAA,IAAY7oE,IAASqmE,CAAc,GACpE,CAACrmE,EAAMwoE,GAAa5B,EAAWP,IAE5ByC,IAAsBjiE,EAAAA,EAAAA,IAAgB,KAC1C,MAAM,QAAEkiE,EAAO,IAAEZ,GAAQP,GACzB,IAAKO,EAGH,OAFAllB,EAAAA,EAAAA,IAAoB8lB,QACpB9vD,EAAiB,CAAE7Q,QAAS9G,GAAK,4BAInCimE,EAAa,CAAEyB,SAAUb,EAAKxC,SAAO,IAGjCsD,IAA2BpiE,EAAAA,EAAAA,IAAgB,KAC/CmhE,IAA4B3jE,IAC1B,MAAM6kE,GAA8B7kE,EAcpC,OAZAuhE,GAAa,KACP4C,GACFpB,EAAsB,CACpBrnE,OAAQA,EACRi1D,QAASA,EACTiR,SAAUiD,IAGZ/B,EAAqB,CAAEpnE,OAAQA,EAASkmE,SAAUiD,GACpD,IAGKA,CAA0B,GACjC,IAGEC,IAAwBtiE,EAAAA,EAAAA,IAAgB,KAC5CygE,EAAgB,CAAEvnE,OAAQ+lE,GAAe,IAG3C,SAASsD,GAAKzlE,EAAc2sB,IAC1B2yB,EAAAA,EAAAA,IAAoBt/C,GACpBsV,EAAiB,CAAE7Q,QAAU,GAAEkoB,gBACjC,CAEA,MAAM+4C,GAAkB3B,IAAe4B,EAAAA,EAAAA,IAA0BtD,EAAe0B,GAE1E6B,IAAmB1iE,EAAAA,EAAAA,IAAgB,KACnC6gE,GAAarkE,SAAWmmE,EAAAA,KAAyB9B,EAAYxgC,WAAWuiC,EAAAA,KAC1EjC,EAAuB,CAAEkC,YAAahC,EAAa36B,OAAQA,EAAS3tB,KAAM,UAG5EgqD,GAAKC,GAAkB/nE,GAAK,SAAS,IAGjCqoE,IAAsB9iE,EAAAA,EAAAA,IAAgB,CAACsX,EAAuByrD,KAC7DzrD,EAAS0rD,WAIdT,IAAK9M,EAAAA,EAAAA,GAAen+C,EAASA,SAAUyrD,GAAStoE,GAAKsoE,EAAS,OAAS,aAHrEpC,EAAuB,CAAEkC,YAAavrD,EAASA,SAAU4uB,OAAQA,EAAS3tB,KAAM,YAGC,IAGrF,GAAKpf,IAAQA,EAAK6gD,gBAAiB+J,GAAWiY,GAyD9C,OACE5/D,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACZgmE,GACChkE,EAAAA,GAAAC,cAAA,OAAKjC,UDpSmD,YCqStDgC,EAAAA,GAAAC,cAAA,MAAIjC,UDrSoF,YCqS3CK,GAAK,mBAClD2B,EAAAA,GAAAC,cAAA,QAAMjC,UDtS0H,YCuS7HK,GAAK,cAAe2lE,EAAgB7kB,aAAc,MAErDn/C,EAAAA,GAAAC,cAAC4mE,EAAAA,EAAI,CACH/pE,OAAQknE,EAAgBvmE,GACxBqpE,UAAW,EACXC,cAAeC,EAAAA,EAAmBr1B,KAClCs1B,WAAS,EACTC,iBAAkBrC,GAClB7mE,UD/S+J,cCmTpKN,QAAQ0oE,IAAiBhmE,SAExBJ,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CAAC7iC,KAAK,QAAQ66C,WAAS,EAACE,QAAM,EAACvvD,QAAM,EAACxP,QAASmmE,IACtDtmE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,QAAQ0D,IAAI,QAAQ0kE,IACpCpmE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,GAAK,WAGpConE,IAAmB0B,GAAgB1B,IACnC3jB,GAAepkD,QAAQokD,EAAY1hD,SAClCJ,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CACP7iC,KAAK,OACL66C,WAAS,EACTE,QAAM,EACND,UAAQ,EACRmI,gBAAc,GAEdpnE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,mCAAmC0D,IAAI,SAEnD2N,EAAAA,EAAAA,GAAWyyC,EAAa,CACtB,KACA0jB,GAAuB,QAAU,WACjC,WAINxlE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,GAAKq5C,EAAS,UAAY,UAGzDiuB,KAAwBJ,IAAe4B,GAAgBxB,IAAqB,KACzEA,IAAuBnC,GAAmB+B,KAAgB93C,IAC5DztB,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CACP7iC,KAAK,OACL66C,WAAS,EACTE,QAAM,EACNvvD,QAAM,EAENxP,QAASA,IAAMgmE,GAAK14C,GAAMpvB,GAAK,uBAE/B2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAASyvB,IACxBztB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,GAAK,uBAGpCshE,IACC3/D,EAAAA,GAAAC,cAAConE,EAAY,CAAC9xB,IAAKzL,EAAQ61B,SAAUA,GAAUvuC,KAAMA,EAAOwuC,aAAcA,KAE1EA,GACA5/D,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CAAC7iC,KAAK,SAASxU,QAAM,EAACxP,QAAS6lE,IACtChmE,EAAAA,GAAAC,cAAA,YAAO5B,GAAK,kBACZ2B,EAAAA,GAAAC,cAACqnE,EAAAA,EAAQ,CACP7pE,GAAG,sBACHq9C,MAAOpD,EAAS,4BAA8B,4BAC9CmD,QAASiqB,GACT7d,UAAQ,KAIb2d,IACC5kE,EAAAA,GAAAC,cAACsnE,EAAa,CAAC5K,cAAeiI,KAE/BD,IACC3kE,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CACP7iC,KAAK,WACLxU,QAAM,EACNqvD,WAAS,EACTE,QAAM,EACNrV,aAAcwb,GACdllE,QAAS0lE,IAET7lE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAAS2mE,GAAiBmB,SACzC9lE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,GAAK,6BAGpCwlE,IAAqBjE,GACpB5/D,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CAAC7iC,KAAK,iBAAiBxU,QAAM,EAACxP,QAAS+lE,IAC9ClmE,EAAAA,GAAAC,cAAA,YAAO5B,GAAK,uBAjJpB,SAAS8oE,GAAgBK,EAA6Bb,GACpD,MAAOtoB,KAAiBopB,GAAkBD,EAEpCE,EAAgBD,EAAernE,OAChC/B,GAAK,eAAgB,eACrB6iE,MAAM,KACN7hE,KAAKsoE,GACU,cAANA,EACN3nE,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG42D,EAAepoE,KAAI,CAAC6b,EAAU0sD,IAE3B5nE,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG+2D,EAAM,EAAI,KAAO,GAClB5nE,EAAAA,GAAAC,cAAA,KACEs1C,IAAKr6B,EAASA,SACdvH,MAAM0lD,EAAAA,EAAAA,GAAen+C,EAASA,UAAU,GACxCw6B,YAAawL,EAAAA,EACb/gD,QAAUuN,KACRwzC,EAAAA,EAAAA,GAAUxzC,GACVg5D,GAAoBxrD,EAAUyrD,EAAO,EAEvC3oE,UAAU,mCAETq7D,EAAAA,EAAAA,GAAen+C,EAASA,eAMjCysD,SAENnqE,EAEJ,OACEwC,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CACP7iC,KAAMwiD,EAAS,OAAS,UACxB3H,WAAS,EACTE,QAAM,EACNvvD,QAAM,EAENxP,QAASA,KACPumE,GAAoBroB,EAAcsoB,EAAO,GAG3C3mE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,QAAQ0D,IAAI,SAAQ23D,EAAAA,EAAAA,GAAehb,EAAanjC,SAAUyrD,IAC1E3mE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YACb0pE,GAAiB1nE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,mBAAmB0pE,GACpDrpE,GAAKsoE,EAAS,OAAS,aAIhC,CAiGQ,I,oHChYV,QAA6C,WCgF7C,GAAejqE,EAAAA,EAAAA,KAvDyBqB,IAMlC,IANmC,SACvC2yC,EAAQ,SACRknB,EAAQ,UACR55D,EAAS,aACT6pE,EAAY,QACZC,GACD/pE,EACC,MAAMgqE,GAAcxlE,EAAAA,EAAAA,IAAsBmuC,EAAS9J,YAE7CohC,GAAmB1lE,EAAAA,EAAAA,GAAUs1D,OAAyBp6D,EAAduqE,GAExCE,GAAkBtpE,EAAAA,EAAAA,KAAQ,IACzBujE,EAAAA,GACE73D,MAAMgN,KAAK,CAAEjX,OAfF,IAe2Bf,KAAI,IA4CrD,WAAmD,IAAnBwoE,EAAY/9D,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,GAC7C,MAAMoC,GAAK27D,EAAe,EAAIv9D,KAAKg3D,SAAWuG,EAAe,IAAMv9D,KAAKg3D,SAAW,GAAM,GAAK,GACxFn1D,EAAI07D,EAAev9D,KAAKg3D,SAAWuG,EAAe,EAExD,MAAQ,eAAc37D,MAAMC,EAAI07D,KAAgB37D,KAAKC,GACvD,CAjD2D+7D,CAAuBL,KADxC,IAErC,CAACA,IAEJ,GAAKG,GAAqBpQ,EAI1B,OACE53D,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GD/CM,WC+CsBlC,GACvCgG,OAAOC,EAAAA,EAAAA,GAAWvG,QAAQmqE,IAAkB,oBAAmBA,QAE9DI,EAAM5oE,KAAI,CAAC8oE,EAAM5mE,KAChB,MAAMyC,EAAS,wBAAuBmkE,OACtC,OAAIvQ,EAEA53D,EAAAA,GAAAC,cAAC+Y,EAAAA,EAAW,CACV4tB,WAAY8J,EAAS9J,WACrB5oC,UAAWmG,EACXH,MAAOA,EACPokE,qBAAmB,EACnB9nE,KAAMunE,EACNpmE,eAAsB,IAANF,EAAUumE,OAAUtqE,IAMxCwC,EAAAA,GAAAC,cAAA,OACEiE,IAAK8jE,EACLnvD,IAAI,GACJ7a,UAAWmG,EACXH,MAAOA,EACPI,WAAW,EACX3C,eAAsB,IAANF,EAAUumE,OAAUtqE,GACpC,IAGF,G,iOC5EV,SAAgB,KAAO,WAAW,gBAAgB,WAAW,aAAe,WAAW,OAAS,WAAW,UAAY,WAAW,eAAiB,YCgD7I6qE,EAAY,IAAMzsB,EAAAA,EAElB0sB,EAAc,IAAM1sB,EAAAA,EAEpB2sB,EAAoB3sB,EAAAA,EAiK1B,GAAel/C,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAsB,IAApB,YAAE0xC,GAAa1xC,EACtB,MAAM,oBAAEkpE,EAAmB,UAAEh2C,GAAc51B,GACrC,gBAAE6rE,IAAoBrrE,EAAAA,EAAAA,KAAeR,GAErC8rE,GAAcC,EAAAA,EAAAA,KAA+B/rE,EAAQ,mBAE3D,MAAO,CACL6rE,gBAAiBA,IAAkBz3B,GACnCze,mBAAoBC,EAAUD,mBAC9Bq2C,eAAgBJ,EAChBE,cACD,GAZe/rE,EA/JUoB,IAgBD,IAhBE,YAC7BizC,EAAW,SACXN,EAAQ,UACR1yC,EAAS,KACTsC,EAAO+nE,EAAS,WAChBQ,EAAaP,EAAW,gBACxBG,EAAe,mBACfl2C,EAAkB,eAClBq2C,EAAc,YACdF,EAAW,eACX9yB,EAAc,YACdkzB,EAAW,WACXxG,EAAU,UACV1Q,EAAS,gBACTmX,EAAe,oBACf7wB,GACsBn6C,EACtB,MAAM,mBAAEirE,IAAuB5qE,EAAAA,EAAAA,MAGzB2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7BmvD,EAAW,eAAgBrf,EAE3Bsf,GAAoBrxD,EAAAA,EAAAA,KAAQ,IAChC4zB,GAAoBnF,MAAM67C,IAAM/Y,EAAAA,EAAAA,IAAe+Y,EAAEv4B,SAAUA,MAC1D,CAACne,EAAoBme,IAClBw4B,EAAelZ,GAAmBmZ,YAAY1rE,IAE9C,YAAEm5D,IAAgBC,EAAAA,EAAAA,GAAe9G,EAAWrf,EAAS9J,gBAAappC,GAElE4rE,GAAmBzqE,EAAAA,EAAAA,KAAQ,KAC/B,IAAKoxD,EAAU,OAAOC,GAAmBqZ,iBAAiB5rE,GAE1D,IAAKm5D,EAAa,OAClB,MAAM0S,EAAa/2C,GAAoBnF,MAAM6iC,GAAcA,EAAUvf,SAAS5W,WAAa88B,EAAYr6B,SACnG8sC,iBAAiB5rE,GACrB,OAAO6rE,CAAU,GAChB,CAACtZ,EAAmBz9B,EAAoBqkC,EAAa7G,IAElDwZ,GAAW5qE,EAAAA,EAAAA,KAAQ,KACvB,GAAIyqE,EACF,OAAOA,EAGT,IAAKR,GAAgBn1C,SACnB,OAGF,MAAM,SAAEA,GAAam1C,EAGrB,OAAOn1C,EAFanpB,KAAKsgC,MAAMtgC,KAAKg3D,SAAW7tC,EAASrzB,SAE3B3C,EAAE,GAC9B,CAAC2rE,EAAkBR,IAEhBxvB,GAAiBC,EAAAA,EAAAA,IAAkBt0C,EAAKmzC,GAExCsxB,EAAsBN,GAAiB,UAASA,IAChDO,EAAkBF,GAAa,UAASA,IAExCG,GAAsBpnE,EAAAA,EAAAA,GAASknE,GAAsBN,GACrDS,GAAkBrnE,EAAAA,EAAAA,GAASmnE,GAAkBF,GAE7CK,GAAiBjrE,EAAAA,EAAAA,KAAQ,IAC7B8pE,GAAiBr7C,MAAMy8C,IAAW3Z,EAAAA,EAAAA,IAAe2Z,EAAQn5B,MACxD,CAAC+3B,EAAiB/3B,IAEfo5B,EAAmBpsE,QACvBgrE,GAAekB,IAAmB7Z,GAAY2Z,IAAwBC,GAElEI,EAAmB3wB,IAAoB0wB,IAAqBl0B,GAAmB0sB,IAEnF5iE,aAAcsqE,EACdrqE,qBAAsBsqE,IACpBrqE,EAAAA,EAAAA,GAAkBkqE,OAAkBtsE,GAAW,EAAM,SAEvDkC,aAAcwqE,EACdvqE,qBAAsBwqE,KACpBvqE,EAAAA,EAAAA,GAAkBmqE,OAAkBvsE,GAAW,EAAM,QAEnD4sE,IAAcxmE,EAAAA,EAAAA,IAAgB,KAClColE,EAAmB,CAAEh4B,cAAaN,YAAW,KAGxC25B,GAAmBC,GAAqBC,KAAyBvpE,EAAAA,EAAAA,KAClEwpE,KAAoBza,GAAcga,GAAqBM,KAE3D3qE,aAAc+qE,GACd9qE,qBAAsB+qE,KACpB9qE,EAAAA,EAAAA,GAAkB4qE,QAAkBhtE,GAAW,GAE7CmtE,IAAgBzqE,EAAAA,EAAAA,GACpBiE,EAAOuN,KACPs4D,GAAsB7lE,EAAOymE,UAC7Bh1B,GAAkBzxC,EAAOyxC,eACzB53C,GAGF,OACEgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAW2sE,GAAe5lE,IAAKA,IAChC6wC,GAAkB60B,IAClBzqE,EAAAA,GAAAC,cAAC4qE,EAAAA,EAAmB,CAClB7sE,UAAW0sE,GACXh6B,SAAUA,EACVne,mBAAoBA,EACpBjyB,KAAMA,EACN43C,oBAAqBA,KAGvBtC,GAAkBma,GAClB/vD,EAAAA,GAAAC,cAAC+Y,EAAAA,EAAW,CACV4tB,WAAY8J,EAAS9J,WACrB5oC,UAAWmG,EAAOyyD,YAClBt2D,KAAMA,EACNwqE,OAAQhC,EACRlX,UAAWA,EACXyQ,aAAc0G,EACdxY,8BAA+BrY,IAGlCgyB,IAAuBna,GACtB/vD,EAAAA,GAAAC,cAAC8qE,EAAAA,EAAe,CACdx1B,IAAM,GAAE2zB,KAAgB5oE,IACxBtC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO6mE,aAAcb,IAC/C7pE,MAAM2qE,EAAAA,EAAAA,IAjIe,IAiII3qE,GACzBoC,OAAQgnE,EACRwB,KAAM9xB,IAAmB0vB,EACzB14D,QAASkyD,EACTD,aAAc0G,EACd1kE,OAAQimE,GACRxC,QAASyC,KAGZP,GACChqE,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAC8qE,EAAAA,EAAe,CACdx1B,IAAM,GAAEg0B,KAAYV,IACpB7qE,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAOgnE,OAAQlB,GACzC3pE,KAAMuoE,EACNnmE,OAAQinE,EACRuB,KAAM9xB,EACNhpC,QAAM,EACNiyD,aAAc0G,EACdjB,QAASsC,KAEVra,IAAaqZ,GAAoBhwB,GAChCp5C,EAAAA,GAAAC,cAACmrE,EAAAA,EAAiB,CAChB16B,SAAUA,EACV1yC,UAAWisE,EACXpC,aAAcv9D,KAAK2B,IAxJM,GAwJF3L,EAAuCioE,GAC9DT,QAASsC,MAKb,I,wECzMV,MAQA,EAR4CxoE,IAC1C,MAAM,OAAE2hB,GAAW3hB,EACbypE,GAAkBrsD,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,mBAAoBqE,GAG3E,OAAO8nD,EAAkBrrE,EAAAA,GAAAC,cAACorE,EAAoBzpE,QAAYpE,CAAS,C,wECLrE,MAQA,EAR0CoE,IACxC,MAAM,OAAE2hB,GAAW3hB,EACb0pE,GAAgBtsD,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBqE,GAGvE,OAAO+nD,EAAgBtrE,EAAAA,GAAAC,cAACqrE,EAAkB1pE,QAAYpE,CAAS,C,0VCbjE,QAA0E,WCiC1E,GAAed,EAAAA,EAAAA,KArBsBqB,IAI/B,IAJgC,WACpC2H,EAAU,SACVvI,EAAQ,SACRmK,GACDvJ,EACC,OACEiC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDlBG,WCoBjB/C,GDpB8G,WCqB9GuI,IAAe4B,GDrB2E,aCwB1FtH,EAAAA,GAAAC,cAAA,OAAKjC,UDxBmC,YCyBtCgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,IAChBnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,IAChBnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,KAEd,ICqYV,GAAezH,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAEW,IAFT,OACPxC,EAAM,cAAEq5C,EAAa,UAAE8wB,EAAS,iBAAEC,GACnC5nE,EACC,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAChC,IAAKC,EACH,MAAO,CACLkzB,cAAerzB,EAAOqzB,eAI1B,MAAMs7C,EAAgBrE,IAAoBsE,EAAAA,EAAAA,KAAwB5uE,EAAQE,EAAQq5C,EAAgB,QAAU,OACtGglB,EAAc+L,GAChBziD,EAAAA,EAAAA,KAAkB7nB,EAAQE,EAAQoqE,IAClC9L,EAAAA,EAAAA,KAAsBx+D,EAAQE,EAAQq5C,EAAgB,QAAU,QAC9D,SAAEs1B,EAAQ,WAAEC,EAAU,YAAEnkD,GAAgB4zC,GAAe,CAAC,EACxDwQ,EAAiBx1B,EAAgB5uB,GAAaqkD,OAASH,EACvDI,EAAmB1Q,IAAe2Q,EAAAA,EAAAA,GAAoB3Q,IAAch0C,aACpE4kD,EAAoBJ,GAAiBrkD,EAAAA,EAAAA,KAAW1qB,EAAQ+uE,QAAkBnuE,EAC1EwuE,EAAoB7Q,GAAc8Q,EAAAA,EAAAA,IAAiB9Q,QAAe39D,EAClE0uE,EAAsBF,GAAqBH,GAC7CpnD,EAAAA,EAAAA,KAAkB7nB,EAAQG,EAAKU,GAAIouE,QACnCruE,GACI2uE,cAAeC,EAAqBC,aAAcC,GAAuBN,GAAqB,CAAC,EACjGO,GAAoBl2B,EAAAA,EAAAA,IAAqBt5C,IAG7CD,OAAQ0vE,EACRrtD,SAAUstD,EACVtwD,KAAM0J,IACJrB,EAAAA,EAAAA,KAAyB5nB,IAAW,CAAC,EACnC8I,GAAcuhE,GAAanqE,IAAW0vE,IAAkBr2B,EAC1Dr5C,IAAW2vE,EAAkBA,IAAoBt6C,EAAAA,IAC/Cu6C,EAAmB3vE,EAAKk1B,SAAWn1B,IAAW0vE,GAC/C1vE,KAAWM,EAAAA,EAAAA,KAAeR,GAAQ+vE,iBAEjCv7C,EAAOm7C,GAAoBp8C,EAAAA,EAAAA,KAAWvzB,EAAQ2vE,QAAqB/uE,EACnEgsD,EAAa+iB,GAAoB9iB,EAAAA,EAAAA,KAAiB7sD,EAAQ2vE,QAAqB/uE,EAC/EovE,EAAmBzR,IAAe/oC,EAAAA,EAAAA,KAAuBx1B,EAAQu+D,GAEjE5e,GAAeswB,EAAAA,EAAAA,KAAkBjwE,EAAQE,EAAQq1B,EAAAA,GAAgB,gBAEvE,MAAO,CACLp1B,OACAimE,SAASC,EAAAA,EAAAA,IAAkBlmE,GAAMmmE,EAAAA,EAAAA,KAAqBtmE,IAASumE,EAAAA,EAAAA,KAAuBvmE,IACtFmvE,oBACAK,sBACAE,qBACAJ,sBACAtlD,OAAOC,EAAAA,EAAAA,KAAYjqB,EAAQE,EAAQq1B,EAAAA,IACnCzsB,aACAgnE,kBACAI,kBAAkBC,EAAAA,EAAAA,KAAuBnwE,GACzCowE,cAAetnE,GAAkC,WAApBmgB,EAC7BonD,iBAAkBrwE,EAAOswE,YAAYC,YAAY/sE,QAAU,GAAK,KAC5DsrE,GAAcvQ,GAAe,CAC/BiS,2BAA2BC,EAAAA,EAAAA,KAAqBzwE,EAAQu+D,IAE1D/pC,OACAo4B,aACAojB,mBACArwB,eACA+wB,yBAAyBpsE,EAAAA,EAAAA,KAA0BtE,GACnDu+D,cACAoQ,gBACAt7C,cAAerzB,EAAOqzB,cACvB,GAlEetzB,EAjToBoB,IAkClC,IAlCmC,OACvCjB,EAAM,SACNywE,EAAQ,UACRzG,EAAS,cACTC,EAAa,SACbyG,EAAQ,oBACRt1B,EAAmB,KACnBn7C,EAAI,QACJimE,EAAO,KACP5xC,EAAI,WACJo4B,EAAU,oBACV4iB,EAAmB,kBACnBL,EAAiB,0BACjBqB,EAAyB,oBACzBlB,EAAmB,mBACnBI,EAAkB,UAClBmB,EAAS,MACT7mD,EAAK,wBACL0mD,EAAuB,WACvB5nE,EAAU,gBACVgnE,EAAe,iBACfI,EAAgB,cAChBE,EAAa,gBACbC,EAAe,iBACfL,EAAgB,aAChBrwB,EAAY,cACZgvB,GAAa,YACbpQ,GAAW,cACXhlB,GAAa,cACblmB,GAAa,UACbg3C,GAAS,iBACTC,GAAgB,UAChBlpE,GAAS,YACT0vE,IACD3vE,EACC,MAAM,SACJ4vE,GAAQ,gBACRtJ,GAAe,eACfuJ,GAAc,iBACdC,GAAgB,aAChBjlD,GAAY,WACZklD,GAAU,eACVC,GAAc,gBACdC,GAAe,0BACfC,KACE7vE,EAAAA,EAAAA,OAEE,SAAEkJ,KAAaC,EAAAA,EAAAA,OACdm3B,GAAmBC,GAAiBC,KAAoB59B,EAAAA,EAAAA,MACxDktE,GAAiBC,GAAeC,KAAkBptE,EAAAA,EAAAA,MAClDqtE,GAAuBC,GAAqBC,KAAwBvtE,EAAAA,EAAAA,MACpEwtE,GAAmBC,GAAiBC,KAAoB1tE,EAAAA,EAAAA,MACxD2tE,GAAyBC,GAAuBC,KAA2B7tE,EAAAA,EAAAA,MAC3E8tE,GAAuBC,GAAqBC,KAAyBhuE,EAAAA,EAAAA,MACrEiuE,GAA6BC,GAA2BC,KAA+BnuE,EAAAA,EAAAA,MACvFouE,GAAyBC,GAAuBC,KAA2BtuE,EAAAA,EAAAA,MAE5E,QAAEixB,GAAO,kBAAEC,IAAsBn1B,GAAQ,CAAC,GAEhDwyE,EAAAA,EAAAA,GAAiBp5B,GAAgBlmB,GAAgBnzB,EAAQyuE,GAAepQ,IAExE,MAAM,eAAEqU,GAAc,IAAEzqE,KAAQ0qE,EAAAA,EAAAA,GAAiB,CAC/C1yE,OACAD,SACAq+D,eACA5e,eACA31B,QACAslD,sBACAE,sBACAE,qBACAM,mBACAb,oBACA7zB,sBACA6uB,gBACAuG,0BACAxG,YACA3wB,iBACA8wB,eAGIyI,IAAwBpS,EAAAA,EAAAA,GAAkBqS,EAAAA,KAE1Ct1B,IAAcz2C,EAAAA,EAAAA,IAAgB,KAClC,MAAMymB,EAAoB/iB,IAAY4qB,GAMtC,GAJI5qB,IACF2mE,GAA0B,CAAE5tB,OAAO,IAGjC4mB,GACFr+C,GAAa,CACX9rB,SACAwR,UAAW44D,SAHf,CAQA,GAAI/wB,GAMF,OALAkuB,GAAgB,CAAEvnE,SAAQutB,mBAAmB,GAAQ,CAAEulD,uBAAuB,SAE1EtoE,IACFsmE,GAAe,CAAEiC,OAAO,KAK5B,GAAI59C,GAAS,CACX,GAAI66C,EAGF,YAFAkB,QAAgBxwE,EAAW,CAAEoyE,uBAAuB,IAQpD,GAJKvlD,GACH0jD,GAAe,CAAEjxE,UAAU,CAAE8yE,uBAAuB,KAGjD19C,GAAmB,MAE5B,CAEAy7C,GAAS,CAAElwE,GAAIX,EAAQutB,oBAAmBwe,sBAAsB,GAAQ,CAAE+mC,uBAAuB,IAE7FlqE,GAAcsnE,GAChBa,IA5BF,CA6BA,IAGIiC,IAAkBlsE,EAAAA,EAAAA,IAAiB8J,IACvCA,EAAE4L,iBACFo0D,KAAc5wE,EAAO,IAGjBizE,IAAensE,EAAAA,EAAAA,IAAgB,KACnCgrE,KACAjwC,IAAiB,IAGbqxC,IAAapsE,EAAAA,EAAAA,IAAgB,KACjCmrE,KACAZ,IAAe,IAGX8B,IAAyBrsE,EAAAA,EAAAA,IAAgB,KAC7CsrE,KACAZ,IAAqB,IAGjBpd,IAAettD,EAAAA,EAAAA,IAAgB,KACnCyrE,KACAZ,IAAiB,IAGbyB,IAAiBC,EAAAA,EAAAA,GAAsB,CAC3CpzE,OACAq0B,OACA2+C,gBACAC,cACAC,0BACA/e,gBACAqc,WACAC,WACAxK,UACAiK,kBACA92B,iBACAlmB,iBACAg3C,eAGI7tB,IAAiBC,EAAAA,EAAAA,IAAkBt0C,GAAKhI,EAAOm7C,OAAsB16C,IAG3EgC,EAAAA,EAAAA,KAAU,KACJ45C,IAAkBnnB,IAAWl1B,QAAgCS,IAAxBT,EAAKqzE,gBAC5CtC,GAAW,CAAEhxE,UACf,GACC,CAACC,EAAMD,EAAQm1B,GAASmnB,KAE3B,MAAMi3B,GAAWj/C,GAAQo4B,IAAca,EAAAA,EAAAA,IAAaj5B,EAAMo4B,IAClD8mB,cAAeC,KAAwB3wE,EAAAA,EAAAA,GAAkBywE,IAE3D18D,IAAOhV,EAAAA,EAAAA,KAAQ,KACnB,GAAK6xE,EAAAA,GAEL,OAAIr6B,GACM,KAAGs6B,EAAAA,EAAAA,IAAmBxgD,GAAe,SAAUnzB,KAGjD,KAAG2zE,EAAAA,EAAAA,IAAmB3zE,EAAQ,SAAUq1B,EAAAA,KAAiB,GAChE,CAACr1B,EAAQmzB,GAAekmB,KAE3B,IAAKp5C,EACH,OAGF,MAAM4U,GAAOyf,GAAQr0B,EAEf2zE,IAAgBxwE,EAAAA,EAAAA,GACpB,4BACA2uB,EAAAA,EAAAA,IAAS/xB,GAAU,UAAY,QAC/Bm1B,IAAW,QACXvsB,GAAc,WACdgnE,GAAmB,iBACnBzF,IAAa,aACbjpE,IAGF,OACEgC,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CACPjiD,IAAKA,GACL/G,UAAW0yE,GACX/8D,KAAMA,GACN3P,MAAQ,QAAOypE,MACf99D,QAASsiB,KAAY3qB,GACrB4oE,eAAgBA,GAChB/vE,QAASk6C,GACTqzB,YAAaoC,GACba,mBAAiB,GAEjB3wE,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAU,qBACvCF,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACLD,KAAMA,GACNiiC,gBAAiBxiB,GAAMu2B,OACvBxR,cAAeA,GACf+G,WAAY9rB,GAAMu2B,OAClBipB,aAAcL,GACdpzB,kBAAmB0zB,EAAAA,GAAkBC,SACrCvyB,gBAAgB,gBAElBv+C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,wBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBqwE,IAAuB,yBACvEvwE,EAAAA,GAAAC,cAAC8wE,EAAAA,EAAS,CAACh0E,KAAMA,EAAMimE,QAASA,EAASgO,6BAA2B,EAACC,YAAavB,MAEnF3yE,EAAKe,cAAgBf,EAAKc,gBACzBmC,EAAAA,GAAAC,cAACixE,EAAc,CAAC5pE,SAAUA,GAAU5B,WAAYA,EAAYvI,SAAUmwE,KAG1EttE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAACw+C,EAAAA,EAAa,CACZ9sC,KAAMA,GACN+sC,iBAAe,EACf9K,gBAAiB92C,IAAWs0B,GAAM3zB,IAAM2zB,GAAMu2B,OAC9CxR,cAAeA,GACf+B,oBAAqBA,IAEtB8qB,IAAY7sB,IAAiBn2C,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAC3CgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cACdm9D,IACCn7D,EAAAA,GAAAC,cAACkxE,EAAAA,EAAe,CACdhsE,QAASg2D,GACT5b,eAAiBpJ,QAA4C34C,EAA5B4vE,EACjC5tB,UAAW54B,GAAOrhB,QAIxBvF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACZwxE,MACCvI,IACAjnE,EAAAA,GAAAC,cAAC8wE,EAAAA,EAAS,CACRh0E,KAAMA,EACNywE,SAAUA,EACVxK,QAASA,EACT7sB,cAAeA,OAKtBw4B,IACC3uE,EAAAA,GAAAC,cAACmxE,EAAAA,EAAe,CACd7tD,OAAQmb,GACR/a,QAASib,GACThb,oBAAqBirD,GACrB9xE,KAAMA,EACNo5C,cAAeA,KAGlB24B,IACC9uE,EAAAA,GAAAC,cAACqrE,EAAAA,EAAa,CACZ/nD,OAAQ2qD,GACRvqD,QAASyqD,GACTxqD,oBAAqBorD,GACrBlyE,OAAQA,IAGXmyE,IACCjvE,EAAAA,GAAAC,cAACorE,EAAAA,EAAe,CACd9nD,OAAQ8qD,GACR1qD,QAAS4qD,GACT3qD,oBAAqBurD,GACrBryE,OAAQA,IAGXsyE,IACCpvE,EAAAA,GAAAC,cAACoxE,EAAAA,EAAW,CACV9tD,OAAQirD,GACR7qD,QAAS+qD,GACT9qD,oBAAqB0rD,GACrBxlC,OAAQhtC,EACR2zD,QAAQ,SAGH,I,oHCnYf,MA8GA,GAAe/zD,EAAAA,EAAAA,KA9GiBqB,IAE1B,IAF2B,MAC/Bo+C,EAAK,KAAEp/C,EAAI,SAAEywE,EAAQ,QAAExK,EAAO,4BAAEgO,EAA2B,eAAEM,EAAc,YAAEL,EAAW,cAAE96B,GAC3Fp4C,EACC,MAAM,oBACJwzE,EAAsB,EAAC,qBAAEC,EAAuB,GAC7Cz0E,EAAKk1B,QAAiB,CAAC,EAARl1B,EAEd00E,GAAmBjE,GAAYrxB,IAAUm1B,EACzCr/C,EAAUl1B,EAAKk1B,UAAYkqB,EAC3Bu1B,GAAmB/yE,EAAAA,EAAAA,KAAQ,IAC/BszB,GAAWl1B,GAAMq/C,OAASl9C,OAAOC,OAAOpC,EAAKq/C,QAAQ78C,QAAOD,IAAA,IAAC,YAAEqyE,GAAaryE,EAAA,OAAKqyE,CAAW,SAAIn0E,GAC/F,CAACT,EAAMk1B,IAEJ0/C,GAAchzE,EAAAA,EAAAA,KAAQ,IAC1BszB,EAEM+wC,GAAW0O,GAAkBnyE,QAAQ4e,IAAwB,IAAhBA,EAAI6kD,UAAmB5iE,QACnEsxE,GAAkBtxE,QACpB+7C,GAASp/C,GAAM40E,aACnB,CAAC50E,EAAMo/C,EAAOu1B,EAAkBz/C,EAAS+wC,IAEtC4O,GAAgBjzE,EAAAA,EAAAA,KAAQ,KAC5B,MAAMkzE,EAAyB90E,EAAKq/C,QAC/Bl9C,OAAOC,OAAOpC,EAAKq/C,QAAQt0B,MAAM3J,IAASA,EAAI6kD,SAAW7kD,EAAIwzD,cAElE,OAAO3O,GAAYjmE,EAAKq/C,SAAWy1B,CAAuB,GACzD,CAAC90E,EAAMimE,IAEJ8O,GAAgB31B,GAAgBp/C,EAAK+0E,cAMrCxoD,IAJsBqE,EAAAA,EAAAA,IAC1B,KAAOokD,EAAAA,EAAAA,IAASd,GAAeA,IAAgBA,GAC/C,CAACA,KAEqCvzE,QACtCi0E,GAAeJ,GAAuBO,GAAiBtE,GAAYgE,GAChEC,GAGCO,EAAWt0E,SAASi0E,GAAeG,KAAmB37B,GACtDn4C,GAAYkC,EAAAA,EAAAA,GAChB,YACA0xE,GAAiB,SAChBI,GAAYxE,GAAY,SACzBwE,GAAY,UA2Dd,OACEhyE,EAAAA,GAAAC,cAACgyE,EAAAA,EAAc,CAACliB,UAAQ,EAAC/xD,UAAU,uBAAuBulB,OAAQ+F,GAzDpE,WACE,MAAM4oD,EAAyBV,GAC7BxxE,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsB0xE,GAAiB,UACpE5xE,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAIXm0E,EAAwBZ,GAC5BvxE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBAIXo0E,EAAuBX,GAC3BzxE,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsB0xE,GAAiB,WAGlES,EAAsBP,GAAiBH,EAC3C3xE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,IACZ8zE,GAAiB9xE,EAAAA,GAAAC,cAACqyE,EAAAA,EAAe,CAAC5xE,MAAM6xE,EAAAA,EAAAA,IAAqBZ,WAE/Dn0E,EAEEg1E,EAAgBhF,GACpBxtE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,GACdgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,2BAOXsD,EAAW,CACf8wE,EAAsBF,EAAwBC,EAAuBE,GAJzCA,IAAuBF,IAA0BD,GAC1EM,GAIHjzE,OAAO7B,SAET,OAAIy4C,EAAsBq8B,EAEF,IAApBlxE,EAASlB,OAEW,IAApBkB,EAASlB,OAAqBkB,EAAS,GAEvC0vE,EACgC,CAChCmB,EAAuBE,EAAoBH,EAAwBM,GACnEjzE,OAAO7B,SACwB,GAIjCsC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBACZsD,QAbL,CAgBF,CAIKmxE,GACc,G,2UCrIrB,SAAgB,KAAO,WAAW,UAAY,WAAW,OAAS,WAAW,MAAQ,WAAW,eAAe,WAAW,YAAc,WAAW,KAAO,WAAW,KAAO,WAAW,KAAO,WAAW,cAAgB,WAAW,OAAS,WAAW,aAAe,YAAY,OAAS,YCoK5R,GAAe/1E,EAAAA,EAAAA,KAxIeqB,IAIxB,IAJyB,gBAC7B20E,EAAe,YACfhF,EAAW,QACXvtE,GACDpC,EACC,MAAM,sBAAE40E,IAA0Bv0E,EAAAA,EAAAA,MAC5BC,GAAOC,EAAAA,EAAAA,KAEPs0E,GAAiBC,EAAAA,EAAAA,IAA8BC,EAAAA,KAC/CC,GAAiBC,EAAAA,EAAAA,MACjBC,EAAqBF,EAAeD,EAAAA,MAAqBI,WAEzDC,GAAex0E,EAAAA,EAAAA,KAAQ,KAC3B,IAAKi0E,GAAgBxyE,OAAQ,OAAO/B,EAAK,WAEzC,MAAMW,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAO6zE,EAAexzE,MAAM,EAnBV,GAmB4BC,KAAI,CAACvC,EAAQyE,EAAG6xE,KAC5D,MAAMjlB,EAAS5sD,IAAM6xE,EAAIhzE,OAAS,EAC5BrD,EAAOiC,EAAUlC,GACvB,IAAKC,EACH,OAGF,MAAMyR,GAAQ8oC,EAAAA,EAAAA,IAAaj5C,EAAMtB,GAEjC,OACEiD,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAOpH,KAAMk2E,GAAsBl2E,EAAK40E,aAAextE,EAAOkvE,UAC3FhkE,EAAAA,EAAAA,GAAWb,IAEb2/C,EAAS,GAAK,KACd,GAEL,GACD,CAACykB,EAAgBv0E,EAAM40E,IAEpB/C,GAAiBvxE,EAAAA,EAAAA,KAAQ,KAC7B,MAAM20E,GAAkBZ,EAAgBnrB,aAAe,CACrD/4C,MAAOnQ,EAAK,gCACZ8lB,KAAM,WACNovD,QAASA,KACPZ,EAAsB,CAAEprB,aAAa,GAAO,GAI1CisB,EAAed,EAAgBnrB,aAAe,CAClD/4C,MAAOnQ,EAAK,8BACZ8lB,KAAM,SACNovD,QAASA,KACPZ,EAAsB,CAAEprB,aAAa,GAAQ,GAI3CksB,EAAa,CACjBjlE,MAAOnQ,EAAK,+BACZ8lB,KAAM,kBACNovD,QAASA,KACPZ,EAAsB,CAAEe,UAAU,GAAO,GAI7C,OAAOC,EAAAA,EAAAA,IAAQ,CAACL,EAAgBE,EAAcC,GAAY,GACzD,CAACf,EAAgBnrB,YAAalpD,EAAMs0E,IAEjC7C,GAAkBtxE,EAAAA,EAAAA,KAAakP,IACnCA,EAAE4L,iBACFo0D,KAAe,GACd,CAACA,IAiDJ,OACE1tE,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CACP7mD,QAASA,EACTutE,YAAaoC,EACb9xE,WAAWkC,EAAAA,EAAAA,GACTiE,EAAOuN,KACPghE,EAAgBnrB,aAAepjD,EAAOyvE,UACtC,sBACA,qBAEFC,gBAAiB1vE,EAAO+J,OACxBgiE,eAAgBA,EAChBS,mBAAiB,GAEhB+B,EAAgBnrB,YA3DjBvnD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO2vE,KAAM,SAC1C9zE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,QAASiE,EAAOqK,QAC7CxO,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO8L,KAAM,aACpDjQ,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAOggB,KAAM,OAAQ,yBACjD9lB,EAAK,mBAGV2B,EAAAA,GAAAC,cAAC8zE,EAAAA,EAAK,CACJ/1E,UAAWmG,EAAOwtE,YAClBjxE,KAAMuyE,GAAqBV,EAAAA,EAAAA,IAAqBU,QAAsBz1E,MAS5EwC,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUiE,EAAO6vE,gBAC9Ch0E,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUiE,EAAO0N,SAC9C7R,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,+BAGjBgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO2vE,KAAM,SAC1C9zE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,QAASiE,EAAOqK,QAC7CxO,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO8L,KAAM,aAAc5R,EAAK,oBAG7E2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUiE,EAAO8vE,eAC7Cd,GAEHnzE,EAAAA,GAAAC,cAAC8zE,EAAAA,EAAK,CACJ/1E,UAAWmG,EAAOwtE,YAClBjxE,KAAMuyE,GAAqBV,EAAAA,EAAAA,IAAqBU,QAAsBz1E,OAuBrE,I,2DChKf,MCsEA,GAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAA2C,IAAzC,SAAEiuE,EAAQ,WAAE2G,GAAY50E,EAGxE,MAAO,CACL60E,WAHiB5G,GAA2B,WAAf2G,GAA0BE,EAAAA,EAAAA,KAAiBx3E,EAAQ2wE,QAAY/vE,EAI5F62E,eAAeC,EAAAA,EAAAA,KAAoB13E,EAAQ,MAC5C,GANiBD,EAvC2BoB,IAEzC,IAF0C,WAC9Co2E,EAAU,cAAEE,EAAa,gBAAEE,EAAe,uBAAEC,GAC7Cz2E,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,SAAEgJ,IAAaC,EAAAA,EAAAA,MAEfktE,GAAmBj2E,EAAAA,EAAAA,KAAY,KACnC+1E,EAAgB,CAAEp4D,KAAM,aAAcysB,QAASurC,IAC/CK,EAAuBE,EAAAA,GAAgBC,8BAA8B,GACpE,CAACR,EAAYI,EAAiBC,IAEjC,OACEx0E,EAAAA,GAAAC,cAAA,OAAKjC,UD3Cc,YC4CjBgC,EAAAA,GAAAC,cAAA,OAAKjC,UD5CiC,YC6CnCq2E,GAAiBr0E,EAAAA,GAAAC,cAAC20E,EAAAA,EAAuB,CAAC/yE,QAASwyE,EAAe/zE,KAhBzD,MAkBZN,EAAAA,GAAAC,cAAA,MAAIjC,UD/CqD,WC+C5B0D,IAAI,QAAQrD,EAAK,2BAC9C2B,EAAAA,GAAAC,cAAA,KAAGjC,UDhD+E,WCgDhD0D,IAAI,QACnCrD,EAAK81E,EAAa,mCAAqC,mBAEzDA,GACCn0E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLmP,QAASrI,EACTsgD,OAAK,EACLitB,MAAI,EACJ10E,QAASs0E,EACTn0E,KAAK,UACLqB,MAAOtD,EAAKsD,OAEZ3B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UD7D4M,YC8D9MK,EAAK,sCAIR,K,eClEV,QAA4H,WCsE5H,GAAe3B,EAAAA,EAAAA,KArDYqB,IAA6C,IAA5C,SAAE+2E,EAAQ,eAAEC,GAA2Bh3E,EACjE,MAAM,sBAAEi3E,EAAqB,uBAAEC,EAAsB,iBAAEj/D,IAAqB5X,EAAAA,EAAAA,MAEtE2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7BvC,GAAOC,EAAAA,EAAAA,MAEb8qD,EAAAA,EAAAA,GAAkBrkD,GAAMozD,IACtB,MAAM1sD,EAAS0sD,EAAM+c,gBAAgB,IAAIC,WAAahd,EAAMC,YAAY3sD,OACxEspE,EAAetpE,EAAO,IAGxB,MAAM2pE,GAAmBz2E,EAAAA,EAAAA,KAAQ,IACxBO,OAAOC,OAAO21E,GAAUxY,MAAK,CAACC,EAAGC,IAAMA,EAAE6Y,YAAc9Y,EAAE8Y,cAC7DjoD,MAAMkoD,GAAYA,EAAQC,iBAC5B,CAACT,IAEEU,GAAiB72E,EAAAA,EAAAA,KAAQ,IACtB,CAACy2E,EAAiBK,YAAaL,EAAiBM,OAAQN,EAAiB7uB,SAAShnD,OAAO7B,SAAS4kB,KAAK,OAC7G,CAAC8yD,IAEEO,GAAe/xE,EAAAA,EAAAA,IAAgB,KACnCoxE,EAAsB,CACpBzT,KAAM6T,EAAiB7T,KACvBqU,aAAa,GACb,IAGEC,GAAejyE,EAAAA,EAAAA,IAAgB,KACnCqxE,EAAuB,CAAE1T,KAAM6T,EAAiB7T,OAChDvrD,EAAiB,CACfxH,MAAOnQ,EAAK,6BAA8B,GAC1C8G,QAAS9G,EAAK,qCAAsCm3E,IACpD,IAGJ,OACEx1E,EAAAA,GAAAC,cAAA,OAAKjC,UDrDqC,WCqDb+G,IAAKA,GAChC/E,EAAAA,GAAAC,cAAA,MAAIjC,UDtDuD,YCsD7BK,EAAK,yBACnC2B,EAAAA,GAAAC,cAAA,KAAGjC,UDvD0E,YCwD1EK,EAAK,wBAAyBm3E,IAEjCx1E,EAAAA,GAAAC,cAAA,OAAKjC,UD1D6F,YC2DhGgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAAConD,OAAK,EAAC5P,QAAM,EAAC13C,KAAK,UAAUtC,UAAWmG,EAAehE,QAASw1E,GACpEt3E,EAAK,2BAER2B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAAConD,OAAK,EAAC5P,QAAM,EAAC13C,KAAK,UAAUsP,MAAM,SAASzP,QAAS01E,EAAc73E,UAAWmG,GAClF9F,EAAK,yBAGN,ICRJy3E,EAAmB,IAAI/yE,IAAI,CAAC,IAAK,MAgOvC,GAAerG,EAAAA,EAAAA,KA9NgBqB,IAYzB,IAZ0B,UAC9BC,EAAS,WACTk2E,EAAU,SACV3G,EAAQ,SACRpwE,EAAQ,iBACR2vE,EAAgB,kBAChBiJ,EAAiB,gBACjBrD,EAAe,SACfoC,EAAQ,gBACRP,EAAe,uBACfC,EAAsB,0BACtBwB,GACDj4E,EACC,MAAM,SACJ4vE,EAAQ,aACRsI,EAAY,gBACZjI,EAAe,kBACfkI,IACE93E,EAAAA,EAAAA,MAEEm4D,GAAe31D,EAAAA,EAAAA,IAAuB,MACtCu1E,GAAsBv1E,EAAAA,EAAAA,KAAO,IAC5Bw1E,EAA0BC,IAA+B3uE,EAAAA,EAAAA,IAAS,GAEnE4uE,EAA4B,aAAfpC,EACbqC,EAA6B,QAAfrC,EACdsC,EAAyB,UAAftC,EACVuC,EACJF,EAAcG,EAAAA,IAAgBJ,EAAaxD,EAAAA,IAAqB0D,EAAUG,EAAAA,IAAkBpJ,EAGxFqJ,EAAuBL,GAAeR,GAAqBrD,EAE3DvF,GAAa0F,EAAAA,EAAAA,IAA8B4D,IACjDI,EAAAA,EAAAA,GAAsB1J,GAEtB,MAAM2J,GAAe3J,GAAY/sE,QAAU,GAAK22E,EAAAA,IAC1CC,EAAgBJ,EAClBlE,GAAiBnrB,YAAc0vB,EAAAA,IAA2BF,EAAAA,IAAiB,GAEzE,cAAEG,EAAa,iBAAEC,KAAqBC,EAAAA,EAAAA,GAAajK,IAElDtnB,GAAaC,KAAWC,EAAAA,EAAAA,QAAkBvoD,EAAW2vE,OAAY3vE,EAAW65E,EAAAA,KAE7EC,IAAgC34E,EAAAA,EAAAA,KAAQ,KAC5C,MAAM44E,EAAgBr4E,OAAOC,OAAO21E,GAAY,CAAC,GAC3C1zE,EAAUm2E,EAAcnqD,MAAMkoD,GAAYA,EAAQkC,YACxD,SAAKp2E,IAAWspC,EAAAA,EAAAA,MAAkBtpC,EAAQi0E,YAAcoC,EAAAA,MAEjDlB,GAAegB,EAAczvD,MAAMwtD,GAAYA,EAAQC,eAAc,GAC3E,CAACgB,EAAazB,KAEjBt1E,EAAAA,EAAAA,KAAU,KACH83E,IAA+BjB,EAA4B,EAAE,GACjE,CAACiB,MAGJI,EAAAA,EAAAA,GAAWv6E,GAAYgwE,GAAY/sE,OAAS,CAC1C,cAAgBsN,IACdA,EAAE4L,iBACF28D,EAAa,CAAE0B,kBAAmB,EAAGxK,cAAa,EAEpD,gBAAkBz/D,IAChBA,EAAE4L,iBACF28D,EAAa,CAAE0B,iBAAkB,EAAGxK,cAAa,QAEjD3vE,IAGJgC,EAAAA,EAAAA,KAAU,KACR,GAAKrC,IAAYq5E,GAAYrJ,GAAeyK,EAAAA,GA2B5C,OAFAxlE,SAAS6D,iBAAiB,UAAW4hE,GAE9B,KACLzlE,SAAS+D,oBAAoB,UAAW0hE,EAAc,EAxBxD,SAASA,EAAcnqE,GACrB,IAAMoqE,EAAAA,IAAapqE,EAAEqqE,UAAcD,EAAAA,IAAapqE,EAAEsqE,UAAatqE,EAAEizD,KAAK18B,WAAW,SAAU,CACzF,MAAO,CAAEk9B,GAASzzD,EAAEizD,KAAKxpD,MAAM,cAAgB,GAC/C,IAAKgqD,GAAS2U,EAAiBvyE,IAAI49D,GAAQ,OAE3C,MAAM8W,EAAkBrB,GAAwBlE,IAAoBA,EAAgBnrB,YAE9E2U,EAAQ+b,GAAmB,EAAI,EAC/BluC,EAAWf,OAAOm4B,GAASjF,EAAQ,EAEzC,GAAI+b,IAAiC,IAAdluC,EAErB,YADAisC,IAA4BkC,EAAAA,GAAkBC,UAIhD,GAAIpuC,EAAWojC,EAAY/sE,OAAS,EAAG,OAEvCutE,EAAS,CAAElwE,GAAI0vE,EAAYpjC,GAAWlB,sBAAsB,GAC9D,CACF,CAMC,GACA,CACD6pC,EAAiB8D,EAASr5E,EAAU64E,EAA2BrI,EAAUsI,EAAc9I,EACvFyJ,IAGF,MAAM,QAAEwB,KAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAS/hB,EACTgiB,WA/G0B,MAkHtBC,IAAsB50E,EAAAA,EAAAA,IAAgB,KAC1CoyE,EAA2BkC,EAAAA,GAAkBC,UAC7CnK,GAAiB,IAGbyK,IAA0B70E,EAAAA,EAAAA,IAAgB,KAC1CuyE,EAAoB/0E,QACtB+0E,EAAoB/0E,SAAU,EAGhCo3E,IAAqB,IAGjB1I,IAAkB4I,EAAAA,EAAAA,IAAsB57E,IACxCq5E,EAAoB/0E,QACtB+0E,EAAoB/0E,SAAU,EAGhCusE,EAAS,CAAElwE,GAAIX,EAAQ+rC,sBAAsB,GAAO,GACnD,CAAC8kC,GApIsB,KAoIU,GAE9BgL,IAAkB/0E,EAAAA,EAAAA,IAAiB8J,IACvC,MAAM6zC,EAAO7zC,EAAE8zC,cAAc5zC,wBACvB1B,EAAIwB,EAAEG,QAAU0zC,EAAK5zC,KACrBxB,EAAIuB,EAAE+zC,QAAUF,EAAKhT,IACvBriC,EAAIq1C,EAAK/1C,OAASW,EAAIo1C,EAAKp1C,IAC/BgqE,EAAoB/0E,SAAU,EAAI,IAW9Bw3E,GCpMO,SACbriB,EACAsiB,EACAC,EACA3zD,GAGA,MAAM4zD,GAAuBn4E,EAAAA,EAAAA,IAAuB,MAE9Co4E,GAAuBp4E,EAAAA,EAAAA,KAAO,GAC9Bq4E,GAAmBr4E,EAAAA,EAAAA,IAAO,GAC1Bs4E,GAAsBt4E,EAAAA,EAAAA,KAAO,GAC7Bu4E,GAAiBv4E,EAAAA,EAAAA,KAAO,GACxBw4E,GAAkBx4E,EAAAA,EAAAA,IAAO,GACzBy4E,GAA2Bz4E,EAAAA,EAAAA,KAAO,GAElC04E,GAA0B11E,EAAAA,EAAAA,IAAgB,WAAiC,IAAhC21E,EAAmBzvE,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAC9DovE,EAAoB93E,SACnB23E,EAAqB33E,SAAYm1D,EAAan1D,UAEnD23E,EAAqB33E,QAAQ4C,MAAMw1E,QAAU,QAC7CjjB,EAAan1D,QAAQq4E,UAxBF,EA0Bd35C,EAAAA,IAAcy5C,IACjBG,EAAAA,EAAAA,GAAkBnjB,EAAan1D,SAGjC43E,EAAqB53E,SAAU,EAC/B63E,EAAiB73E,QA/BE,EAgCnB83E,EAAoB93E,SAAU,EAC9B+3E,EAAe/3E,SAAU,EAC3B,IAEMu4E,GAA2B/1E,EAAAA,EAAAA,IAAgB,KAC1Cs1E,EAAoB93E,SACpB23E,EAAqB33E,UAE1B23E,EAAqB33E,QAAQ4C,MAAMw1E,QAAU,OAE7CN,EAAoB93E,SAAU,EAAK,IAG/Bw4E,GAAeh2E,EAAAA,EAAAA,IAAgB,KACnC,IAAK2yD,EAAan1D,QAAS,OAE3B,GAAI43E,EAAqB53E,QAGvB,YAFA43E,EAAqB53E,SAAU,GAKjC,MAAMy4E,EAAetjB,EAAan1D,QAAQq4E,UACpCK,EAAeD,EAAeZ,EAAiB73E,QAC/C24E,EAAaF,EAAeZ,EAAiB73E,QAC7C44E,EAA2B,IAAjBH,EACVI,EAAiBr9D,KAAKC,MAAQu8D,EAAgBh4E,QAEpD,GAAI23E,EAAqB33E,QAAS,CAChC,GAAI44E,IAAYd,EAAoB93E,QAElC,YADA84E,EAAAA,EAAAA,IAAcZ,EAAyB,CAAC/iB,EAAan1D,QAAS23E,EAAqB33E,WAIrF84E,EAAAA,EAAAA,IAAcP,EAA0BZ,EAAqB33E,QAC/D,CAGE24E,IACGZ,EAAe/3E,SAAW64E,EAtET,KAuEdJ,EAAe,GAAKR,EAAyBj4E,SAEnDy3E,MACSiB,GAAgBD,EAAe,GACxCf,MAGFG,EAAiB73E,QAAUy4E,EAC3BV,EAAe/3E,QAAU44E,EACzBZ,EAAgBh4E,QAAUwb,KAAKC,MAC/Bw8D,EAAyBj4E,QAAU04E,GAAgBD,EAAe,CAAC,IAI/DM,GAAczB,EAAAA,EAAAA,IAAsB11B,IACxC,IAAKuT,EAAan1D,QAAS,OAC3B,MAAMi3D,EAAY9B,EAAan1D,QAEVi3D,EAAU+hB,aAAe/hB,EAAUuG,cACnB,IAAjB5b,EAAMq3B,SAEtBr3B,EAAMq3B,OAAS,EACjBxB,MAEAC,MACF,GACC,CAACviB,EAAcsiB,EAAcC,GAnGL,KAwH3B,OAnBAt5E,EAAAA,EAAAA,KAAU,KACR,MAAM64D,EAAY9B,EAAan1D,QAC/B,GAAKi3D,EAWL,OAT4B,IAAxBA,EAAUohB,YACZv5C,EAAAA,EAAAA,KAAgB,KACdo5C,GAAwB,EAAK,IAIjCjhB,EAAUpiD,iBAAiB,SAAU2jE,EAAc,CAAEU,SAAS,IAC9DjiB,EAAUpiD,iBAAiB,QAASkkE,EAAa,CAAEG,SAAS,IAErD,KACLjiB,EAAUliD,oBAAoB,SAAUyjE,GACxCvhB,EAAUliD,oBAAoB,QAASgkE,EAAY,CACpD,GACA,CAAC5jB,EAAc4jB,IAEVhoE,EAAAA,IAAWgT,OAEf3nB,EADFwC,EAAAA,GAAAC,cAAA,OAAK8E,IAAKg0E,EAAsB/6E,UAAU,qBAAqBu3C,IAAI,sBAEvE,CD6EkCglC,CAAiBhkB,GARnB3yD,EAAAA,EAAAA,IAAgB,KAC5CsyE,EAAkB,CAAE5sD,SAAS,EAAMgtD,cAAa,KAGpB1yE,EAAAA,EAAAA,IAAgB,KAC5CsyE,EAAkB,CAAE5sD,SAAS,EAAOgtD,cAAa,IAG0DE,GA6B7G,OACEx2E,EAAAA,GAAAC,cAACwnD,EAAAA,EAAc,CACbzpD,WAAWkC,EAAAA,EAAAA,GAAe,0BAA2B4sE,GAAoB,mBAAoB9uE,GAC7F+G,IAAKwxD,EACLrhD,MAAO2wC,GACP20B,aAAa,oCACbC,iBAAkBpD,EAAAA,IAClBqD,yBAAuB,EACvBvzB,eAAgByxB,GAChB+B,UAAW7D,EAAcE,EAAgBZ,EACzC1xB,WAAYoB,GACZ80B,YAAajC,IAEZrB,IACCt3E,EAAAA,GAAAC,cAAC46E,EAAkB,CACjBtlC,IAAI,cACJu/B,SAAUA,EACVC,eAAgBsB,IAGnBO,GACC52E,EAAAA,GAAAC,cAAC66E,EAAO,CACNvlC,IAAI,UACJm9B,gBAAiBA,EACjBvyE,QAASq4E,GACT9K,YAAa+K,KAGhB5yB,IAAazlD,OAvDlB,WACE,MAAM26E,EAAiB5N,EAAYh4D,QAAQ0wC,GAAa,IAElDm1B,GAAcC,EAAAA,EAAAA,IAAoBxE,IAAqB,EAE7D,OAAO5wB,GAAaxmD,KAAI,CAAC5B,EAAI8D,KAC3B,MAAMisE,EAAWuN,EAAiBx5E,EAAIy5E,EAChCvN,EAAY2I,EAA2BY,GAAiB+D,EAAiBx5E,GAAKw1E,EAAAA,IAEpF,OACE/2E,EAAAA,GAAAC,cAAC4mE,EAAAA,EAAI,CACHtxB,IAAK93C,EACLy9E,cAAe1N,EAAWjsE,GAAI45E,EAAAA,EAAAA,IAAY19E,EAAI+4E,GAC9C15E,OAAQW,EACR+vE,SAAUA,EACVD,SAAUA,EACVp3B,cAAeqgC,EACfzP,cAAeoQ,GAAiB15E,GAChCqpE,UAAWoQ,EAAcz5E,GACzBgwE,UAAWA,EACXv1B,oBAAqBkgC,GACrB1K,YAAaoC,IACb,GAGR,CA+BMsL,IACEv1B,IAAgBA,GAAYzlD,QAAWo2E,EAUzCx2E,EAAAA,GAAAC,cAACynD,EAAAA,EAAO,CAACnS,IAAI,YARXv1C,EAAAA,GAAAC,cAACo7E,EAAW,CACV9N,SAAUA,EACV2G,WAAYA,EACZK,gBAAiBA,EACjBC,uBAAwBA,IAMf,G,oWEtRrB,SAAgB,KAAO,WAAW,cAAc,WAAW,WAAa,WAAW,QAAU,WAAW,MAAQ,WAAW,YAAc,WAAW,SAAS,WAAW,MAAQ,WAAW,WAAW,WAAW,QAAU,YC2BrNnM,EAAY,EAAIzsB,EAAAA,EAwCtB,GAAel/C,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAA6B,IAA3B,OAAExC,GAAQwC,EAC1D,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1Bw+E,EAAkBv+E,IAASA,EAAK66C,YAAa8rB,EAAAA,EAAAA,IAAiB3mE,EAAM,iBAE1E,MAAO,CACLs3E,eAAeC,EAAAA,EAAAA,KAAoB13E,EAAQ,MAC3C0+E,kBACD,GAPiB3+E,EAtC0BoB,IAExC,IAFyC,OAC7CjB,EAAM,cAAEu3E,EAAa,gBAAEiH,GACxBv9E,EACC,MAAM,qBAAEw9E,IAAyBn9E,EAAAA,EAAAA,MAE3BC,GAAOC,EAAAA,EAAAA,MACP,SAAEgJ,IAAaC,EAAAA,EAAAA,MAEfi0E,GAAoBh9E,EAAAA,EAAAA,KAAY,KACpC+8E,EAAqB,CAAEz+E,UAAS,GAC/B,CAACA,EAAQy+E,IAEZ,OACEv7E,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAAOuN,MACrB1R,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAAOtC,SACpBwyE,GAAiBr0E,EAAAA,GAAAC,cAAC20E,EAAAA,EAAuB,CAAC/yE,QAASwyE,EAAe/zE,KAAM+nE,KAE3EroE,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,EAAOqK,MAAO9M,IAAI,QAAQrD,EAAK,8BAC9C2B,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO29C,YAAa39C,EAAOs3E,UAAW/5E,IAAI,QACpErD,EAAK,oCAEPi9E,GACCt7E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLmP,QAASrI,EACTsgD,OAAK,EACLznD,QAASq7E,EACTl7E,KAAK,UACLqB,MAAOtD,EAAKsD,OAEZ3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAAOu3E,YACpBr9E,EAAK,gCAIR,K,uIC/DV,MC4OA,GAAe3B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAoC,IAAlC,OAAExC,EAAM,MAAEq/C,EAAK,WAAEz2C,GAAYpG,EACpC,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAE1Bq+D,GAAc12C,EAAAA,EAAAA,KAAkB7nB,EAAQE,EAAQq/C,EAAMovB,gBACtD,SAAEE,EAAQ,WAAEC,GAAevQ,GAAe,CAAC,EAC3C0Q,EAAmB1Q,IAAe2Q,EAAAA,EAAAA,GAAoB3Q,IAAch0C,aACpE4kD,EAAoBN,GACrBt7C,EAAAA,EAAAA,KAAWvzB,EAAQ6uE,KAAazuE,EAAAA,EAAAA,KAAWJ,EAAQ6uE,QAAajuE,EAC/DwuE,EAAoB7Q,GAAc8Q,EAAAA,EAAAA,IAAiB9Q,QAAe39D,EAClE0uE,EAAsBF,GAAqBH,GAC7CpnD,EAAAA,EAAAA,KAAkB7nB,EAAQE,EAAQ+uE,QAClCruE,GACI2uE,cAAeC,EAAqBC,aAAcC,GAAuBN,GAAqB,CAAC,EACjGzvB,GAAeswB,EAAAA,EAAAA,KAAkBjwE,EAAQE,EAAQq/C,EAAM1+C,GAAI,gBAC3DmpB,GAAQC,EAAAA,EAAAA,KAAYjqB,EAAQE,EAAQq/C,EAAM1+C,IAC1Co+C,GAAaC,EAAAA,EAAAA,KAAiBl/C,EAAQE,EAAQq/C,EAAM1+C,IACpD6zE,EAAiB5zE,QAAQm+C,GAAY8/B,yBAEnC7+E,OAAQ0vE,EAAertD,SAAUstD,IAAoBjoD,EAAAA,EAAAA,KAAyB5nB,IAAW,CAAC,EAElG,MAAO,CACLG,OACAo+D,cACAiR,sBACAE,qBACAJ,sBACAH,oBACAxvB,eACAq/B,WAAWC,EAAAA,EAAAA,KAAqBj/E,EAAQE,EAAQq/C,EAAM1+C,IACtD6vE,yBAAyBpsE,EAAAA,EAAAA,KAA0BtE,GACnDgqB,WACI8kD,GAAcvQ,GAAe,CAC/BiS,2BAA2BC,EAAAA,EAAAA,KAAqBzwE,EAAQu+D,IAE1D6R,cAAetnE,GAAc3I,GAAMU,KAAO+uE,GAAiBC,IAAoBtwB,EAAM1+C,GACrF6zE,iBACD,GArCe30E,EArKqBoB,IAqBnC,IArBoC,MACxCo+C,EAAK,WACLz2C,EAAU,OACV5I,EAAM,KACNC,EAAI,MACJiH,EAAK,YACLm3D,EAAW,cACX6R,EAAa,0BACbI,EAAyB,oBACzBl1B,EAAmB,UACnB0jC,EAAS,oBACT1P,EAAmB,oBACnBE,EAAmB,mBACnBE,EAAkB,kBAClBP,EAAiB,cACjBhF,EAAa,wBACbuG,EAAuB,UACvBxG,EAAS,aACTvqB,EAAY,MACZ31B,EAAK,eACL0qD,GACDvzE,EACC,MAAM,WACJi5B,EAAU,YACV8kD,EAAW,iBACXjO,EAAgB,uBAChBkO,IACE39E,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAENogC,EAAmBC,EAAiBC,IAAoB59B,EAAAA,EAAAA,MACxDktE,EAAiBC,EAAeC,IAAkBptE,EAAAA,EAAAA,MAClD2tE,EAAyBC,EAAuBC,IAA2B7tE,EAAAA,EAAAA,MAC3E8tE,EAAuBC,GAAqBC,KAAyBhuE,EAAAA,EAAAA,MAEtE,SACJwsE,GAAQ,SAAEwO,IACR7/B,EACE6mB,GAAU7mB,EAAM6mB,cAA8BxlE,IAAlB2+C,EAAM6mB,SAAyBjmE,EAAKimE,QAEhEiZ,IAAwBr4E,EAAAA,EAAAA,IAAgB,KAC5CgrE,IACAjwC,GAAiB,IAGboxC,IAAensE,EAAAA,EAAAA,IAAgB,KACnCk4E,EAAY,CAAEh/E,OAAQC,EAAKU,GAAIs0D,QAAS5V,EAAM1+C,IAAK,IAG/CuyE,IAAapsE,EAAAA,EAAAA,IAAgB,KACjCmrE,KACAZ,GAAe,KAGX,eAAEqB,GAAc,IAAEzqE,KAAQ0qE,EAAAA,EAAAA,GAAiB,CAC/C1yE,OACAD,SACAq+D,cACAv0C,QACAslD,sBACAE,sBACAE,qBACAP,oBACAa,iBAAkBzwB,EAClBjE,sBACAwF,SAAS,EACTnB,eAEAwqB,gBACAuG,0BACAxG,cAGIoV,IAAkBt4E,EAAAA,EAAAA,IAAgB,KACtCozB,EAAW,CAAEl6B,SAAQqiB,SAAUg9B,EAAM1+C,GAAIorC,sBAAsB,IAC/DkzC,EAAuB,CAAEj/E,SAAQykC,WAAW,IAExCyrC,GACFa,GACF,IAGIqC,GC/IO,SAA+BnyE,GAc3C,IAd4C,MAC7Co+C,EAAK,KACLp/C,EAAI,UACJo/E,EAAS,UACTP,EAAS,aACT7L,EAAY,WACZC,GAQDjyE,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,OAAOK,EAAAA,EAAAA,KAAQ,KACb,MAAM,SACJ6uE,EAAQ,QAAExK,EAAO,SAAEgZ,EAAUv+E,GAAIs0D,GAC/B5V,EAEEr/C,EAASC,EAAKU,IAEd,UACJ2+E,EAAS,kBACTC,EAAiB,cACjBC,EAAa,sBACbnY,EAAqB,iBACrBoY,IACEn+E,EAAAA,EAAAA,MAEEo+E,GAAkBC,EAAAA,EAAAA,IAAkB1/E,EAAMo/C,GAC1CugC,EAAkB3/E,EAAK66C,YAAa8rB,EAAAA,EAAAA,IAAiB3mE,EAAM,gBAE3D4/E,EAAqBnM,EAAAA,IAAgC,CACzDhiE,MAAO,kBACP2V,KAAM,kBACNovD,QAASA,KACPgJ,EAAiB,CAAEz/E,OAAQC,EAAKU,GAAI0hB,SAAU4yC,GAAU,GAItD6qB,EAAmBzgC,EAAMw1B,cAAgBwK,EAC3C,CACA3tE,MAAOnQ,EAAK,cACZ8lB,KAAM,YACNovD,QAASA,KACP+I,EAAc,CAAEx/E,SAAQi1D,WAAU,QAGpCv0D,EAEEq/E,EAAYH,EAAmBlP,EACjC,CACAh/D,MAAOnQ,EAAK,gBACZ8lB,KAAM,QACNovD,QAASA,IAAM8I,EAAkB,CAAEv/E,SAAQi1D,UAASyb,UAAU,KAE9D,CACAh/D,MAAOnQ,EAAK,YACZ8lB,KAAM,MACNovD,QAASA,IAAM8I,EAAkB,CAAEv/E,SAAQi1D,UAASyb,UAAU,UAC3DhwE,EAEDs/E,EAAe//E,EAAKimE,UAAuB,IAAZA,IAAkC,IAAZA,EACvD,CACAx0D,MAAOnQ,EAAK,mBACZ8lB,KAAM,SACNovD,QAASA,IAAMpP,EAAsB,CAAErnE,SAAQi1D,UAASiR,SAAS,KAEjE,CACAx0D,MAAQ,GAAEnQ,EAAK,sBACf8lB,KAAM,OACNovD,QAASvD,GAGP+M,EAAmBP,EAAmBR,EACxC,CACAxtE,MAAOnQ,EAAK,0BACZ8lB,KAAM,eACNovD,QAASA,IAAM6I,EAAU,CAAEt/E,SAAQi1D,UAASiqB,UAAU,KAEtD,CACAxtE,MAAOnQ,EAAK,yBACZ8lB,KAAM,cACNovD,QAASA,IAAM6I,EAAU,CAAEt/E,SAAQi1D,UAASiqB,UAAU,UACnDx+E,EAEDw/E,EAAepB,EAAY,CAC/BptE,MAAOnQ,EAAK,0BACZ8lB,KAAM,SACNs8B,aAAa,EACb8yB,QAASxD,QACPvyE,EAEJ,OAAOm2E,EAAAA,EAAAA,IAAQ,CACbgJ,EACAE,EACAD,EACAE,EACAC,EACAC,GACA,GACD,CAAC7gC,EAAOp/C,EAAMo/E,EAAW99E,EAAMu9E,EAAW7L,EAAcC,GAC7D,CDsCyBiN,CAAuB,CAC5C9gC,QACAp/C,OACAo/E,UAAW7K,EACXsK,YACA7L,aAAckM,GACdjM,gBAGF,OACEhwE,EAAAA,GAAAC,cAAC+mD,EAAAA,EAAQ,CACPhpD,WAAWkC,EAAAA,EAAAA,GDrKM,WCuKf,OACAwF,GAAc,WACd,uBAEFvF,QAAS+7E,GACTl4E,MAAOA,EACP2P,KAAM68D,EAAAA,GAAgC,KAAGC,EAAAA,EAAAA,IAAmB3zE,EAAQ,SAAUq/C,EAAM1+C,WAAQD,EAC5F0yE,eAAgBA,GAChBS,mBAAiB,EACjB5rE,IAAKA,IAEL/E,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,UAC7BF,EAAAA,GAAAC,cAACu+C,EAAAA,EAAS,CAACrC,MAAOA,EAAOn+C,UDrLkF,WCqLrDk6C,oBAAqBA,IAC3El4C,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,UAAU,aAAYqR,EAAAA,EAAAA,GAAW8sC,EAAM3tC,SAEvD2tC,EAAM6mB,SAAWhjE,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAC/BgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cACdg+E,IACCh8E,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GACZ,OACA,kBD7L0D,cCkM7Di7D,GACCn7D,EAAAA,GAAAC,cAACkxE,EAAAA,EAAe,CACdhsE,QAASg2D,EACT5b,eAAgB6tB,KAItBptE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACZwxE,KACDxvE,EAAAA,GAAAC,cAAC8wE,EAAAA,EAAS,CACRh0E,KAAMA,EACNywE,SAAUA,GACVxK,QAASA,GACT7mB,MAAOA,EACPm1B,eAAgBA,MAIrB3C,GACC3uE,EAAAA,GAAAC,cAACy6C,EAAAA,EAAa,CACZn3B,OAAQmb,EACR/a,QAASib,EACThb,oBAAqBirD,EACrBqO,sBAAoB,EACpBviC,eAAgBo1B,GAChBrvE,KAAMrC,EAAK,+BACX8+E,aAAc9+E,EAAK,YAGtBywE,GACC9uE,EAAAA,GAAAC,cAACqrE,EAAAA,EAAa,CACZ/nD,OAAQ2qD,EACRvqD,QAASyqD,EACTxqD,oBAAqBorD,GACrBlyE,OAAQA,EACRi1D,QAAS5V,EAAM1+C,KAGV,KE8Cf,GAAef,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KACjBC,IACC,MAAME,GAASM,EAAAA,EAAAA,KAAeR,GAAQ+vE,iBAChC5vE,EAAOD,GAASE,EAAAA,EAAAA,KAAWJ,EAAQE,QAAUU,GAEjDV,OAAQ0vE,EACRrtD,SAAUstD,IACRjoD,EAAAA,EAAAA,KAAyB5nB,IAAW,CAAC,EAEzC,MAAO,CACLG,OACA4vD,eAAgB7vD,IAAW0vE,EAAgBxjC,OAAOyjC,QAAmBjvE,EACrE8vE,yBAAyBpsE,EAAAA,EAAAA,KAA0BtE,GACpD,IAEFA,IAAWmwE,EAAAA,EAAAA,KAAuBnwE,IAfjBD,EA3N0BoB,IASxC,IATyC,KAC7ChB,EAAI,eACJ4vD,EAAc,OACdppC,EAAM,SACNmwD,EAAQ,cACR0J,EAAa,oBACbx5D,EAAmB,qBACnBy5D,EAAoB,wBACpB/P,GACDvvE,EACC,MAAM,gBACJiwE,EAAe,iBAAEsP,EAAgB,WAAExP,IACjC1vE,EAAAA,EAAAA,MAGE2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAG7B21D,GAAe31D,EAAAA,EAAAA,IAAuB,MAEtC28E,GAAsB38E,EAAAA,EAAAA,IAAuB,OAC7C,SAAE0G,IAAaC,EAAAA,EAAAA,OAErB/H,EAAAA,EAAAA,KAAU,KACJzC,IAASA,EAAKq/C,QAChB0xB,EAAW,CAAEhxE,OAAQC,EAAKU,IAC5B,GACC,CAACV,EAAM+wE,IAEV,MAAO0P,EAAYC,IAAiB/1E,EAAAA,EAAAA,KAAS,GACvCrJ,GAAOC,EAAAA,EAAAA,KAEPo/E,GAAc95E,EAAAA,EAAAA,IAAgB,KAClCoqE,GAAiB,KAGnBxuE,EAAAA,EAAAA,KAAU,KACH8tE,GAA4B/pD,GAC/BK,KACF,GACC,CAAC0pD,EAAyB/pD,EAAQK,IAErC,MAAM+5D,GAAuB/5E,EAAAA,EAAAA,IAAgB,KACtC7G,GACLugF,EAAiB,CAAE7/E,GAAIV,EAAKU,GAAIorC,sBAAsB,GAAO,KAGzD,QAAEuvC,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAS/hB,EACTgiB,WAnD0B,OAsD5BqF,EAAAA,EAAAA,IAAeL,EAAqBnF,GAAS94E,IAAwB,IAAvB,eAAE85C,GAAgB95C,EAC9Dm+E,GAAerkC,EAAe,IAGhC,MAAM+zB,GAAaxuE,EAAAA,EAAAA,KAAQ,IAClB5B,GAAMq/C,QACTyhC,EAAAA,EAAAA,IAAiB3+E,OAAOC,OAAOpC,EAAKq/C,QAASr/C,EAAK+gF,uBAAuBz+E,KAAIxC,IAAA,IAAC,GAAEY,GAAIZ,EAAA,OAAKY,CAAE,IAC3F,IACH,CAACV,KAEE,cAAEm6E,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAajK,EAAYpwE,GAAMU,KAEpEooD,EAAaC,KAAWC,EAAAA,EAAAA,IAAkB,KAC1ChpD,GACL+wE,EAAW,CAAEhxE,OAAQC,EAAKU,IAAK,GAC9B0vE,GAAapwE,GAAMghF,aAAe5Q,EAAW/sE,QAAUrD,EAAKghF,YAAaC,EAAAA,KAEtEC,IAAkBr9E,EAAAA,EAAAA,KAAO,GACzBwgD,GAAY79B,IAAWmwD,EACvBwK,IAAgB5lD,EAAAA,EAAAA,GAAY8oB,IAE9B88B,KAAkB98B,KACpB68B,GAAgB78E,SAAU,IAG5B+8E,EAAAA,EAAAA,GAAe,CACbhhF,SAAUikD,GACVg9B,OAAQV,KAGVl+E,EAAAA,EAAAA,KAAU,IAAO4hD,IAAY53B,EAAAA,EAAAA,GAAsBk0D,QAAelgF,GAAY,CAACkgF,EAAat8B,MAE5F5hD,EAAAA,EAAAA,KAAU,KACJ0+E,KAAkB98B,KAEpBllB,EAAAA,EAAAA,KAAoB,KAClB,IAAKn3B,EAAI3D,QAAS,OAElB,MAAMi9E,GAA6BC,EAAAA,EAAAA,OACnCC,EAAAA,EAAAA,GAAqBx5E,EAAI3D,QAASi9E,GAElChB,MAEIj8B,IACF68B,GAAgB78E,SAAU,EAC1B2D,EAAI3D,QAAS4C,MAAMw6E,UAAY,SAE/BP,GAAgB78E,SAAU,EAC1B2D,EAAI3D,QAAS4C,MAAMw6E,UAAY,GACjC,GAEJ,GACC,CAACp9B,GAAWi8B,EAAsBa,MAErC1+E,EAAAA,EAAAA,KAAU,KACR,GAAKskB,EAAAA,GAIL,OAAOpV,EAAAA,EAAAA,IAAc3J,EAAI3D,QAAU,CACjC2tD,wBAAyB,aACzBC,QAAUA,CAACthD,EAAGuhD,IAGRA,KAFmB5wD,EAAKsD,MAAQutD,EAAAA,GAAeE,KAAOF,EAAAA,GAAeC,SAGvE6e,KACO,IAKX,GACD,CAACA,EAAiB3vE,EAAKsD,QAmB1B,MAAM2yB,QAA6B92B,IAAjBT,GAAMq/C,OAExB,OACEp8C,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACL/G,WAAWkC,EAAAA,EAAAA,GC/MM,WDiNfs9E,GCjN2K,WDkN3Kn/E,EAAKsD,OClN2B,YDmN/B2rE,GCnNkF,YDqNrFmR,gBAAkBl7D,OAA+B/lB,EAAtBomB,GAE3B5jB,EAAAA,GAAAC,cAAA,OAAKxC,GAAG,kBAAkBO,UAAU,eAClCgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLH,KAAK,UACLsP,MAAM,cACNzP,QAASu9E,EACT7tE,UAAWxR,EAAK,UAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAGdjB,GACCiD,EAAAA,GAAAC,cAACwmD,EAAAA,EAAa,CACZ/J,UAAQ,EACR1+C,UCrOuP,WDsOvPlB,OAAQC,EAAKU,GACb0C,QAASw9E,IAIZ5gF,GAEGiD,EAAAA,GAAAC,cAACy+E,EAAAA,EAAa,CACZ5hF,OAAQC,EAAKU,GACb0hB,SAAUgT,EAAAA,GACVtM,gBAAgB,SAChB84D,kBAAkB,EAClBC,YAAU,EACVt3E,SAAUA,EACV81E,cAAeA,KAKtBrgF,GAAQiD,EAAAA,GAAAC,cAAC4+E,EAAAA,EAAgB,CAAC/hF,OAAQC,EAAKU,GAAIQ,iBAAiB,EAAOD,UCzPgE,aD2PpIgC,EAAAA,GAAAC,cAAA,OAAKjC,UC3PkJ,aD6PvJgC,EAAAA,GAAAC,cAACwnD,EAAAA,EAAc,CACbzpD,UAAU,0BACV+G,IAAKwxD,EACLrhD,MAAO2wC,EACP40B,iBAAkBuD,EAAAA,IAClBtD,yBAAuB,EACvBC,WAAYxN,GAAY/sE,QAAU,GAAK0+E,EAAAA,IACvCp6B,WAAYoB,GACZi5B,cAAeC,EAAAA,IACf73B,eAAgBnnD,EAAAA,GAAAC,cAAA,OAAK8E,IAAKw4E,EAAqBv/E,UCtQ0L,cDwQxON,QAAQmoD,GAAazlD,SA/E5B,WACE,MAAM26E,EAAiB5N,EAAYh4D,QAAQ0wC,EAAa,IAExD,OAAOA,GAAaxmD,KAAI,CAAC5B,EAAI8D,IAC3BvB,EAAAA,GAAAC,cAACg/E,EAAK,CACJ1pC,IAAK93C,EACLX,OAAQC,EAAMU,GACd0+C,MAAOp/C,EAAMq/C,OAAQ3+C,GACrBuG,MAAQ,SAAQ+2E,EAAiBx5E,GAAKu9E,EAAAA,SACtCp5E,WAAYinD,IAAmBlvD,EAC/By6C,oBAAqBkgC,EACrBrR,cAAeoQ,EAAiB15E,GAChCqpE,UAAWoQ,EAAcz5E,MAG/B,CAiEQyhF,GAED5qD,KAAcuxB,GAAazlD,QAC1BJ,EAAAA,GAAAC,cAACynD,EAAAA,EAAO,CAACnS,IAAI,cAGfjhB,IAAqC,IAAxBuxB,GAAazlD,QAAgBylD,EAAY,KAAOs5B,EAAAA,KAC7Dn/E,EAAAA,GAAAC,cAACm/E,EAAU,CAACtiF,OAAQC,EAAKU,KAEvB,I,0DEjRH,IAAKupE,EAAkB,SAAlBA,GAAkB,OAAlBA,EAAAA,EAAkB,eAAlBA,EAAAA,EAAkB,qBAAlBA,EAAAA,EAAkB,eAAlBA,CAAkB,MAMvB,SAASqY,EAAgDnI,GAC9D,OAAOv4E,EAAAA,EAAAA,KAAQ,KACb,MAAM2gF,EAAapgF,OAAOC,OAAO+3E,GAC3BqI,EAAaD,EAAW//E,QAAQq8D,GAASA,EAAO,IAAGx7D,OACnDo/E,EAAeF,EAAW//E,QAAQq8D,GAASA,EAAO,IAAGx7D,OAE3D,OAAQtD,IACN,MAAMgqE,EAAYoQ,EAAcp6E,GAChC,OAAkB,IAAdgqE,EACKE,EAAmBr1B,KAI1Bm1B,IAAc2Y,KACX3Y,KAAc,KACbyY,GAAcC,GAAgB1Y,EAAY,GAC1C0Y,EAAeD,GAAczY,EAAY,EAEtCE,EAAmB0Y,QAGrB1Y,EAAmB2Y,IAAI,CAC/B,GACA,CAACzI,GACN,C,4OC/BA,QAAoE,WAApE,EAAiN,WAAjN,EAAyT,WAAzT,EAA4U,WC+BtU0I,EAAsB52C,OAAO4S,EAAAA,GAsInC,GAAel/C,EAAAA,EAAAA,KAnI4BqB,IAIrC,IAJsC,KAC1ChB,EAAI,kBACJ8iF,EAAiB,oBACjB3nC,GACDn6C,EACC,MAAM,WAAEi5B,IAAe54B,EAAAA,EAAAA,MAGjB0hF,GAAiBl/E,EAAAA,EAAAA,IAAuB,MAExCm/E,GAAgBn/E,EAAAA,EAAAA,IAAuB,MAEvCvC,GAAOC,EAAAA,EAAAA,MAEN0hF,KAAoBC,IAAethF,EAAAA,EAAAA,KAAQ,IAC3C5B,EAAKq/C,QAIHyhC,EAAAA,EAAAA,IAAiB3+E,OAAOC,OAAOpC,EAAKq/C,aAAS5+C,GAAW,GAAM4B,MAAM,EArB5D,GAkBN,IAIR,CAACrC,EAAKq/C,UAEF8jC,EAAkBC,IAAuBz4E,EAAAA,EAAAA,KAAS,IAClD04E,EAAkBC,IAAuB34E,EAAAA,EAAAA,SAA6BlK,IAG3E68C,YAAaimC,EACb7rB,gBAAiB8rB,IACf7rB,EAAAA,EAAAA,IAAchnD,IACoB,IAAhCsyE,EAAgBrO,aAAqB50E,EAAKm1B,oBAE9CxkB,EAAEM,kBACFN,EAAE4L,iBAEF0d,EAAW,CACTl6B,OAAQC,EAAKU,GACb0hB,SAAU6gE,EAAgBviF,GAC1BorC,sBAAsB,EACtBxe,mBAAmBm2D,EAAAA,EAAAA,QACnB,IAmBJ,OAhBAhhF,EAAAA,EAAAA,KAAU,KACR,MAAMihF,EAAqBX,EAAe1+E,QACpCs/E,EAAoBX,EAAc3+E,QACxC,IAAKq/E,IAAuBC,EAAmB,OAE/C,MAAMC,EAAmBF,EAAmB53B,YACtC+3B,EAAkBF,EAAkB73B,YAEtCv+C,KAAKu2E,IAAIF,EAAmBC,GAAmBhB,EACjDS,EAAoB/1E,KAAK2B,IAAI00E,EAAkBC,IAE/CP,OAAoB7iF,GAEtB2iF,EAAoBQ,EAAmBC,EAAgB,GACtD,CAACZ,EAAiBH,IAGnB7/E,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GD9FM,WCgGfggF,GDhGojB,WCiGpjBE,GDjGinB,YCmGnnB1+E,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BwG,MAAOo8E,EAAoB,wBAAuBA,WAAuB5iF,GAExEwiF,GACChgF,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDzGsK,WC2G/K8/E,EAAgBrO,aAAextE,GAEjCY,IAAKg7E,EACL5/E,QAASmgF,EACT5qC,YAAa6qC,GAEbvgF,EAAAA,GAAAC,cAACu+C,EAAAA,EAAS,CACRrC,MAAO6jC,EACP9nC,oBAAqBA,IAEvBl4C,EAAAA,GAAAC,cAAA,OAAKjC,UDrH8U,aCqHpTqR,EAAAA,EAAAA,GAAW2wE,EAAgBxxE,SACxD4xE,GAAoBF,GACpBlgF,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,MAKtBnE,EAAAA,GAAAC,cAAA,OAAKjC,UD7Hge,YC8HleiiF,EAAY5gF,KAAK88C,GAChBn8C,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDhIiH,WCiItGi8C,EAAMw1B,aAAextE,GAE3CoxC,IAAK4G,EAAM1+C,IAEXuC,EAAAA,GAAAC,cAACu+C,EAAAA,EAAS,CACRrC,MAAOA,EACPn+C,UDvI0W,WCwI1Wk6C,oBAAqBA,IAEvBl4C,EAAAA,GAAAC,cAAA,QAAMjC,UD1Ioa,aC0I/XqR,EAAAA,EAAAA,GAAW8sC,EAAM3tC,YAKlExO,EAAAA,GAAAC,cAAA,OAAKjC,UD/Isf,eCkJ7fgiF,GAAmBhgF,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EDlJ+B,aCkJI9F,EAAK,YAC5F2B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDpJiP,WCoJ9M8/E,GAAiBrO,aAAextE,GAC9EY,IAAK+6E,EACL3/E,QAASmgF,EACT5qC,YAAa6qC,GAEZV,KACCO,IAAqBF,GACrBlgF,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,MAKlB,I,0BCxHV,MAAM28E,EAAqB,IAEZ,SAASrR,EAAgB1xE,GAqCrC,IArCsC,KACvChB,EAAI,YACJo+D,EAAW,OACXr+D,EAAM,aACNy/C,EAAY,MACZ31B,EAAK,oBACLslD,EAAmB,oBACnBE,EAAmB,iBACnBQ,EAAgB,kBAChBb,EAAiB,mBACjBO,EAAkB,oBAClBp0B,EAAmB,cACnB6uB,EAAa,UACbD,EAAS,wBACTwG,EAAuB,QACvB5vB,EAAO,cACPvH,EAAa,UACb8wB,GAoBDlpE,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEPyG,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7BmgF,EAAW5lB,IAAe9F,EAAAA,EAAAA,IAAgB8F,GAE1C0Q,EAAmB1Q,IAAe2Q,EAAAA,EAAAA,GAAoB3Q,IAAch0C,cAC1EooD,EAAAA,EAAAA,GAAiBzyE,EAAQikF,EAAWlV,OAAmBruE,EAAW0uE,GAElE,MAAMxY,EAAiByH,KAAgB6lB,EAAAA,EAAAA,IAAkB7lB,IACrDrhB,EAAAA,EAAAA,IAA4BqhB,QAC5B39D,EACEmjD,GAAer+C,EAAAA,EAAAA,GAAS64D,GAActzD,EAAAA,EAAAA,IAAoBszD,EAAa,cAAW39D,GAClFo2D,EAAel2D,QAAQy9D,IAAetH,EAAAA,EAAAA,IAAqBsH,IAE3D8lB,GAAoBtiF,EAAAA,EAAAA,KAAQ,KAChC,IAAKytE,EACH,OAIF,MAAMxtE,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,OAAOqtE,EAAoB/sE,KAAKq4C,GAAW94C,EAAU84C,KAASn4C,OAAO7B,QAAQ,GAC5E,CAAC0uE,IAEE8U,GAA4B1iF,EAAAA,EAAAA,KAAY,KAC5C,IAAK23C,IAAkB8wB,GAChB1qB,GAAgB4e,GAAe5e,EAAatD,UAA+B,IAAnBkiB,EAAY51D,KACzE,OAAOvF,EAAAA,GAAAC,cAAC2+C,EAAAA,EAAY,CAACrC,aAAcA,IAGrC,MAAM4kC,EAAsBv6D,GAASA,EAAME,WAAWK,eAAiBylD,GAAkBnvE,GACnF2jF,EAAoBx6D,GAAOE,YAAcF,EAAMlmB,MAAQkmB,EAAMmf,QAKnE,IAHyBhpC,GAAMk1B,UAAYkkB,IAAkB8wB,GAAargD,IAAUw6D,KAC7E1jC,IAAYyjC,GAGjB,OACEnhF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAe0D,IAAKrD,EAAKsD,MAAQ,OAAS,OACrD3B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAASK,EAAK,WAC7B62D,EAAAA,EAAAA,GAAuB,CACtBx0D,KAAMkmB,EAAMlmB,MAAMA,MAAQ,GAC1B+Y,SAAUmN,EAAMlmB,MAAM+Y,SACtBigD,UAAU,EACV2nB,uBAAuB,KAM/B,IAAKlmB,EACH,OAGF,IAAImmB,EAAAA,EAAAA,IAAiBnmB,GACnB,OACEn7D,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uCAAuC0D,IAAKrD,EAAKsD,MAAQ,OAAS,QAC5E4/E,EAAAA,EAAAA,IAA6BljF,EAAM88D,IAK1C,GAAI4lB,EAAU,CACZ,MAAMpa,EAAS5pE,KAASg2B,EAAAA,EAAAA,IAAch2B,IAASo+D,EAAYsQ,WAAatQ,EAAYr+D,QAEpF,OACEkD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uCAAuC0D,IAAKrD,EAAKsD,MAAQ,OAAS,QAC5E6/E,EAAAA,EAAAA,GACCnjF,EACA88D,EACCwL,OAAwCnpE,EAA/BuuE,EACVpF,EAAS5pE,OAAOS,EAChByjF,EACA/U,EACAI,EACAM,EACA,CAAErX,YAAY,QACd/3D,OACAA,GAIR,CAEA,MAAMikF,GAAaC,EAAAA,EAAAA,IAAqBrjF,EAAMvB,EAAQivE,GAEtD,OACE/rE,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uCAAuC0D,IAAKrD,EAAKsD,MAAQ,OAAS,OAC5E8/E,GACCzhF,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAeqR,EAAAA,EAAAA,GAAWoyE,IAC1CzhF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAQ,OAG1Bm4C,GAAiBglB,EAAY5zC,aAAgBvnB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,4CAC3B,UAAhCm9D,EAAYr0C,WAAW3K,MAAqBnc,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,2CAkElE,SACEK,EAAc8G,EAAqB+yC,EAAiCyc,EAAkBf,GAEtF,MAAM+tB,EACJ3hF,EAAAA,GAAAC,cAACu1D,EAAAA,EAAc,CACbn3D,KAAMA,EACN8G,QAASA,EACTswD,QAAS/3D,QAAQi3D,GACjBpB,8BAA+Brb,EAC/B0pC,YAAU,IAId,IAAKjtB,EACH,OAAOgtB,EAGT,MAAMlkD,GAAYojB,EAAAA,EAAAA,IAAoB17C,GAEtC,OACEnF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,iBACdgC,EAAAA,GAAAC,cAAA,OACEiE,IAAKywD,EACL97C,IAAI,GACJ7a,WACEkC,EAAAA,EAAAA,GAAe,uBAAwB0zD,GAAgB,QAASn2B,GAAa,yBAE/Er5B,WAAW,KAEZid,EAAAA,EAAAA,IAAgBlc,IAAYnF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACzC2jF,EAGP,CAlGSE,CAAcxjF,EAAM88D,EAAajjB,EAAqByI,GAAgB+S,EAAgBE,GACrF,GAEL,CACD0Y,EAAoBJ,EAAqB+U,EAAmBlkF,EAAMD,EAAQ8pB,EAAOm6D,EACjFntB,EAAclW,EAASr/C,EAAM88D,EAAa4Q,EAAmBa,EAAkBjsB,EAAc+S,EAC7Fxb,EAAqBqE,EAAcpG,EAAe8wB,IAqDpD,OAnCA97D,EAAAA,EAAAA,KAAgB,KACd,MAAMqjC,EAAUzpC,EAAI3D,QAEpB,GAAKksE,GAA4B9+B,EAAjC,CAKA,GAAIu4B,IAAkBC,EAAAA,EAAmB0Y,QACvClxC,EAAQxqC,MAAMqyD,QAAU,KAExBn2B,EAAAA,EAAAA,KAAgB,KACdsO,EAAQn8B,UAAUxO,IAAI,mBACtB2qC,EAAQxqC,MAAMqyD,QAAU,GAAG,QAExB,IAAI0Q,IAAkBC,EAAAA,EAAmB2Y,KAQ9C,OAPAnxC,EAAQxqC,MAAMw6E,UAAa,mBAAkB1X,EAAYiQ,EAAAA,aAEzD72C,EAAAA,EAAAA,KAAgB,KACdsO,EAAQn8B,UAAUxO,IAAI,qBACtB2qC,EAAQxqC,MAAMw6E,UAAY,EAAE,GAIhC,CAEAz6E,YAAW,MACTm8B,EAAAA,EAAAA,KAAgB,KACdsO,EAAQn8B,UAAUoG,OAAO,kBAAmB,qBAC5C+1B,EAAQxqC,MAAMqyD,QAAU,GACxB7nB,EAAQxqC,MAAMw6E,UAAY,EAAE,GAC5B,GACDsC,EAAqBgB,EAAAA,IA3BxB,CA2B4C,GAC3C,CAACxU,EAAyBxG,EAAWC,IAEjC,CACLyI,eAnDF,WACE,OAAIzyE,GAAMk1B,UAAYyrB,EAElB19C,EAAAA,GAAAC,cAAC8hF,EAAoB,CACnBhlF,KAAMA,EACN8iF,kBAAmBqB,EACnBhpC,oBAAqBA,IAKpBgpC,GACT,EAwCEn8E,MAEJ,C,wEC7Oe,SAASi9E,EAAsCC,GAC5D,MAAM9kB,GAAcC,EAAAA,EAAAA,KACd8kB,GAAyCthF,EAAAA,EAAAA,IAAOqhF,GAChDE,GAAuB7pD,EAAAA,EAAAA,GAAY2pD,GAWzC,OAJyB,IAArBA,GAA8BE,IAAyBF,IACzDC,EAAuC9gF,SAAU,GAG5C,CAAE8gF,yCAAwCE,gCATjD,WACEF,EAAuC9gF,QAAU1D,QAAQukF,GACzD9kB,GACF,EAOF,C,kFCbe,SAASia,EAAajK,EAA6C53B,GAChF,MAAM8sC,GAAY1jF,EAAAA,EAAAA,KAAQ,KACxB,GAAKwuE,EAIL,OAAOA,EAAWjvD,QAAO,CAACC,EAAK1gB,EAAI8D,KACjC4c,EAAI1gB,GAAM8D,EACH4c,IACN,CAAC,EAA4B,GAC/B,CAACgvD,IAEEmV,GAAgBhqD,EAAAA,EAAAA,GAAY+pD,GAC5B7nD,GAAalC,EAAAA,EAAAA,GAAYid,GAEzB2hC,GAAgBv4E,EAAAA,EAAAA,KAAQ,IACvB0jF,GAAcC,GAAiB/sC,IAAQ/a,GAIrC+nD,EAAAA,EAAAA,IAAUF,GAAW,CAACG,EAAO/kF,SACLD,IAAtB8kF,EAAc7kF,GAAoB+kF,EAAQF,EAAc7kF,IAAM,MAJ9D,CAAC,GAMT,CAAC83C,EAAK8sC,EAAW7nD,EAAY8nD,IAIhC,MAAO,CACLpL,gBACAC,kBAJuBkI,EAAAA,EAAAA,GAAqBnI,GAMhD,C,kDC5BO,SAASuL,EACdpkF,EAAc8G,EAAqBnG,EAAoCJ,GAEvE,MAAM,SAAE6sE,GAAatmE,EACrB,IAAKsmE,EACH,OAGF,MAAMxkD,GAAS4H,EAAAA,EAAAA,IAAS48C,GAAY7sE,EAAU6sE,GAAYzsE,EAAUysE,GAEpE,IAAIgW,GAAaptB,EAAAA,EAAAA,IAAeh2D,EAAM4oB,GAEtC,MAAMlqB,EAAOiC,EAAUmG,EAAQrI,QAS/B,OARIC,IACE,WAAYkqB,GAAUA,EAAO0gC,OAC/B85B,EAAc,GAAEpjF,EAAK,iBAAgBi5C,EAAAA,EAAAA,IAAaj5C,EAAMtB,MAC/C+4D,EAAAA,EAAAA,IAAY/4D,KACrB0kF,GAAe,OAAKnqC,EAAAA,EAAAA,IAAaj5C,EAAMtB,OAIpC0kF,CACT,C,wTCNA,MAmGA,GAAe/kF,EAAAA,EAAAA,KAnGoCqB,IAG7C,IAH8C,QAClDoH,EAAO,cACPstE,GACD10E,EACC,MAAM,gBACJy/C,EAAe,mBAAEklC,EAAkB,iBAAE1sE,IACnC5X,EAAAA,EAAAA,OAEE,WAAEstE,GAAevmE,EAEjB9G,GAAOC,EAAAA,EAAAA,MACNqkF,EAAeC,IAAoBl7E,EAAAA,EAAAA,OACnCm7E,EAAkBC,EAAgBC,IAAmB/hF,EAAAA,EAAAA,IAAQ,GAC9DgiF,GAAoB1gF,EAAAA,EAAAA,IAASuF,EAAAA,EAAAA,IAAoB1C,EAAS,SAC1D6lD,EAAU7lD,EAAQ0B,QAAQsiB,OAAQ2E,OAAOk9B,QAEzCi4B,GAAyBr/E,EAAAA,EAAAA,IAAgB,KAC7CoS,EAAiB,CACfxH,MAAOnQ,EAAK,wBACZ8G,QAAS9G,EAAK,mBACd8qB,OAAQ,CACNA,OAAQ,4BACRyf,QAAS,CACPs6C,OAAQxO,EAAAA,GAAgByO,OAG5Br6C,WAAYzqC,EAAK,SACjB,IAGE+kF,GAA2Bx/E,EAAAA,EAAAA,IAAiBqW,IAChD2oE,OAAiBplF,GACjBklF,EAAmB,CAAEzoE,SACrBgpE,GAAwB,IAGpBI,GAAuBz/E,EAAAA,EAAAA,IAAgB,KAC3Cg/E,OAAiBplF,EAAU,IAGvB8lF,GAAiB1/E,EAAAA,EAAAA,IAAgBwS,UACrC2sE,IACAE,IAGA,MAAMn1D,EAAQ3oB,EAAQ0B,QAAQsiB,OAAQ2E,MAChC6mC,QAAgBtG,EAAAA,GAAmB,cAAavgC,EAAMrwB,YAAa+E,EAAAA,GAAeC,SAClFic,QAAa6kE,MAAM5uB,GAASyC,MAAM6R,GAAMA,EAAEvqD,SAChDgkE,EAAmB,CACjBzoE,KAAM,IAAIyI,KAAK,CAAChE,GAAO,cACvBssC,SAAS,EACTw4B,QAAS11D,EAAM21D,YAAYr2D,MAAMs2D,QAAyBlmF,IAAnBkmF,EAAEC,gBAA6BA,cACtE,IAoBJ,OACE3jF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kCAAkCklD,SAAU,EAAGG,KAAK,SAASljD,QAlB7CiW,WAC3Bs1D,GAAcsX,EACbh4B,EACF83B,IAEAF,QAAuBW,MAAMP,GAAmB5rB,MAAM6R,GAAMA,EAAEvqD,UAGhE8+B,EAAgB,CACd1gD,OAAQqI,EAAQrI,OAChBmhD,QAAS94C,EAAQ1H,GACjB0hB,SAAUgT,EAAAA,GACV7sB,OAAQ44C,EAAAA,GAAkB0lC,iBAE9B,GAKE5jF,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACLkc,MAAO3oB,EAAQ0B,QAAQsiB,OAAQ2E,MAC/B+1D,kBAAgB,EAChBC,UAAW94B,EACX1qD,KAAK,UAEPN,EAAAA,GAAAC,cAAA,YAAOwyE,KAEPzyE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyBK,EAAK2sD,EAAU,kBAAoB,oBAC5EhrD,EAAAA,GAAAC,cAAC8jF,EAAAA,EAAS,CACR9pE,KAAM0oE,EACNh/D,QAAS0/D,EACTlgC,SAAUigC,IAEZpjF,EAAAA,GAAAC,cAACy6C,EAAAA,EAAa,CACZn3B,OAAQs/D,EACRr0E,MAAOnQ,EAAK,kBACZs8C,eAAgB2oC,EAChB3/D,QAASo/D,EACTiB,UAAWvR,MAER,I,gGCxHX,QAAkN,WAAlN,EAAwhB,WAAxhB,EAAylB,WAAzlB,EAA4mB,WAA5mB,EAAiqB,WAAjqB,EAAstB,WAAttB,EAAuwB,WAAvwB,EAAm0B,WCyKn0B,SAASwR,EAAc3kF,GAAoC,IAAnC,QAAE4kF,GAA+B5kF,EACvD,MAAM,SAAEquE,IAAavvE,EAAAA,EAAAA,MACfwR,ECnKR,SAAyB7S,GAA4C,IAA7BonF,EAAar6E,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,YACtD,MAAO8F,EAAOw0E,IAAY18E,EAAAA,EAAAA,IAASy8E,GAC7BE,GAAa/hF,EAAAA,EAAAA,IAAS4oD,EAAAA,EAAAA,IAAkBnuD,IAAO,EAAOyF,EAAAA,GAAeC,SAa3E,OAXAjD,EAAAA,EAAAA,KAAU,KACR,WACE,IAAK6kF,EACH,OAGF,MAAMC,QAAqBC,EAAAA,EAAAA,IAAgBF,GAC3CD,EAAU,KAAGI,EAAAA,EAAAA,IAAQF,KACtB,EAPD,EAOI,GACH,CAACD,IAEGz0E,CACT,CDmJgB60E,CAAgBP,EA/IJ,aAiJ1B,OACElkF,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAAahE,QAASA,IAAMwtE,EAAS,CAAElwE,GAAIymF,EAAQzmF,MACjEuC,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CAAC5T,UAAWmG,EAAeoxC,IAAK2uC,EAAQzmF,GAAI6C,KAAK,QAAQqR,KAAMuyE,IACtElkF,EAAAA,GAAAC,cAAA,OAAK+D,MAAQ,eAAc4L,IAAS5R,UAAWmG,GAC7CnE,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAa,2BAC1CnE,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,IAAsBouE,EAAAA,EAAAA,IAAqB2R,GAAS/kC,cAAgB,KAGvFn/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,GAAsB+/E,EAAQ11E,OAGrD,CAEA,SAASk2E,EAAY7nF,GAUlB,IAVmB,QACpBqnF,EAAO,OACPpnF,EAAM,cACN6nF,EAAa,qBACbt8D,GAMDxrB,EACC,MAAM,iBAAEywD,EAAgB,iBAAEgwB,IAAqBl/E,EAAAA,EAAAA,MACzCC,GAAOC,EAAAA,EAAAA,KAYb,OACE0B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EDpNqiB,YCqN/jBhE,QAASA,KAZPkoB,EACFi1D,EAAiB,CACf7/E,GAAIX,EAAQ+rC,sBAAsB,EAAM+7C,WAAY,kBAAmBC,uBAAuB,IAGhGv3B,GAOiC,GAEjCttD,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CAAC5T,UAAWmG,EAAeoxC,IAAK2uC,EAAQzmF,GAAI6C,KAAK,QAAQqR,KAAMuyE,IACtElkF,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,KAElBnE,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAeiE,ED3Nw1B,aC4Nr3BnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,KAElBnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,GAAuB,IAAGwgF,MACzCt8D,GAAwBroB,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,aAAajS,UAAWmG,KAE/DnE,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,GAAsB9F,EAAK,gBAGlD,CAEA,SAAe3B,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAAqB,CAACC,EAAMgwC,KAA6B,IAA3B,OAAE9vC,GAAQ8vC,EACtC,MAAM,kBAAEk4C,EAAiB,iBAAEC,EAAgB,MAAEC,IAAUC,EAAAA,EAAAA,KAAwBroF,EAAQE,IAAW,CAAC,EAGnG,MAAO,CACLgoF,oBACAC,mBACAC,QACA38D,sBAN2BC,EAAAA,EAAAA,KAA2B1rB,GAOvD,GATHD,EA5LsBoB,IAMK,IANJ,OACvBjB,EAAM,kBACNgoF,EAAiB,iBACjBC,EAAgB,MAChBC,EAAK,qBACL38D,GACsBtqB,EACtB,MAAMM,GAAOC,EAAAA,EAAAA,MACP,6BAAE4mF,IAAiC9mF,EAAAA,EAAAA,OAClC+mF,EAAWC,EAAaC,IAAkBrkF,EAAAA,EAAAA,IAAQ,IAClDskF,EAAUC,EAAYC,IAAiBxkF,EAAAA,EAAAA,IAAQ,GAEhD+D,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7B6kF,GAAkB9mF,EAAAA,EAAAA,KAAQ,KAC9B,IAAKmmF,EACH,OAGF,MAAMloF,GAASiC,EAAAA,EAAAA,MACf,OAAOimF,EAAkBzlF,KAAK5B,IAAOT,EAAAA,EAAAA,KAAWJ,EAAQa,KAAK8B,OAAO7B,QAAQ,GAC3E,CAAConF,KAEGY,EAAqBC,IAA0Bj+E,EAAAA,EAAAA,KAAUo9E,GAC1Dc,GAAuBjnF,EAAAA,EAAAA,KAAQ,IAAM8mF,GAAiBrmF,MAAM,EAtCvC,KAsCiE,CAACqmF,IACvFI,EAA4BnoF,QAAQkoF,GAAsBxlF,SAChE0lF,EAAAA,EAAAA,GAAoB/gF,GAAM8gF,IAA8Bd,GAAoBW,GAAqB,GACjG,MACMK,EAAuBroF,SAC1BgoF,IACKX,GAHYO,GAAYH,IAIzBU,IAGPxrD,EAAAA,EAAAA,IAAW,IAAMsrD,GAAuB,IA9Cf,MAgDzBnmF,EAAAA,EAAAA,KAAU,KACR,GAAIkmF,GAAuBD,GAAmBV,EAAkB,CAC9D,MAAMtnF,EAAKsG,YAAW,KACpB4hF,GAAuB,EAAM,GApDV,KAuDrB,MAAO,IAAMK,aAAavoF,EAC5B,CAEgB,GACf,CAACgoF,EAAiBV,EAAkBW,IAEvC,MAAMO,GAAeriF,EAAAA,EAAAA,IAAgB,KACnCshF,EAA6B,CAAEpoF,WAC3BioF,GACFM,IACAE,MAEAH,IACAI,IACF,IAGF,OACExlF,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDvGG,aCwGjBF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACbgC,EAAAA,GAAAC,cAAA,QACEjC,WAAWkC,EAAAA,EAAAA,GAAe2lF,GD1GkG,YC2G5H1lF,QAAS0lF,EAA4BI,OAAezoF,GAEnDa,EAAK,mBAGTqnF,GAAuB1lF,EAAAA,GAAAC,cAACqlE,EAAAA,EAAQ,CAACtnE,UDhHgM,aCiHjO+nF,GACC/lF,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACTilF,GDpHkS,WCqHlSG,GDrHwY,aCwH1YtlF,EAAAA,GAAAC,cAAA,OAAKjC,UDxH2B,YCyH9BgC,EAAAA,GAAAC,cAAA,OACEuL,MAAM,KACNC,OAAO,IACPwF,QAAQ,WACRzG,KAAK,OACL07E,MAAM,8BAENlmF,EAAAA,GAAAC,cAAA,QACEjC,UDjIyE,WCkIzE,YAAU,UACV,YAAU,UACV21C,EAAE,uOACFnpC,KAAK,YAIXxK,EAAAA,GAAAC,cAAA,OAAKjC,UDzI4O,YC0I/OgC,EAAAA,GAAAC,cAAA,OAAKjC,UD1IyI,YC2I5IgC,EAAAA,GAAAC,cAAA,QAAMjC,UD3IyJ,YC2I/HK,EAAK,oBACrC2B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLxC,UD7IgL,WC8IhL4R,MAAM,cACNzP,QAAS8lF,GAETjmF,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,YAGfjQ,EAAAA,GAAAC,cAAA,OAAK8E,IAAKA,EAAK/G,WAAWkC,EAAAA,EAAAA,GDpJge,WCoJ7b,iBAC1D0lF,GAAsBvmF,KAAI,CAAC6kF,EAAS3iF,IACtB4kF,IAAN5kF,EACLvB,EAAAA,GAAAC,cAACykF,EAAY,CACXR,QAASA,EACTpnF,OAAQA,EACR6nF,cAAeK,EA7HN,GA6HqC,EAC9C38D,qBAAsBA,IAGxBroB,EAAAA,GAAAC,cAACgkF,EAAc,CAACC,QAASA,SAOjC,KEmKV,GAAexnF,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAwC,IAAtC,QAAE6F,EAAO,SAAEga,GAAU7f,EAC5B,MAAM,OACJxC,EAAM,SAAE2uE,EAAQ,QAAE5kE,GAChB1B,GAEE,cAAEgnE,EAAa,aAAEE,GAAiBxlE,EAAQsiB,QAAU,CAAC,EACrDi9D,GAAkBta,EAAAA,EAAAA,GAAoB3mE,IAAUgiB,aAChDk/D,EAAgBD,GAClB3hE,EAAAA,EAAAA,KAAkB7nB,EAAQE,EAAQspF,QAClC5oF,EAEE8oF,IAAYnnE,IAAWonE,EAAAA,EAAAA,KAAuB3pF,EAAQuI,EAASga,IAEnE8vC,UAAWu3B,EACXC,YAAaC,GACVJ,IAAalpF,EAAAA,EAAAA,KAAeR,GAAQ+pF,gBAAmB,CAAC,EAEvDC,GAAaz2D,EAAAA,EAAAA,KAAWvzB,EAAQ6uE,GAAY3uE,GAC5CkqB,GAAahqB,EAAAA,EAAAA,KAAWJ,EAAQE,GAEhC+pF,EAAaxa,GAAervE,EAAAA,EAAAA,KAAWJ,EAAQyvE,QAAgB7uE,EAE/DspF,EAAejgF,EAAQsiB,QAAQ49D,OAIrC,MAAO,CACLH,aACA5/D,aACA6/D,aACAxa,eACAF,gBACAka,gBACAC,YACAU,oBAXyBC,EAAAA,EAAAA,KAA6BrqF,EAAQkqF,GAY9D3qC,OAXY/pB,EAAAA,EAAAA,KAAuBx1B,EAAQuI,GAY3CqwB,uBAAuBC,EAAAA,EAAAA,KAA4B74B,MAC/C0pF,GAAa,CACfE,iBACAE,oBAEH,GA1Ce/pF,EA1P6BoB,IAwB3C,IAxB4C,QAChDoH,EAAO,WACPowD,EAAU,gBACV2xB,EAAkB,EAAC,YACnBC,EAAW,aACXC,EAAY,WACZR,EAAU,WACV5/D,EAAU,cACVmlD,EAAa,cACbka,EAAa,aACbha,EAAY,WACZwa,EAAU,UACVP,EAAS,eACTE,EAAc,iBACdE,EAAgB,mBAChBM,EAAkB,cAClBK,EAAa,MACblrC,EAAK,qBACLmrC,EAAoB,sBACpB9xD,EAAqB,8BACrB+xD,EAA6B,8BAC7Bh0B,EAA6B,8BAC7BhD,EAA6B,2BAC7Bi3B,GACDzpF,EACC,MAAM,iBACJuvD,EAAgB,gBAAEwS,EAAe,cAAE2nB,EAAa,WAAEC,IAChDtpF,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAGPyG,GAAMnE,EAAAA,EAAAA,IAAuB,OAEnCg9E,EAAAA,EAAAA,IAAe74E,EAAKwiF,IACpBhY,EAAAA,EAAAA,GACEpqE,EAAQrI,OACoB,YAA5BqI,EAAQ2hB,WAAW3K,KAAqBhX,EAAQ2hB,UAAUK,kBAAe3pB,EACzE6oF,IAEFsB,EAAAA,EAAAA,GAAgB5iF,EAAKI,EAAQrI,OAAQwpF,EAAWE,EAAgBE,EAAkBS,IAElF3nF,EAAAA,EAAAA,KAAU,KACR,GAAK2F,EAAQqoE,SAEb,MAAO,KACLga,IAA6B,CAAEI,0BAA2B,CAACziF,EAAQ1H,IAAKoqF,WAAW,GAAO,CAC3F,GACA,CAACL,EAA4BriF,EAAQqoE,SAAUroE,EAAQ1H,KAE1D,MAAMqqF,EAAwBZ,GAAmB,GAC1C59D,EAASy+D,IAAa/mF,EAAAA,EAAAA,GAAQ8mF,GAC/BE,EAAStqF,QAAQyH,EAAQ0B,QAAQsiB,QAAQzoB,KAAKujC,WAAW,eACzDgkD,EAAavqF,QAAQyH,EAAQ0B,QAAQsiB,QAAQzoB,KAAKujC,WAAW,yBAC7DikD,EAAqD,wBAAjC/iF,EAAQ0B,QAAQsiB,QAAQhN,MAAkChX,EAAQ0B,QAAQsiB,OAAQ2E,MACtGq6D,IAAkBC,EAAAA,EAAAA,IAAuBjjF,IAE/C3F,EAAAA,EAAAA,KAAU,KACJsoF,GAIJ/jF,WAAWgkF,EAhEU,GAgECb,EAAmC,GACxD,CAACA,EAAiBa,EAAWD,IAEhC,MAAM1mC,IAAY/H,EAAAA,EAAAA,IAAkBt0C,EAAKwrD,GAEnC83B,IAAwBznF,EAAAA,EAAAA,IAAO,MACnC,MAAMoxE,EAAWsV,GAAsBlmF,SAAW+D,EAAQ1H,IAAM6pF,EAAqBlmF,QACrF,OAAO4mF,IAAW7iF,EAAQumE,YAAcsG,CACzC,EAHoC,KAKrCxyE,EAAAA,EAAAA,KAAU,KACJ4hD,IAAainC,GAAsBjnF,UACrCinF,GAAsBjnF,SAAU,EAChC0+D,EAAgB,CAAEwoB,WAAW,IAC/B,GACC,CAAClnC,GAAW0e,IAEf,MAAM,qBAAEngE,KAAyBC,EAAAA,EAAAA,GAAkB0pB,OAAS9rB,EAAWsqF,GAAuB,GAGxFlpF,IAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KAC9BwpF,IAAc5pF,EAAAA,EAAAA,KAAQ,IACnBwtE,EACHA,EAAc9sE,KAAKq4C,GAAW94C,KAAY84C,KAASn4C,OAAO7B,cAC1DF,GACH,CAAC2uE,EAAevtE,KAEb6zE,IAAgBj0E,EAAAA,EAAAA,KAAY,KACzBgjF,EAAAA,EAAAA,GACLnjF,EACA8G,EACAyhF,EACA5/D,EACAuhE,GACAlC,EACAha,EACAlwB,EACA,CAAEoZ,cACFhC,EACAhD,IAED,CACDgF,EAAYl3D,EAAM8G,EAASouD,EAA+BhD,EAC1DvpC,EAAY4/D,EAAYva,EAAcga,EAAekC,GAAapsC,KAG9D,kBACJ1yB,GAAiB,oBAAEC,GAAmB,wBACtCigB,GAAuB,kBAAEhgB,GAAiB,uBAC1CC,GAAsB,sBAAEC,KACtBC,EAAAA,EAAAA,GAAuB/kB,GACrByjF,QAA6ChrF,IAAxBksB,GAgBrB++D,GAAsBA,KAC1B,MAAMC,EAAOvjF,EAAQ0B,QAAQsiB,QAAQu/D,KAChCA,GACLjB,EAAc,CAAEiB,OAAMvjF,QAAS,CAAErI,OAAQqI,EAAQrI,OAAQwR,UAAWnJ,EAAQ1H,KAAO,EAcrF,GADyB4pF,GAAkD,0BAAjCliF,EAAQ0B,QAAQsiB,QAAQzoB,KAEhE,OAAOV,EAAAA,GAAAC,cAAA,QAAM8E,IAAKA,IAGpB,GAAIwwD,EACF,OAAOv1D,EAAAA,GAAAC,cAAA,QAAM8E,IAAKA,EAAK/G,UAAU,2BAA2By0E,MAyD9D,MAAMz0E,IAAYkC,EAAAA,EAAAA,GAChB,kCACAomF,IAAcI,GAAoB,WACjCsB,GAAUE,IAAsB,kBACjCM,IAAsB,gBACtBpB,GAAgB,eAChBznF,IAGF,OACEK,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACLtH,IAAIujD,EAAAA,EAAAA,IAAiB77C,EAAQ1H,IAC7BO,UAAWA,GACX,kBAAiBmH,EAAQ1H,GACzB,iBAAgB0H,EAAQqoE,eAAYhwE,EACpCk4C,YA7GqBhoC,KACvBi7E,EAAAA,EAAAA,GAAwBj7E,GACxBi8B,GAAwBj8B,EAAE,EA4GxB+d,cAAe9B,KAEbu+D,IAAsBD,IAAeE,IACrCnoF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyBmC,QA7F3Bk6C,KACmB,YAAjCl1C,EAAQ0B,QAAQsiB,QAAQhN,MAC1BurE,EAAW,CACT5qF,OAAQqI,EAAQrI,OAChBwR,UAAWnJ,EAAQ1H,IAEvB,GAuFoEg1E,MAEjEuV,GA1EDhoF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,sBAAsBklD,SAAU,EAAGG,KAAK,SAASljD,QApCtCyoF,KAC7Bt7B,EAAiB,CACf06B,QAAQ,EACRt5B,WAAYk4B,GAAYnpF,GACxBorF,SAAU1c,IAAgB,GAC1B2c,aAAc3jF,EAAQ0B,QAAQsiB,QAAQ49D,QAAU,GAChD,GA+BE/mF,EAAAA,GAAAC,cAAC20E,EAAAA,EAAuB,CACtBr/B,IAAKpwC,EAAQ1H,GACboE,QAASmlF,EACT9b,KAAM11C,EACNplB,QAAM,EACNL,gBAAc,IAEhB/P,EAAAA,GAAAC,cAAA,cAAS5B,EAAK,2BACd2B,EAAAA,GAAAC,cAAA,YAAO5B,EAAK,4BAA6BA,EAAK,SAAU8G,EAAQ0B,QAAQsiB,QAAQ49D,OAAQ,OAExF/mF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyBK,EAAK,2BAgE/C4pF,GA3DL,WACE,MAAMc,EAAiB5jF,EAAQ0B,QAAQsiB,QAAQ6/D,WACzCC,EAAc9jF,EAAQ0B,QAAQsiB,QAAQ8/D,YAC5C,OACEjpF,EAAAA,GAAAC,cAAA,QACEjC,UAAU,+CACVklD,SAAU,EACVG,KAAK,SACLljD,QAASsoF,IAETzoF,EAAAA,GAAAC,cAAC20E,EAAAA,EAAuB,CACtBr/B,IAAKpwC,EAAQ1H,GACboE,QAASmlF,EACT9b,KAAM11C,EACNplB,QAAM,EACNL,gBAAc,IAEhB/P,EAAAA,GAAAC,cAAA,cAAS5B,EAAK4qF,EAAc,yBAA2B,4BACvDjpF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,2BACb6oF,IAAcx3E,EAAAA,EAAAA,GAAWhR,EAAK0qF,EAAiB,2BAA6BE,EACzE,4BAA8B,iCAClC3xC,EAAAA,EAAAA,IAAaj5C,EAAMwoF,IACnB,CAAC,qBAEH7mF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,4BACbqR,EAAAA,EAAAA,GAAWhR,EACV,iCACAA,EAAK,SAAU8G,EAAQ0B,QAAQsiB,QAAQ49D,OAAQ,MAC9C,CAAC,qBAGN/mF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyBK,EAAK,gCAGpD,CAyBmB6qF,GACdhB,GACCloF,EAAAA,GAAAC,cAACkpF,EAA4B,CAAChkF,QAASA,EAASstE,cAAeA,KAEhE0V,IAAmBnoF,EAAAA,GAAAC,cAACmpF,EAAe,CAACtsF,OAAQuvE,IAC5C3iD,IACC1pB,EAAAA,GAAAC,cAACopF,EAAAA,EAAoB,CACnB9lE,OAAQkG,GACR7V,OAAQ8V,GACRvkB,QAASA,EACT0gB,gBAAgB,SAChBlC,QAASiG,GACThG,oBAAqBiG,KAGrB,I,iOC5TV,MAQA,EARgDjoB,IAC9C,MAAM,OAAE2hB,GAAW3hB,EACb0nF,GAAsBtqE,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,uBAAwBqE,GAGnF,OAAO+lE,EAAsBtpF,EAAAA,GAAAC,cAACqpF,EAAwB1nF,QAAYpE,CAAS,ECwb7E,GAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAEW,IAFT,OACPC,EAAM,SAAEqiB,EAAQ,gBAAE0G,EAAe,SAAEve,GACpCzK,EACC,MAAME,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1Bg2B,EAAYp1B,QAAQX,IAAQg2B,EAAAA,EAAAA,IAAch2B,IAC1C+5C,EAAep5C,QAAQX,IAAQu9B,EAAAA,EAAAA,IAAiBv9B,IAChDuyB,GAAWi6D,EAAAA,EAAAA,KAAmB3sF,GAC9B4sF,GAAsBC,EAAAA,EAAAA,KAA0B7sF,GAChDs1C,GAAYrjB,EAAAA,EAAAA,IAAS/xB,IACrB,eAAE4sF,GAAmB9sF,EAAO8yB,SAASC,MAE3C,IAAK5yB,GAAQA,EAAK6gD,eAAgBzqB,EAAAA,EAAAA,KAAqBv2B,GACrD,MAAO,CACL+sF,QAAQ,EACRr6D,WACAk6D,sBACAE,kBAIJ,MAAM5mE,GAAM4L,EAAAA,EAAAA,KAAU9xB,EAAQE,GACxBkyB,EAAgBkjB,OAAiD10C,GAArCyxB,EAAAA,EAAAA,KAAmBryB,EAAQE,GACvD8vD,EAAe1a,GAAYnjB,EAAAA,EAAAA,KAAmBnyB,EAAQE,QAAUU,EAChEosF,EAAW56D,GAAgB49B,EAC3BplC,GAAiBC,EAAAA,EAAAA,KAAqB7qB,EAAQE,GAC9C+sF,EAAmC,WAApBhkE,GAAgC1G,IAAagT,EAAAA,GAC5D23D,EAAyC,WAApBjkE,GAAgC1G,IAAagT,EAAAA,GAClEa,GAAqBC,EAAAA,EAAAA,KAAyBr2B,EAAQ0K,GAEtD6uC,GAAgB4zC,EAAAA,EAAAA,IAAiBjtF,EAAQqiB,EAAUviB,EAAOqzB,eAE1D+5D,IAAgB93C,IAAY+3C,EAAAA,EAAAA,KAAoBrtF,EAAQE,GACxDotF,EAAgBxsF,QAAQolB,GAAOknE,GAC/BG,GAAeD,GAAiBxsF,SAAQ0sF,EAAAA,EAAAA,KAA0BxtF,EAAQE,IAC1EutF,EAAaL,IAAkBlnE,EAC/BwnE,EAAe5sF,SAClBmsF,GAAgB9sF,EAAKk1B,WAAaa,GAAagkB,IAAiB/5C,EAAKwtF,aAElEC,EAAYX,GAAgBC,EAC5BW,EAAUC,EAAAA,KAAuB77D,EAAAA,EAAAA,IAAS9xB,EAAKU,MAAQ+pB,IAAmB1E,IAAQ/lB,EAAKy5C,aACvFsU,EAAAA,EAAAA,IAAwB/tD,EAAKU,IAC7BktF,EAAUd,IAAiBriE,IAAmB8iE,EAC9CM,EAAWz0C,GAAkB0zC,IAAiBS,EAC9CO,EAAoBH,EAAAA,IAAuBb,GAAgB9sF,EAAKe,aAChEgtF,EAAqBJ,EAAAA,IAAuBb,IAAiB9sF,EAAKe,eAClEf,EAAKwzB,aAAaw6D,YAAehuF,EAAK66C,YAAaf,EAAAA,EAAAA,IAAiB95C,IACpEiuF,EAAoBnB,GAAgB76D,GAAcg8D,kBAClDC,EAAgBpB,IAChB/yC,GAAgBhkB,KAAek4D,IAAqBtnB,EAAAA,EAAAA,IAAiB3mE,EAAM,gBAC3EmuF,GAAqBD,IAAkBn0C,GAAgBhkB,GACvDq4D,EAAsBtB,EAAe76D,GAAco8D,qBAAkB5tF,EACrE6tF,EAAmB3tF,QAAQX,GAAMwtF,aAAextF,EAAKuuF,cACrDC,EAAwB7tF,QAAQX,GAAMwtF,aAAextF,EAAKyuF,eAC1DC,IAAevqF,EAAAA,EAAAA,KAA0BtE,GAEzC8uF,EAAgBhuF,SAAQiuF,EAAAA,EAAAA,KAAuC/uF,EAAQE,IAG7E,MAAO,CACL6sF,QAAQ,EACR72D,YACAE,qBACAm3D,cACAD,gBACAI,eACAE,YACAC,UACAE,UACAK,oBACAC,gBACAC,oBACAN,WACAC,oBACAC,qBACAK,sBACAE,mBACAE,wBACAE,cACAG,cAtBmBC,EAAAA,EAAAA,KAAuBjvF,EAAQE,KAAY8sF,GAAUkC,sBAuBxEJ,gBACAlC,sBACAl6D,WACAo6D,iBACAqC,qBAAsBhvF,EAAKivF,iBAC3B3B,aACD,GAtFe1tF,EA9W6BoB,IAiC3C,IAjC4C,OAChDjB,EAAM,SACNqiB,EAAQ,OACRwqE,EAAM,SACNriF,EAAQ,UACRwrB,EAAS,YACTq3D,EAAW,cACXD,EAAa,WACbG,EAAU,aACVC,EAAY,UACZE,EAAS,QACTC,EAAO,QACPE,EAAO,kBACPK,EAAiB,cACjBC,EAAa,kBACbC,EAAiB,SACjBN,EAAQ,kBACRC,EAAiB,mBACjBC,EAAkB,oBAClBK,EAAmB,mBACnBn4D,EAAkB,WAClB4rD,EAAU,iBACVD,EAAgB,iBAChB0M,EAAgB,sBAChBE,EAAqB,YACrBE,EAAW,aACXG,EAAY,cACZF,EAAa,oBACblC,EAAmB,SACnBl6D,EAAQ,qBACRy8D,EAAoB,eACpBrC,EAAc,cACdtM,GACDr/E,EACC,MAAM,YACJkuF,EAAW,eACXC,EAAc,oBACdC,EAAmB,WACnBC,EAAU,4BACVC,EAA2B,4BAC3BC,EAA2B,iBAC3Bt2E,EAAgB,SAChB23D,GAAQ,uBACR4e,GAAsB,uBACtBC,GAAsB,sBACtBC,GAAqB,iBACrB/zC,GAAgB,YAChBg0C,GAAW,uBACX3Q,KACE39E,EAAAA,EAAAA,MAEEuuF,IAAgB/rF,EAAAA,EAAAA,IAA0B,MAC1CvC,IAAOC,EAAAA,EAAAA,MACN2iB,GAAY2rE,KAAiBllF,EAAAA,EAAAA,KAAS,IACtCmlF,GAAcC,KAAmBplF,EAAAA,EAAAA,SAAsClK,GAExEuvF,IAAuBnpF,EAAAA,EAAAA,IAAgB,KAC3CgpF,IAAc,GACd,MAAMrrC,EAAOorC,GAAcvrF,QAASwM,wBACpCk/E,GAAgB,CAAE5gF,EAAGq1C,EAAKyrC,MAAO7gF,EAAGo1C,EAAK0rC,QAAS,IAG9CC,IAAwBtpF,EAAAA,EAAAA,IAAgB,KAC5CgpF,IAAc,EAAM,IAGhBO,IAAuBvpF,EAAAA,EAAAA,IAAgB,KAC3CkpF,QAAgBtvF,EAAU,IAGtB4vF,IAAuBxpF,EAAAA,EAAAA,IAAgB,KAC3CqoF,EAAY,CAAEnvF,WACVyuF,GACFv1E,EAAiB,CACf7Q,QAAqB9G,GAAZy0B,EAAiB,sCAA8C,sCAE5E,IAGIu6D,IAAiBzpF,EAAAA,EAAAA,IAAgB,KACrCsoF,EAAe,CAAE9mD,QAAS,UAAW,IAGjCkoD,IAAmB1pF,EAAAA,EAAAA,IAAgB,KACvCwoF,EAAW,CAAEtvF,UAAS,IAGlBywF,IAAgB3pF,EAAAA,EAAAA,IAAgB,KACpC8oF,GAAY,CAAEh1C,OAAQ56C,GAAS,IAG3B0wF,IAAuB5pF,EAAAA,EAAAA,IAAgB,KAEzC2oF,GADEb,EACqB,CAAE5uF,SAAQ2wF,oBAAgBjwF,GAI5B,CAAEV,SAAQ2wF,eAAgBjE,GAAsB,IAGnEkE,IAA0B9pF,EAAAA,EAAAA,IAAgB,KAC9C0oF,EAA4B,CAAEpJ,OAAQyK,EAAAA,GAAkBC,cAAe,IAGnEC,IAAoBjqF,EAAAA,EAAAA,IAAgB,KACpCg7E,EACFxB,OAIF+O,IAEI7kF,EAEkB8K,SAASwY,cAAgC,uBACjD1Y,QACHu5E,GAETrtE,EAAAA,EAAAA,KAAe,MACb8d,EAAAA,EAAAA,IAAoB4xD,EAAsB,IAG5C/pF,WAAW+pF,EA5Ha,KA6H1B,IAGIC,IAAwBnqF,EAAAA,EAAAA,IAAgB,KAC5C+pE,GAAS,CAAElwE,GAAIX,IACfi/E,GAAuB,CAAEj/E,SAAQykC,WAAW,GAAO,IAG/CysD,IAAoBpqF,EAAAA,EAAAA,IAAgB,KACxCyoF,EAA4B,CAAE30C,OAAQ56C,GAAS,IAG3CmxF,IAA0BrqF,EAAAA,EAAAA,IAAiB8J,IAC1C88E,GAAc5S,EAAAA,KAAUlqE,EAAEwgF,WAI/BxgF,EAAE4L,iBACFu0E,KAAmB,IAGfM,IAAsBvqF,EAAAA,EAAAA,IAAgB,CAACwqF,EAAiBC,KAC5D,MACMC,EAAkB,oBADLD,EAASntB,MAAM,KAAK,GACeqtB,gBAChDt+E,EAAO5R,GAAKiwF,GAClB,GAAIr+E,IAASq+E,EACX,OAAOjwF,GAAK+vF,EAASn+E,GAGvB,MACMu+E,EADkB,IAAIC,KAAKC,aAAa,CAACp/D,GAAW,CAAEnT,KAAM,aAC3BwyE,GAAGN,GAC1C,OAAOhwF,GAAM,GAAE+vF,SAAgBI,EAAe,IAG1C9S,IAAa/8E,EAAAA,EAAAA,KAAQ,IACrB+sF,EAAsBrtF,GAAK,sBAExB8vF,GAAoB,oBAAqB3E,IAC/C,CAACA,EAAqB2E,GAAqBzC,EAAertF,KAEvDuwF,IAAqBjwF,EAAAA,EAAAA,KAAQ,KACjC,GAAKotF,EAEL,OAAOoC,GAAoB,yBAA0BpC,EAAqB,GACzE,CAACoC,GAAqBpC,IAEnB8C,IAAajrF,EAAAA,EAAAA,IAAgB,KACjC4oF,GAAuB,CAAE1vF,SAAQykC,WAAW,IAC5CgrD,GAAuB,CAAEzvF,SAAQ2wF,oBAAgBjwF,GAAY,IAGzDsxF,IAAuBlrF,EAAAA,EAAAA,IAAgB,KAC3C6oF,GAAsB,CAAE3vF,UAAS,IAG7BiyF,IAAuBnrF,EAAAA,EAAAA,IAAgB,KACtCmoF,IAELrzC,GAAiB,CACfgxC,eAAgB,IAAIA,EAAgBqC,KAEtCQ,GAAuB,CAAEzvF,SAAQ2wF,oBAAgBjwF,IAEjDwY,EAAiB,CAAE7Q,QAASgpF,GAAoB,wBAAyBpC,KAAwB,KAGnGrU,EAAAA,EAAAA,GAAW,CACT,QAASuW,KAGX,MAAMe,IAAkErwF,EAAAA,EAAAA,KAAQ,IACvEW,IAAA,IAAC,UAAE8gD,EAAS,OAAE78B,GAAQjkB,EAAA,OAC3BU,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLkP,OAAQqjB,EACRpjB,MAAM,cACNtP,KAAK,UACLtC,UAAWulB,EAAS,SAAW,GAC/BpjB,QAASigD,EACTvwC,UAAWxR,GAAK,qBAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAAqB,mBAC3B,GAEV,CAACg1B,EAAoB30B,KAExB,OACE2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACX4gF,GAAcgN,GACd5rF,EAAAA,GAAAC,cAACsgD,EAAAA,EAAY,CACXviD,UAAU,2CACVwiD,QAASwuC,GACTvrE,UAAU,SAEVzjB,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAACC,KAAK,WAAWhkB,QAASqtF,IAChC9R,IAEH17E,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAACC,KAAK,UAAUhkB,QAAS2uF,IAC/BzwF,GAAK,2BAER2B,EAAAA,GAAAC,cAAC6rB,EAAAA,EAAa,MACbigE,GACI/rF,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAACC,KAAK,YAAYhkB,QAAS4uF,IAAuBH,IAChE5uF,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAACC,KAAK,eAAehkB,QAAS0uF,IAAaxwF,GAAK,WAG3DiJ,GACAtH,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG8tE,IAAqB4M,IAA0BjB,GAAgBe,IAC9DrrF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACLqP,QAAM,EACNi4C,OAAK,EACLznD,QAASitF,IAER/uF,GAAKy0B,EAAY,qBAAuB,qBAG5C6rD,GAAoB4M,GACnBvrF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACLqP,QAAM,EACNi4C,OAAK,EACLznD,QAASitF,IAER/uF,GAAK,uBAGTsgF,GAAoBwL,GACnBnqF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACLqP,QAAM,EACNi4C,OAAK,EACLznD,QAASktF,IAERhvF,GAAK,aAGTsgF,GAAoBuL,GACnBlqF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACLqP,QAAM,EACNi4C,OAAK,EACLznD,QAASmtF,IAERjvF,GAAK,eAGTsgF,GAAoB0L,GACnBrqF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACLqP,QAAM,EACNi4C,OAAK,EACLznD,QAASotF,IAERlvF,GAAK,YAGTmsF,GACCxqF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLkP,OAAQqjB,EACRpjB,MAAM,cACNtP,KAAK,UACLH,QAAS0tF,GACTh+E,UAAWxR,GAAK,mCAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBAAmB,oBAGnCysF,GACCzqF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLmP,MAAM,cACNtP,KAAK,UACLH,QAAS6tF,GACTn+E,UAAU,QAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,kBAAkB,sBAKrC4gF,GAAclhF,QAAQytF,IACtBnrF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLzC,UAAU,eACV2R,OAAQqjB,EACRpjB,MAAM,cACNtP,KAAK,UACLH,QAASutF,GACT79E,UAAuBxR,GAAZy0B,EAAiB,oBAA4B,mBAExD9yB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,iBAAiB,mBAC9BgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAASmtF,IAG5BnrF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLuE,IAAK4nF,GACL3uF,UAAWijB,GAAa,SAAW,GACnCxgB,OAAK,EACLkP,QAASrI,EACThH,KAAK,UACLsP,MAAM,cACNyT,SAAUsmE,EACV95E,UAAU,eACV1P,QAAS4sF,IAET/sF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,iBAAiB,oBAE/B6uF,IACC7sF,EAAAA,GAAAC,cAACqpF,EAAmB,CAClBxsF,OAAQA,EACRqiB,SAAUA,EACVoE,OAAQtC,GACRrN,OAAQi5E,GACRoC,iBAAkB3nF,IAAaq3E,EAC/B7rD,UAAWA,EACXq3D,YAAaA,EACbG,aAAcA,EACdE,UAAWA,EACXC,QAASA,EACTE,QAASA,EACTK,kBAAmBA,EACnBC,cAAeA,EACfC,kBAAmBA,EACnBN,SAAUA,EACVC,kBAAmBA,EACnBC,mBAAoBA,EACpBK,oBAAqBA,EACrB+D,oBAAqBxB,GACrByB,iBAAkBvQ,EAClBwQ,mBAAoBhC,GACpBiC,cAAexB,GACfyB,kBAAmBvB,GACnBpqE,QAASupE,GACTtpE,oBAAqBupE,KAGrB,KA8FV,SAASW,IACP,MAAMyB,EAAcn9E,SAASwY,cAAgC,mCAC7D2kE,GAAar9E,OACf,C,0KCliBA,QAA4C,WCsBtCs9E,EAAwB,SAkC9B,GAAe9yF,EAAAA,EAAAA,KAhCqBqB,IAE9B,IAF+B,KACnComB,EAAI,MAAEjf,GACPnH,EACC,MAAM,cAAE0xF,IAAkBloF,EAAAA,EAAAA,MACpBc,GAAY/F,EAAAA,EAAAA,IAASotF,EAAAA,EAAAA,IAAqBvrE,IAAO,EAAO3hB,EAAAA,GAAemtF,MAEvEC,GAAUjxF,EAAAA,EAAAA,KAAQ,KACtB,IAAK0J,EAAW,MAAO,GACvB,MAAMuH,EAAkB,SAAV1K,EAZO,qBACC,qBAahB2qF,EAA8BxnF,EAAUmP,QAAQg4E,EAAuB5/E,GACvEkgF,GAAM,IAAIv8E,WAAYC,gBAAgBq8E,EAA6B,iBAMzE,OALAC,EAAI/3E,iBAAiB,QAAQlM,SAASs8D,IACpCA,EAAKnkE,MAAMoN,OAASxB,EACpBu4D,EAAKnkE,MAAM+rF,YAnBe,OAmBsB,IAG1C,2BAA0BD,EAAIn2E,gBAAgBq2E,WAAW,GAChE,CAAC3nF,EAAWnD,IAEf,OACElF,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GD7CK,WC6CuB,QAASuvF,GAAiBtrF,IAClEnE,EAAAA,GAAAC,cAAA,OACEiE,IAAK0rF,EACL/2E,IAAI,GACJ7a,WAAWkC,EAAAA,EAAAA,GDjD4C,YCiDduvF,GAAiBtrF,GAC1DC,WAAW,IAEX,ICgER,GAAe1H,EAAAA,EAAAA,KAzFqBqB,IAS9B,IAT+B,IACnC+kB,EAAG,MACH5d,EAAK,OACLpI,EAAM,SACNqiB,EAAQ,aACR8wE,EAAY,WACZC,EAAU,aACV7rE,EAAY,aACZC,GACDvmB,EACC,MAAM,cAAEs5B,EAAa,gBAAE84D,IAAoB/xF,EAAAA,EAAAA,MAErCC,GAAOC,EAAAA,EAAAA,KAEP6lB,GAAOxlB,EAAAA,EAAAA,KAAQ,IACZmkB,EAAIstE,MAAMhjE,MAAK9tB,IAAA,IAAC,KAAE2Q,GAAM3Q,EAAA,MAAc,mBAAT2Q,CAAyB,KAAGmC,UAC/D,CAAC0Q,EAAIstE,SAEDnvE,EAAYovE,EAAUC,IAAatvF,EAAAA,EAAAA,MACnC6rF,EAAcC,IAAmBplF,EAAAA,EAAAA,SAAsClK,GAExEmsB,GAAoB/lB,EAAAA,EAAAA,IAAiB8J,IACzCA,EAAE4L,iBACF,MAAMioC,EAAO7zC,EAAE8zC,cAAc5zC,wBAC7Bk/E,EAAgB,CAAE5gF,EAAGq1C,EAAKyrC,MAAO7gF,EAAGo1C,EAAK0rC,SACzC5oE,IACAgsE,GAAU,IAGNh2C,GAAcz2C,EAAAA,EAAAA,IAAgB,KAEhCyzB,EADE44D,EACY,CACZntE,MACAytE,gBAAgB,GAGJ,CACZztE,MACAhmB,OAAQA,EACRqiB,YAEJ,IAGIqxE,GAAkB5sF,EAAAA,EAAAA,IAAgB,KACtC0sF,IACAhsE,GAAc,IAGVmsE,GAA0B7sF,EAAAA,EAAAA,IAAgB,KAC9CkpF,OAAgBtvF,EAAU,IAGtBkzF,GAAkB9sF,EAAAA,EAAAA,IAAgB,KACtCusF,EAAgB,CACdvtD,MAAO9f,EAAIrlB,GACX8jC,WAAW,GACX,IAGJ,OACEvhC,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CACPqxB,IAAKzyB,EAAIrlB,GACTouB,WAAY1H,GAAQnkB,EAAAA,GAAAC,cAAC0wF,EAAa,CAACxsE,KAAMA,EAAMjf,MAAOA,IACtDif,KAAOA,OAAgB3mB,EAAT,OACd2C,QAASk6C,EACT5uB,cAAe9B,GAEd7G,EAAI8tE,UACJV,GAAcptE,EAAI+tE,oBAAsB7wF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,mBAAmBK,EAAK,QAChFwuF,GACC7sF,EAAAA,GAAAC,cAACqjB,EAAAA,EAAI,CACHC,OAAQtC,EACRwC,UAAU,QACVzf,MAAQ,SAAQ6oF,EAAa3gF,YAAY2gF,EAAa1gF,OACtDnO,UAAU,0BACVwlB,WAAS,EACTstE,YAAU,EACVntE,QAAS6sE,EACT5sE,oBAAqB6sE,GAErBzwF,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAACC,KAAK,OAAOs8B,aAAW,EAACtgD,QAASuwF,GAAkBryF,EAAK,sBAI7D,G,wECxGf,MAQA,EAR+CuD,IAC7C,MAAM,OAAE2hB,GAAW3hB,EACb0zC,GAAqBt2B,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,sBAAuBqE,GAGjF,OAAO+xB,EAAqBt1C,EAAAA,GAAAC,cAACq1C,EAAuB1zC,QAAYpE,CAAS,C,wECL3E,MAQA,EAR2CoE,IACzC,MAAM,OAAE2hB,GAAW3hB,EACbmvF,GAAa/xE,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,kBAAmBqE,GAGrE,OAAOwtE,EAAa/wF,EAAAA,GAAAC,cAAC8wF,EAAenvF,QAAYpE,CAAS,C,6LCC3D,MAmCA,GAAed,EAAAA,EAAAA,KAnCkBqB,IAA0C,IAAzC,QAAEizF,EAAO,UAAEC,EAAS,aAAElxE,GAAchiB,EACpE,MAAOmzF,EAAWC,EAAaC,IAAiBpwF,EAAAA,EAAAA,KAY1ChD,GAAYkC,EAAAA,EAAAA,GAChB,aACAgxF,GAAa,WAGf,OACElxF,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACXqzF,OAAQtxE,EACR2tD,YAAayjB,EACbvW,YApBqBltE,IACvB,MAAQ4jF,cAAeC,GAAa7jF,EAEhC6jF,GACF7jF,EAAEM,kBAGJojF,GAAe,EAcb,oBAEApxF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,cAAYgzF,EAAU,QAAU,cACjDhxF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAAQ,iCACrBizF,GAAajxF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAegzF,EAAU,iBAAmB,wBAExE,IChBH,IAAKt/C,EAAa,SAAbA,GAAa,OAAbA,EAAa,YAAbA,EAAa,oBAAbA,EAAa,uBAAbA,CAAa,MAMzB,MAkGA,GAAeh1C,EAAAA,EAAAA,KAhGgBqB,IAEzB,IAF0B,OAC9BwlB,EAAM,UAAEquB,EAAS,OAAEE,EAAM,aAAE/xB,EAAY,eAAEK,GAC1CriB,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,iBAAE0X,IAAqB5X,EAAAA,EAAAA,MAEvBozF,GAAiB5wF,EAAAA,EAAAA,IAAe,MAChC6wF,GAAgBn5D,EAAAA,EAAAA,GAAYsZ,IAC5B,aAAElyC,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkB2jB,GAC3DhJ,EAAY6F,GAAkBA,GAAgB5F,WAEpDhb,EAAAA,EAAAA,KAAU,IAAO+jB,GAASiG,EAAAA,EAAAA,GAAsBsoB,QAAUt0C,GAAY,CAAC+lB,EAAQuuB,IAE/E,MAAM4/C,GAAkB9tF,EAAAA,EAAAA,IAAgBwS,UACtC,MAAQu7E,aAAcC,GAAOlkF,EAC7B,IAAI2L,EAAgB,GAEpB,KAAIu4E,EAAGv4E,OAASu4E,EAAGv4E,MAAMjZ,OAAS,IAAOwxF,EAAG18E,OAAU08E,EAAG18E,MAAM9U,QAExD,GAAIwxF,EAAG18E,OAAS08E,EAAG18E,MAAM9U,OAAS,EAAG,CAC1C,MAAMyxF,QAAoBt4E,EAAAA,EAAAA,GAA8Bq4E,EAAG18E,OACrDwoB,EAAgBm0D,SAAqB33E,EAAAA,EAAAA,GAAgB23E,EAAY,GAAG5hF,KAAM4hF,EAAY,IAG5F,GAFmBzxE,GAAkBsd,IAAiBtjB,EAAAA,EAAAA,IAAuBgG,EAAgBsd,GAI3F,YADA1nB,EAAiB,CAAE7Q,QAAS9G,EAAKkc,EAAY,6BAA+B,iCAG1Es3E,GAAazxF,SACfiZ,EAAQA,EAAMqB,OAAOm3E,GAEzB,OAbEx4E,EAAQA,EAAMqB,OAAOrQ,MAAMgN,KAAKu6E,EAAGv4E,QAerCy4B,IACA/xB,EAAa1G,GAAOu4B,QAAoBp0C,EAAU,IAG9Cs0F,GAAuBluF,EAAAA,EAAAA,IAAiB8J,IAC5C,MAAQikF,aAAcC,GAAOlkF,EAEzBkkF,EAAGv4E,OAASu4E,EAAGv4E,MAAMjZ,OAAS,IAChC0xC,IACA/xB,EAAa1V,MAAMgN,KAAKu6E,EAAGv4E,QAAQ,GACrC,IAGIs/D,GAAkB/0E,EAAAA,EAAAA,IAAiB8J,IACvCA,EAAEM,kBAEF,MAAQ8T,OAAQiwE,EAAYT,cAAeC,GAAa7jF,GAIrDqkF,EAA8BpnF,QAAQ,2BACpC4mF,GAAcA,EAA6B5mF,QAAQ,4BAGtD6mF,EAAepwF,QAAUoD,OAAOT,YAAW,KACzC+tC,GAAQ,GA5Dc,KA8D1B,IASF,IAAKpyC,EACH,OAGF,MAAMsyF,EAAoBpgD,GAAa6/C,EAEjCzzF,GAAYkC,EAAAA,EAAAA,GAChB,WACAP,GAGF,OACEK,EAAAA,GAAAC,cAACgyF,EAAAA,EAAM,CAACjhD,YAAY,0BAClBhxC,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACX48E,YAAajC,EACbuZ,WAtBiBC,KACjBX,EAAepwF,SACjBoD,OAAOwhF,aAAawL,EAAepwF,QACrC,EAoBIiwF,OAAQv/C,EACR3xC,QAAS2xC,GAET9xC,EAAAA,GAAAC,cAACmyF,EAAU,CAACryE,aAAc2xE,EAAiBT,WAAYe,IACtDA,GAAqBhyF,EAAAA,GAAAC,cAACmyF,EAAU,CAACryE,aAAc+xE,EAAsBd,SAAO,KAExE,G,wECzHb,MAQA,EARyCpvF,IACvC,MAAM,OAAE2hB,GAAW3hB,EACb4zC,GAAex2B,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,gBAAiBqE,GAGrE,OAAOiyB,EAAex1C,EAAAA,GAAAC,cAACu1C,EAAiB5zC,QAAYpE,CAAS,C,8pBCJhD,MAAM60F,EAKnBC,WAAAA,CACEC,EACQl6B,EACA5G,GACR,KAFQ4G,UAAAA,EAAsB,KACtB5G,QAAAA,EAA6B+gC,EAAA,qBAAAA,EAAA,kBALnB,GAOlBC,KAAKxrF,MAAQmL,SAASnS,cAAc,SACpCwyF,KAAKxrF,MAAM/C,IAAMquF,EACjBE,KAAKxrF,MAAMklD,yBAA0B,EACrCsmC,KAAKxrF,MAAMilD,OAAQ,EACfuF,EAAQztD,OACVyuF,KAAKxrF,MAAM0R,aAAa,QAAS84C,EAAQztD,OAE3CyuF,KAAKxrF,MAAMjD,MAAM+lC,SAAW,WAC5B0oD,KAAKxrF,MAAMyrF,OAEND,KAAKhhC,QAAQrhD,SAChBqiF,KAAKxrF,MAAMmlD,MAAO,IAGpBlsB,EAAAA,EAAAA,KAAgB,KACduyD,KAAKp6B,UAAU9lD,YAAYkgF,KAAKxrF,OAEhCwrF,KAAKE,4BAA4B,GAErC,CAEOznB,IAAAA,IACDunB,KAAKxpF,WAAcwpF,KAAKxrF,QAC5BwrF,KAAKE,6BACDF,KAAKxrF,MAAM2rF,SACbC,EAAAA,EAAAA,GAASJ,KAAKxrF,OAEhBwrF,KAAKxpF,WAAY,EACnB,CAEO6V,KAAAA,GACA2zE,KAAKxpF,WAAcwpF,KAAKxrF,QACxBwrF,KAAKxrF,MAAM2rF,QACdH,KAAKxrF,MAAM6X,QAEb2zE,KAAKxpF,WAAY,EACnB,CAEO6pF,OAAAA,GACLL,KAAK3zE,QACL2zE,KAAKxrF,OAAOwR,SACZg6E,KAAKxrF,WAAQzJ,CACf,CAEOu1F,cAAAA,CAAehpD,GACpB0oD,KAAKhhC,QAAQ1nB,SAAWA,EACxB0oD,KAAKE,4BACP,CAEQA,0BAAAA,GACN,MAAM,KAAEryF,EAAMypC,UAAU,EAAE79B,EAAC,EAAEC,IAAQsmF,KAAKhhC,SAC1CrzC,EAAAA,EAAAA,KAAe,KACb,IAAKq0E,KAAKxrF,MAAO,OACjB,MAAMA,EAAQwrF,KAAKxrF,OACb,MAAEuE,EAAK,OAAEC,GAAWgnF,KAAKp6B,UAAUzqD,yBACzCsyB,EAAAA,EAAAA,KAAgB,KACdj5B,EAAMjD,MAAM2J,KAAQ,GAAErD,KAAK7J,MAAMyL,EAAIV,OACrCvE,EAAMjD,MAAMuqC,IAAO,GAAEjkC,KAAK7J,MAAM0L,EAAIV,OACpCxE,EAAMjD,MAAMwH,MAAS,GAAElL,MACvB2G,EAAMjD,MAAMyH,OAAU,GAAEnL,KAAQ,GAChC,GAEN,E,2HCrDF,MAAM0yF,EAAO,KAAOp3C,EAAAA,E,qCCpBpB,MAQA,EAR0Ch6C,IACxC,MAAM,OAAE2hB,GAAW3hB,EACbqxF,GAAgBj0E,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBqE,GAGvE,OAAO0vE,EAAgBjzF,EAAAA,GAAAC,cAACgzF,EAAkBrxF,QAAYpE,CAAS,EC6B3D01F,EAAiB,iBA6CjBC,EAA8B,IAG9BC,EAAc,CAClB,MAAO,SAAU,QAAS,SAAU,WAAY,OAAQ,MAAO,OAAQ,YAAa,UAAW,UAAW,SAmhB5G,GAAe12F,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAiD,IAA/C,OAAExC,EAAM,SAAEqiB,GAAoB7f,EACrC,MAAM,oBAAE+zF,GAAwBz2F,EAAO8yB,SAASC,MAEhD,MAAO,CACL0jE,sBACAvsE,UAAWhqB,GAAUqiB,GAAW0H,EAAAA,EAAAA,KAAYjqB,EAAQE,EAAQqiB,IAAW2H,eAAYtpB,EACnF01B,oBAAoBC,EAAAA,EAAAA,KAAqBv2B,GACzC44B,uBAAuBC,EAAAA,EAAAA,KAA4B74B,GACpD,GATeD,EAngB4BoB,IA+B1C,IA/B2C,IAC/CgH,EAAG,GACHtH,EAAE,OACFX,EAAM,aACNo4B,EAAY,uBACZo+D,EAAsB,aACtB7+C,EAAY,kBACZD,EAAiB,gBACjBje,EAAe,QACfN,EAAO,SACP94B,EAAQ,QACRwvB,EAAO,YACP+nB,EAAW,wBACXnF,EAAuB,qBACvBC,EAAoB,kBACpBmF,EAAiB,iBACjB3Z,GAAgB,aAChB4Z,GAAY,oBACZC,GAAmB,oBACnBC,GAAmB,4BACnBC,GAA2B,UAC3BjuB,GAAS,mBACToM,GAAkB,sBAClBsC,GAAqB,oBACrB69D,GAAmB,SACnBr+C,GAAQ,kBACRC,GAAiB,OACjBzD,GAAM,SACN+hD,GAAQ,QACRp9D,GAAO,OACPC,IACDr4B,EACC,MAAM,gBACJy1F,GAAe,mBACfC,GAAkB,oCAClBl8D,KACEn5B,EAAAA,EAAAA,MAGJ,IAAIw5B,IAAWh3B,EAAAA,EAAAA,IAAuB,MAClCmE,IACF6yB,GAAW7yB,GAIb,MAAM2uF,IAAsB9yF,EAAAA,EAAAA,IAAe,MAErC+yF,IAAW/yF,EAAAA,EAAAA,IAAuB,MAElCgzF,IAAmBhzF,EAAAA,EAAAA,IAAuB,MAE1CizF,IAAkBjzF,EAAAA,EAAAA,IAA0B,MAE5CkzF,IAAoBlzF,EAAAA,EAAAA,IAA0B,MAE9CmzF,IAAuBnzF,EAAAA,EAAAA,IAAuB,MAE9CvC,IAAOC,EAAAA,EAAAA,KACP01F,IAAuBpzF,EAAAA,EAAAA,KAAO,IAC7BqzF,GAAqBC,GAAmBC,KAAsBnzF,EAAAA,EAAAA,MAC9DozF,GAA6BC,KAAkC3sF,EAAAA,EAAAA,OAC/D4sF,GAAeC,KAAoB7sF,EAAAA,EAAAA,OACnC8sF,GAAyBC,KAA8B/sF,EAAAA,EAAAA,KAAkB,IAC1E,SAAEJ,KAAaC,EAAAA,EAAAA,MACfmtF,GAAiBptF,KAAa6K,EAAAA,IAAUwiF,EAAAA,KAEvCC,GAAoBC,KAAyBntF,EAAAA,EAAAA,KAAS,IAE7DlI,EAAAA,EAAAA,KAAU,KACRq1F,GAAsBn3F,QAAQ6xC,GAA2BC,GAAsB,GAC9E,CAACA,EAAsBD,IAE1B,MAAMulD,IAAiBlxF,EAAAA,EAAAA,IAAgB,KACrCixF,IAAsB,EAAM,KF9IjB,SACbloE,EACAiL,EACAi8D,EACAC,EACAC,EACAgB,EACAv/D,EACAS,EACA94B,GAEA,MAAM45D,GAAcC,EAAAA,EAAAA,GAAwBp/B,GAAW3B,GACjD++D,GAAcC,EAAAA,EAAAA,GAAel+B,GAAa,GAC1CL,GAAMC,EAAAA,EAAAA,KACNu+B,GAAct0F,EAAAA,EAAAA,IAAuC,IAAIu0F,KAEzDC,GAAexxF,EAAAA,EAAAA,IAAiBijC,IACpCA,EAAIh7B,SAASpO,IACX,MAAM43F,EAASH,EAAY9zF,QAAQq3B,IAAIh7B,GACnC43F,IACFA,EAAOvC,UACPoC,EAAY9zF,QAAQk0F,OAAO73F,GAC7B,GACA,IAGE83F,GAAsB3xF,EAAAA,EAAAA,IAAgB,KAC1C,KAAKqyB,GAAY2B,EAASx2B,SAAYyyF,EAAgBzyF,SAAY0yF,EAAkB1yF,SAAS,OAE7F,MAAMxE,GAASiC,EAAAA,EAAAA,MACT22F,EAAmB,IAAIzyF,IAAImyF,EAAY9zF,QAAQ4mB,QAChC3d,MAAMgN,KAAKugB,EAASx2B,QAAQ2W,iBAA8B,kBAElElM,SAAS2iC,IACpB,IAAKA,EAAQn2B,QAAQo9E,SACnB,OAEF,MAAMC,EAAY,GAAEX,IAAWvmD,EAAQn2B,QAAQo9E,WAAW1+B,GAAe,KACnEnwB,EAAa4H,EAAQn2B,QAAQuuB,WAEnC4uD,EAAiBF,OAAOI,GAExB,MAAMC,GAAWC,EAAAA,EAAAA,IAAgChvD,GACjD,IAAK+uD,EACH,OAGF,MAAME,EAAehC,EAAgBzyF,QAASwM,wBACxCkoF,EAAgBtnD,EAAQ5gC,wBACxB1B,GAAIzL,EAAAA,EAAAA,KAAOq1F,EAAcnoF,KAAOkoF,EAAaloF,MAAQkoF,EAAarqF,MAAO,GACzEW,GAAI1L,EAAAA,EAAAA,KAAOq1F,EAAcvnD,IAAMsnD,EAAatnD,KAAOsnD,EAAapqF,OAAQ,GAE9E,GAAIypF,EAAY9zF,QAAQmC,IAAImyF,GAG1B,YAFeR,EAAY9zF,QAAQq3B,IAAIi9D,GAChC3C,eAAe7mF,EAAGC,GAI3B,MAAMyqD,EAAch6D,EAAOg3B,aAAa70B,KAAK6nC,GAC7C,IAAKgwB,EACH,OAEF,MAAMm/B,EAAOn/B,GAAa5pB,iBAAkBgpD,EAAAA,EAAAA,KAAgCp5F,EAAQg6D,EAAY5pB,gBAC1FipD,EAAW,CACflB,EAAUnuD,EAAYmwB,EAAaL,GACnCn3D,OAAO7B,SAAS4kB,KAAK,MAoG7BlM,eAA2BvZ,GAwBI,IAxBH,YAC1B+5D,EAAW,gBACXi9B,EAAe,kBACfC,EAAiB,qBACjBC,EAAoB,SACpBkC,EAAQ,OACRC,EAAM,SACNP,EAAQ,SACR5rD,EAAQ,KACRgsD,EAAI,UACJI,EAAS,YACTnB,GAaDn4F,EACC,GAAI+5D,EAAYgB,SAAU,CACxB,MAAMhoD,EAAQgnD,EAAYw/B,oBAAsBD,GAAYE,EAAAA,EAAAA,IAASF,QAAa34F,EAE5E84F,SADgBC,EAAAA,EAAAA,MACCh6E,KACrBo5E,EACAI,EAAOjC,EAAkB1yF,QAAWyyF,EAAgBzyF,QACpD60F,EACA,CACE31F,KAAM0yF,EACNwD,OAAQzsD,EACR0sD,eAAgBV,GAElBG,EACAtmF,EAAQ,CAACA,EAAMq5D,EAAGr5D,EAAM8mF,EAAG9mF,EAAM4sD,QAAKh/D,GAGxC,MAAO,CACL0tE,KAAMA,IAAMorB,EAAOprB,OACnBpsD,MAAOA,IAAMw3E,EAAOx3E,QACpBg0E,QAASA,IAAMwD,EAAOK,WAAWT,GACjCnD,eAAgBA,CAAC7mF,EAAWC,IACnBmqF,EAAOM,sBAAsBV,EAAQ,CAAEhqF,IAAGC,MAGvD,CAEA,GAAIyqD,EAAY5L,QAAS,CACvB,MAAMhnD,EAAQ4yD,EAAYw/B,oBAAsBpB,EAAe,WAAUA,UAAiBx3F,EACpFq5F,EAAgB,IAAIxE,EACxBsD,EACA5B,EAAqB3yF,QACrB,CAAEd,KAAM0yF,EAAMjpD,WAAU/lC,UAE1B,MAAO,CACLknE,KAAMA,IAAM2rB,EAAc3rB,OAC1BpsD,MAAOA,IAAM+3E,EAAc/3E,QAC3Bg0E,QAASA,IAAM+D,EAAc/D,UAC7BC,eAAgBA,CAAC7mF,EAAWC,IAAc0qF,EAAc9D,eAAe,CAAE7mF,IAAGC,MAEhF,CAEA,MAAM,IAAI2qF,MAAM,gCAClB,EArKMC,CAAa,CACXngC,cACAi9B,kBACAC,oBACAC,uBACAkC,WACAC,OAAQR,EACRC,WACAI,OACAhsD,SAAU,CAAE79B,IAAGC,KACfgqF,UAAWp/B,EACXi+B,gBACC59B,MAAM4/B,IACHxhE,GACFwhE,EAAU9rB,OAGZgqB,EAAY9zF,QAAQ61F,IAAIvB,EAAUsB,EAAU,GAC5C,IAGJ5B,EAAa/qF,MAAMgN,KAAKm+E,GAAkB,KAG5Ch2F,EAAAA,EAAAA,KAAU,KACD03F,EAAAA,EAAAA,IAAkC3B,IACxC,CAACA,KAEJ/1F,EAAAA,EAAAA,KAAU,KACR,MAAM23F,EAAoBjC,EAAY9zF,QAEtC,MAAO,KACLg0F,EAAa/qF,MAAMgN,KAAK8/E,EAAkBnvE,QAAQ,CACnD,GACA,KAEHxoB,EAAAA,EAAAA,KAAU,KACHmtB,KAAciL,EAASx2B,SAAYyyF,EAAgBzyF,SAAYjE,GAAa84B,GAMjF7X,EAAAA,EAAAA,KAAe,KACbm3E,GAAqB,IANrBH,EAAa/qF,MAAMgN,KAAK69E,EAAY9zF,QAAQ4mB,QAO5C,GACD,CAAC2E,EAAS4oE,EAAqB39D,EAAUw9D,EAAcvB,EAAiB12F,EAAU84B,KAErF9qB,EAAAA,EAAAA,KAAgB,KACdiH,SAASuH,gBAAgB3V,MAAMwhB,YAAY,8BAA+BwvE,GAAe,OAAO,GAC/F,CAACA,KAEJptD,EAAAA,EAAAA,IAAsB7pC,IAAuB,IAArBq5F,GAAgBr5F,OACdP,IAApB45F,GAAiCrgC,IAAgBqgC,GACnD7B,GACF,GACC,CAACx+B,EAAaw+B,IAEjB,MAAM8B,GAA+BC,EAAAA,EAAAA,GACnC/B,EACA,CAACA,GAxIe,KA0IhB,IAEFnsC,EAAAA,EAAAA,GAAkByqC,EAAiBwD,IACnCzvD,EAAAA,EAAAA,IAAsBtoC,IAAe,IAAbi4F,GAAQj4F,EAC1Bo3D,IAAQ6gC,IACVnC,EAAa/qF,MAAMgN,KAAK69E,EAAY9zF,QAAQ4mB,SAC5CutE,IACF,GACC,CAAC7+B,EAAK6+B,IAET,MAAMiC,GAAkB5zF,EAAAA,EAAAA,IAAgB,KACtCsxF,EAAY9zF,QAAQyK,SAASwpF,IAC3BA,EAAOv2E,OAAO,GACd,IAGE24E,GAAoB7zF,EAAAA,EAAAA,IAAgB,KACnC4xB,GAIL0/D,EAAY9zF,SAASyK,SAASwpF,IAC5BA,EAAOnqB,MAAM,GACb,IAGEwsB,GAAyB9zF,EAAAA,EAAAA,IAAgB,MAC7Cwa,EAAAA,EAAAA,IAAeq5E,EAAkB,KAMnCvwD,EAAAA,EAAAA,GAAkBswD,EAAiBE,EACrC,CElBEC,CACEhrE,EACAiL,GACAi8D,GACAC,GACAC,GACAv/C,EACAhf,GACAS,EACA94B,GAGF,MAAMy6F,GAAiBtE,EAjHiB,IAmHpC7+C,EAlH+B,IAkHgBntC,GAAW,IAAM,IAC9DuwF,IAAoBj0F,EAAAA,EAAAA,IAAgB,WAAsB,IAArBk0F,EAAQhuF,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,IACjDiuF,EAAAA,EAAAA,KAAoB,KAClB,MAAMC,EAAWpgE,GAASx2B,QAASmkB,QAAyB,IAAG2tE,KACzD+E,EAAgBjvD,OAAOgvD,EAASh0F,MAAMyH,OAAO+L,QAAQ,KAAM,KAC3D0gF,EAAQtE,GAAiBxyF,SACzB,aAAEg5E,GAAiB8d,EACnBC,EAAY7tF,KAAKC,IAAI6vE,EAAcwd,IAEzC,GAAIO,IAAcF,EAChB,OAGF,MAAMG,EAAche,EAAewd,GAEnC,SAASS,IACP,MAAMC,EAAqBhuF,KAAK7J,MA7KL,GA8KI6J,KAAKiuF,IAAIjuF,KAAKu2E,IAAIsX,EAAYF,KAE7DD,EAASh0F,MAAMyH,OAAU,GAAE0sF,MAC3BH,EAASh0F,MAAMs0F,mBAAsB,GAAEA,MACvCN,EAAS3lF,UAAUmmF,OAAO,YAAaJ,EACzC,CAEA,OAAIN,OAEF53D,EAAAA,EAAAA,IAAgBm4D,GAGTA,CACT,GAEJ,KAEAltF,EAAAA,EAAAA,KAAgB,KACTmoF,GACLuE,IAAkB,EAAM,GACvB,CAACvE,EAAwBuE,KAE5B,MAAMY,IAAU73F,EAAAA,EAAAA,IAAO+rB,MACvBxhB,EAAAA,EAAAA,KAAgB,KACd,MAAMmI,EAAOnW,EAAWwvB,IAAY,GAEhCrZ,IAASskB,GAASx2B,QAASqW,YAC7BmgB,GAASx2B,QAASqW,UAAYnE,GAG5BA,IAASqgF,GAASvyF,QAASqW,YAC7Bk8E,GAASvyF,QAASqW,UAAYnE,GAG5BA,IAASmlF,GAAQr3F,UACnBq3F,GAAQr3F,QAAUkS,EAElBukF,IAAmBvkF,GACrB,GACC,CAACqZ,EAASxvB,EAAU06F,MAELj3F,EAAAA,EAAAA,IAAO9D,GACfsE,QAAUtE,EACpB,MAAM47F,IAAa90F,EAAAA,EAAAA,IAAgB,KAC5Bg0B,GAASx2B,WAIVu3F,EAAAA,EAAAA,KACF50F,WAAW20F,GAhOM,MAoOnBv8D,EAAAA,EAAAA,GAAqBvE,GAASx2B,SAAS,IAGnCw3F,IAA2Bh1F,EAAAA,EAAAA,IAAgB,KAC/CuwF,KAjLJ,WACE,MAAM74D,EAAY92B,OAAO+2B,eACpBD,IAIDA,EAAUyT,gBACZzT,EAAUyT,kBACDzT,EAAUu9D,OACnBv9D,EAAUu9D,QAEd,CAuKIC,EAAgB,IAGlB,SAASC,KAEP,GAAI5mF,EAAAA,GACF,OAAO,EAGT,MAAMmpB,EAAY92B,OAAO+2B,eACzB,IAAKD,IAAcA,EAAUI,YAAcs4D,GAAqB5yF,QAK9D,OAJA+yF,KACIQ,EAAAA,IACFF,IAA2B,IAEtB,EAGT,MAAM94D,EAAiBL,EAAUM,WAAW,GACtCo9D,EAAer9D,EAAe2O,WAAWpF,OAC/C,QACE6P,MACIlZ,EAAAA,EAAAA,GAAuBF,EAAgBpF,GAAmB/f,EAAAA,OAC1DwiF,IACD92D,EAAAA,EAAAA,GAAqB82D,KACpBr9D,EAAes9D,gBAEnB9E,MACO,EAIX,CAEA,SAAS+E,KACP,IAAKH,KACH,OAGF,GAAIvE,GACF,OAGF,MAAM74D,EAAiBn3B,OAAO+2B,eAAgBK,WAAW,GACnDu9D,EAAgBx9D,EAAe/tB,wBAC/BwrF,EAAexhE,GAASx2B,QAASmkB,QAAyB,IAAG2tE,KAAmBtlF,wBAEtF,IAAI1B,EAAKitF,EAAcxrF,KAAOwrF,EAAc3tF,MAAQ,EAAK4tF,EAAazrF,KAElEzB,EAAIinF,EACNjnF,EAAIinF,EACKjnF,EAAIktF,EAAa5tF,MAAQ2nF,IAClCjnF,EAAIktF,EAAa5tF,MAAQ2nF,GAG3BkB,GAA+B,CAC7BnoF,IACAC,EAAGgtF,EAAc5qD,IAAM6qD,EAAa7qD,MAGtCgmD,GAAiB54D,GACjBu4D,IACF,CAEA,SAASmF,KACH3F,GAAoBtyF,SACtBoD,OAAOwhF,aAAa0N,GAAoBtyF,SAG1CsyF,GAAoBtyF,QAAUoD,OAAOT,WAAWm1F,GA/Pb,IAgQrC,EAiHA15F,EAAAA,EAAAA,KAAU,KACJskB,EAAAA,IAIA8wB,IACF8jD,IACF,GACC,CAAC57F,EAAQ47F,GAAY5xE,GAAW8tB,MAEnCp1C,EAAAA,EAAAA,KAAU,KACR,IACG1C,GACEy5B,IAAoB/f,EAAAA,KACpBq+B,IACA6/C,IACAxhE,GAEH,OAGF,MAAMomE,EAAyB5rF,IAC7B,IAAI6rF,EAAAA,EAAAA,MACF,OAGF,MAAM,IAAEhkD,GAAQ7nC,EACVoU,EAASpU,EAAEoU,OAEjB,IAAKA,GAAUsxE,EAAYz8E,SAAS4+B,GAClC,OAGF,MAAMj/B,EAAQshB,GAASx2B,QACjBo4F,EAAuBpnF,SAASmpB,gBAAgBk+D,YAEtD,MACIlkD,EAAItR,WAAW,UAAav2B,EAAEwgF,UAAoB,UAAR34C,KAAsBikD,GACnD,SAAX9rF,EAAEizD,OAAoBjzD,EAAEsqE,SAAWtqE,EAAEqqE,UAA+B,UAAnBj2D,EAAO3J,UAM5D7B,GACGwL,IAAWxL,GACQ,UAAnBwL,EAAO3J,SACY,aAAnB2J,EAAO3J,UACN2J,EAAO43E,kBACX,EACAv9D,EAAAA,EAAAA,GAAqB7lB,GAAO,GAAM,GAElC,MAAMqjF,EAAW,IAAIC,cAAclsF,EAAEyO,KAAMzO,GAC3C4I,EAAMylB,cAAc49D,EACtB,GAKF,OAFAvnF,SAAS6D,iBAAiB,UAAWqjF,GAAuB,GAErD,KACLlnF,SAAS+D,oBAAoB,UAAWmjF,GAAuB,EAAK,CACrE,GACA,CAACx8F,EAAQy5B,EAAiBm+D,GAAgBxhE,GAAoB2hB,MAEjEr1C,EAAAA,EAAAA,KAAU,KACR,MAAMq6F,GAAkBj3B,EAAAA,EAAAA,KAAUl1D,IAClB,QAAVA,EAAE6nC,MAAkBgkD,EAAAA,EAAAA,QACtB7rF,EAAE4L,kBACF4mB,EAAAA,EAAAA,IAAgBw4D,IAClB,GAxb6B,KAybA,GAAM,GAErC,OAAOoB,EAAAA,EAAAA,GAAyB,CAAEC,MAAOF,GAAkB,GAC1D,CAACnB,MAEJl5F,EAAAA,EAAAA,KAAU,KACR,MAAM8W,EAAQshB,GAASx2B,QAEvB,SAAS44F,IACP1jF,EAAM40B,MACR,CAMA,OAJI4J,IACFx+B,EAAML,iBAAiB,QAAS+jF,GAG3B,KACL1jF,EAAMH,oBAAoB,QAAS6jF,EAAc,CAClD,GACA,CAACllD,KAEJ,MAAMpO,IAAY/Y,EAAAA,EAAAA,IAAgB,IAAMjwB,QAAQP,GAAYwvB,MAAY,CAACxvB,EAAUwvB,IAE7E3uB,IAAYkC,EAAAA,EAAAA,GAChB,+BACAwmC,IAAa,UACboO,IAAuB,kBAGzB,OACE90C,EAAAA,GAAAC,cAAA,OAAKxC,GAAIA,EAAI0C,QAAS20C,GAAsBG,QAAoBz3C,EAAWkE,IAAKrD,GAAKsD,MAAQ,WAAQnE,GACnGwC,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBgzF,GAC3CK,SAAUA,GACVpzF,QAAUmzF,GAA2Bt4D,QAAiCx9B,EA7G5E,WACM81F,GAA0Bt4D,IAC9BzD,GAAoC,CAAEz6B,UACxC,GA4GMkD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACbgC,EAAAA,GAAAC,cAAA,OACE8E,IAAK6yB,GACLn6B,GAAI84B,GAAmB/f,EAAAA,IACvBxY,UAAWA,GACXswC,gBAAiBglD,GAA0Bt4D,GAC3CqoB,KAAK,UACL3hD,IAAI,OACJwhD,SAAU,EACV/iD,QAASu4F,GACTv1C,SAhKV,SAAsBz1C,GACpB,MAAM,UAAE+J,EAAS,YAAE9C,GAAgBjH,EAAE8zC,cAKrC,GAHAxM,GArUc,SAqULv9B,EAA0B,GAAKA,IAIrCqM,EAAAA,MACInP,IAAgBA,EAAYvU,UAE3B0hC,EAAAA,KAAsBrqB,EAAUd,SAAS,kBAC1Cc,EAAUd,SAAS,gBACxB,CACA,MAAM2kB,EAAY92B,OAAO+2B,eACrBD,IACF1D,GAASx2B,QAAS8pC,OAClB5P,EAAUyT,mBACV5S,EAAAA,EAAAA,GAAqBvE,GAASx2B,SAAU,GAE5C,CACF,EA6IU64F,UArMV,SAAuBvsF,GAErB,MAAM,YAAEwsF,GAAgBxsF,EAElB4F,EAAOqZ,IACb,IAAKutE,IAAgB5mF,IAAS5F,EAAEqqE,SAAWrqE,EAAEsqE,SAAU,CACrD,MAAML,EAA6B,cAAVjqE,EAAE6nC,IAAsB,EAAc,YAAV7nC,EAAE6nC,KAAqB,OAAI/3C,EAChF,GAAIm6E,EAIF,OAHAjqE,EAAE4L,sBAEFm6E,GAAmB,CAAE9b,oBAGzB,CAEKuiB,GAAyB,UAAVxsF,EAAE6nC,KAAoB7nC,EAAEwgF,SAahCgM,GAAyB,YAAVxsF,EAAE6nC,KAAsBjiC,GAAS5F,EAAEqqE,SAAYrqE,EAAEsqE,SAAYtqE,EAAEysF,OAIxFzsF,EAAEoU,OAAO7L,iBAAiB,QAASojF,GAA6B,CAAEe,MAAM,KAHxE1sF,EAAE4L,iBACFk6E,OAbGkB,KAE0B,UAAxBrB,KAAoC3lF,EAAEwgF,UACX,eAAxBmF,KAAyC3lF,EAAEsqE,SAAWtqE,EAAEqqE,YAG9DrqE,EAAE4L,iBAEF66E,KACA3iD,KAQN,EAoKUkE,YArOV,SAAyBhoC,GAcvB,SAAS2sF,EAAuBC,GAC1BA,aAAcV,eAA4B,QAAXU,EAAG/kD,KAA4B,WAAX+kD,EAAG/kD,MAI1DxxC,YAAW,KACTiwF,GAAqB5yF,SAAU,CAAK,GAvUR,KA0U9BoD,OAAO2R,oBAAoB,UAAWkkF,GACtC71F,OAAO2R,oBAAoB,YAAakkF,GAC1C,CAxBiB,IAAb3sF,EAAEQ,OAOF8lF,GAAqB5yF,UAIzB4yF,GAAqB5yF,SAAU,EAe/BgR,SAAS6D,iBAAiB,YAAaokF,GACvCjoF,SAAS6D,iBAAiB,UAAWokF,KA1BhB3sF,EAAE8zC,cAAcj8B,QAAS,2BAA6B7X,EAAEoU,QAEhE7L,iBAAiB,UAAWojF,GAA6B,CAAEe,MAAM,GAyBhF,EAyMU3uE,cAAekpE,EAAAA,GA7IzB,SAAkCjnF,GAC3BqrF,OAILtE,IAA4BD,IAEvBA,GAMHL,MALAzmF,EAAE4L,iBACF5L,EAAEM,kBAEFkrF,MAIJ,OA8HiE17F,EACvD+8F,cAAe5F,EAAAA,GAAa0E,QAA8B77F,EAC1D,aAAYk3C,EACZve,QAASA,GACTC,OAAQA,MAERue,GACA30C,EAAAA,GAAAC,cAAA,QACEjC,WAAWkC,EAAAA,EAAAA,GACT,oBACCozF,IAA2Bt4D,IAAoB,aAElDt5B,IAAI,SAEF4xF,IAA2Bt4D,IACxBh7B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0CACjB42F,GACC50F,EAAAA,GAAAC,cAACu6F,EAAAA,EAAS,CAACpM,QAAS7+C,EAA0BkrD,OAAQjrD,EAAuBkrD,MAAO5F,KAClFpgD,GAGR10C,EAAAA,GAAAC,cAAA,UAAQ8E,IAAK8uF,GAAiB71F,UAAU,kBACxCgC,EAAAA,GAAAC,cAAA,UAAQ8E,IAAK+uF,GAAmB91F,UAAU,kBAC1CgC,EAAAA,GAAAC,cAAA,OAAK8E,IAAKgvF,GAAsB/1F,UAAU,+BAG9CgC,EAAAA,GAAAC,cAAA,OAAK8E,IAAK6uF,GAAkB51F,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBgzF,EAAgB,UACrFlzF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACbgC,EAAAA,GAAAC,cAAA,OAAK8E,IAAK4uF,GAAU31F,WAAWkC,EAAAA,EAAAA,GAAelC,GAAW,SAAU0D,IAAI,gBAGzDlE,IAAjB03B,GACCl1B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,uBAAuB0D,IAAI,QACvCwzB,GAGLl1B,EAAAA,GAAAC,cAACgzF,EAAa,CACZ1vE,OAAQ0wE,GACR0G,eAAgBvG,GAChBE,cAAeA,GACfC,iBAAkBA,GAClB5wE,QAASi1E,KAEVjkD,GAAqB30C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,uBAAsBqR,EAAAA,EAAAA,GAAWslC,IACnE,I,2KClmBV,MAQA,EARuC/yC,IACrC,MAAM,OAAE2hB,GAAW3hB,EACbg5F,GAAa57E,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,cAAeqE,GAGjE,OAAOq3E,EAAa56F,EAAAA,GAAAC,cAAC26F,EAAeh5F,QAAYpE,CAAS,ECqM3D,GAAed,EAAAA,EAAAA,KA7JwBqB,IAyBjC,IAzBkC,OACtCjB,EAAM,SACNqiB,EAAQ,SACR7X,EAAQ,YACRuzB,EAAW,gBACXD,EAAe,kBACfsZ,EAAiB,QACjBje,EAAO,iBACPmI,EAAgB,SAChBkW,EAAQ,kBACRpK,EAAiB,iBACjBlP,EAAgB,mBAChBnC,EAAkB,UAClB76B,EAAS,eACTu0C,EAAc,iBACd8B,EAAmBtM,EAAAA,IAA2B,eAC9C1J,EAAc,gBACdC,EAAe,oBACfsU,EAAmB,gBACnBwB,EAAe,YACfD,EAAW,eACXtB,EAAc,cACdC,EAAa,oBACb3U,EAAmB,gBACnBM,GACD1gC,EACC,MAAM,sBACJ88F,EAAqB,kBACrBC,EAAiB,eACjB7jE,EAAc,qBACdK,IACEl5B,EAAAA,EAAAA,MAGE28F,GAAan6F,EAAAA,EAAAA,IAAuB,OAEnCo6F,EAAoBC,IAA+Bj6F,EAAAA,EAAAA,MACnD0oB,EAAqBwxE,IAA0BxzF,EAAAA,EAAAA,SAAsClK,GAEtF29F,GAA4Bj7F,EAAAA,EAAAA,GAChC,6BACC+1B,GAAW,YACZ+kE,EACK58D,GAAoB,cACpBA,GAAoB,cAGrBg9D,GAA2Bx3F,EAAAA,EAAAA,IAAgB,KAC/Cu6B,MACAM,MACAJ,IACA,MAAMg9D,EAAYN,EAAW35F,QAC7B,IAAKi6F,EAAW,OAChB,MAAM,EAAEnvF,EAAC,EAAEC,GAAMkvF,EAAUztF,wBAC3BstF,EAAuB,CAAEhvF,IAAGC,KAAI,IAG5BmvF,GAAmB13F,EAAAA,EAAAA,IAAiBuY,IAC3B,aAATA,GACF0+E,EAAsB,CAAE1/E,MAAO,KAC/B2/E,EAAkB,CAAE3/E,WAAO3d,MAE3Bs9F,EAAkB,CAAE3/E,MAAO,KAC3B0/E,EAAsB,CAAE1/E,WAAO3d,IACjC,IAGI+9F,GAAuB33F,EAAAA,EAAAA,IAAgB,KAC3C,MAAM43B,EAAeppB,SAASwY,cAC5Bsf,EAAoBsxD,EAAAA,IAAoCnnD,GAGrD/sC,GAAYk0B,IAAiBppB,SAASmE,eAK3CilB,GAAc0P,OACdnnC,YAAW,KACTo6B,MACAE,GAAgB,GAnHgB,MA4GhCA,GAQ+B,IAG7B5T,GAAoB7mB,EAAAA,EAAAA,IAAgB,IAAMm3F,EAAW35F,UACrDspB,GAAiB9mB,EAAAA,EAAAA,IAAgB,IAAMm3F,EAAW35F,SAASmkB,QAAQ,mCACnEoF,GAAiB/mB,EAAAA,EAAAA,IAAgB,IAAMwO,SAASwY,cAAc,kCAC9D6wE,GAAY73F,EAAAA,EAAAA,IAAgB,KAAM,CAAGktF,YAAY,OAEjD,UACJrtE,EAAS,UAAEC,GAAS,iBAAEmH,GAAgB,iBAAEC,GAAkB9mB,MAAO+mB,KAC/DC,EAAAA,EAAAA,GACFtB,EACAe,EACAC,EACAC,EACA8wE,GAGF,OACEz7F,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGvJ,EACCtH,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLxC,UAAWm9F,EACX16F,OAAK,EACLmP,MAAM,cACNzP,QAASi+B,EAAmBE,EAAkBi9D,EAC9C1rF,UAAU,gCAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBACZogC,IAAqB48D,GAAsBh7F,EAAAA,GAAAC,cAACi1C,EAAAA,EAAO,CAACtlC,MAAM,UAG7D5P,EAAAA,GAAAC,cAACgjB,EAAAA,EAAqB,CACpBjlB,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsBk+B,GAAoB,aACpE39B,OAAK,EACLmP,MAAM,cACNsT,WAAYk4E,EACZvrF,UAAU,gCAEV7P,EAAAA,GAAAC,cAAA,OAAK8E,IAAKg2F,EAAY/8F,UAAU,wBAChCgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAIjBgC,EAAAA,GAAAC,cAAC26F,EAAU,CACT99F,OAAQA,EACRqiB,SAAUA,EACVoE,OAAQ6a,GAAoB1gC,QAAQm7B,GACpCgC,YAAaA,EACbD,gBAAiBA,EACjBsZ,kBAAmBA,EACnBI,SAAUA,EACVjwC,OAAQ42F,EACRt3E,QAAS2a,EACTwU,cAAeA,EACfsB,gBAAiBA,EACjBxB,oBAAqBA,EACrBuB,YAAaA,EACbtB,eAAgBA,EAChB6oD,aAAcJ,EACdrkE,eAAgBA,EAChBK,qBAAsBA,EACtB4S,kBAAmBA,EACnBlP,iBAAkBA,EAClBh9B,WAAWkC,EAAAA,EAAAA,GAAelC,EAAWu0C,GAAkB,wBACvD9uB,UAAWymB,EAAoBzmB,OAAYjmB,EAC3CkmB,UAAWwmB,EAAoBxmB,QAAYlmB,EAC3CqtB,iBAAkBqf,EAAoBrf,QAAmBrtB,EACzDstB,iBAAkBof,EAAoBpf,QAAmBttB,EACzDwG,MAAOkmC,EAAoBnf,QAAYvtB,IAExC,G,gFC/LP,MAAMm+F,EAAqB,KACrBC,EAAqB,GACrBC,EAAmB,GACnBC,EAAiB,YAER1lF,eAAe8D,EAC5B6hF,EAAkBr9E,EAAY+yC,GAE9B,MAAMkD,EAAU34C,IAAIggF,gBAAgBt9E,IAC5BvC,KAAMg+B,EAAQ,KAAE75C,GAASoe,EACjC,IAAIu9E,EACAn1F,EACAzE,EACA65F,EAEJ,GAAI95E,EAAAA,IAA8B7e,IAAI42C,GAAW,CAC/C,MAAMgiD,QAAYhlC,EAAAA,EAAAA,IAAaxC,IACzB,MAAEnpD,EAAK,OAAEC,GAAW0wF,EAC1BD,GAAoBE,EAAoB5wF,EAAOC,GAE/C,MAAM4wF,EAAe/xF,KAAK2B,IAAIT,EAAOC,GAAUkwF,EACzCt6C,EAAQlH,IAAamiD,EAAAA,IAE3B,IAAKJ,EAAkB,CACrB,IAAKzqC,GAAS8qC,oBAAsBl7C,IAAUg7C,GAA6B,eAAbliD,GAA4B,CACxF,MAAMqiD,QAAmBC,EAAAA,EAAAA,GACvB9nC,EAAS0nC,EAAeV,EAAqBrxF,KAAK2B,IAAIT,EAAOC,GAAU,EAAG,cAG5E,OADAuQ,IAAI0gF,gBAAgB/nC,GACbz6C,EAAgB6hF,EAAUr9E,EAAM,CACrC69E,kBAAmBC,GAEvB,CAEiB,eAAbriD,IACF4hD,EAAWA,EAASvkF,QAAQskF,EAAgB,SAG9CG,EAAQ,CAAEzwF,QAAOC,SACnB,CAIEpJ,EAF0BiI,KAAK2B,IAAIT,EAAOC,GAAUmwF,QAE7Ba,EAAAA,EAAAA,GACrB9nC,EAASinC,EAAqBtxF,KAAK2B,IAAIT,EAAOC,GAAS,cAGxCkpD,CAErB,MAAO,GAAItyC,EAAAA,IAA8B9e,IAAI42C,GAAW,CACtD,IACE,MAAQwiD,WAAYnxF,EAAOoxF,YAAanxF,EAAM,SAAErC,SAAmByzF,EAAAA,EAAAA,IAAaloC,GAChFunC,GAAoBE,EAAoB5wF,EAAOC,GAC1CywF,IACHD,EAAQ,CAAEzwF,MAAOA,EAAQC,OAAQA,EAASrC,SAAUA,GAExD,CAAE,MAAOsO,GACPwkF,GAAmB,CACrB,CAEA75F,QAAuBy6F,EAAAA,EAAAA,IAAqBnoC,EAC9C,MAAO,GAAInyC,EAAAA,IAA8Bjf,IAAI42C,GAAW,CACtD,MAAM,SACJ/wC,EAAQ,MAAEoF,EAAK,UAAEiB,EAAS,SAAEstF,SCxE3B3mF,eAAkCkX,GACvC,MAAM,aAAE0vE,EAAY,YAAEC,SAAsB,oCACtCC,QAAiBF,EAAa1vE,IAC5B6vE,QAAQ,MAAE3uF,EAAK,OAAE4uF,EAAM,QAAEC,GAAWC,QAAQ,SAAEl0F,IAAe8zF,EAE/DK,EAAQN,EAAYI,GACpBG,EAAYD,EAAQ,IAAI5+E,KAAK,CAAC4+E,EAAMtzF,MAAO,CAAEkS,KAAMohF,EAAMD,cAAY9/F,EAG3E,MAAO,CACLgR,QACAiB,UAAW2tF,EACXh0F,WACA2zF,SANeS,EAAYxhF,IAAIggF,gBAAgBwB,QAAahgG,EAQhE,CD0DcigG,CAAmB9oC,GAC7B7tD,EAAQ,CACNsC,SAAUA,GAAY,EACtBoF,QACAiB,aAEFpN,EAAiB06F,CACnB,CAEA,MAAO,CACLpoC,UACAonC,WACA5hD,WACA75C,OACA27F,QACAn1F,QACAzE,iBACA65F,iBAAkBA,QAAoB1+F,EACtCi4F,SAAW,GAAE74E,KAAKC,SAASvS,KAAKg3D,cAC7B7P,EAEP,CAEO,SAAS7lB,EACdnxB,EAA8BijF,GAE9B,OAAOjjF,EAAYpb,KAAKs+F,GAClBD,EACEC,EAAOpB,kBACF,IACFoB,EACHhpC,QAASgpC,EAAOpB,mBAGboB,EAGF,IACFA,EACHzB,kBAAmByB,EAAO32F,YAAexJ,EACzCmgC,yBAAqBngC,IAG3B,CAEA,SAAS4+F,EAAoB5wF,EAAeC,GAE1C,OADuBnB,KAAK2B,IAAIT,EAAOC,GAAUnB,KAAKC,IAAIiB,EAAOC,IACxCowF,CAC3B,C,kDE9HezlF,eAAemD,EAA8BqkF,GAC1D,MAAMvkF,EAAgB,GAEtB,SAASwkF,EAAwB1lC,EAA+BrsD,GAC9D,OAAO,IAAIiO,SAASwE,IAClB,GAAI45C,aAAiBz1C,KACnBrJ,EAAM7X,KAAK22D,GACX55C,EAAQ45C,QACH,GAAIA,EAAM52C,OAAQ,CACvB,MAAMu8E,EAAWhyF,EAAKiyF,YACrB5lC,EAA8Bl+C,MAAMA,IACnCZ,EAAM7X,KAAKyY,GACXsE,EAAQtE,EAAK,IACZ,KAGG6jF,GACFzkF,EAAM7X,KAAKs8F,GAEbv/E,EAAQu/E,EAAS,GAErB,MAAW3lC,EAAM6lC,aACI7lC,EAAmC8lC,eAC5CC,aAAaC,IACrB,MAAMC,EAAkB,GACxB,IAAK,IAAI78F,EAAI,EAAGA,EAAI48F,EAAQ/9F,OAAQmB,IAClC68F,EAAgB58F,KAAKq8F,EAAwBM,EAAQ58F,GAAIuK,IAE3DyS,EAAQxE,QAAQC,IAAIokF,GAAiB,GAEzC,GAEJ,CAEA,MAAMA,EAAkB,GACxB,IAAK,IAAI78F,EAAI,EAAGA,EAAIq8F,EAAkBx9F,OAAQmB,IAAK,CACjD,MAAMuK,EAAO8xF,EAAkBr8F,GAC/B,GAAkB,SAAduK,EAAKuyF,KAAiB,CACxB,MAAMlmC,EAAQrsD,EAAKwyF,oBAAsBxyF,EAAKiyF,YAC1C5lC,GACFimC,EAAgB58F,KAAKq8F,EAAwB1lC,EAAOrsD,GAExD,CACF,CAIA,aAFMiO,QAAQC,IAAIokF,IAEXp8E,EAAAA,EAAAA,IAAc3I,EACvB,C,mCClDA,MAAMklF,EAAQ,oBACRC,EAAW,mBACXC,EAAgB,oBAChBC,EAAoB,OAEnB,SAASz8D,EAAiB3uB,GAC/B,OAAOA,EACJkE,QAAQgnF,EAAU,KAClBhnF,QAAQ+mF,EAAO,MACf/mF,QAAQinF,EAAe,IACvBjnF,QAAQknF,EAAmB,GAChC,C,kFCAe,SAAS15E,EAAyB3mB,EAAc6P,GAC7D,MAAoB,YAAhBA,EAAOiO,KACF9d,EAAK,kBAGM,QAAhB6P,EAAOiO,MACFwiF,EAAAA,EAAAA,GAAiBzwF,EAAOxN,KAAM,IAAKV,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UAAU,qBAAqBiS,KAAK,WAG/EZ,EAAAA,EAAAA,GAAWnB,EAAOxN,KAC3B,C,mCCrBA,MAAMk+F,EAAsB,EAErB,SAAS/iE,EAAuBF,EAAuBnF,GAC5D,MAAM,wBAAEqoE,GAA4BljE,EACpC,IAAImjE,EAAiCD,EACjCE,EAAa,EACjB,KAAOD,GAAcA,EAAWrhG,KAAO+4B,GAAWuoE,EAAaH,GAC7DE,EAAaA,EAAWE,cACxBD,IAGF,OAAOrhG,QAAQohG,GAAcA,EAAWrhG,KAAO+4B,EACjD,C,gMCSA,MAAMyoE,EAAW,IACXC,EAAmB,IAAIvjF,OAAQ,IAAGomB,EAAAA,EAAalmB,WAAY,KAC3DsjF,EAAuB,IAAIxjF,OAAQ,GAAEC,EAAAA,IAAgBC,UAAW,KAEvD,SAASulB,EACtBG,EACA5U,EACAmL,EACAI,EACAN,EACAhE,GAEA,MAAM,wBAAEwrE,EAAuB,yBAAEC,IAA6BjhG,EAAAA,EAAAA,OAEvDsjC,EAAkBC,EAAoBC,IAAwB5gC,EAAAA,EAAAA,IAAQ,GAEvEs+F,GAA4Bt7D,EAAAA,EAAAA,KAAqB,KACrD,MAAM1wB,EAAOqZ,IACb,IAAK4U,IAAcjuB,IAAS4kB,KAAqBqnE,UAAW,OAG5D,IADiBjsF,EAAK6D,MAAM2qB,EAAAA,GAAqBC,EAAAA,EAAenmB,EAAAA,KACjD,OAEf,MAAM4jF,GAAsBC,EAAAA,EAAAA,IAAuB7nE,EAASx2B,SAE5D,OAAOo+F,EAAoBroF,MAAM2qB,EAAAA,GAAqBo9D,EAAmBC,KAAwB,EAAE,GAClG,CAACxyE,EAASuL,EAAmBN,EAAU2J,GAAY09D,GAEhDS,GAAelyE,EAAAA,EAAAA,GACnB8xE,EAA2B,CAACA,EAA2B3yE,EAASuL,IAAoB,GAGhF/6B,GAAWwwB,EAAAA,EAAAA,IAAgB,IAAMjwB,QAAQgiG,MAAiB,CAACA,IAC3DC,EAAkBjiG,QAAQk2B,GAAcxzB,SAE9CZ,EAAAA,EAAAA,KAAU,KACR,IAAK+hC,IAAcpkC,EAAU,OAE7B,MAAMyiG,EAAYF,IACdE,EACGD,GACHP,EAAwB,CACtB7iE,MAAOuF,EAAAA,GAAqB89D,EAAYA,EAAUzoF,MAAM,kBAAkB,KAI9EkoF,GACF,GACC,CAAC99D,EAAWpkC,EAAUuiG,EAAcC,EAAiBN,EAA0BD,IAElF,MAAMj+D,GAAoBv9B,EAAAA,EAAAA,IAAiB24B,IACzC,MAAMqjE,EAAYF,IAClB,IAAKn+D,IAAcq+D,EAAW,OAE9B,MAAM3tF,EAAU2lB,EAASx2B,QACnBo+F,GAAsBC,EAAAA,EAAAA,IAAuBxtF,GAC7C4tF,EAAY/9D,EAAAA,GACd89D,EAEAA,EAAUpoF,QAAQ,wBAAyB,QACzCsoF,EAAQ,IAAInkF,OAAQ,IAAGkkF,UAAmB,IAE1C7a,EADUwa,EAAoBroF,MAAM2oF,GAAQ,GAC5B1/F,OAASw/F,EAAUx/F,OACnCg7B,EAAUokE,EAAoBhoF,QAAQsoF,GAAOtjE,EAAAA,EAAAA,IAAqBD,GAAOwjE,OAAO/a,IAChFgb,EAAqB/tF,EAAQwF,UAAUX,UAAU0oF,EAAoBp/F,QAE3E03B,EAAS,GAAEsD,IAAU4kE,MAErB9jE,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBlqB,GAAS,GAAM,EAAK,GACzC,IAKJ,OAFAzS,EAAAA,EAAAA,IAAUoiC,EAAsB,CAACA,EAAsBjV,IAEhD,CACLsU,yBAA0BvjC,QAAQP,GAAYwiG,IAAoBj+D,GAClER,wBAAyBS,EACzBR,oBAEJ,C,iOCnEA,IAAI8+D,EACAC,EACAC,EAEAC,EACAC,EACJ,MAAMC,EAAe,GACfC,EAAoB,EAEpBtB,EAAW,IAEXuB,GAA0BhlF,EAAAA,EAAAA,IAiJhC,SAA6Bzc,EAA6B0hG,EAA0BlvF,GAClF,OAAKxS,GAAS0hG,EAAergG,OAItBlB,OAAOC,QAAOuhG,EAAAA,EAAAA,IAAW3hG,EAAM0hG,IAAiBrhG,MAAM,EAAGmS,GAHvD6rB,EAAAA,CAIX,IAtJMujE,GAAqBnlF,EAAAA,EAAAA,IAwJ3B,SACEzc,EACA6wB,EACAC,GAEA,MAAM4lB,EAASv2C,OAAOC,OAAOJ,GAEvB6hG,GAAW17C,EAAAA,EAAAA,IAA4BzP,EAAQ,UAC/CorD,EAAsBjxE,GACxB2yD,EAAAA,EAAAA,IAAU3yD,GAAoBkxE,GACvB5hG,OAAOC,QAAOuhG,EAAAA,EAAAA,IAAWE,EAAUE,MAE1C,CAAC,EACCC,EAAkBlxE,GACpB0yD,EAAAA,EAAAA,IAAU1yD,GAAgBixE,GACnB5hG,OAAOC,QAAOuhG,EAAAA,EAAAA,IAAWE,EAAUE,MAE1C,CAAC,EAECE,EAAY,IAAKH,KAAwBE,GACzC7sE,EAAY,GAAgBxZ,OAAOxb,OAAO8oB,KAAK64E,GAAsB3hG,OAAO8oB,KAAK+4E,IAEjFE,EAASxrD,EAAOv3B,QAAO,CAAChK,EAAQqoB,KACpCA,EAAM2kE,MAAMr1F,SAASoE,IACdiE,EAAOjE,KACViE,EAAOjE,GAAQ,IAGjBiE,EAAOjE,GAAMzO,KAAK+6B,EAAM,IAGnBroB,IACN,CAAC,GAEEgtF,EAAQhiG,OAAO8oB,KAAKi5E,GACpBE,EAAejtE,EAAShW,QAAO,CAACjS,EAAKm1F,IAAY92F,KAAK2B,IAAIA,EAAKm1F,EAAQhhG,SAAS,GAEtF,MAAO,CACL4gG,YACA9sE,WACA+sE,SACAC,QACAC,eAEJ,IAnMME,GAAsB7lF,EAAAA,EAAAA,IAqM5B,SAAyB8lF,EAAkB/hG,EAAgBgS,GACzD,MAAM,UACJyvF,EAAS,SAAE9sE,EAAQ,OAAE+sE,EAAM,MAAEC,EAAK,aAAEC,GAClCG,EAEJ,IAAIC,EAAmB,GAEvB,GAAIhiG,EAAOa,OAAS+gG,EAClB,OAAO/jE,EAAAA,EAGT,MAAMokE,EAAkBttE,EAAS30B,QAAQ6hG,GAAYA,EAAQn9D,WAAW1kC,KAAS+8D,OACjFilC,EAAUA,EAAQ7mF,OAAOxb,OAAOC,QAAOuhG,EAAAA,EAAAA,IAAWM,EAAYQ,IAAkBC,QAGhF,MAAMC,EAAeR,EAAM3hG,QAAQ0Q,GAASA,EAAKg0B,WAAW1kC,KAK5D,OAJAgiG,EAAUA,EAAQ7mF,OAAOxb,OAAOC,QAAOuhG,EAAAA,EAAAA,IAAWO,EAAQS,IAAeD,QAEzEF,GAAUI,EAAAA,EAAAA,IAAOJ,GAEZA,EAAQnhG,OAINmhG,EAAQniG,MAAM,EAAGmS,GAHf6rB,EAAAA,CAIX,IA5NA,IACEgjE,EAAkB,wCAClBC,EAAoB,SACtB,CAAE,MAAO3yF,GAEP0yF,EAAkB,yCAClBC,EAAoB,aACtB,CAEe,SAASr/D,EACtBO,EACA5U,EACAmL,GAKA,IAJAtB,EAAO1sB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG0M,EAAAA,IACViqF,EAAwB32F,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EACxBoyB,EAA4C9lB,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAC5CqyB,EAAwC/lB,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAExC,MAAOkkC,EAAkBC,EAAoBC,IAAwB5gC,EAAAA,EAAAA,IAAQ,IAEtEjC,EAAM6iG,IAAWl6F,EAAAA,EAAAA,OACjBm5B,EAAgBghE,IAAqBn6F,EAAAA,EAAAA,IAAkB01B,EAAAA,IACvD0D,EAAsBghE,IAA2Bp6F,EAAAA,EAAAA,IAAuB01B,EAAAA,IAG/E59B,EAAAA,EAAAA,KAAU,KAGR,SAAS64F,IACPuJ,EAAQzB,EAAU1qD,OACpB,CAJKlU,IAMD4+D,EACF9H,IAiGNjiF,iBAQE,OAPK6pF,IACHA,EAAmB,oCACnBC,SAAsBD,GAAkBzjF,QAExC2jF,GAAY4B,EAAAA,EAAAA,IAAgB7B,IAGvBD,CACT,CAxGM+B,GAAkB5qC,KAAKihC,GACzB,GACC,CAAC92D,IAEJ,MAAM0gE,GAA2Bj+D,EAAAA,EAAAA,KAAqB,KACpD,MAAM1wB,EAAOqZ,IACb,OAAO4U,GAAajuB,EAAKqD,SAAS,MAAOsrB,EAAAA,EAAAA,GAAiB3uB,GAAM6D,MAAMipF,KAAmB,GAAGl7D,YAAS1nC,CAAS,GAC7G,CAACmvB,EAAS4U,GAAY09D,GAEnBiD,GAAe10E,EAAAA,EAAAA,GACnBy0E,EAA0B,CAACA,EAA0Bt1E,IAAU,GAG3Dw1E,GAAiBv+F,EAAAA,EAAAA,IAAiB6xC,IAGtC,GAFAosD,EAAkBpsD,GAEdA,IAAWrY,EAAAA,EAEb,YADA0kE,EAAwB1kE,EAAAA,GAI1B,MAAMglE,EAAe3sD,EAAOp2C,KAAKk9B,GAAUA,EAAM8lE,SAC3CzuE,GAAe0uE,EAAAA,EAAAA,KACnBC,EAAAA,EAAAA,MAA2B1jG,EAAAA,EAAAA,MAAaujG,GACxC,MAEFN,EAAwBluE,EAAa,IAGjCmN,GAAcn9B,EAAAA,EAAAA,IAAgB,SAAC24B,GAAgD,IAApBimE,EAAO14F,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACtE,MAAMwJ,EAAOqZ,IACb,IAAKrZ,EAAM,OAEX,MAAMmvF,EAAUnvF,EAAKovF,YAAY,IAAKF,EAAUlvF,EAAKovF,YAAY,KAAO,OAAIllG,GAE5E,IAAiB,IAAbilG,EAAgB,CAClB,MAAME,EAA6B,iBAAVpmE,GAAqBltB,EAAAA,EAAAA,GAAWktB,EAAO,CAAC,gBAAiBC,EAAAA,EAAAA,IAAqBD,GACvGzE,EAAS,GAAExkB,EAAKwD,UAAU,EAAG2rF,KAAWE,KAExC,MAAMnnE,EAAehF,IAAYhgB,EAAAA,IAC7BpE,SAASwY,cAA8Bmd,EAAAA,KACvC31B,SAASqpB,eAAejF,IAE5B0F,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBX,GAAc,GAAM,EAAK,GAElD,CAEA2mE,EAAe/kE,EAAAA,EACjB,IAqCA,OAnCA59B,EAAAA,EAAAA,KAAU,KACR,MAAMojG,EAAYV,IAClB,IAAKU,IAAc7jG,EAEjB,YADAojG,EAAe/kE,EAAAA,GAIjB,MAAMylE,EAAsBD,EAAUxiG,OAAS,GAAKwiG,EAAU5hC,SAAS,KAEjEzhE,EAASqjG,EAAU9rF,UAAU,EAAG+rF,EAAsB,EAAID,EAAUxiG,OAAS,OAAI5C,GACvF,IAAI+jG,EAAmBnkE,EAAAA,EAEvB,GAAK79B,GAEE,GAAuB,IAAlBA,EAAOa,QAAgBigG,EAAkByC,KAAKvjG,IAAYA,EAAOa,QAAUmgG,EAAmB,CACxG,MAAMe,EAAUX,EAAmB5hG,EAAM6wB,EAAmBC,GAC5D0xE,EAAUF,EAAoBC,EAAS/hG,EAAOkc,cAAe6kF,EAC/D,OAJEiB,EAAUf,EAAwBzhG,EAAM0hG,EAAgBH,GAMrDiB,EAAQnhG,OAKTyiG,EACF9hE,EAAYwgE,EAAQ,GAAGc,QAAQ,GAE/BF,EAAeZ,GAPfY,EAAe/kE,EAAAA,EAQjB,GACC,CACDxN,EAAmB7wB,EAAMmjG,EAAcryE,EAAekR,EAAa0/D,EAAgB0B,KAGrF3iG,EAAAA,EAAAA,IAAUoiC,EAAsB,CAACA,EAAsBjV,IAEhD,CACLgU,mBAAoBjjC,QAAQmjC,EAAezgC,QAAU0gC,EAAqB1gC,UAAYshC,EACtFd,kBAAmBe,EACnBd,iBACAC,uBACAC,cAEJ,C,qLC7JA,MAAMk+D,EAAW,IAEjB,IAAI8D,EACJ,IACEA,EAAqB,iCACvB,CAAE,MAAOr1F,GAEPq1F,EAAqB,6BACvB,CAEe,SAASrgE,EACtBnB,EACA5U,EACAmL,EACAI,EACAN,EACA8B,EACA7F,EACA5D,GAEA,MAAOkjB,EAAe6vD,IAAoBt7F,EAAAA,EAAAA,OACnCg6B,EAAkBC,EAAoBC,IAAwB5gC,EAAAA,EAAAA,IAAQ,GAEvEiiG,GAA8Bj/D,EAAAA,EAAAA,KAAqB,KACvD,MAAM1wB,EAAOqZ,IACb,IAAK4U,IAAcrJ,KAAqBqnE,YAAcjsF,EAAKqD,SAAS,KAAM,OAE1E,MAAM6oF,GAAsBC,EAAAA,EAAAA,IAAuB7nE,EAASx2B,SAE5D,OAAO6gC,EAAAA,EAAAA,GAAiBu9D,GAAqBroF,MAAM4rF,KAAsB,GAAG79D,MAAM,GACjF,CAAC3D,EAAW5U,EAASuL,EAAmBN,GAAWqnE,GAEhDiE,GAAiB11E,EAAAA,EAAAA,GACrBy1E,EAA6B,CAACA,EAA6Bt2E,EAASuL,IAAoB,GAGpFirE,GAAoB31E,EAAAA,EAAAA,IAAiB,IAClC+T,GAAa5U,IAAUsX,WAAW,MACxC,CAACtX,EAAS4U,KAEb/hC,EAAAA,EAAAA,KAAU,KACR,MAAM4jG,EAAcF,IAEpB,IAAKE,IAAiB1pE,IAAoB7F,EAExC,YADAmvE,OAAiBxlG,GAKnB,MAAMoB,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,IAAKH,EAEH,YADAokG,OAAiBxlG,GAInB,MAAM6lG,EAAY3pE,GAAkBxb,QAAO,CAACC,EAAemlF,KACrDA,EAAO5rD,SAAWznB,GACpB9R,EAAI3c,KAAK8hG,EAAO5rD,QAGXv5B,IACN,IAEG5e,EAAS6jG,EAAYtsF,UAAU,GAC/BysF,GAAcC,EAAAA,EAAAA,KAAkB7B,EAAAA,EAAAA,IAAO,IACtCwB,KAAuBtvE,GAAoB,MAC5CwvE,GAAa,KACfzkG,EAAWW,GAEfyjG,EAAiB9jG,OAAOC,QAAOuhG,EAAAA,EAAAA,IAAW9hG,EAAW2kG,IAAc,GAClE,CAACtzE,EAAeyJ,EAAkB7F,EAAiBqvE,EAAgBC,IAEtE,MAAM3gE,GAAgB5+B,EAAAA,EAAAA,IAAgB,SAACwtB,GAAsC,IAAvBqyE,EAAU35F,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAC9D,IAAKsnB,EAAKozC,aAAc7tB,EAAAA,EAAAA,IAAuBvlB,GAC7C,OAGF,MAAMitB,GAAeC,EAAAA,EAAAA,IAAgBltB,GAC/BsyE,GAAsB/sD,EAAAA,EAAAA,IAAuBvlB,IAAS,GACtDuyE,EAAetlD,EAChB,IAAGA,IACH,uEAEqBvlC,EAAAA,GAAsBC,yCAC1BqY,EAAK3zB,0EAGpBimG,QAEDzxF,EAAU2lB,EAASx2B,QAEnBwiG,EAA2BC,GADLpE,EAAAA,EAAAA,IAAuBxtF,IAE7CwwF,EAAUmB,EAAyBlB,YAAY,KAC/CoB,GAAsBzlD,EAAeA,EAAaj+C,OAAS,EAAIsjG,EAAoBtjG,SACpFwjG,EAAyBxjG,OAASqiG,GAEvC,IAAiB,IAAbA,EAAgB,CAClB,MAAMrnE,EAAW,GAAEwoE,EAAyBG,OAAO,EAAGtB,KAAWkB,UAC3D3D,EAAqB6D,EAAoB5xF,EAAQwF,WAAWX,UAAU8sF,EAAyBxjG,QAC/F4jG,GAAgBC,EAAAA,EAAAA,IAAiBhyF,GACvC6lB,EAAS,GAAEsD,IAAU4kE,MAErB9jE,EAAAA,EAAAA,KAAoB,KAClB,MAAMgoE,EAAmBF,EAAgBF,EAAqB,GAC9D3nE,EAAAA,EAAAA,GAAqBlqB,EAASwxF,GAC1BS,GAAoB,IACtBC,EAAAA,EAAAA,IAAiBlyF,EAASiyF,EAC5B,GAEJ,CAEAlB,OAAiBxlG,EACnB,IAIA,OAFAgC,EAAAA,EAAAA,IAAUoiC,EAAsB,CAACA,EAAsBjV,IAEhD,CACL2V,qBAAsB5kC,QAAQy1C,GAAe/yC,SAAWshC,GACxDa,oBAAqBZ,EACrBa,gBACAC,qBAAsB0Q,EAE1B,CAIA,SAAS0wD,EAAoBvwF,GAC3B,OAAOA,EAAKkE,QAAQ,kCAAmC,OACzD,C,8LCnJA,MCkHA,GAAe9a,EAAAA,EAAAA,KAtFf,SAAkBqB,GAEL,IAFM,MACjB4zB,EAAK,UAAEs1C,EAAS,YAAEvmB,EAAW,YAAE0jD,GACtBrmG,EACT,MAAM,gBAAEsmG,EAAe,qBAAEC,EAAoB,iBAAEtuF,IAAqB5X,EAAAA,EAAAA,MAE9DC,GAAOC,EAAAA,EAAAA,MACP,SAAEgJ,IAAaC,EAAAA,EAAAA,MACfg9F,EAAY5yE,GAAS,cAAeA,EACpC/zB,EAAW+zB,GAAS,YAAaA,EACjC1qB,EAAQrJ,EAAW+zB,EAAM9qB,QAAQI,WAAQzJ,EACzCgnG,EAAY5mG,GAAW6mG,EAAAA,EAAAA,IAAkB9yE,QAASn0B,EAClD6mF,GAAa/hF,EAAAA,EAAAA,GAASkiG,GACtBtiG,EAAYtE,EAAYqJ,EAAQA,EAAM/E,WAAWC,QAAUwvB,EAAM9qB,QAAQinB,OAAO5rB,WAAWC,aAAW3E,EACtGm4F,GAAW71F,EAAAA,EAAAA,GAAiBukF,GAAY,IACxC,aAAE3kF,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkBlC,QAAQi4F,IACnE+O,GAAuBtpD,EAAAA,EAAAA,GAC3Bl5C,EACAqiG,IAAct9B,EACd3/D,IAAa+zC,EAAAA,IAGTvsC,GAAgB5O,EAAAA,EAAAA,GDjDD,WCmDnB,gBACEkkG,GAAeG,IDpD+F,WCqDhHA,GDrDqI,WCsDrIt9B,GDtDwC,aCyD1CznE,EAAAA,EAAAA,KAAU,MACJmyB,GAAW/zB,GAAY2mG,GACzBD,EAAqB,CAAEx6D,OAAQnY,EAAMmY,OAAQ66D,SAAU,CAAChzE,EAAMl0B,KAChE,GACC,CAACk0B,EAAO4yE,EAAW3mG,IAEtB,MAAMy8C,GAAcz2C,EAAAA,EAAAA,IAAgB,KAC9B2gG,EACFvuF,EAAiB,CACf7Q,QAAS9G,EAAK,mBAKlBgmG,EAAgB,CACdv6D,OAAQnY,EAAOmY,OACfvb,QAASoD,EAAOl0B,GAChBmnG,cAAc,EACdC,eAAe,GACf,IAGJ,OACE7kG,EAAAA,GAAAC,cAAA,OACEjC,UAAW8Q,EACX3O,QAASikG,EAAc/pD,OAAc78C,IAEnC+mG,GAAat9B,GACbjnE,EAAAA,GAAAC,cAAA,UAAQ8E,IAAK2/F,EAAsB1mG,UAAU,2CAE9C0B,GACCM,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,OACEiE,IAAKyxF,EACL98E,IAAI,GACJ7a,WAAWkC,EAAAA,EAAAA,GD5FiE,WC4FpC+mE,GD5FiB,WC4FgBtnE,GACzEyE,WAAW,IAEZxG,GAAYoC,EAAAA,GAAAC,cAAC6kG,EAAAA,EAAgB,CAACnzE,MAAOA,EAAO3zB,UAAW2B,KAG3D4kG,GACCvkG,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GDpG0I,WCoGvG,2BAA4B,mBAC5E7B,EAAK,yBAGTX,QAAQuJ,GAAOmC,WACdpJ,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,2BACZwR,EAAAA,EAAAA,IAAoBvI,EAAOmC,WAG/Bs3C,GAAe1gD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAGtC,G,wECxGA,MAQA,EARiD4D,IAC/C,MAAM,OAAE2hB,GAAW3hB,EACbynF,GAAuBrqE,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,wBAAyBqE,GAGrF,OAAO8lE,EAAuBrpF,EAAAA,GAAAC,cAACopF,EAAyBznF,QAAYpE,CAAS,C,uPC6C/E,MAqLA,EArL4BO,IAoBtB,IApBuB,GAC3BN,EAAE,QACF0H,EAAO,oBACP+yC,EAAmB,UACnB1yC,EAAS,YACT4yC,EAAW,eACX2sD,EAAc,WACdr/F,EAAU,eACVL,EAAc,YACd2/F,EAAW,KACX1kG,EAAO,SAAQ,WACf2kG,EAAU,YACVC,EAAW,eACXn1F,EAAc,qBACdo1F,EAAoB,cACpBx/F,EAAa,YACb+6C,EAAW,MACXx7C,EAAK,QACL/E,EAAO,eACPoG,GACDxI,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7BktB,GAAS3M,EAAAA,EAAAA,IAAgBhc,KAAYic,EAAAA,EAAAA,IAAuBjc,GAC5D40C,EAAejsB,EAAM6mC,QAErBvb,GAAiBC,EAAAA,EAAAA,IAAkBt0C,EAAKmzC,IAExC,SAAE5wC,IAAaC,EAAAA,EAAAA,OACdiyC,EAAeC,IAAoB/xC,EAAAA,EAAAA,IAAS0wC,GAC7CzwC,EAAa6xC,GAAiBJ,GAC9B,UACJ/wC,EAAS,aAAEE,IACTE,EAAAA,EAAAA,IAAyBZ,EAAAA,EAAAA,IAAoB1C,EAAS7E,IAAQqH,GAC5D6jD,EAAgBzR,GAAgB1xC,EAEhC+8F,EAAwB1nG,QAAQsnG,IAC/B/pD,IAAavzC,EAAAA,EAAAA,KAAU8jD,GACxBtQ,EAAUx9C,QAAQ8tD,GAClBrQ,GAAWkqD,EAAAA,EAAAA,GAAwBlgG,EAAS+1C,GAC5CwpD,IAAuBW,EAAAA,EAAAA,GAAwBlgG,GAAUigG,GACzDliG,IAAkBC,EAAAA,EAAAA,IAAoB+3C,GACtCj5C,IAAe63C,EAAAA,EAAAA,IAA4B30C,IAE1C27C,GAAgBwkD,GAAavkD,KAAe//C,EAAAA,EAAAA,GAAQ8sB,EAAM2P,YAEjEj+B,EAAAA,EAAAA,KAAU,KACJsuB,EAAM2P,UACR6nE,KAEAvkD,IACF,GACC,CAACjzB,EAAM2P,YAEV,MACEl1B,aAAcC,KACZC,EAAAA,EAAAA,IACFZ,EAAAA,EAAAA,IAAoB1C,EAAS,aAAcQ,GAAe2C,EAAAA,EAAAA,IAAsBnD,EAAS,cAGrF,YACJ4H,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACF/H,EACAE,IAAmBM,EAAgB6C,GAAmBD,GACtDZ,IAAe6jD,OACIhuD,IAAnB6H,GAEIkgG,IAAiD,KAA/BjtE,EAAAA,EAAAA,GAAYkhB,IAGlC95C,aAAcyN,GACdxN,qBAAsByN,KACpBxN,EAAAA,EAAAA,GAAkBoN,QAAgBxP,EAAW+nG,GAAiB,SAEhE7lG,aAAc8lG,GACd7lG,qBAAsB8lG,KACpB7lG,EAAAA,EAAAA,IAAmB4rD,IAAkBhS,GAEnCa,IAAcz2C,EAAAA,EAAAA,IAAgB,KAC9BmJ,GACFxG,IAAiBpB,GAIdqmD,EAKD1K,GACFC,KAIF5gD,IAAUgF,EAAQ1H,IAThBg8C,GAAkBisD,IAAeA,GASd,IAGjBh8F,IAAQC,EAAAA,EAAAA,IAAaxE,IAC3BohC,EAAAA,EAAAA,IAA4BjnC,IAAgC,IAA9BqmG,GAAyBrmG,EACrD,IAAK6lG,EAIH,YAHIQ,GACF5gG,EAAI3D,QAASmkB,QAAwBqgF,EAAAA,KAA2B1tF,gBAAgB2tF,EAAAA,MAKpF,MAAMC,EAAY/gG,EAAI3D,QAASmkB,QAAwBqgF,EAAAA,KACnDp6C,GACFu6C,EAAAA,EAAAA,GAAoBv6C,EAAe9hD,GAAOhE,EAAYR,GAAOkyD,MAAM4uC,KACjE9lE,EAAAA,EAAAA,KAAgB,KACd4lE,EAAU9hG,MAAMwhB,YAAY,gBAAiBwgF,GAC7CF,EAAUntF,aAAaktF,EAAAA,IAA2B,GAAG,GACrD,IAGJC,EAAUzzF,UAAUxO,IAAI,qBAC1B,GACC,CAACshG,EAAsB35C,EAAe9hD,GAAOq7F,EAAgBr/F,EAAYR,IAE5E,MAAM,MAAEsG,GAAK,OAAEC,GAAM,QAAEw6F,IAAYhB,IAAciB,EAAAA,EAAAA,IAAyB/gG,EAAS+/F,EAAa1/F,EAAW8B,GAErGtJ,IAAYkC,EAAAA,EAAAA,GAChB,eACC6M,KAAgBgD,GAAkB,cACnCk2F,IAAW,cACXz6F,KAAUC,IAAU,eACpBA,GAAS06F,EAAAA,IAAoB,kBAGzBC,GAAkBnB,EAAc,WAAUz5F,eAAkBy5F,EAAW/4F,aAAa+4F,EAAW94F,OAAS,GACxGnI,GAAiB,WAAT1D,EAAqB,WAAUmL,QAAY26F,UAAoB5oG,EAE7E,OACEwC,EAAAA,GAAAC,cAAA,OACExC,GAAIA,EACJsH,IAAKA,EACL/G,UAAWA,GACXgG,MAAOA,GACP7D,QAAS4M,QAAcvP,EAAY68C,IAElC+qD,GACCplG,EAAAA,GAAAC,cAAA,UAAQ8E,IAAK2/F,GAAsB1mG,UAAU,2CAE/CgC,EAAAA,GAAAC,cAAA,OACEiE,IAAKsnD,EACLxtD,WAAWkC,EAAAA,EAAAA,GAAe,aAAcklG,GAAyB,mBACjEvsF,IAAI,GACJ7U,MAAOghG,EAAe,UAASA,WAAkBxnG,EACjD4G,WAAYs8C,IAEbzF,GACCj7C,EAAAA,GAAAC,cAAA,UACE8E,IAAKo2C,EACLn9C,WAAWkC,EAAAA,EAAAA,GAAe,aAAcg7C,GAAW,oBAAqBh4C,MAG3Ew9C,GAAe1gD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAC/BmP,KAAwBq4F,IACvBxlG,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,iBAAgBoP,MAC/BpN,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CAAChF,SAAU4B,GAAkB9M,QAAS4M,GAAcstC,QAAc78C,KAGrFgoG,IACIxlG,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQ,gBAAiBulG,MAC3DzlG,EAAAA,GAAAC,cAACkhD,EAAAA,EAAY,CACXC,UAAWN,GACXQ,eAAa,EACbr/C,aAAcA,GACduJ,MAAOA,GACPC,OAAQA,GACRzN,UAAU,kBAEXgP,IACChN,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,6BAA6BsM,KAAK7J,MAAyB,IAAnBwM,IAAwB,KAE9E,C,mSCxLV,MAAMo5F,EAAkBC,EAAAA,GAA4B,EAE9CC,EAA+D,GAArCF,EADR,GACiD/7F,KAAKk8F,GAG9E,IAAIC,EAEJ,MAkPA,EAlPiC1oG,IAS3B,IAT4B,QAChCoH,EAAO,UACPnH,EAAS,YACTo6C,EAAW,cACXzyC,EAAa,OACbL,EAAM,oBACN4yC,EAAmB,OACnBwuD,EAAM,YACNpgG,GACDvI,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7B+lG,GAAY/lG,EAAAA,EAAAA,IAAyB,MAErCgmG,GAAYhmG,EAAAA,EAAAA,IAAyB,MAErCqG,EAAQ9B,EAAQ0B,QAAQI,OAExB,2BAAER,EAA0B,sBAAEG,IAA0BxI,EAAAA,EAAAA,MAExDg7C,GAAiBC,EAAAA,EAAAA,IAAkBt0C,EAAKmzC,IAEvCsB,EAAeC,IAAoB/xC,EAAAA,EAAAA,IAAS0wC,GAC7CzwC,EAAajK,QAAQ87C,GAAiBJ,IACtC,UAAE/wC,EAAS,aAAEE,IAAiBE,EAAAA,EAAAA,IAClCZ,EAAAA,EAAAA,IAAoB1C,EAAS,WAC5BwC,GACDW,EAAAA,EAAAA,IAAsBnD,EAAS,YAGzBoD,aAAcC,IAAqBC,EAAAA,EAAAA,IACzCZ,EAAAA,EAAAA,IAAoB1C,EAAS,aAC5BQ,EACDnD,EAAAA,GAAeC,UAGVokG,EAAeC,IAAmB9lG,EAAAA,EAAAA,KACnC+G,GAASC,EAAAA,EAAAA,IAAc7C,GACvB8C,EAA8B,iBAAX3C,EACnByhG,EAAsBh/F,IAAWE,EAEjCizC,GADWx9C,SAAQo8C,EAAAA,EAAAA,IAA4B30C,KACxB0hG,GAAiBE,EACxC5rD,IAAWkqD,EAAAA,EAAAA,GAAwBlgG,EAAS+1C,GAC5Ch4C,IAAkBC,EAAAA,EAAAA,IAAoB+3C,GACtCj5C,IAAe63C,EAAAA,EAAAA,IAA4B30C,GAC3C6H,GAAkBwsC,IAAkBqtD,GAAkBlhG,EACtD4/F,IAAiD,KAA/BjtE,EAAAA,EAAAA,GAAYkhB,IAGlC95C,aAAc47C,GACd37C,qBAAsByN,KACpBxN,EAAAA,EAAAA,GAAkBoN,QAAgBxP,EAAW+nG,KAE1C/9F,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,IAExCs/F,GAAaC,KAAelvE,EAAAA,EAAAA,IAAU,GACvCmvE,IAAuBC,EAAAA,EAAAA,IAAmBH,GA7DxB,KA+DxBxnG,EAAAA,EAAAA,KAAU,KACR,IAAKgI,GACH,OAGF,MAAM4/F,EAAWT,EAAUvlG,QAC3B6lG,GAAYG,EAASt7C,YAAcs7C,EAASh+F,SAAS,GACpD,CAAC69F,GAAaz/F,GAAa0/F,MAE9B/7F,EAAAA,EAAAA,KAAgB,KACd,IAAK3D,KAAgBo/F,EAAUxlG,QAC7B,OAGF,MAAMimG,EAAmBd,EAAyBW,KAAyBX,EAC3EK,EAAUxlG,QAAQuX,aAAa,oBAAqB0uF,EAAiB/8D,WAAW,GAC/E,CAAC9iC,GAAa0/F,KAEjB,MAAMI,GAAa5pG,QAAQ2K,GAAa+wC,GAElCmuD,IAAc3jG,EAAAA,EAAAA,IAAgB,KAC7B+iG,EAAUvlG,UAIfqG,IAAe,GACfw/F,GAAY,IACZpU,EAAAA,EAAAA,GAAS8T,EAAUvlG,SAAQ,IAGvBomG,IAAiB5jG,EAAAA,EAAAA,IAAgB,KACrC6iG,MACAA,EAAec,EAAW,IAGtBE,IAAgB7jG,EAAAA,EAAAA,IAAgB,KACpC,MAAMwjG,EAAWT,EAAUvlG,QACvBoG,GACE4/F,EAASxU,SACXC,EAAAA,EAAAA,GAASuU,IACTM,EAAAA,EAAAA,OAEAN,EAAStoF,SAGX0oF,KAEAJ,EAAStoF,QACTsoF,EAASt7C,YAAc,GACvB+mC,EAAAA,EAAAA,GAASuU,IACTM,EAAAA,EAAAA,MACAjgG,IAAe,GACjB,KAGFjI,EAAAA,EAAAA,KAAU,KACHyI,GAGLw/F,IAAe,GACd,CAACx/F,IAEJ,MAAMoyC,IAAcz2C,EAAAA,EAAAA,IAAgB,KAClC,GAAKyE,EAAL,CAMA,IAAI1C,EAKJ,OAAIoC,IAAWE,GACbrB,EAAsB,CAAEzB,iBACxBmB,YAIFmhG,KAVEhhG,EAA2B,CAAEtB,WAH/B,MAHEs0C,GAAkBisD,IAAeA,GAgBpB,IAGXiC,IAAmB/jG,EAAAA,EAAAA,IAAiB8J,IACxC,MAAM05F,EAAW15F,EAAE8zC,cACnBylD,GAAYG,EAASt7C,YAAcs7C,EAASh+F,SAAS,IAoBvD,OACEpJ,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACL/G,WAAWkC,EAAAA,EAAAA,GAAe,aAAc,cAAe+H,GAAoB,kBAAmBjK,GAC9FmC,QAASk6C,IAERhyC,GACCrI,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,iBACZ+oG,GACC/mG,EAAAA,GAAAC,cAACkhD,EAAAA,EAAY,CACXC,WAAS,EACTn/C,aAAcA,GACduJ,MAAO86F,EAAAA,GACP76F,OAAQ66F,EAAAA,GACRtoG,UAAU,kBAGdgC,EAAAA,GAAAC,cAAC+rD,EAAAA,EAAc,CACbC,QAASq7C,GACTviG,IAAK4hG,EACLziG,IAAKmE,EACLrK,UAAU,aACVwN,MAAO86F,EAAAA,GACP76F,OAAQ66F,EAAAA,GACRpgG,UAAW6gG,EACX56C,yBAAuB,EACvBD,OAAQ1kD,GACR4kD,MAAO5kD,GACP6kD,aAAW,EACXu7C,YAAU,EACV9/B,QAAStgE,GAAck/F,GAAUa,QAAc/pG,EAC/CqqG,aAAcrgG,GAAcmgG,QAAmBnqG,EAC/C8uD,QAASw6C,MAIbC,GACA/mG,EAAAA,GAAAC,cAAA,UACE8E,IAAKo2C,GACLn9C,WAAWkC,EAAAA,EAAAA,GAAe,YAAa,oBAAqBgD,IAC5Dc,MAAQ,UAASsiG,EAAAA,iBAAwCA,EAAAA,SAG7DtmG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACZwJ,IACCxH,EAAAA,GAAAC,cAAA,OAAKuL,MAAO86F,EAAAA,GAA2B76F,OAAQ66F,EAAAA,IAC7CtmG,EAAAA,GAAAC,cAAA,UACE8E,IAAK6hG,EACLkB,GAAIzB,EACJ0B,GAAI1B,EACJp9B,EAAGo9B,EA5NO,EA6NVroG,UAAU,kBACVwgF,UAAY,eAAc6nB,MAAoBA,KAC9C,mBAAkBE,EAClB,oBAAmBA,MAK1BjrD,IACCt7C,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,iBAAgBoP,MAC/BpN,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CAAChF,SAAU1F,EAAgB6C,EAAmBD,KAGjEw+F,IAAwBzrD,IA/EzBt7C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLoP,MAAM,OACNnP,OAAK,EACLH,KAAK,UACLtC,UAAU,OACV+R,gBAAc,GAEd/P,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,UAEbjQ,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,gBAsEX5H,IAAcmxC,GACdx5C,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,wBAEbiK,GACAjI,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZwJ,IAAcgI,EAAAA,EAAAA,IAAoBm3F,EAAUvlG,QAAS0qD,cAAet8C,EAAAA,EAAAA,IAAoBvI,EAAMmC,YAC5F5B,IAAem/F,EAAUvlG,QAASwxF,SAAW5yF,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,WAG3D,C,wRChPV,MA2NA,EA3N4BlS,IAgBtB,IAhBuB,GAC3BN,EAAE,QACF0H,EAAO,8BACPouD,EAA6B,8BAC7BhD,EAA6B,UAC7B/qD,EAAS,YACT4yC,EAAW,YACX4vD,EAAW,eACX3iG,EAAc,YACd2/F,EAAW,WACXC,EAAU,YACVC,EAAW,cACXv/F,EAAa,YACb+6C,EAAW,QACXvgD,EAAO,eACPoG,GACDxI,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7B4pD,GAAW5pD,EAAAA,EAAAA,IAAyB,MAEpCqG,GAASoa,EAAAA,EAAAA,IAAgBlc,KAAYmc,EAAAA,EAAAA,IAAuBnc,GAC5D40C,EAAe9yC,EAAM0tD,SAEpB7T,EAAgBwkD,EAAavkD,IAAe//C,EAAAA,EAAAA,GAAQiG,EAAMw2B,YAEjEj+B,EAAAA,EAAAA,KAAU,KACJyH,EAAMw2B,UACR6nE,IAEAvkD,GACF,GACC,CAAC95C,EAAMw2B,YAEV,MAAMwqE,GAA2B5uD,EAAAA,EAAAA,IAAkBt0C,EAAKwuD,GAClD20C,GACJ7uD,EAAAA,EAAAA,IAAkBt0C,EAAKwrD,IACpB03C,EAECE,GAAoBvnG,EAAAA,EAAAA,IAAOqnG,GAC7BC,IAA6BC,EAAkB/mG,UACjD+mG,EAAkB/mG,SAAU,GAG9B,MAAM,SAAEkG,IAAaC,EAAAA,EAAAA,OACdiyC,EAAeC,IAAoB/xC,EAAAA,EAAAA,IAAS0wC,GAC7CzwC,EAAajK,QAAQ87C,GAAiByuD,IACrCG,EAAeC,IAAoB3gG,EAAAA,EAAAA,IAAShK,QAAQsqG,IAAgBlnD,IAErEwnD,IAAgBzgG,EAAAA,EAAAA,IAAoB1C,EAAS,WAC5CojG,KAAwB7gG,EAAAA,EAAAA,IAAShK,QAAQ4qG,IAAiBj6C,EAAAA,GAA0Bi6C,OACrF,UAAEjgG,GAAS,aAAEE,KAAiBE,EAAAA,EAAAA,GAClC6/F,IAAgB3gG,GAAYW,EAAAA,EAAAA,IAAsBnD,EAAS,WAEvDqmD,GAAgBzR,GAAgB1xC,IAC/Bw+F,GAAeC,KAAmB9lG,EAAAA,EAAAA,KAEnCiB,IAAe63C,EAAAA,EAAAA,IAA4B30C,GAC3CqjG,GAAW9qG,QAAQuE,IACnBmjG,GAAwB1nG,QAAQsnG,GAEhCluC,IAAmBjvD,EAAAA,EAAAA,IAAoB1C,EAAS,YAC/CsjG,KAAsB/gG,EAAAA,EAAAA,IAAShK,QAAQo5D,IAAoBzI,EAAAA,GAA0ByI,MACtF4xC,GAAiBT,EACjB5lG,IAAiBC,EAAAA,EAAAA,GAASw0D,IAAmB4xC,IAC7CllG,IAAoBL,EAAAA,EAAAA,IAAoBqlG,IAAYnmG,MAAoBwkG,IAExE3rD,IAAWstD,IAAYnmG,IAAkBwkG,GACzC1rD,IAAWkqD,EAAAA,EAAAA,GAAwBlgG,EAAS+1C,IAC5CwpD,IAAuBW,EAAAA,EAAAA,GAAwBlgG,GAAUigG,IACzDliG,IAAkBC,EAAAA,EAAAA,IAAoB+3C,IAEtCytD,GAAWn9C,IAAiB28C,EAAkB/mG,QAE9CwnG,IAAgBC,EAAAA,EAAAA,GAAoBr+C,GAAU,GAAOm+C,KACnDpgG,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCZ,EAAAA,EAAAA,IAAoB1C,EAAS,aAC5BQ,GACD2C,EAAAA,EAAAA,IAAsBnD,EAAS,cAG3B,YAAE4H,GAAW,eAAEC,GAAc,iBAAEC,KAAqBC,EAAAA,EAAAA,IACxD/H,EACAE,IAAmBM,EAAgB6C,GAAmBD,IACrDZ,IAAek/F,KAAkB0B,IAAyB5iG,OACxCnI,IAAnB6H,GAGIkgG,IAAiD,KAA/BjtE,EAAAA,EAAAA,GAAYkhB,IAElC95C,aAAcyN,GACdxN,qBAAsByN,KACpBxN,EAAAA,EAAAA,GAAkBoN,KAAmB47F,QAAeprG,EAAW+nG,KAEjE5lG,qBAAsBmpG,KACpBlpG,EAAAA,EAAAA,GAAkBlC,SAAS87C,GAAiBgS,MAAmB48C,IAAkBj7F,MAE9EvI,GAAcmkG,KAAmBrhG,EAAAA,EAAAA,IAAiB,GACnDigG,IAAmB/jG,EAAAA,EAAAA,IAAiB8J,IACxCq7F,GAAgBz+F,KAAK2B,IAAI,EAAGyB,EAAE8zC,cAAcsK,YAAc,GAAG,IAGzD1iD,IAAY4/B,OAAOggE,SAASx+C,EAASppD,SAASgI,UAAYohD,EAASppD,SAASgI,SAAWnC,EAAMmC,WAAa,EAE1GM,IAAQC,EAAAA,EAAAA,IAAaxE,GACrB8jG,GAAiBvrG,SAAQ4jB,EAAAA,EAAAA,IAAuBnc,KAChD,MACJqG,GAAK,OAAEC,IACLw5F,IAAciE,EAAAA,EAAAA,IAAyBjiG,EAAOyC,GAAOw7F,EAAa+D,GAAgBzjG,EAAW8B,GAE3F+yC,IAAcz2C,EAAAA,EAAAA,IAAgB,KAC9BmJ,GACFxG,IAAiBpB,GAIfQ,GACFvH,EAAAA,EAAAA,MAAaqI,2BAA2B,CAAEtB,YAIvCqmD,IAKDA,KAAkB48C,GACpBC,GAAiB,GAGfvnD,EACFC,IAIF5gD,IAAUgF,EAAQ1H,GAAIwJ,GAAOo6C,QAb3B5H,GAAkBisD,IAAeA,GAaA,IAG/B1nG,IAAYkC,EAAAA,EAAAA,GAChB,oBACC6M,IAAe,cAChBtB,GAAS06F,EAAAA,IAAoB,kBAIzBniG,GAAS,WAAUyH,QADDw5F,EAAc,WAAUz5F,eAAkBy5F,EAAW/4F,aAAa+4F,EAAW94F,OAAS,KAG9G,OACEnM,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACLtH,GAAIA,EACJO,UAAWA,GACXgG,MAAOA,GACP7D,QAAS4M,QAAcvP,EAAY68C,IAElC+qD,IACCplG,EAAAA,GAAAC,cAAA,UAAQ8E,IAAK2/F,GAAsB1mG,UAAU,2CAE9C2qG,IACC3oG,EAAAA,GAAAC,cAAC+rD,EAAAA,EAAc,CACbjnD,IAAKylD,EACLtmD,IAAKsnD,GACLxtD,WAAWkC,EAAAA,EAAAA,GAAe,aAAcklG,IAAyB,mBACjEn5C,QAASm8C,GAAiBF,IAA6BU,GACvD18C,OAAK,EACLE,MAAI,EACJC,aAAW,EACXjoD,WAAYs8C,EACZmnD,aAAcF,GACdr7C,QAASw6C,GACT9iG,MAAOghG,EAAe,UAASA,WAAkBxnG,IAGrDwC,EAAAA,GAAAC,cAAA,OACEiE,IAAK7B,GACLrE,WAAWkC,EAAAA,EAAAA,GAAe,YAAasD,GAAmB4hG,IAAyB,mBACnFvsF,IAAI,GACJ7U,MAAOghG,EAAe,UAASA,YAAmBxnG,EAClD4G,WAAYs8C,IAEb8nD,KAAaC,IACZzoG,EAAAA,GAAAC,cAAA,UACE8E,IAAKo2C,GACLn9C,WAAWkC,EAAAA,EAAAA,GAAe,aAAcg7C,IAAW,oBAAqBh4C,MAG3Ew9C,GAAe1gD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAChCgC,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQ,kBAAmB4oG,MACxD9oG,EAAAA,GAAAC,cAACkhD,EAAAA,EAAY,CACXC,UAAWN,EACXQ,eAAa,EACbr/C,aAAcA,GACduJ,MAAOA,GACPC,OAAQA,GACRzN,UAAU,kBAEXmP,IACCnN,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBkN,KAC9CpN,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CAAChF,SAAU4B,GAAkB9M,QAASk6C,OAGxDb,IAAkBgS,IAClBxrD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,wBAEdgP,IAAoB47F,KAAiBjjG,EAKpC3F,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZiJ,EAAMo6C,MAAQ,OAAQ7xC,EAAAA,EAAAA,IAAoBlF,KAAK2B,IAAI7C,GAAWxE,GAAc,IAC5EgkG,IAAiB5oG,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,8CANjCgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,6BACZ+O,IAAepH,EAAkB,GAAE2E,KAAK7J,MAAyB,IAAnBwM,OAA6B,OAQ7E,C,uRC/OV,MAmPA,GAAevQ,EAAAA,EAAAA,KAxNeqB,IAoBxB,IApByB,QAC7BoH,EAAO,8BACPouD,EAA6B,8BAC7BhD,EAA6B,UAC7B/qD,EAAS,YACT4yC,EAAW,YACX4vD,EAAW,UACX75E,EAAS,YACT+2E,EAAW,cACXv/F,GAAgB,EAAK,YACrB+6C,EAAW,YACX0jD,EAAW,MACXzyE,EAAK,MACLzsB,EAAK,kBACL6vD,EAAiB,mBACjBvc,EAAkB,sBAClBH,EAAqB,aACrBI,EAAY,YACZ0wD,EAAW,sBACXC,GACDrrG,EACC,MAAM,iBAAEsrG,IAAqBjrG,EAAAA,EAAAA,MACvB6vB,GAAUmkC,EAAAA,EAAAA,IAAkBjtD,IAC5B,SAAEmC,IAAaC,EAAAA,EAAAA,MAEfxC,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7B0oG,GAAc1oG,EAAAA,EAAAA,IAAuB,MAErCvC,GAAOC,EAAAA,EAAAA,KAEPirG,GAAmB3lG,EAAAA,EAAAA,IAAgB,KACvC60C,GAAe,IAGX+wD,GAAyB5lG,EAAAA,EAAAA,IAAgB,KACxCqqB,GACLo7E,EAAiB,CACf/7E,IAAKW,EAAQX,KACb,KAGIqE,MAAOzJ,EAAS,SAAEuL,GAAaxF,GAAW,CAAC,GAEnDw7E,EAAAA,EAAAA,GAAevhF,GAAW4hB,OAAQ5hB,GAAWzqB,GAAIk0B,GAEjD,MAAM+3E,EAAiBj2E,GAAUk2E,iBAAmBl2E,GAAUm2E,YAAY,IAAIxT,mBACxEr/B,GAAcC,EAAAA,EAAAA,GAAwBsyC,GAAcI,GAE1D,IAAKz7E,EACH,OAGF,MAAM,SACJskC,GAAQ,IACRjlC,GAAG,WACHqlC,GAAU,MACVnkD,GAAK,YACLszC,GAAW,MACXh0B,GAAK,MACL7mB,GAAK,MACLH,GAAK,KACLqV,GAAI,SACJ/J,IACE6b,EACE47E,GA3FmB,mBA2FT1tF,GAEV2tF,GAAsB37E,GADLwD,GAAS,cAAeA,OACyCn0B,EC9HnF,SAA8B2e,GACnC,OAAQA,GACN,IAAK,2BACL,IAAK,6BACL,IAAK,wBACH,MAAO,+BACT,IAAK,mBACH,MAAO,0BACT,IAAK,eACH,MAAO,sBACT,IAAK,qBACH,MAAO,6BACT,IAAK,sBACH,MAAO,qCACT,IAAK,qBACL,IAAK,gBACH,MAAO,wBACT,IAAK,mBACH,MAAO,0BACT,IAAK,gBACH,MAAO,uBACT,IAAK,kBACH,MAAO,0BACT,IAAK,oBACH,MAAO,eACT,IAAK,iBACH,MAAO,wBACT,IAAK,yBACL,IAAK,uBACH,MAAO,wBACT,IAAK,sBACH,MAAO,6BACT,QACE,OAEN,CD2F6D4tF,CAAqB5tF,IAC1Ey2C,IAAuBC,EAAAA,EAAAA,GAAS/Q,GA/FhB,KAgGhBkoD,GAAYtsG,QAAQk1D,IAAwBpkD,IAAS+jD,IAC3D,IAAI03C,GAAgBvsG,QAAQ+1B,GAC5B,GAAIu2E,IAAa/7E,GAASH,QAAUG,EAAQhnB,MAAO,CACjD,MAAM,MAAEuE,EAAK,OAAEC,IAAWy6F,EAAAA,EAAAA,IAAyB/gG,OAAS3H,OAAWA,EAAW8J,GAClF2iG,GAAgBz+F,IAAUC,CAC5B,CACA,MAAMy+F,IAAsBp8E,IAAS7mB,KAAUwxC,IAAiBwxD,GAE1DjsG,IAAYkC,EAAAA,EAAAA,GAChB,UACAiuB,GAAa,aACb87E,IAAiB,qBAChBn8E,KAAU7mB,KAAUknB,GAAa,gBAClClnB,IAAS,cACR+iG,IAAa,aACd53F,IAAY,gBACZ03F,IAAsB,qBAiBxB,OACE9pG,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACL/G,UAAWA,GACX,gBAAeu0D,IAAYI,IAAY,GACvCjxD,IAAKrD,EAAKsD,MAAQ,MAAQ,QAE1B3B,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,mBAAoB2pG,IAAW,aAC3D90C,GACC/0D,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAmB,CAClBC,gBAAiBF,EACjB/2D,UAAU,8BAGb6rG,IACC7pG,EAAAA,GAAAC,cAACkqG,EAAAA,EAAS,CAACx4E,MAAOA,EAAO+uB,YAAaA,EAAa0jD,YAAaA,EAAan9B,WAAS,IAEvFn5C,KAAU7mB,IACTjH,EAAAA,GAAAC,cAACmqG,EAAAA,EAAK,CACJjlG,QAASA,EACT+yC,oBAAqBqb,EACrB/tD,UAAWA,EACX4yC,YAAaA,EACb93C,KAAM2pG,GAAgB,YAAc,SACpC/E,YAAaA,EACbn1F,gBAAiBm6F,GACjBvkG,cAAeA,EACf+6C,YAAaA,EACbx7C,MAAOA,EACP/E,QAAS+pG,GAAqBX,OAAmB/rG,EACjD+I,eAAgB6iG,IAGnBY,IACChqG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAAC+yD,EAAAA,EAAQ,CAACh1D,UAAU,YAAYsvB,IAAKA,GAAK5sB,KAAM6xD,IAAYI,MAC1DxkC,GAAa3f,IACbxO,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAcqR,EAAAA,EAAAA,GAAWb,KAEvCokD,IACC5yD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAAoBqR,EAAAA,EAAAA,GAAWujD,GAAsB,CAAC,QAAS,UAIhFzkC,GAAalnB,IACbjH,EAAAA,GAAAC,cAACoqG,EAAAA,EAAK,CACJllG,QAASA,EACTouD,8BAA+BA,EAC/B/tD,UAAWA,EACX4yC,YAAaA,EACb4vD,YAAaA,EACb9C,YAAaA,EACbv/F,cAAeA,EACf+6C,YAAaA,EACbvgD,QAAS+pG,GAAqBX,OAAmB/rG,EACjD+I,eAAgB6iG,KAGlBj7E,GAAarnB,IACb9G,EAAAA,GAAAC,cAACqqG,EAAAA,GAAK,CACJplG,MAAOA,EACPC,QAASA,EACTG,OAAQ4C,EAAAA,GAAY6G,OACpBvJ,UAAWA,EACXG,cAAeA,EACfS,OAAQ+iG,EACR5iG,eAAgB6iG,KAGlBj7E,GAAa/b,IACbpS,EAAAA,GAAAC,cAACsqG,EAAAA,EAAQ,CACPplG,QAASA,EACT+yC,oBAAqBqb,EACrBlb,sBAAuBA,EACvBI,aAAc8wD,EACdhjG,eAAgB6iG,EAChBzjG,cAAeA,EACf6yC,mBAAoBA,KAGtBrqB,GAAasF,GACbzzB,EAAAA,GAAAC,cAAA,OACE8E,IAAKukG,EACLtrG,WAAWkC,EAAAA,EAAAA,GACT,cAAe,eAAgBuzB,EAAS+2E,SAAW,sBAAuB,sBAG3E/2E,EAASm2E,UAAUvqG,KAAKwC,GACvB7B,EAAAA,GAAAC,cAAA,OAAKs1C,IAAK1zC,EAAQpE,GAAIO,UAAU,oBAC9BgC,EAAAA,GAAAC,cAACmiE,EAAAA,EAAW,CACV7L,aAAc+yC,EACdznG,QAASA,EACTygE,YAAU,EACVhiE,KAAMmzB,EAAS+2E,QA3Nd,GADE,GA6NHzzC,YAAaA,EACbxG,8BAA+BA,EAC/BgD,8BAA+BA,QAMxCplC,GAAawkC,KAAeq3C,IAC3BhqG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,aAAa20D,IAC1B3yD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAAoBK,EAAK,6BAI3CyrG,KA3HsB1b,GA2HkB0b,GAzHzC9pG,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLxC,UAAU,wBACVsC,KAAK,OACLsP,MAAM,cACN66F,eAAa,EACbtqG,QAASqpG,GAERnrG,EAAK+vF,OATZ,IAA2BA,EA4HnB,G,mCE9QV,MAAMsc,EAA2B,CAC/BC,KAAM,CACJC,SAAU,mBACVC,SAAU,iBAEZC,MAAO,CACLF,SAAU,mBACVC,SAAU,qBAIC,SAAS9E,EACtB7hG,EAAawF,EAAgBhE,EAAsBR,GAEnD,OAAIQ,EACKqU,QAAQwE,QAAQmsF,EAAyBxlG,GAAS,SAASwE,EAAQ,WAAa,aAK3F0M,eAAyClS,EAAawF,GACpD,MAAMyyF,EAAM,IAAI4O,MAChB5O,EAAIj4F,IAAMA,EACVi4F,EAAI6O,YAAc,YAEb7O,EAAI3wF,aACD,IAAIuO,SAASwE,IACjB49E,EAAI8O,OAAS1sF,CAAO,IAIxB,MAAMnT,EAASgH,SAASnS,cAAc,UAChCyL,EAAMN,EAAOO,WAAW,MAE9BP,EAAOI,MAAQ2wF,EAAI3wF,MACnBJ,EAAOK,OAAS0wF,EAAI1wF,OAEpBC,EAAI+rD,UAAU0kC,EAAK,EAAG,EAAGA,EAAI3wF,MAAO2wF,EAAI1wF,QAExC,MAAMS,EAAIxC,EAAQyyF,EAAI3wF,MAAQ,EAAI,EAC5BW,EAAIgwF,EAAI1wF,OAAS,EAGvB,MAAQ,QADMpB,MAAMgN,KAAK3L,EAAIw/F,aAAah/F,EAAGC,EAAG,EAAG,GAAGlC,MACjCqY,KAAK,OAC5B,CA3BS6oF,CAA0BjnG,EAAKwF,EACxC,C,yFCRA,MAAM0hG,EAAwB,GACxBC,EAA8B,GACvBC,EAA4B,GAAK1vD,EAAAA,EACxC2vD,EAAkBH,EAAwBxvD,EAAAA,EACnCuqD,EAAmB,EAAIvqD,EAAAA,EAE7B,SAAS4vD,EAAiB9qG,EAAe+qG,GAC9C,OAAQ/qG,GAAMN,QAAU,GAAKirG,GAA+BI,EACxDH,EACAC,CACN,CAEO,SAASrF,EACd/gG,EAAqB+/F,EAAuB1/F,EAAqB8B,GAEjE,MAAMoC,GAAQC,EAAAA,EAAAA,IAAaxE,GACrB2oB,GAAQ3M,EAAAA,EAAAA,IAAgBhc,KAAYic,EAAAA,EAAAA,IAAuBjc,GAC3D8B,GAAQoa,EAAAA,EAAAA,IAAgBlc,GAExBumG,EAAiBhuG,SAAQ0jB,EAAAA,EAAAA,IAAuBjc,IAChD8jG,EAAiBvrG,SAAQ4jB,EAAAA,EAAAA,IAAuBnc,KAChD,MAAEqG,EAAK,OAAEC,GAAWqiB,GACtB69E,EAAAA,EAAAA,IAA+B79E,EAAOpkB,EAAOw7F,EAAawG,EAAgBlmG,EAAW8B,IACrF4hG,EAAAA,EAAAA,IAAyBjiG,EAAQyC,EAAOw7F,EAAa+D,EAAgBzjG,EAAW8B,GAG9EskG,EAAgBJ,GADF/4C,EAAAA,EAAAA,IAAettD,IAGnC,IAAI0mG,EAAgB,EAChBrgG,EAAQogG,GAAiBA,EAAgBpgG,EAAQ4/F,IACnDS,EAAgBD,EAAgBpgG,GAE9BC,EAASogG,EAAgB1F,GAAoBA,EAAmB16F,EAASogG,EAAgBT,IAC3FS,EAAgB1F,EAAmB16F,GAGrC,MAAMqgG,EAAaxhG,KAAK7J,MAAM+K,EAAQqgG,GAChCE,EAAczhG,KAAK7J,MAAMgL,EAASogG,GAExC,MAAO,CACLrgG,MAAOsgG,EACPrgG,OAAQsgG,EACR9F,QAAS6F,EAAaF,GAAiBG,EAAc5F,EAEzD,C,mFChDe,SAASd,EACtBlgG,EACAggB,EACA6mF,GAEA,MAAM,SAAE1kG,IAAaC,EAAAA,EAAAA,MAEfpF,EAAU6pG,IAAalyD,EAAAA,EAAAA,IAA4B30C,GAEzD,OAAOi2C,EAAAA,EAAAA,GACLj5C,EACAzE,QAAQynB,GACR7d,IAAa+zC,EAAAA,GAEjB,C,mFCXA,MAAM4wD,EAAsB,IACtBC,EAAyB,IACzBC,EAAe,GAEN,SAASxkB,EACtB3sC,EACAl+C,EACAwpF,EACAE,EACAE,EACA0lB,EACAjlB,EACArzB,GAEA,MAAMu4C,GAAiBzrG,EAAAA,EAAAA,KAAQumF,IAE/Bh8E,EAAAA,EAAAA,KAAgB,KACd,MAAMmhG,EAAcD,EAAejrG,QAGnC,GAFAirG,EAAejrG,SAAU,EAErBklF,GAAatrC,EAAW55C,QAAS,CACnC,MAAMmrG,EAAoBvxD,EAAW55C,QAAQmkB,QAAwB,gBAE/DinF,EAAa9lB,EAEb2R,EAAOA,KACX,MAAMnkF,GAASu4F,EAAAA,EAAAA,IACbF,EACAvxD,EAAW55C,QACXorG,EAAa,MAAQ,cACrBL,OACmB3uG,IAAnBgpF,EAAgCgmB,EAAaP,EAAsBC,OAA0B1uG,EAC7FgpF,OACAhpF,EACA4uG,GACA,GAGF,GAAIt4C,EAAS,CACX,MAAM44C,EAAa1xD,EAAW55C,QAASwpB,cAA+B,aAClE8hF,IACFxsE,EAAAA,EAAAA,KAAgB,MACdysE,EAAAA,EAAAA,IAAcD,EAAY,UAAU,GAG1C,CAEA,OAAOx4F,CAAM,EAGXo4F,GAEFvU,EAAAA,EAAAA,IAAoBM,IAEpBj6E,EAAAA,EAAAA,KAAe,MACb8hB,EAAAA,EAAAA,IAAgBm4D,IAAQ,GAG9B,IACC,CACDr9C,EAAYl+C,EAAQwpF,EAAWE,EAAgBE,EAAkB0lB,EAAqBt4C,GAE1F,C,wEClEA,MAEM84C,EAAuB,IAAIzX,IAElB,SAAS/gC,EACtBf,EACAv2D,EACAwR,EACAu+F,GAEA,MAAMC,EAAqBD,GAAyBv+F,EAChD+kD,GAAkB05C,WAAWF,KAAyBv+F,QAAa9Q,GAEjE,UAAEwvG,EAAS,KAAEtsG,GAASosG,GAAsB,CAAC,EAUnD,OARAttG,EAAAA,EAAAA,KAAU,KACH1C,GAAWwR,IAEX5N,QAAsBlD,IAAdwvG,GAA2BH,GA0C5C,SACE/vG,EACAwR,EACAm/E,GAEA,MAAMwf,EAAuBL,EAAqBn0E,IAAIg1D,IAAmB,IAAI0H,IACvElvE,EAAagnF,EAAqBx0E,IAAI37B,IAAW,GAEnDmpB,EAAWtP,SAASrI,KAKxB2X,EAAWzkB,KAAK8M,GAChB2+F,EAAqBhW,IAAIn6F,EAAQmpB,GACjC2mF,EAAqB3V,IAAIxJ,EAAgBwf,IAEzC7uG,EAAAA,EAAAA,MAAa8uG,+BAA+B,CAAEpwG,SAAQmpB,aAAYwnE,oBARhE0f,GAWJ,CA7DMC,CAAsBtwG,EAAQwR,EAAWu+F,EAC3C,GACC,CAAC/vG,EAAQ4D,EAAMssG,EAAW1+F,EAAWu+F,IAEnC/vG,GAAWwR,EAOT,CACL0+F,YACA74C,eAAgBzzD,GART,CACLssG,WAAW,EACX74C,oBAAgB32D,EAQtB,CAEA,MAAM2vG,GAA0BE,EAAAA,EAAAA,KAEhC,WACE,MAAM,kBAAEC,IAAsBlvG,EAAAA,EAAAA,MAC9B,IAAImvG,GAAiB,EACrBX,EAAqB/gG,SAAQ,CAAC5M,EAAOwuF,KACnCxuF,EAAM4M,SAAQ,CAACoa,EAAYnpB,KACzB,MAAM0wG,EAAwBvnF,EAAW7mB,MAAM,EA3CnB,IA6CxBouG,EAAsBptG,OAAS6lB,EAAW7lB,SAC5CmtG,GAAiB,GAGnBD,EAAkB,CAAExwG,SAAQmpB,WAAYunF,EAAuB/f,mBAiCrE,SACE3wF,EACAmpB,EACAwnE,GAEA,MAAMwf,EAAuBL,EAAqBn0E,IAAIg1D,GACtD,IAAKwf,GAAsB3sG,KAEzB,YADAssG,EAAqBtX,OAAO7H,GAI9B,MAAMggB,EAAgBR,EAAqBx0E,IAAI37B,GAC/C,IAAK2wG,GAAertG,OAElB,YADA6sG,EAAqB3X,OAAOx4F,GAI9B,MAAM4wG,EAAgBD,EAAcluG,QAAQ9B,IAAQwoB,EAAWtP,SAASlZ,KAExE,IAAKiwG,GAAettG,OAKlB,OAJA6sG,EAAqB3X,OAAOx4F,QACvBmwG,EAAqB3sG,MACxBssG,EAAqBtX,OAAO7H,IAKhCwf,EAAqBhW,IAAIn6F,EAAQ4wG,EACnC,CA3DMC,CAA0B7wG,EAAQ0wG,EAAuB/f,EAAe,GACxE,IAGA8f,GACFJ,GAEJ,GAzDuB,I,gKCPvB,QAAuB,WAAvB,EAAmM,WAAnM,EAAsQ,WCYhQS,EAAgB,EAAIhyD,EAAAA,EAgD1B,GAAel/C,EAAAA,EAAAA,KApCsCqB,IAQ/C,IARgD,SACpD2yC,EAAQ,OACRm9D,EAAM,QACN53E,EAAO,kBACP63E,EAAiB,MACjB9pG,EAAK,SACL6iD,EAAQ,iBACR5U,GACDl0C,EAKC,OACEiC,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACTiE,EDxCmC,WC0CnC0pG,GAAU1pG,GACT2pG,GAAqB73E,GD3C2F,WC4CjH63E,GD5CwD,YC8C1D9pG,MAAOA,EACP7D,QAdJ,WACE8xC,EAAiBvB,EACnB,GAcI1wC,EAAAA,GAAAC,cAAC+Y,EAAAA,EAAW,CACV4tB,WAAY8J,EAAS9J,WACrBtmC,KAAMstG,IAEP/mD,GACC7mD,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UAAWmG,EAAa8L,KAAK,eAEjC,I,qCCzCV,MAAM29F,EAAgB,EAAIhyD,EAAAA,EA2E1B,GAAel/C,EAAAA,EAAAA,KAhEgCqB,IAOzC,IAP0C,SAC9C2yC,EAAQ,QACRza,EAAO,kBACP63E,EAAiB,OACjBD,EAAM,SACNhnD,EAAQ,iBACR5U,GACDl0C,EACC,MAAMgwG,GAAkBzrG,EAAAA,EAAAA,GAAU,UAASouC,EAASs9D,iBAAiBvwG,MAAOw4B,GAAW63E,GACjFzlG,GAAY/F,EAAAA,EAAAA,GAAU,WAAUouC,EAASu9D,iBAAiBxwG,MAAOw4B,GAAW63E,GAC5EI,GAAiB5rG,EAAAA,EAAAA,GAAU,WAAUouC,EAAS0f,YAAY3yD,MAAOqwG,IAChEzjC,EAAmBC,IAAuBtpE,EAAAA,EAAAA,MAE1CmtG,EAAY,CAAGC,IAAqBptG,EAAAA,EAAAA,IAAQ,IAC5CwG,EAAa6mG,EAAUC,IAActtG,EAAAA,EAAAA,KAM5C,OACEhB,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAa0pG,GAAU1pG,GACjDhE,QAPJ,WACE8xC,EAAiBvB,EAASA,SAC5B,EAMI7sB,aAAcoS,IAAYk4E,EAAcE,OAAW7wG,GAElDswG,GACC9tG,EAAAA,GAAAC,cAAA,OACEjC,UFtD0O,WEuD1OkG,IAAKgqG,EACLr1F,IAAK63B,EAASA,SAAS5W,SACvB11B,WAAW,KAGbimE,IAAsByjC,GACtB9tG,EAAAA,GAAAC,cAAC8qE,EAAAA,EAAe,CACdx1B,IAAK7E,EAASs9D,iBAAiBvwG,GAC/BiF,OAAQqrG,EACR7iC,KAAMijC,EACN/9F,QAAM,EACN9P,KAAMstG,EACN9lC,QAASsmC,EACT/rC,aAAW,KAGb8rC,IAAgBL,GAChB9tG,EAAAA,GAAAC,cAAC8qE,EAAAA,EAAe,CACdx1B,IAAK7E,EAASu9D,iBAAiBxwG,GAC/BiF,OAAQ2F,EACR6iE,KAAM1jE,EACN4I,QAAM,EACN9P,KAAMstG,EACNvpG,OAAQimE,EACRxC,QAASwmC,EACTjsC,aAAW,IAGdxb,GACC7mD,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UAAWmG,EAAa8L,KAAK,eAEjC,IC3CJs+F,GAAKC,EAAAA,EAAAA,GAAuB,oBAkKlC,GAAe9xG,EAAAA,EAAAA,KA9JwBqB,IAiBjC,IAjBkC,sBACtCi0C,EAAqB,aACrBvf,EAAY,oBACZg8E,EAAmB,iBACnBC,EAAgB,iBAChBC,EAAgB,mBAChBC,EAAkB,UAClB18D,EAAS,QACTjc,EAAO,sBACPT,EAAqB,UACrBx3B,EAAS,qBACTqqB,EAAoB,kBACpB8pB,EAAiB,gBACjBxZ,EAAe,QACfhV,EAAO,iBACPsuB,EAAgB,WAChBG,GACDr0C,EACC,MAAM,iBAAEuvD,IAAqBlvD,EAAAA,EAAAA,MAEvB2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7BvC,GAAOC,EAAAA,EAAAA,KAEPuwG,EAAqB18D,IAAsB9pB,IAAyBsQ,EAEpEpG,GAAqB5zB,EAAAA,EAAAA,KAAQ,KACjC,MAAM6zB,EAAY2f,EAAoBs8D,EACN,SAA3BC,GAAkBvyF,KAAkBuyF,EAAiBI,QACpD98D,GAAuB3yC,KAAKqxC,GAAaA,EAASA,WAClDq+D,EAAoBv8E,GAAWnzB,KAAKqxC,IACxC,MAAMs+D,EAAmB,eAAgBt+D,EACnCsf,EAAoBhe,GAAuB5kB,MAAM67C,IAAM/Y,EAAAA,EAAAA,IAAe+Y,EAAEv4B,SAAUA,KACxF,IAAMs+D,GAAqBh/C,KAAsBA,GAAmBi/C,aAE/D/8D,GAAew8D,IAAqBQ,EAAAA,EAAAA,IAAgBx+D,EAAUg+D,QAI/DE,GAAsBD,GAAoBA,EAAiBvuG,QAAUwuG,IACnED,EAAiB7mF,MAAKxoB,IAAA,IAAGoxC,SAAUy+D,GAAiB7vG,EAAA,OAAK4wD,EAAAA,EAAAA,IAAexf,EAAUy+D,EAAgB,KAIxG,OAAOH,EAAmBt+D,EAAWsf,CAAiB,IACrDzwD,OAAO7B,UAAY,GAEtB,OAAO0xG,EAAAA,EAAAA,IAAcL,EAAmBt8E,EAAa,GACpD,CACDuf,EAAuB28D,EAAkBF,EAAqBC,EAAkBv8D,EAAmBD,EACnG08D,EAAoBn8E,IAGhB48E,GAAoB1wG,EAAAA,EAAAA,KAAQ,IAEK2wG,IAA9B/8E,EAAmBnyB,OACtBmyB,EACAA,EAAmBnzB,MAAM,EA3DR,IA4DpB,CAACmzB,IACEg9E,EAAiBF,EAAkBjvG,OAASmyB,EAAmBnyB,OAE/DovG,GAAsB7wG,EAAAA,EAAAA,KAAQ,KAClC,MAAM8wG,EAAkBd,GAAkBpvG,QAAO1C,IAAA,IAAC,YAAE6yG,GAAa7yG,EAAA,YAAqBW,IAAhBkyG,CAAyB,KAAK,GACpG,OAAO,IAAI3sG,IAAI0sG,EAAgBpwG,KAAIutC,IAAA,IAAC,SAAE8D,GAAU9D,EAAA,OAC9CyiE,EAAkBM,WAAW1mC,GAAMA,IAAK/Y,EAAAA,EAAAA,IAAe,aAAc+Y,EAAIA,EAAEv4B,SAAWu4B,EAAGv4B,IAAU,IAClG,GACF,CAACi+D,EAAkBU,IAEhBO,GAAsBhsG,EAAAA,EAAAA,IAAgB,KAC1C,MAAMisG,EAAQ9qG,EAAI3D,SAASwM,yBAA2B,CAAE1B,EAAG,EAAGC,EAAG,GACjEimC,EAAW,CACTlmC,EAAG2jG,EAAM3jG,EACTC,EAAG0jG,EAAM1jG,GACT,IAGE2jG,GAAyBlsG,EAAAA,EAAAA,IAAgB,KAC7C+f,MACA2pC,EAAiB,CACfvkB,eAAgB,cAChB,IAGEgnE,GAAWpxG,EAAAA,EAAAA,KAAQ,KACvB,GAAIwzC,EAAmB,CACrB,IAAK9pB,EAAsB,CACzB,MACM2nF,EADO3xG,EAAK,2BACC6iE,MAAM,UACzB,OACElhE,EAAAA,GAAAC,cAAA,YACG+vG,EAAM,GACPhwG,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAAC2gG,WAAS,EAAC9vG,QAAS2vG,GACtBzxG,EAAK,2BAEP2xG,EAAM,GAGb,CAEA,OAAO3xG,EAAK,yBACd,CAEA,GAAIs6B,EACF,OAAOt6B,EAAK,qBAGE,GACf,CAACgqB,EAAsB8pB,EAAmBxZ,EAAiBt6B,IAE9D,GAAKgxG,EAAkBjvG,OAEvB,OACEJ,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAequG,EAAG,KAAMvwG,GAAY+G,IAAKA,GACvD/E,EAAAA,GAAAC,cAAA,OAAKjC,UAAWuwG,EAAG,eAAgBlwG,EAAKsD,OAAS,WACjD3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWuwG,EAAG,kBACjBvuG,EAAAA,GAAAC,cAAA,OAAKjC,UAAWuwG,EAAG,aAAclwG,EAAKsD,OAAS,WAC/C3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWuwG,EAAG,UAChBwB,GAAY/vG,EAAAA,GAAAC,cAAA,OAAKjC,UAAWuwG,EAAG,SAAUwB,GAC1C/vG,EAAAA,GAAAC,cAAA,OAAKjC,UAAWuwG,EAAG,aAAc7sG,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACxD6xG,EAAkBhwG,KAAI,CAACqxC,EAAUnvC,IAChC,aAAcmvC,EACZ1wC,EAAAA,GAAAC,cAACiwG,EAAwB,CACvB36D,KAAK46D,EAAAA,EAAAA,IAAez/D,EAASA,UAC7Bza,QAASA,EACTgc,iBAAkBA,EAClBvB,SAAUA,EACVo9D,mBAAoBt4E,EACpBq4E,OAAQ2B,EAAoBjsG,IAAIhC,GAChCslD,SAAUgoD,IAGZ7uG,EAAAA,GAAAC,cAACmwG,EAA8B,CAC7B76D,KAAK46D,EAAAA,EAAAA,IAAez/D,GACpBza,QAASA,EACTgc,iBAAkBA,EAClBvB,SAAUA,EACVo9D,mBAAoBt4E,EACpBq4E,OAAQ2B,EAAoBjsG,IAAIhC,GAChCslD,SAAUgoD,EACV7qG,MAAQ,uBA5IJ,IADG,EA6I2CzC,WAIvDguG,GACCvvG,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLoP,MAAM,cACN5R,UAAWuwG,EAAG,aACdpuG,QAASyvG,GAET5vG,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBAMnB,G,qLCzMV,MC6EA,GAAetB,EAAAA,EAAAA,KAvDMqB,IAUL,IAVM,OACpBwlB,EAAM,MACN/U,EAAK,SACLitC,EAAQ,YACR/G,EAAW,WACX27D,EAAU,UACVlmE,EAAS,aACTmmE,EAAe,GAAE,QACjB3sF,EAAO,SACP8+B,GACS1kD,EACT,MAAMM,GAAOC,EAAAA,EAAAA,MAENoC,EAAM6vG,IAAW7oG,EAAAA,EAAAA,IAAS4oG,GAE3BE,GAAmB5sG,EAAAA,EAAAA,IAAiB8J,IACxC6iG,EAAQ7iG,EAAEoU,OAAOu+B,MAAM,IAGnBowD,GAAe7sG,EAAAA,EAAAA,IAAgB,KACnC6+C,EAAS/hD,EAAK,IAGhB,OACEV,EAAAA,GAAAC,cAAC63C,EAAAA,EAAK,CACJ95C,UAAU,SACVwQ,MAAOA,EACP+U,OAAQA,EACRI,QAASA,EACT+sF,QAAM,GAELhzG,QAAQ+9C,IACPz7C,EAAAA,GAAAC,cAAA,OAAKjC,UDtDc,YCuDhBy9C,GAGLz7C,EAAAA,GAAAC,cAACunD,EAAAA,EAAS,CACR9S,YAAaA,EACb2L,MAAO3/C,EACPyiD,SAAUqtD,EACVrmE,UAAWA,EACXwmE,2BAAyB,IAE3B3wG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,uBACbgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACxC,UAAU,wBAAwBmC,QAASswG,GAChDJ,GAAchyG,EAAK,SAEtB2B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACxC,UAAU,wBAAwBg6C,QAAM,EAAC73C,QAASwjB,GACvDtlB,EAAK,YAGJ,I,oCCjDZ,MAAMuvG,EAAgB,KAAOhyD,EAAAA,EA+K7B,GAAel/C,EAAAA,EAAAA,KA1JQqB,IAeP,IAfQ,SACtB2yC,EAAQ,IACRkgE,EAAG,YACH5/D,EAAW,SACX6/D,EAAQ,aACRlnG,EAAY,UACZ3L,EAAS,gBACT8yG,EAAe,UACfC,EAAS,WACT5rF,EAAU,gBACV6rF,EAAe,gBACfjoC,EAAe,oBACf7wB,EAAmB,QACnB/3C,EAAO,SACP8wG,GACSlzG,EACT,MAAM,qBAAEmzG,IAAyB9yG,EAAAA,EAAAA,MAE3B2G,GAAMnE,EAAAA,EAAAA,IAA0B,MAEhCuwG,GAAUvwG,EAAAA,EAAAA,IAAuB,MAEjCvC,GAAOC,EAAAA,EAAAA,MACN8yG,EAAoBC,EAAkBC,IAAqBtwG,EAAAA,EAAAA,MAE5D,MAAEwN,EAAK,MAAEw2E,GAAU4rB,GAAO,CAAC,EAC3Bh3F,EAAUlc,QAAQ8Q,GAAUuiG,GAAa/rB,GAEzC3qC,GAAcz2C,EAAAA,EAAAA,IAAgB,KAClCzD,IAAUuwC,EAAS,IAGf6gE,GAAoB3tG,EAAAA,EAAAA,IAAgB,KACxCqtG,IAAWvgE,EAAS,IAGhB8gE,GAAkB5tG,EAAAA,EAAAA,IAAiB6tG,IACvCP,EAAqB,CACnBxgE,WACAliC,MAAOijG,IAETH,GAAmB,KAGf,kBACJ7nF,EAAiB,oBACjBC,EAAmB,wBACnBigB,EAAuB,kBACvBhgB,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuB/kB,GAAMisG,GAE3BvmF,GAAoB7mB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,UAC9CspB,GAAiB9mB,EAAAA,EAAAA,IAAgB,IAAMwO,SAASE,OAChDqY,GAAiB/mB,EAAAA,EAAAA,IAAgB,IAAMutG,EAAQ/vG,WAI/C,UACJqiB,EAAS,UAAEC,EAAS,iBAAEmH,GAAgB,iBAAEC,GAAkB9mB,MAAO+mB,KAC/DC,EAAAA,EAAAA,GACFtB,EACAe,EACAC,EACAC,GARgB8wE,KAAA,CAAS3K,YAAY,EAAM4gB,6BAA6B,MAY1E,IAAIX,GAAuB,IAAV/rB,EAIjB,OACEhlF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLxC,WAAWkC,EAAAA,EAAAA,GACTiE,EAAAA,EAAOuN,KACPvN,EAAAA,EAAOysG,IACPjnG,GAAgBxF,EAAAA,EAAOwtG,IACvBd,GAAY1sG,EAAAA,EAAO0pG,OACnBgD,GAAYC,EACZ3rF,GAAchhB,EAAAA,EAAOkf,SACrBrlB,GAEFsC,KAAK,OACLH,QAASk6C,EACT3E,YAAa/L,EACble,cAAe9B,EACf5kB,IAAKA,GAEL/E,EAAAA,GAAAC,cAAC01C,EAAAA,EAAqB,CACpB33C,UAAWmG,EAAAA,EAAOkwE,cAClBrjC,YAAaA,EACbN,SAAUA,EACVkhB,UAjHW,EAkHXtxD,KAAMstG,EACN11D,oBAAqBA,EACrB6wB,gBAAiBA,IAElBnvD,GACC5Z,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,EAAAA,EAAOytG,SACrBpjG,GAASxO,EAAAA,GAAAC,cAAA,YAAOuO,GAChBuiG,GAAa/wG,EAAAA,GAAAC,cAAA,YAAO+kF,IAGzBhlF,EAAAA,GAAAC,cAAA,OACEjC,UAAWmG,EAAAA,EAAO0tG,KAClBrmG,MAAM,KACNC,OAAO,KACPwF,QAAQ,aAERjR,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,EAAAA,EAAO2tG,SAAUn+D,EAAE,8JAErCq9D,GACChxG,EAAAA,GAAAC,cAAC8xG,EAAY,CACXxuF,OAAQ6tF,EACRjnE,UAxIe,GAyIf37B,MAAOnQ,EAAKuyG,GAAKpiG,MAAQ,oBAAsB,oBAC/CitC,SAAUp9C,EAAK,wBACfq2C,YAAar2C,EAAK,4BAClBiyG,aAAcM,GAAKpiG,MACnBmV,QAAS2tF,EACT7uD,SAAU+uD,IAGbR,GAAmBtnF,GAClB1pB,EAAAA,GAAAC,cAACqjB,EAAAA,EAAI,CACHve,IAAKosG,EACL5tF,OAAQkG,EACRoB,iBAAkBA,GAClBC,iBAAkBA,GAClBrH,UAAWA,EACXC,UAAWA,EACX1f,MAAO+mB,GACPvH,WAAS,EACTstE,YAAU,EACVntE,QAASiG,EACThG,oBAAqBiG,GAErB7pB,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAACC,KAAK,aAAahkB,QAASk6C,GAClCh8C,EAAK,wBAER2B,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAACC,KAAK,WAAWhkB,QAASkxG,GAChChzG,EAAKuyG,GAAKpiG,MAAQ,oBAAsB,qBAE3CxO,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAACC,KAAK,cAAcs8B,aAAW,EAACtgD,QAASoxG,GAC/ClzG,EAAK,uBAIL,G,wEC/LE,SAAS2zG,EAAmCC,EAAiBC,GAC1E,MAAM/sF,OAAuB3nB,IAAV00G,EACbj0B,GAAkBr9E,EAAAA,EAAAA,IAAOukB,GACzBgtF,GAAavxG,EAAAA,EAAAA,MACbu8D,GAAcC,EAAAA,EAAAA,KAkCpB,OAhCA1vC,EAAAA,EAAAA,IAAc,KACRvI,IAIJ84D,EAAgB78E,SAAU,EAEtB+wG,EAAW/wG,UACb4kF,aAAamsB,EAAW/wG,SACxB+wG,EAAW/wG,aAAU5D,GACvB,GAECy0G,IAEHzyG,EAAAA,EAAAA,KAAU,KACR,GAAI2lB,GAAc84D,EAAgB78E,QAChC,OAGF,MAAMi3F,EAAOA,KACXpa,EAAgB78E,SAAU,EAC1B+7D,GAAa,EAGX+0C,EAAS,EACXC,EAAW/wG,QAAUoD,OAAOT,WAAWs0F,EAAM6Z,GAE7C7Z,GACF,GAEC4Z,GAEIh0B,EAAgB78E,OACzB,C,8FC3CA,QAA6H,WAA7H,EAAuJ,WAAvJ,EAA+K,WCwBzKgxG,EAAqC,CACzC,CACE,CAAEniG,KAAM,YAAazB,MAAO,mCAC5B,CAAEyB,KAAM,uBAAwBzB,MAAO,6CAA8C6jG,cAAc,IAErG,CACE,CAAEpiG,KAAM,eAAgBzB,MAAO,sCAC/B,CAAEyB,KAAM,gBAAiBzB,MAAO,wCAElC,CACE,CAAEyB,KAAM,gBAAiBzB,MAAO,uCAChC,CAAEyB,KAAM,iBAAkBzB,MAAO,yCAEnC,CACE,CAAEyB,KAAM,mBAAoBzB,MAAO,0CACnC,CAAEyB,KAAM,oBAAqBzB,MAAO,6CAIlC8jG,EAAmC,CACvC,CACE,CAAEriG,KAAM,UAAWzB,MAAO,sBAC1B,CAAEyB,KAAM,WAAYzB,MAAO,wBAE7B,CACE,CAAEyB,KAAM,UAAWzB,MAAO,sBAC1B,CAAEyB,KAAM,UAAWzB,MAAO,wBAIxB+jG,EAAqC,CACzC,CACE,CAAEtiG,KAAM,aAAczB,MAAO,sBAAuBgkG,SAAS,GAC7D,CAAEviG,KAAM,iBAAkBzB,MAAO,6BAA8BgkG,SAAS,IAE1E,CACE,CAAEviG,KAAM,iBAAkBzB,MAAO,mCAAoCgkG,SAAS,GAC9E,CACEviG,KAAM,gBAAiBzB,MAAO,8BAA+BgkG,SAAS,EAAMC,eAAe,KAK3FC,EAAmC,CACvC,CACE,CAAEziG,KAAM,aAAczB,MAAO,+BAAgCgkG,SAAS,GACtE,CAAEviG,KAAM,iBAAkBzB,MAAO,eAAgBgkG,SAAS,IAE5D,CACE,CAAEviG,KAAM,iBAAkBzB,MAAO,mCAAoCgkG,SAAS,GAC9E,CAAEviG,KAAM,gBAAiBzB,MAAO,gBAAiBgkG,SAAS,KAIxDG,EAAmC,CACvC,CACE,CAAE1iG,KAAM,QAASzB,MAAO,qBAAsBgkG,SAAS,GACvD,CACEviG,KAAM,qBACNzB,MAAO,kCACP6jG,cAAc,EACdI,eAAe,EACfG,mBAAmB,IAGvB,CACE,CAAE3iG,KAAM,SAAUzB,MAAO,8BAA+BgkG,SAAS,GACjE,CAAEviG,KAAM,kBAAmBzB,MAAO,+BAAgCgkG,SAAS,KAgI/E,GAAe91G,EAAAA,EAAAA,KAnH0BqB,IAKnC,IALoC,MACxCyQ,EAAK,KACL2N,EAAI,WACJ02F,EAAU,UACV70G,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MAsBP,OAAEw0G,GAAYD,EAEdE,EAqER,SAAyB52F,GACvB,OAAQA,GACN,IAAK,QACH,OAAOm2F,EACT,IAAK,UACH,OAAOC,EACT,IAAK,QACH,OAAOI,EACT,IAAK,QACH,OAAOD,EAET,QACE,OAAON,EAEb,CAnFiBY,CAAgB72F,GAE/B,OACEnc,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDzIG,WCyIyBlC,IAC1CgC,EAAAA,GAAAC,cAAA,OAAKjC,UD1IgC,YC2IlCwQ,GACCxO,EAAAA,GAAAC,cAAA,OAAKjC,UD5I+C,YC6IjDwQ,GAIJskG,GACC9yG,EAAAA,GAAAC,cAAA,OAAKjC,UDlJoE,aCmJtEi1G,EAAAA,EAAAA,IAAe50G,EAAuB,IAAjBy0G,EAAOI,SAAgB,OAAID,EAAAA,EAAAA,IAAe50G,EAAuB,IAAjBy0G,EAAOK,WAKnFnzG,EAAAA,GAAAC,cAAA,SAAOjC,UDxJyF,YCyJ7F+0G,EAAO1zG,KAAK0lB,GACX/kB,EAAAA,GAAAC,cAAA,UACG8kB,EAAI1lB,KAAK+zG,IACR,MAAMC,EAASR,EAAmBO,EAAKnjG,MAEvC,OAAImjG,EAAKZ,QAELxyG,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GACbnE,EAAAA,GAAAC,cAAA,KAAGjC,UAAWmG,GACV,GAAEivG,EAAKX,cAAgB,IAAM,MAAKa,EAAAA,EAAAA,IAAcD,MAEpDrzG,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GAAsB9F,EAAK+0G,EAAK5kG,SAKjD4kG,EAAKf,aAELryG,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GACZivG,EAAKR,mBACJ5yG,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,GACb,GAAEivG,EAAKX,cAAgB,IAAM,MAAKa,EAAAA,EAAAA,IAAcD,EAAME,SAG5DvzG,EAAAA,GAAAC,cAAA,QAAMjC,UAAWo1G,EAAKR,kBDjLsK,WCiLrHzuG,GACpEkvG,EAAMG,WAAW,KAEpBxzG,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GAAsB9F,EAAK+0G,EAAK5kG,SAMnDxO,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GACbnE,EAAAA,GAAAC,cAAA,KAAGjC,UAAWmG,IACXouE,EAAAA,EAAAA,IAAqB8gC,EAAMjyG,UAE7B,IA9Ee9B,KAAoD,IAAnD,OAAEm0G,EAAM,WAAED,GAAoCl0G,EAC7E,IAAKm0G,EACH,OAGF,MAAMC,EAAmB1qE,OAAOyqE,GAAU,EAE1C,OACEzzG,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GDxH4M,WCwH/KwzG,GDxHqM,aCyHhPA,EAAoB,KAAGnhC,EAAAA,EAAAA,IAAqBjoE,KAAKu2E,IAAI4yB,MAAc,KAAGlhC,EAAAA,EAAAA,IAAqBkhC,KAC3FD,GACCxzG,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG,IAAI,IACH2iG,EAAW,MAGZ,EA+DMG,CAAwBN,GACzBrzG,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GAAsB9F,EAAK+0G,EAAK5kG,QAC5C,QAMX,G,gOC/BV,SAAe9R,EAAAA,EAAAA,KA9If,SAA0BqB,GAAiC,IAAhC,KAAE4T,EAAI,WAAE2kE,GAAsBv4E,EACvD,MAAM,SACJ4vE,EAAQ,iBACR2P,EAAgB,gBAChB+mB,EAAe,oBACfuP,IACEx1G,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPyG,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7B+mD,EAAS,WAAYh2C,GAAQA,EAAKg2C,OAClC70B,IAAajE,EAAAA,EAAAA,IAASld,EAAKlU,KAEjCo2G,EAAAA,EAAAA,GAAkBliG,EAAKlU,IAEvB,MAAM,kBACJgsB,EAAiB,oBAAEC,EAAmB,wBACtCigB,EAAuB,kBAAEhgB,EAAiB,uBAC1CC,EAAsB,sBAAEC,IACtBC,EAAAA,EAAAA,GAAuB/kB,GAErB0lB,GAAoB7mB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,UAC9CspB,GAAiB9mB,EAAAA,EAAAA,IAAgB,IAAMwO,SAASE,OAChDqY,GAAiB/mB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,QAASwpB,cAAc,sCAClE6wE,GAAY73F,EAAAA,EAAAA,IAAgB,KAAM,CAAGktF,YAAY,EAAMgjB,SAAS,OAEhE,UACJrwF,EAAS,UAAEC,EAAS,iBAAEmH,EAAgB,iBAAEC,EAAkB9mB,MAAO+mB,IAC/DC,EAAAA,EAAAA,GACFtB,EACAe,EACAC,EACAC,EACA8wE,GAGIphD,GAAcz2C,EAAAA,EAAAA,IAAgB,KAC9B6lB,GAEJ46E,EAAgB,CAAEv6D,OAAQn4B,EAAKlU,GAAI6H,OAAQurE,EAAAA,GAAkBkjC,aAAc,IAGvEt/C,GAAkB7wD,EAAAA,EAAAA,IAAiB8J,KACvCsmG,EAAAA,EAAAA,GAAoCtmG,GACpCi8B,EAAwBj8B,EAAE,IAGtBumG,GAAqBrwG,EAAAA,EAAAA,IAAgB,KACzC05E,EAAiB,CAAE7/E,GAAIkU,EAAKlU,GAAIorC,sBAAsB,EAAM+7C,WAAY,WAAY,IAGhFsvB,GAAwBtwG,EAAAA,EAAAA,IAAgB,KAC5C05E,EAAiB,CAAE7/E,GAAIkU,EAAKlU,GAAIorC,sBAAsB,EAAM+7C,WAAY,kBAAmB,IAGvFuvB,GAAiBvwG,EAAAA,EAAAA,IAAgB,KACrC+pE,EAAS,CAAElwE,GAAIkU,EAAKlU,GAAIorC,sBAAsB,GAAO,IAGjDurE,GAAoBxwG,EAAAA,EAAAA,IAAgB,KACxC05E,EAAiB,CAAE7/E,GAAIkU,EAAKlU,GAAIorC,sBAAsB,GAAO,IAGzDwrE,GAAoBzwG,EAAAA,EAAAA,IAAgB,KACxCgwG,EAAoB,CAAE9pE,OAAQn4B,EAAKlU,GAAIi2E,UAAW4C,GAAa,IAGjE,OACEt2E,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACLs+C,KAAK,SACL,eAAc1xC,EAAKlU,GACnBylD,SAAU,EACVllD,UAAWmG,EAAAA,EAAOwN,KAClB+jC,YAAa+e,EACbt0D,QAASk6C,EACT5uB,cAAe9B,GAEf3pB,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACLD,KAAMA,EACNurC,WAAS,EACTC,kBAAmB0zB,EAAAA,GAAkBkjC,YACrCx1D,gBAAgB,SAElBv+C,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAAA,EAAO8L,KAAM0B,EAAK2iG,kBAAoBnwG,EAAAA,EAAOowG,sBACzE5sD,EAAStpD,EAAK,YAAag2D,EAAAA,EAAAA,IAAeh2D,EAAMsT,SAE1BnU,IAAxBksB,GACC1pB,EAAAA,GAAAC,cAACqjB,EAAAA,EAAI,CACHC,OAAQkG,EACRoB,iBAAkBA,EAClBC,iBAAkBA,EAClBrH,UAAWA,EACXC,UAAWA,EACX1f,MAAO+mB,EACP/sB,WAAWkC,EAAAA,EAAAA,GAAe,0BAA2BiE,EAAAA,EAAOqwG,aAC5DhxF,WAAS,EACTstE,YAAU,EACVntE,QAASiG,EACThG,oBAAqBiG,GAEpB89B,EACC3nD,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAAC/jB,QAAS8zG,EAAoB9vF,KAAK,cACzC9lB,EAAK,mCAER2B,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAAC/jB,QAAS+zG,EAAuB/vF,KAAK,WAC5C9lB,EAAK,uCAIV2B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,MACIiiB,GACA9yB,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAAC/jB,QAASg0G,EAAgBhwF,KAAK,WACrC9lB,EAAK,qBAGTy0B,EACC9yB,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAAC/jB,QAASi0G,EAAmBjwF,KAAK,WACxC9lB,EAAK,gCAGR2B,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CAAC/jB,QAASi0G,EAAmBjwF,KAAK,QACxC9lB,EAAK,kCAGV2B,EAAAA,GAAAC,cAACikB,EAAAA,EAAQ,CACP/jB,QAASk0G,EACTlwF,KAAMmyD,EAAa,YAAc,WAEhCj4E,EAAKi4E,EAAa,8BAAgC,gCAQnE,IC5FA,GAAe55E,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAiC,IAA/B,WAAEg3E,GAAYh3E,EACrB,MAAQm1G,gBAAgB,OAAE5qC,EAAM,SAAE6qC,IAAe93G,EAAOg5B,QAIxD,MAAO,CACL6+E,eAAgBn+B,EAAao+B,EAAW7qC,EACxCjrE,UALgBhC,EAAOkC,MAAMC,KAM7BC,UALgBpC,EAAOqC,MAAMF,KAM9B,GAVepC,EAhDpB,SAAoBoB,GAOM,IAPL,WACnBu4E,EAAU,UACVt4E,EAAS,eACTy2G,EAAc,UACd71G,EAAS,UACTI,EAAS,UACT21G,GACsB52G,EACtB,MAAMM,GAAOC,EAAAA,EAAAA,KACPwQ,GAAgB5O,EAAAA,EAAAA,GACpBiE,EAAAA,EAAOuN,MACN+iG,EAAer0G,QAAU+D,EAAAA,EAAOywG,OACjCD,GAAaxwG,EAAAA,EAAO0wG,QACpB72G,EACA,gBAII+G,GAAMnE,EAAAA,EAAAA,IAAuB,MAInC,OAFAklF,EAAAA,EAAAA,GAAoB/gF,GAAKy7E,EAAAA,EAAAA,OAGvBxgF,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACLtH,GAAG,cACHO,UAAW8Q,EACXpN,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzBi3G,EAAep1G,KAAKyqC,IACnB,MAAMn4B,EAAO/S,EAAUkrC,IAAW9qC,EAAU8qC,GAE5C,GAAKn4B,EAIL,OACE3R,EAAAA,GAAAC,cAAC60G,EAAiB,CAChBv/D,IAAKzL,EACLn4B,KAAMA,EACN2kE,WAAYA,GACZ,IAKZ,I,2KC6DA,SAAe55E,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAAiC,IAA/B,WAAEg3E,GAAYh3E,EAC9D,MAAQm1G,gBAAgB,SAAEC,EAAQ,OAAE7qC,GAAQ,SAAEkrC,GAAan4G,EAAOg5B,SAC1D3E,aAAa,cAAE+jF,EAAa,sBAAEC,KAA4B73G,EAAAA,EAAAA,KAAeR,GAC3EkwE,GAAmBC,EAAAA,EAAAA,KAAuBnwE,GAC1C0kD,GAAgBqnB,EAAAA,EAAAA,KAA+B/rE,EAAQ,yBAE7D,MAAO,CACLqzB,cAAerzB,EAAOqzB,cACtBwkF,eAAgBn+B,EAAao+B,EAAW7qC,EACxCvgD,QAASgtD,GAAc2+B,GAAyBD,EAChDloC,mBACAxrB,gBACA1iD,UAAWhC,EAAOkC,MAAMC,KACxBC,UAAWpC,EAAOqC,MAAMF,KACxBm2G,YAAaH,EACd,GAfiBp4G,EA9FpB,SAAqBoB,GAWK,IAXJ,cACpBkyB,EAAa,eACbwkF,EAAc,UACd71G,EAAS,UACTI,EAAS,QACTm2G,EAAO,QACP7rF,EAAO,iBACPwjD,EAAgB,WAChBwJ,EAAU,cACVh1B,EAAa,YACb4zD,GACsBn3G,EACtB,MAAM,kBAAEm4E,IAAsB93E,EAAAA,EAAAA,MAExBC,GAAOC,EAAAA,EAAAA,KAEPiC,GAAQ5B,EAAAA,EAAAA,KAAQ,IACU,IAA1B81G,EAAer0G,OACV,CAACxB,EAAU61G,EAAe,KAAOz1G,EAAUy1G,EAAe,KAG5DA,EACJp1G,KAAK5B,GAAOmB,EAAUnB,IAAOuB,EAAUvB,KACvC8B,QAAQoS,GAASA,GAAQA,EAAKlU,KAAOwyB,IACrC7wB,MAAM,EAAGg2G,EAAAA,KACTC,WACF,CAACplF,EAAewkF,EAAgB71G,EAAWI,IAExCs2G,GAAe32G,EAAAA,EAAAA,KAAQ,IACtB4B,GAAOH,OACLG,EAAM2d,QAAO,CAACC,EAAKxM,KACxB,MAAMikB,EAAUs/E,EAAYvjG,EAAKlU,IACjC,IAAKm4B,EAAS,OAAOzX,EAErB,MAAMo3F,EAAgB3/E,EAAQu3C,WAAWrlD,MAAMrqB,IAC7C,MAAMk0B,EAAQiE,EAAQ72B,KAAKtB,GAC3B,IAAKk0B,KAAW,sBAAuBA,GAAQ,OAAO,EACtD,MAAM6jF,EAAS5/E,EAAQ6/E,YAAc9jF,EAAMl0B,IAAMm4B,EAAQ6/E,WACzD,OAAO9jF,EAAM+jF,oBAAsBF,CAAM,IAI3C,OADAr3F,EAAIxM,EAAKlU,IAAM83G,EACRp3F,CAAG,GACT,CAAC,GAduB,CAAC,GAe3B,CAAC+2F,EAAa30G,IAEXo1G,GAAiBh3G,EAAAA,EAAAA,KAAQ,IACtB81G,EAAer1G,MAAM,EAjDV,IAkDjB,CAACq1G,KAEJZ,EAAAA,EAAAA,GAAkB8B,GAElB,MAAMv0D,EAAY+zD,GAAW7rF,GAEvB,aAAE5pB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkBwhD,OAAW5jD,OAAWA,EAAW,QAalG,IAXAgC,EAAAA,EAAAA,KAAU,KACH8hD,IAAiBwrB,IAClB1rB,IACFk9B,EAAAA,EAAAA,IAA4BwC,EAAAA,GAAqBgB,EAAAA,MACjD8zB,EAAAA,EAAAA,GAAet/B,MAEfgI,EAAAA,EAAAA,IAA4BwC,EAAAA,GAAqBgB,EAAAA,MACjD+zB,EAAAA,EAAAA,IAAev/B,IACjB,GACC,CAACA,EAAYl1B,EAAWE,EAAewrB,IAErCptE,EAIL,OACEM,EAAAA,GAAAC,cAAA,UACEkc,KAAK,SACL1e,GAAG,eACHO,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAAA,EAAOuN,KAAM/R,GACvC,aAAYtB,EAAK,+BACjB8B,QAASA,IAAM+1E,EAAkB,CAAE5sD,SAAS,EAAMgtD,eAClD50E,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzB+C,EAAMlB,KAAKsS,GACV3R,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL2jC,IAAK5jC,EAAKlU,GACVkU,KAAMA,EACNrR,KAAK,OACLtC,UAAWmG,EAAAA,EAAO0N,OAClBikG,gBAAc,EACdC,sBAAuBT,EAAa3jG,EAAKlU,QAKnD,I,qIC3HO,MAAMqjF,EAAqB,IAC5Bk1B,EAAgB,IAAOp6D,EAAAA,EACvBq6D,EAAiB,GACjBC,EAAgB,MAASt6D,EAAAA,EACzBu6D,EAAgB,KAAQv6D,EAAAA,EAExBw6D,EAAqC,IAAIrzG,IAExC,SAAS8yG,EAAev/B,GAC7B+/B,IAEA,MAAM,UACJh+C,EAAS,QAAEi+C,EAAO,eAAEC,EAAc,YAAEC,EAAW,cAAEC,GAC/CC,EAAgBpgC,GAEpB,KAAKggC,GAAYG,GAAkBD,GAAgBn+C,GAAck+C,GAC/D,OAGF,MAAQtpB,OAAQ0pB,EAAc3pB,MAAO4pB,GAAgBL,EAAe3oG,wBAC9DipG,EAAQF,EAAeX,EAGvBc,EAAmBL,EAAc,GACjCM,EAAoBN,EAAcA,EAAcr2G,OAAS,GACzD42G,EAASC,EAAUH,GAEzBzsG,MAAMgN,KAAKm/F,GAAanB,UAAUxpG,SAAQ,CAAC8F,EAAMwwD,EAAKpkE,KAAiB,IAAf,OAAEqC,GAAQrC,EAChE,MAAMN,EAAKw5G,EAAUtlG,GACrB,IAAKlU,EAAI,OACT,MAAM0wD,EAAS1wD,IAAOu5G,EACtB,IAAIE,EAAeC,EAAeb,EAAS74G,GACvC25G,EAASnB,EAAiB9zC,EAAQ,EAStC,GARK+0C,IAIHA,EAHe/0C,IAAU/hE,EAAS,EAGV22G,EAAoBD,EAC5CM,EAASnB,IAGNiB,EAAc,OAEnB,IAEE3oE,IAAK8oE,EACL1pG,KAAM2pG,EACN9rG,MAAO+rG,GACLL,EAAatpG,wBAEjB,MACED,KAAM6pG,EACNhsG,MAAOisG,GACL9lG,EAAK/D,wBAET,GAAI4pG,EAASZ,EACX,OAGFU,GAAYpB,EACZqB,GAAa,EAAIrB,EAEjB,MAAMwB,EAAiBJ,EAAWE,EAC5BG,EAAiBN,EAAUR,EAC3Be,EAAYL,EAAYE,EAE9BJ,GAAWnB,EAEX,MAAM2B,EAAeL,EAASF,EAAW,EAAIpB,EACvC4B,EAAejB,EAAQQ,EAAUnB,EACjC6B,EAAUN,GAAWF,EAAY,EAAIrB,IAE3Ch2E,EAAAA,EAAAA,KAAgB,KACd,IAAKg3E,EAAc,OACnB,MAAMc,EAAQC,EAAYtmG,GAE1B,IAAIumG,EAGAd,EAASnB,GACXiC,EAASD,EAAYf,GACjB/oD,GACF+pD,EAAO7lG,UAAUxO,IAAIs0G,EAAAA,EAAcC,YAIrCJ,EAAM3lG,UAAUxO,IAAIs0G,EAAAA,EAAcE,mBAGpCC,EAAAA,EAAAA,IAAYN,EAAO,CACjBzpE,IAAM,GAAEsoE,MACRlpG,KAAO,GAAE6pG,MACTJ,OAAS,GAAEA,IACX/gD,QAAS6hD,EAAS,IAAM,GACxB15B,UAAY,eAAck5B,QAAqBC,iBAA8BC,OAG3EM,IACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB3pE,IAAM,GAAE8oE,MACR1pG,KAAO,GAAE2pG,MACTF,OAAS,GAAEA,MAIf/+C,EAAU9lD,YAAYylG,GAClBE,GACF7/C,EAAU9lD,YAAY2lG,GAExBhB,EAAa7kG,UAAUxO,IAAI,aAC3B8N,EAAKU,UAAUxO,IAAI,cAEnBq8B,EAAAA,EAAAA,KAAgB,MACdo4E,EAAAA,EAAAA,IAAYN,EAAO,CACjB3hD,QAAS,GACTmoB,UAAW,KAGT05B,GACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB7hD,QAAS,IACTmoB,UAAY,eAAcq5B,QAAmBC,iBAA4BC,OAG3EC,EAAM3lG,UAAUxO,IAAIs0G,EAAAA,EAAcI,iBAGpC,MAAMn7F,EAAKo7F,GAAsB,MAC/Bt4E,EAAAA,EAAAA,KAAgB,KACVm4B,EAAUogD,SAAST,IACrB3/C,EAAUppB,YAAY+oE,GAEpBE,GAAU7/C,EAAUogD,SAASP,IAC/B7/C,EAAUppB,YAAYipE,GAExBhB,GAAc7kG,UAAUoG,OAAO,aAC/B9G,EAAKU,UAAUoG,OAAO,YAAY,GAClC,GACDqoE,EAAqBgB,EAAAA,KAExBs0B,EAAUvyG,IAAIuZ,EAAG,GACjB,GACF,GAEN,CAEO,SAASw4F,EAAet/B,GAC7B+/B,IAEA,MAAM,UACJh+C,EAAS,QACTi+C,EAAO,cACPG,EAAa,YACbD,EAAW,eACXD,GACEG,EAAgBpgC,GAEpB,KAAKggC,GAAYG,GAAkBD,GAAgBn+C,GAAck+C,GAC/D,OAEF,MAAQvpB,MAAO4pB,GAAgBL,EAAe3oG,wBAGxCkpG,EAAmBL,EAAc,GACjCM,EAAoBN,EAAcA,EAAcr2G,OAAS,GACzD42G,EAASC,EAAUH,GAEzBzsG,MAAMgN,KAAKm/F,GAAanB,UAAUxpG,SAAQ,CAAC8F,EAAMwwD,EAAK7iE,KAAiB,IAAf,OAAEc,GAAQd,EAChE,MAAM7B,EAAKw5G,EAAUtlG,GACrB,IAAKlU,EAAI,OACT,MAAM0wD,EAAS1wD,IAAOu5G,EACtB,IAAIE,EAAeC,EAAeb,EAAS74G,GACvC25G,EAASnB,EAAiB9zC,EAAQ,EAStC,GARK+0C,IAIHA,EAHe/0C,IAAU/hE,EAAS,EAGV22G,EAAoBD,EAC5CM,EAASnB,IAGNiB,EAAc,OAEnB,MACE3oE,IAAK8oE,EACL1pG,KAAM2pG,EACN9rG,MAAO+rG,GACL5lG,EAAK/D,wBAET,IACED,KAAM6pG,EACNhsG,MAAOisG,EACPlpE,IAAKsoE,GACHK,EAAatpG,wBAEjB,GAAI0pG,EAAWV,EACb,OAGFY,GAAUtB,EACVuB,GAAW,EAAIvB,EAEf,MAAM2B,EAAeL,EAASF,EACxBQ,EAAejB,EAAQQ,EAAUlB,EACjC4B,EAAUN,EAAUF,EAE1BV,GAASX,EAET,MAAMwB,EAAiBJ,EAAWE,EAAS,EAAItB,EACzCyB,EAAiBN,EAAUR,EAAQX,EACnC0B,EAAYL,GAAaE,EAAU,EAAIvB,IAE7Ch2E,EAAAA,EAAAA,KAAgB,KACd,MAAM83E,EAAQC,EAAYtmG,GAC1B,IAAIumG,EAEAd,EAASnB,GACXiC,EAASD,EAAYf,GACjB/oD,GACF+pD,EAAO7lG,UAAUxO,IAAIs0G,EAAAA,EAAcC,YAGrCJ,EAAM3lG,UAAUxO,IAAIs0G,EAAAA,EAAcE,iBAAkBF,EAAAA,EAAcI,kBAGpED,EAAAA,EAAAA,IAAYN,EAAO,CACjBzpE,IAAM,GAAE8oE,MACR1pG,KAAO,GAAE2pG,MACT9rG,MAAQ,GAAE+rG,MACVH,OAAS,GAAEA,MAGTc,IACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB3pE,IAAM,GAAEsoE,MACRlpG,KAAO,GAAE6pG,MACTJ,OAAS,GAAEA,IACX/gD,QAAS,IACTmoB,UAAY,eAAck5B,QAAqBC,iBAA8BC,OAIjFjmG,EAAKU,UAAUxO,IAAI,aACnBqzG,EAAc7kG,UAAUxO,IAAI,aAE5Bw0D,EAAU9lD,YAAYylG,GAClBE,GACF7/C,EAAU9lD,YAAY2lG,IAGxBh4E,EAAAA,EAAAA,KAAgB,MACdo4E,EAAAA,EAAAA,IAAYN,EAAO,CACjB3hD,QAAS6hD,EAAS,IAAM,GACxB15B,UAAY,eAAcq5B,QAAmBC,iBAA4BC,OAGvEG,GACFI,EAAAA,EAAAA,IAAYJ,EAAS,CACnB7hD,QAAS,GACTmoB,UAAW,KAGbw5B,EAAM3lG,UAAUoG,OAAO0/F,EAAAA,EAAcI,iBAGvC,MAAMn7F,EAAKo7F,GAAsB,MAC/Bt4E,EAAAA,EAAAA,KAAgB,KACVm4B,EAAUogD,SAAST,IACrB3/C,EAAUppB,YAAY+oE,GAEpBE,GAAU7/C,EAAUogD,SAASP,IAC/B7/C,EAAUppB,YAAYipE,GAExBvmG,EAAKU,UAAUoG,OAAO,aACtBy+F,EAAc7kG,UAAUoG,OAAO,YAAY,GAC3C,GACDqoE,EAAqBgB,EAAAA,KAExBs0B,EAAUvyG,IAAIuZ,EAAG,GACjB,GACF,GAEN,CAEA,SAASs5F,EAAgBpgC,GACvB,IAAIje,EAAYjmD,SAASqpB,eAAe,cAIxC,GAHI48B,GAAaie,IACfje,EAAYA,EAAUztC,cAA2B,oBAE9CytC,EAAW,MAAO,CAAC,EACxB,MAAMi+C,EAAUj+C,EAAUztC,cAA2B,iBAC/C8tF,EAASrgD,EAAUztC,cAA2B,gBAC9C2rF,EAAiBl+C,EAAUztC,cAA2B,gBACtD4rF,EAAckC,GAAQ3gG,iBAA+B,IAAG4gG,EAAAA,EAAahnG,QACrE8kG,EAAgBH,GAASv+F,iBAA8B,WAE7D,MAAO,CACLsgD,YACAi+C,UACAC,iBACAC,cACAC,gBAEJ,CAEA,SAASwB,EAAYW,GACnB,MAAMZ,EAAQY,EAAS/kG,WAAU,GACjCmkG,EAAM3lG,UAAUxO,IAAIs0G,EAAAA,EAAcH,OAGlCA,EAAM3lG,UAAUoG,OAAO,aAEvBu/F,EAAM5zG,WAAY,EAClB4zG,EAAMa,cAAgB33D,EAAAA,EAEtB,MAAM43D,EAAeF,EAAShuF,cAAc,UAC5C,GAAIkuF,EAAc,CAChB,MAAM1tG,EAAS4sG,EAAMptF,cAAc,UACnCxf,GAAQO,WAAW,OAAO8rD,UAAUqhD,EAAc,EAAG,EACvD,CAEA,OAAOd,CACT,CAEA,SAASf,EAAUljG,GACjB,OAAOA,GAAIwE,aAAa,eAC1B,CAEA,SAAS4+F,EAAepjG,EAAiBtW,GACvC,OAAOsW,GAAI6W,cAA4B,kBAAiBntB,MAC1D,CAEA,SAAS+6G,EAAsBO,EAA8BC,GAC3D,MAAMC,EAAUl1G,WAAWg1G,EAAUC,GAErC,MAAO,KACLhzB,aAAaizB,GACbF,GAAU,CAEd,CAEA,SAAS1C,IACPD,EAAUvqG,SAASuR,GAAOA,MAC1Bg5F,EAAU8C,OACZ,C,2CCjWO,MAAMC,EAAqB,oCACrBC,EAAuB,+B,2KCgBpC,MAAMC,EAAgD,CAAC,EAMjDC,GAAax6F,EAAAA,EAAAA,IADS,KA2H5B,EApHA,SAA2BgrB,EAA4ByvE,IACrD/5G,EAAAA,EAAAA,KAAU,KACR,QAAehC,IAAXssC,EAAsB,QA0BVz/B,MAAMqwD,QAAQ5wB,GAAUA,EAAS,CAACA,IAE1Cj+B,SAASpO,IACf,MAAM8wB,EAAUgrF,IAAiB16G,EAAAA,EAAAA,MAAY+2B,QAAQm/E,SAASt3G,IAAK0vE,aAAa,GAC3E5+C,GA5BenY,iBACdkjG,EACNE,EAAY3tG,SAAQ9N,IAAgC,IAA/B,KAAEwjE,EAAI,OAAE+7B,EAAM,SAAEmc,GAAU17G,EACzC07G,EAkGZrjG,eAA6BmrD,GAC3B,MAAMm4C,GAASC,EAAAA,EAAAA,IAAsBC,EAAAA,EAAAA,IAAkBr4C,IACvD,IAAIs4C,EAAa,EACjB,UAAW,MAAMC,KAASJ,EAExB,GADAG,GAAcC,EAAMC,WAChBF,GAvHoB,QAwHtB,KAGN,CA1GUG,CAAcz4C,GAGhBlT,EAAAA,GACEkT,EACA+7B,GAEClmC,MAAMljD,IACAA,IAEDopF,IAAW96F,EAAAA,GAAey3G,aAqE1C,SAA4B3sF,GAC1B,MAAM4sF,EAAO9nG,SAAS8nG,KAChBjzG,EAAQmL,SAASnS,cAAc,SACrCgH,EAAMkzG,QAAU,OAChBlzG,EAAM/C,IAAMopB,EACZrmB,EAAMilD,OAAQ,EACdjlD,EAAMmzG,UAAW,EACjBnzG,EAAMozG,uBAAwB,EAC9BpzG,EAAMjD,MAAMw1E,QAAU,OACtB0gC,EAAK3nG,YAAYtL,GACjBA,EAAMyrF,OACN3uF,YAAW,MACTu2G,EAAAA,EAAAA,GAAYrzG,GACZizG,EAAKjrE,YAAYhoC,EAAM,GA9GU,IAgHrC,CAnFcszG,CAAmBrmG,GAEjBopF,IAAW96F,EAAAA,GAAeC,UAC5B00D,EAAAA,EAAAA,IAAajjD,GACf,GACA,GACJ,EAQFsmG,CAYN,SAA+B1wE,EAAgBvb,GAC7C,MAAM2mF,GAAcuF,EAAAA,EAAAA,MAAkB57G,EAAAA,EAAAA,MAAairC,GACnD,IAAKorE,IAAgBA,EAAY/nC,YAAY/sE,OAC3C,MAAO,GAGT,MAAMs6G,EAbR,SAAmC7zE,EAAU8zE,EAAcC,GACzD,MAAMxsD,EAAevnB,EAAI1xB,QAAQwlG,GAC3B31G,EAAQsF,KAAK2B,IAAImiD,EAWoDysD,EAXvB,GAC9C51G,EAAMqF,KAAKC,IAAI6jD,EAUsDysD,EAVzBh0E,EAAIzmC,QACtD,OAAOymC,EAAIznC,MAAM4F,EAAOC,EAC1B,CAQqB61G,CAAuB5F,EAAY/nC,WAAY5+C,GAE5DirF,EAAgC,GA+BtC,OA9BAkB,EAAW7uG,SAASkvG,IAClB,GAAI1B,EAAiBvvE,IAASvmC,IAAIw3G,GAChC,OAGF,MAAMppF,EAAQujF,EAAYn2G,KAAKg8G,GAC/B,IAAKppF,KAAW,YAAaA,GAC3B,OAGF,MAAMq5B,EAAUttD,QAAQi0B,EAAM9qB,QAAQI,OAGtCuyG,EAAYh4G,KAAK,CACf+/D,MAAMkjC,EAAAA,EAAAA,IAAkB9yE,EAAO,QAC/B2rE,OAAQtyC,EAAUxoD,EAAAA,GAAey3G,YAAcz3G,EAAAA,GAAeC,QAC9Dg3G,SAAUzuD,IAAWgwD,EAAAA,EAAAA,GAA0B7B,EAAAA,KAGjDK,EAAYh4G,KAAK,CAAE+/D,MAAMkjC,EAAAA,EAAAA,IAAkB9yE,GAAQ2rE,OAAQ96F,EAAAA,GAAeC,UACtEkvB,EAAM9qB,QAAQo0G,UAChBzB,EAAYh4G,KAAK,CACf+/D,MAAMkjC,EAAAA,EAAAA,IAAkB9yE,EAAO,QAAQ,GACvC2rE,OAAQ96F,EAAAA,GAAey3G,cAI3BZ,EAAiBvvE,IAAWuvE,EAAiBvvE,IAAW,IAAI/mC,KAAOc,IAAIk3G,EAAe,IAGjFvB,CACT,CApDoB0B,CAAsBz9G,EAAI8wB,GAAS,GACjD,GACD,CAACgrF,EAAezvE,GACrB,C,sLChEA,QAAiD,WC4GjD,GAAeptC,EAAAA,EAAAA,KA7EoBqB,IAOnB,IAPoB,MAClC4zB,EAAK,UACLwpF,EAAS,MACTh5C,EAAK,UACLnkE,EAAS,MACTgG,EAAK,UACLijE,GACSlpE,EACT,MAAM,kBAAE25B,IAAsBt5B,EAAAA,EAAAA,MAGxB2G,GAAMnE,EAAAA,EAAAA,IAAuB,OAC5Bw6G,EAAiBC,IAAsB3zG,EAAAA,EAAAA,IAAS,IAAMk0C,EAAAA,IAEvD,OAAE9R,EAAM,GAAErsC,EAAE,MAAE69G,GAAU3pF,GACxB,UAAEa,GAAc8oF,GAAS,CAAC,GAC1B,SAAE5qE,EAAQ,OAAE6qE,EAAM,UAAEC,GAAcL,EAElCroF,IAAajE,EAAAA,EAAAA,IAASib,GACtBkH,EAAe,IAAEC,EAAAA,EAAAA,IAAYnH,EAAQrsC,MAAO0kE,KAAS8E,EAAY,UAAY,WAE7Ew0C,GAAgB98G,EAAAA,EAAAA,KAAQ,IAC5B6zB,GAAWpF,MAAM67C,IAAM/Y,EAAAA,EAAAA,IAAe+Y,EAAEv4B,SAAUA,MAAYs0C,OAC7D,CAACt0C,EAAUle,IACRkpF,GAAsBz0C,GAAavpE,QAAQ+9G,IAAkB3oF,EAE7D6oF,GAAwB/3G,EAAAA,EAAAA,IAAgB,KAC5C,IAAKmB,EAAI3D,QAAS,OAClB,MAAMqK,EAAS1G,EAAI3D,QAAQw6G,aAC3BP,EAAmB/wG,KAAK7J,MAhCK,GAgCCgL,GAAmC,KAGnEm8B,EAAAA,EAAAA,IAAsBtoC,IAAyB,IAAvBu8G,GAAkBv8G,EACpC5B,QAAQ+9G,KAAmB/9G,QAAQm+G,IACrCF,GACF,GACC,CAACF,KAEJryD,EAAAA,EAAAA,GAAkBrkD,EAAK42G,GAEvB,MAAMthE,GAAcz2C,EAAAA,EAAAA,IAAgB,KAClC8zB,EAAkB,CAChBoS,SACAvb,QAAS9wB,EACTuzC,cACAN,YACA,IAGJ,OACE1wC,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACL/G,WAAWkC,EAAAA,EAAAA,GDnF0H,WCmFjFq7G,GDnFmG,WCmF5Ev9G,GAC3EgG,OAAOC,EAAAA,EAAAA,GAAWD,EAAQ,wBAAuBo3G,OACjDj7G,QAASk6C,GAETr6C,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDxFkK,WCwFhIs7G,GDxFqJ,cC0FnM99G,QAAQ09G,IACPp7G,EAAAA,GAAAC,cAAC01C,EAAAA,EAAqB,CACpB33C,WAAWkC,EAAAA,EAAAA,GD5F2M,WC4F3Kw7G,GD5FkM,YC6F7OhrE,SAAUA,EACVM,YAAaA,EACb1wC,KAAM86G,EACNvyC,WAnEqB,EAmETuyC,EACZtyC,YAAa7B,EACb3E,YAAa2E,IAGhBy0C,GACC17G,EAAAA,GAAAC,cAAA,QAAMjC,UDtGoQ,YCsGlOy9G,GAEtC,ICnFJK,EAAqB,EAAI,GAiG/B,SAASC,EAAaZ,GACpB,MAAM,EACJjvG,EAAC,EAAEC,EAAC,MAAEX,EAAK,OAAEC,EAAM,SAAEuwG,GACnBb,EAAUc,YAEd,OAAOh4G,EAAAA,EAAAA,GACJ,SAAQiI,KACR,QAAOC,KACP,UAASX,KACT,WAAUC,KACV,qBAAoBuwG,8BAEzB,CAEA,SAAet/G,EAAAA,EAAAA,KA7GUqB,IAET,IAFU,MACxB4zB,EAAK,SAAEx0B,EAAQ,UAAEa,GACRD,EACT,MAAM,aAAEumE,EAAY,aAAE17C,EAAY,iBAAEszF,IAAqB99G,EAAAA,EAAAA,MAGnD2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7B43B,GAAa2jF,EAAAA,EAAAA,MAEnB38G,EAAAA,EAAAA,KAAU,KACR,IAAKuF,EAAI3D,UAAYjE,EAAU,OAC/B,MAAMqxC,EAAUzpC,EAAI3D,QAEpB,GAAIo3B,EAAWhtB,MAAQ4wG,EAAAA,IAKrB,YAJAl8E,EAAAA,EAAAA,KAAgB,KACdsO,EAAQxqC,MAAM0hB,eAAe,iBAC7B8oB,EAAQxqC,MAAM0hB,eAAe,iBAAiB,IAKlD,MAAM22F,EAAoB7jF,EAAWhtB,MAAQgtB,EAAW/sB,OAElDD,EAAQ6wG,EAAoBP,EAC9BttE,EAAQotE,aAAeE,EAAqBttE,EAAQ8tE,YAClD7wG,EAAS4wG,EAAoBP,EAC/BttE,EAAQotE,aAAeptE,EAAQ8tE,YAAcR,GAEjD57E,EAAAA,EAAAA,KAAgB,KACdsO,EAAQxqC,MAAMwhB,YAAY,gBAAkB,GAAEha,OAC9CgjC,EAAQxqC,MAAMwhB,YAAY,iBAAmB,GAAE/Z,MAAW,GAC1D,GACD,CAACtO,EAAUq7B,IAEd,MAkBM+jF,EAAa5qF,EAAM4qF,WAEzB,OACEv8G,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GFhFS,YEgFuB/C,GFhFqB,YEgFOa,GACvE+G,IAAKA,GAEJw3G,GAAYl9G,KAAI,CAAC87G,EAAW55G,KAC3B,OAAQ45G,EAAUh/F,MAChB,IAAK,WACL,IAAK,QACL,IAAK,cAAe,CAClB,MAAMqgG,EAAUr/G,IAAgC,aAAnBg+G,EAAUh/F,MAA0C,UAAnBg/F,EAAUh/F,MACxE,OACEnc,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAkBq4G,GF3F8B,YE4F1Ex4G,MAAO+3G,EAAaZ,GACpBh7G,QAASA,IAnCOg7G,KAC5B,OAAQA,EAAUh/F,MAChB,IAAK,WACL,IAAK,QACHmoD,EAAa,CAAEyB,SAAUo1C,EAAUj2C,MACnC,MAEF,IAAK,cACHt8C,EAAa,CACX9rB,OAAQq+G,EAAUsB,UAClBnuG,UAAW6sG,EAAU7sG,YAEvB4tG,IAGJ,EAoB2BQ,CAAqBvB,IAG1C,CACA,IAAK,oBACH,OACEn7G,EAAAA,GAAAC,cAAC08G,EACC,CACApnE,IAAM,GAAE4lE,EAAUh/F,QAAQ5a,IAC1BowB,MAAOA,EACPwpF,UAAWA,EACXh5C,MAAO5gE,EACP0lE,WAAY9pE,EACZa,UAAWmG,EACXH,MAAO+3G,EAAaZ,KAG1B,QACE,OACJ,IAEE,G,gFC1GH,SAASyB,EACdhgH,EAAWigH,GAEX,GAA0B,SAAtBA,EAAa1gG,MAAyC,UAAtB0gG,EAAa1gG,KAAkB,OAAO0gG,EAE1E,GAA0B,YAAtBA,EAAa1gG,KAAoB,CACnC,MAAMpf,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQigH,EAAa//G,QAC7C,IAAKC,EACH,OAEF,MAAO,CACLof,KAAM,UACNpf,OACAuR,UAAWuuG,EAAavuG,UAE5B,CAEA,GAA0B,aAAtBuuG,EAAa1gG,KAAqB,CACpC,MAAM,QACJ4X,EAAO,eAAE+oF,EAAc,OAAEC,EAAM,SAAEC,EAAQ,OAAEC,GACzCJ,EAIJ,MAAO,CACL1gG,KAAM,WACN8gG,SACAC,QAAS,CACP/gG,KAAM,WACN4gG,SACAC,WACAl+G,MAVUi1B,EAAQ10B,KAAK5B,IAAO0yB,EAAAA,EAAAA,KAAWvzB,EAAQa,KAAK8B,OAAO7B,SAW7Dy/G,aAViBL,GAAiB9/G,EAAAA,EAAAA,KAAWJ,EAAQkgH,QAAkBt/G,GAa7E,CAEA,GAA0B,aAAtBq/G,EAAa1gG,KAAqB,CACpC,MAAM,OACJrf,EAAM,qBAAEsgH,EAAoB,OAAEL,EAAM,SAAEC,EAAQ,OAAEC,EAAM,UAAEI,EAAS,kBAAEC,EAAiB,UAAEC,EAAS,wBAC/FC,EAAuB,iBAAEC,GACvBZ,EACE9/G,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAChC,IAAKC,EACH,OAEF,MAAM2gH,EAAqBN,GAAsB/9G,KAAK5B,IAAOT,EAAAA,EAAAA,KAAWJ,EAAQa,KAAK8B,OAAO7B,SAE5F,MAAO,CACLye,KAAM,WACN8gG,SACAC,QAAS,CACP/gG,KAAM,WACN4gG,SACAC,WACAjgH,OACA2gH,qBACAL,YACAC,oBACAC,YACAC,0BACAC,oBAGN,CAGF,CAEO,SAASE,EACdhsG,GAEA,MAAkB,aAAdA,EAAKwK,KACA,CACLyhG,WAAY,OACZC,cAAc,EACd71D,SAAU,2CACViC,YAAa,8CACb6zD,YAAa,GAIC,eAAdnsG,EAAKwK,KACA,CACLyhG,WAAY,OACZC,cAAc,EACd71D,SAAU,4CACViC,YAAa,+CACb6zD,YAAa,GAIC,aAAdnsG,EAAKwK,KACA,CACLyhG,WAAY,OACZC,cAAc,EACd71D,SAAU,8CACViC,YAAa,iDACb6zD,aAAc,GAIA,eAAdnsG,EAAKwK,KACA,CACLyhG,WAAY,OACZC,cAAc,EACd71D,SAAU,gDACViC,YAAa,mDACb6zD,YAAa,EACbC,qBAAqB,GAIlB,CACLH,WAAY,OACZC,cAAc,EACd71D,SAAU,4CACViC,YAAa,4CACb6zD,YAAa,EAEjB,CAEO,SAASE,EAA6BjB,GAC3C,OAAIA,EAAS,EACH,MAAIzJ,EAAAA,EAAAA,IAAchpG,KAAKu2E,IAAIk8B,MAG7B,MAAIzJ,EAAAA,EAAAA,IAAcyJ,IAC5B,C,8FClIA,MAAMkB,EAAwB,IAEf,SAASpV,EACtB9jG,EAAwCm5G,EAAqC/4F,GAE7E,MAAM,iBAAEnP,IAAqB5X,EAAAA,EAAAA,MACvBC,GAAOC,EAAAA,EAAAA,MACNsqG,EAAeuV,IAAoBz2G,EAAAA,EAAAA,KAAS,GAE7C02G,GAAoBx6G,EAAAA,EAAAA,IAAgB,KACxCu6G,GAAiB,GACbD,GAEJloG,EAAiB,CACf7Q,QAASk5G,EAAAA,GAAYhgH,EAAK,4BAA8BA,EAAK,6BAC7D+K,SAAU60G,GACV,IAGEK,GAAU16G,EAAAA,EAAAA,IAAiBo/C,IAC/B,MAAMlhC,EAASkhC,EAAMxB,eACf,MAAE3pC,GAAUiK,EACbjK,IAGc,IAAfA,EAAM8oD,MAA6B,IAAf9oD,EAAM8oD,MAC5By9C,IACF,IAGIG,GAAY36G,EAAAA,EAAAA,IAAiBo/C,IACjC,MAAMlhC,EAASkhC,EAAMxB,cAEhB1/B,EAAO86E,aAAgB96E,EAAO66E,YACjCyhB,GACF,IAoBF,OAjBA5+G,EAAAA,EAAAA,KAAU,KACR,GAAI2lB,EAAY,OAEhB,MAAM,QAAE/jB,GAAY2D,EACpB,OAAK3D,GAILA,EAAQ6U,iBAAiB,QAASqoG,GAClCl9G,EAAQ6U,iBAAiB,UAAWsoG,GAE7B,KACLn9G,EAAQ+U,oBAAoB,QAASmoG,GACrCl9G,EAAQ+U,oBAAoB,UAAWooG,EAAU,QATnD,CAUC,GACA,CAACp5F,EAAYpgB,IAET6jG,CACT,C,8FCtDA,MAAM4V,EAAmB,KACnBC,EAAyB,IAAItpB,IACnC,IAAIupB,EAAgB,IAAI37G,IACxB,MAGM47G,GAAgBtR,EAAAA,EAAAA,KAAS,KAC7B,MAAMuR,EAAQv0G,MAAMgN,KAAKqnG,GACnBG,EAAcD,EAAMx/G,MAAM,EALR,KAMlB0/G,EAAaF,EAAMx/G,MAAM2/G,MAE/B3gH,EAAAA,EAAAA,MAAa4gH,kBAAkB,CAC7BC,QAASJ,IAGXA,EAAYhzG,SAASpO,GAAOghH,EAAuBxnB,IAAIx5F,EAAImf,KAAKC,SAEhE6hG,EAAgB,IAAI37G,IAAI+7G,GAGpBJ,EAAcp+G,MAChBq+G,GACF,GAlBuB,KAqBV,SAAS9nC,EAAsBhwC,GAC5C,MAAMtmC,GAAQ5B,EAAAA,EAAAA,KAAQ,KACpB,MAAM/B,GAASiC,EAAAA,EAAAA,MACf,OAAOgoC,GAAKxnC,KAAK5B,IAAO6pB,EAAAA,EAAAA,KAAW1qB,EAAQa,KAAK8B,OAAO7B,QAAQ,GAC9D,CAACmpC,IAEEq4E,GAAkBvgH,EAAAA,EAAAA,KAAQ,KAC9B,MAAM/B,GAASiC,EAAAA,EAAAA,MACf,OAAO0B,GAAOhB,QAAQoS,IACpB,MAAMwtG,EAAkBV,EAAuBhmF,IAAI9mB,EAAKlU,KAAO,EAC/D,GAAImf,KAAKC,MAAQsiG,EAAkBX,EACjC,OAAO,EAGT,IAAI3vF,EAAAA,EAAAA,IAASld,EAAKlU,IAAK,CACrB,MAAM2zB,EAAOzf,EACPgrC,GAAS8M,EAAAA,EAAAA,KAAiB7sD,EAAQw0B,EAAK3zB,IACvC2hH,EAAoBziE,GAA0B,oBAAhBA,EAAOxgC,KAC3C,OAAQiV,EAAKiuF,YAAcjuF,EAAKu2B,UAAWpR,EAAAA,EAAAA,IAAUnlB,KAAUzf,EAAK6kC,WAAa4oE,CACnF,CAAO,CACL,MAAMriH,EAAO4U,EACb,OAAOohB,EAAAA,EAAAA,IAAch2B,KAAUA,EAAK6gD,YACtC,KACCv+C,KAAK+xB,GAASA,EAAK3zB,IAAG,GACxB,CAAC8C,KAEJf,EAAAA,EAAAA,KAAU,KACJ0/G,GAAiB9+G,SACnB8+G,EAAgBrzG,SAASpO,GAAOihH,EAAc76G,IAAIpG,KAClDkhH,IACF,GACC,CAACO,GACN,C,yFClDO,MAAMI,EAAwC,CACnD,CAAEn7F,KAAM,OAAQ3V,MAAO,iBAAkB+mC,IAAK,YAC9C,CAAEpxB,KAAM,eAAgB3V,MAAO,oBAAqB+mC,IAAK,eACzD,CAAEpxB,KAAM,QAAS3V,MAAO,eAAgB+mC,IAAK,UAC7C,CAAEpxB,KAAM,UAAW3V,MAAO,iBAAkB+mC,IAAK,YACjD,CAAEpxB,KAAM,OAAQ3V,MAAO,aAAc+mC,IAAK,SAG/BgqE,EAAwC,CACnD,CAAEp7F,KAAM,OAAQ3V,MAAO,cAAe+mC,IAAK,gBAC3C,CAAEpxB,KAAM,UAAW3V,MAAO,iBAAkB+mC,IAAK,mBACjD,CAAEpxB,KAAM,YAAa3V,MAAO,aAAc+mC,IAAK,gBAG3CiqE,EAA2D,CAC/D,kBAAmB,OAAQ,WAAY,SAAU,WAAY,eAEzDC,EAA2D,CAC/D,kBAAmB,kBAAmB,eAAgB,eAGjD,SAASC,EAAkBC,EAAqBC,EAA+BC,GACpF,IAAIC,EAA4B,GAC5BC,EAA6C,GAEjD,GAAa,aAATH,EAAqB,CACvB,MAAM,gBACJI,KACGC,GACDJ,EACAF,EAAMM,gBAAkB,CAAC,GACzBC,EAAAA,EAAAA,IACAP,EAAMQ,OACNX,GAGJM,EAAkBE,GAAmB,GACrCD,EAAqB7gH,OAAO8oB,KAAKi4F,GAC9B1gH,QAAQg2C,GAAQ73C,QAAQuiH,EAAe1qE,KAC5C,KAAO,CACL,MAAM,gBACJ6qE,KACGC,GACDR,EACAF,EAAMU,gBAAkB,CAAC,GACzBH,EAAAA,EAAAA,IACAP,EAAMQ,OACNV,GAGJK,EAAkBM,GAAmB,GACrCL,EAAqB7gH,OAAO8oB,KAAKq4F,GAC9B9gH,QAAQg2C,GAAQ73C,QAAQ2iH,EAAe9qE,KAC5C,CAEA,MAAO,CACLuqE,kBACAC,oBAEJ,CAEA,SAASO,EAAuBL,GAC9B,GAAIA,EAAgB,CAClB,MAAM,gBACJD,KACGO,GACDN,EAEJ,GACE/gH,OAAOC,OAAOohH,GAAShhH,OAAO7B,SAAS0C,OAAS,GAC5C4/G,GAAiB5/G,OAErB,MAAO,GAGT,GAAImgH,EAAQ19F,KACV,MAAO,OACF,GAAI09F,EAAQC,OACjB,MAAO,SACF,GAAID,EAAQE,SACjB,MAAO,WACF,GAAIF,EAAQG,SACjB,MAAO,WACF,GAAIH,EAAQI,YACjB,MAAO,cAEX,CAEA,MAAO,EACT,CAyBA,MAAMC,EAA8B,CAClChB,KAAM,SACNiB,WAAY,GACZV,OAAQ,CACN3xG,MAAO,GACPwxG,gBAAiB,GACjBI,gBAAiB,KAIfU,EAA6DA,CACjEnB,EACAx2F,KAEA,OAAQA,EAAOhN,MACb,IAAK,WACH,MAAO,IACFwjG,EACHQ,OAAQ,IACHR,EAAMQ,OACT3xG,MAAO2a,EAAOyf,SAEhBlC,WAAW,GAEf,IAAK,cACH,MAAO,IACFi5E,EACHpyC,SAAUpkD,EAAOyf,QACjBg3E,KAAM,QAEV,IAAK,qBACH,MAAO,IACFD,EACHM,gBAAgBC,EAAAA,EAAAA,IACdP,EAAMQ,OACNX,IAGN,IAAK,qBACH,MAAO,IACFG,EACHU,gBAAgBH,EAAAA,EAAAA,IACdP,EAAMQ,OACNV,IAGN,IAAK,oBACH,MAAO,IACFE,EACHM,eAAgB92F,EAAOyf,QACvBi4E,WAAY,IAEhB,IAAK,oBACH,MAAO,IACFlB,EACHU,eAAgBl3F,EAAOyf,QACvBi4E,WAAY,IAEhB,IAAK,cACH,OAAIlB,EAAMM,eACD,IACFN,EACHQ,OAAQ,KACHY,EAAAA,EAAAA,IAAKpB,EAAMQ,OAAQX,GACtBhxG,MAAOmxG,EAAMQ,OAAO3xG,MAAQmxG,EAAMQ,OAAO3xG,MAAQ8xG,EAAuBX,EAAMM,mBAC3EN,EAAMM,gBAEXA,oBAAgBziH,EAChBqjH,WAAY,GACZn6E,WAAW,GAEJi5E,EAAMU,eACR,IACFV,EACHQ,OAAQ,KACHY,EAAAA,EAAAA,IAAKpB,EAAMQ,OAAQV,MACnBE,EAAMU,gBAEXA,oBAAgB7iH,EAChBqjH,WAAY,GACZn6E,WAAW,GAGNi5E,EAEX,IAAK,aAAc,CACjB,MAAQliH,GAAI8vE,EAAQ,YAAEzrB,KAAgBq+D,GAAWh3F,EAAOyf,QAExD,MAAO,CACLg3E,KAAM,OACNryC,WACA4yC,SACAU,WAAY,GAEhB,CACA,IAAK,gBACH,MAAO,IACFlB,EACHkB,WAAY13F,EAAOyf,SAGvB,IAAK,eACH,MAAO,IACF+2E,EACHj5E,UAAWvd,EAAOyf,SAGtB,IAAK,eACH,MAAO,IACF+2E,EACHrrF,UAAWnL,EAAOyf,SAGtB,IAAK,WACH,MAAO,IACF+2E,EACHrrF,WAAW,EACXzc,MAAOsR,EAAOyf,SAGlB,IAAK,gBACH,MAAO,IACF+2E,EACHQ,OAAQ,IACHR,EAAMQ,OACTa,WAAY73F,EAAOyf,UAGzB,IAAK,QACH,OAAOg4E,EACT,QACE,OAAOjB,EACX,EAOF,EAJ0BsB,KACjBC,EAAAA,EAAAA,GAAWJ,EAAgBF,E,6DCzPpC,QAbA,SAAoB7H,EAA8B7G,GAChD,MAAMiP,GAAgBv9G,EAAAA,EAAAA,GAAgBm1G,IAEtCv5G,EAAAA,EAAAA,KAAU,KACR,GAAqB,iBAAV0yG,EACT,OAGF,MAAMz0G,EAAKsG,YAAW,IAAMo9G,KAAiBjP,GAC7C,MAAO,IAAMlsB,aAAavoF,EAAG,GAC5B,CAACy0G,GACN,C,kGCRO,SAASluE,EACdo9E,EACAC,EACAC,GAEA,IADAC,EAAOz3G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAEP,OAAOwtF,EAAAA,EAAAA,IAAsBkqB,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMC,EAAiBC,EAC5B,CAEO,SAASpa,EACdsa,EACAzI,GAGA,MAAM0I,EAAoB19E,GAAqB,IAAMy9E,KAAY,CAACA,GAAWzI,EAFtElvG,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,IAIP,OAAO0jB,EAAAA,EAAAA,GACLk0F,EAAmB,CAACA,EAAmBD,IAAW,EAEtD,CAEO,SAASx0F,EACdm0F,EACAC,EACArI,GAGA,IAFAuI,EAAOz3G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACP63G,EAAM73G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAEN,OAAO4uE,EAAAA,EAAAA,IAAsB8oC,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMrI,EAAIuI,EAASI,EACxB,CAEO,SAASC,EACdH,EACAzI,GAIA,MAAM6I,EAAoB50F,GAAqB,IAAMw0F,KAAY,CAACA,GAAWzI,EAHtElvG,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACDA,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,IAIN,OAAO0jB,EAAAA,EAAAA,GACLq0F,EAAmB,CAACA,EAAmBJ,IAAW,EAEtD,C,qJC6NA,QA7PuB,SACrBK,EACAC,EACA35G,EACAlE,EACA89G,EACA9kB,EACA+kB,GASG,IARH3a,EAAUx9F,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACVo4G,EAAgCp4G,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAChC2kH,EAAkCr4G,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAClC4kH,EAAUt4G,UAAA1J,OAAA,SAAA5C,IAAAsM,UAAA,KAAAA,UAAA,IACVu4G,EAAiBv4G,UAAA1J,OAAA,SAAA5C,IAAAsM,UAAA,KAAAA,UAAA,IACjBzD,EAA4ByD,UAAA1J,OAAA,GAAA0J,UAAA,SAAAtM,EAC5BwL,EAAOc,UAAA1J,OAAA,SAAA5C,IAAAsM,UAAA,KAAAA,UAAA,IACPw4G,EAAcx4G,UAAA1J,OAAA,SAAA5C,IAAAsM,UAAA,KAAAA,UAAA,IAGd,MAAMy4G,GAAgB3hH,EAAAA,EAAAA,IAAoC,OAEnDqI,EAAWu5G,IAAgB96G,EAAAA,EAAAA,KAAS,GAC3C,IAAI+6G,EAAgBx5G,EAEpB,MAAOrE,EAAcmkG,IAAmBrhG,EAAAA,EAAAA,IAAiB,GAEnDiB,GAAoB/E,EAAAA,EAAAA,IAAgB,KACxC4+G,GAAa,GACTL,GAAeA,GAAe,KAGpCz0F,EAAAA,EAAAA,IAAc,KACZ,IAAKo0F,EACH,OAEFS,EAAcnhH,SAAUshH,EAAAA,EAAAA,IAASZ,EAAS15G,GAAW,CAACu6G,EAAWj1G,KAC/D,IAAI40G,EAAJ,CAGA,OAAQK,GACN,IAAK,SAAU,CACb,MAAM,UACJC,EAAS,gBAAEC,EAAe,YAAEC,EAAW,MAAEC,GACvCR,EAAcnhH,QAClBohH,GAAa,GACK,iBAAdp6G,IACF46G,EAAAA,EAAAA,IAAqB9lB,EAiKjC,SAA2BqlB,GACzB,IAAIU,EAAsC,CAAC,EAC3C,GAAIV,GAAiBA,EAAcnhH,QAAS,CAC1C,MAAM,KACJ8pE,EAAI,MAAEpsD,EAAK,eAAE3V,EAAc,MAAE45G,EAAK,iBAAEG,EAAgB,qBAAEC,EAAoB,QAAEj1D,EAAO,OAAEC,GACnFo0D,EAAcnhH,QAClB6hH,EAAgB,CACd/3C,KAAMA,KACJA,EAAK63C,EAAM7+G,IAAI,EAEjB4a,MAAOA,KACLA,GAAO,EAETR,KAAMA,KACJQ,IACA3V,EAAe,IACf/K,EAAAA,EAAAA,MAAaglH,kBAAkB,EAEjCC,aAAergE,IACb,MAAMsgE,EAAWtgE,EAAMugE,YAnOL,GAoOlBp6G,EAAemB,KAAK2B,IAAI82G,EAAMj3D,YAAcw3D,EAAU,GAAG,EAE3DE,YAAcxgE,IACZ,MAAMsgE,EAAWtgE,EAAMugE,YAvOL,GAwOlBp6G,EAAemB,KAAKC,IAAIw4G,EAAMj3D,YAAcw3D,EAAUP,EAAM35G,UAAU,EAExEq6G,OAASzgE,IACHA,EAAM0gE,UACRv6G,EAAe65C,EAAM0gE,SACvB,GAICv1D,MACH80D,EAAcU,UAAY,KACxBT,GAAkB,GAGjBh1D,MACH+0D,EAAcW,cAAgB,KAC5BT,GAAsB,EAG5B,CACA,OAAOF,CACT,CA9M2CY,CAAkBtB,KAEnDuB,EAAAA,EAAAA,IAAiB,WACjB,MAAM,YAAEC,IAAgB3mH,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OACvC+jH,EAAUmB,EAAY9lG,QACtB6kG,EAAYplH,QAAQqmH,EAAY/gD,UAChC,MAAM55D,EAAW25G,EAAM35G,UAAY4/B,OAAOggE,SAAS+Z,EAAM35G,UAAY25G,EAAM35G,SAAW24G,GACpE,UAAd35G,GAAyBgB,EAAW46G,EAAAA,MACtCnB,EAAgBkB,EAAYE,eAE9BC,EAAAA,EAAAA,IAAiB,CACf96G,SAAU25G,EAAM35G,UAAY,EAC5B66G,aAAclB,EAAMkB,aACpBl6E,SAAUg5E,EAAMj3D,cAElB,KACF,CACA,IAAK,eAAgB,CACnB,MAAM,MAAEi3D,GAAUR,EAAcnhH,SAChC8iH,EAAAA,EAAAA,IAAiB,CACf96G,SAAU25G,EAAM35G,UAAY,EAC5B66G,aAAclB,EAAMkB,aACpBl6E,SAAUg5E,EAAMj3D,cAElB,KACF,CACA,IAAK,UACH02D,GAAa,IACbsB,EAAAA,EAAAA,IAAiB,UACjBz9G,MACA,MACF,IAAK,eAAgB,CACnB,MAAM,MAAE08G,GAAUR,EAAcnhH,QAChC,GAAI4H,GAAiC,IAAtB+5G,EAAMj3D,YACnB,MAEF,MAAM1iD,EAAW25G,EAAM35G,UAAY4/B,OAAOggE,SAAS+Z,EAAM35G,UAAY25G,EAAM35G,SAAW24G,EACjFM,GAAmBtZ,EAAgBga,EAAMj3D,YAAc1iD,GAC5D,KACF,CACA,IAAK,WACH06G,EAAAA,EAAAA,IAAiB,UAIrB9B,IAAWW,KAAaj1G,EArDxB,CAqD0B,GACzBw0G,EAAav5G,GAEhB,MAAM,MAAEo6G,GAAUR,EAAcnhH,QAE3B6H,GAAc85G,EAAMnwB,SACvB4vB,GAAa,GAGbC,GAAgB,GAGdR,IAAWK,GACbL,EAAOc,EACT,GACC,CAACjB,KAEJtiH,EAAAA,EAAAA,KAAU,KACJyJ,GAAai0F,IAAUinB,EAAAA,EAAAA,IAAejnB,EAAS,GAClD,CAACA,EAAUj0F,IAEd,MAAM,KACJiiE,EAAI,MACJpsD,EAAK,eACL3V,EAAc,MACd45G,EAAK,QACLjwB,EAAO,UACP8vB,EAAS,KACTtkG,EAAI,QACJ4vC,EAAO,OACPC,EAAM,iBACN+0D,EAAgB,qBAChBC,EAAoB,gBACpBN,EAAe,YACfC,GACEP,EAAcnhH,SAAW,CAAC,EAExBgI,GAAWzK,EAAAA,EAAAA,KAAQ,IAChBokH,GAAO35G,UAAY4/B,OAAOggE,SAAS+Z,EAAM35G,UAAY25G,EAAM35G,SAAW24G,GAC5E,CAACgB,GAAO35G,SAAU24G,KAGrBviH,EAAAA,EAAAA,KAAU,KACHujH,IAGD/5G,GAAiC,IAAtB+5G,EAAMj3D,cAGjB1iD,IAAag7G,EAAAA,EAAAA,GAAwBrB,IAAWV,GAClDtZ,EAAgBga,EAAMj3D,YAAc1iD,GACtC,GACC,CAACA,EAAUxE,EAAcm+G,EAAOV,EAAmBr5G,KAGtDxJ,EAAAA,EAAAA,KAAU,IAAM,KACdszF,IAAUsvB,EAAW,GACpB,CAACtvB,EAASsvB,KAGbx6E,EAAAA,EAAAA,IAAsB7pC,IAA+B,IAA7BsmH,EAAgBC,GAAQvmH,EAC1CsmH,IAAmB/c,GAAcpjG,IAAQogH,GAKzCvB,GAAO7+G,KAAO6+G,GAAOnwB,QAIrB0U,GAAcpjG,IAAQ+E,GACxBiiE,IAAOhnE,EACT,GACC,CAACojG,EAAYpjG,EAAK+E,EAAWiiE,EAAM63C,GAAO7+G,IAAK6+G,GAAOnwB,OAAQxqF,IAEjE,MAAMm8G,GAAgB3gH,EAAAA,EAAAA,IAAgB,KAChCM,GACFgnE,IAAOhnE,EACT,IAGIgF,GAAYtF,EAAAA,EAAAA,IAAgB,KAC5BqF,EACF6V,MAEAylG,GACF,IAGIC,GAAU5gH,EAAAA,EAAAA,IAAiB6gH,IAC/Bt7G,IAAiBs7G,GACbr7G,GAAY25G,GACdha,EAAgBga,EAAMj3D,YAAc1iD,EACtC,IAGF,MAAO,CACLH,UAAWw5G,EACX79G,eACAsE,YACA4V,QACAosD,KAAMq5C,EACNjmG,OACAnV,eAAgBq7G,EAChB5B,YACA8B,WAAY3B,EACZ35G,WACA85G,mBACAC,uBACAj1D,UACAC,SACA00D,kBACAC,cAEJ,C,8FC5NA,MAAM6B,EAAS,EACTC,EAAa,EAEJ,SAASxpE,EACtBj5C,GAMA,IALAgjB,EAAUrb,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACV+6G,EAAiB/6G,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EACjB4O,EAAMtC,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG66G,EACTG,EAAuBh7G,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EACvBunH,EAAwBj7G,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAGxB,MAAMwM,GAAYpJ,EAAAA,EAAAA,IAA0B,MACtCokH,GAAYpkH,EAAAA,EAAAA,MAqDlB,OAnDA8sB,EAAAA,EAAAA,IAAc,KACPvI,IACH6/F,EAAU5jH,SAAU,EACtB,GACC,CAACe,EAASgjB,KAEb3lB,EAAAA,EAAAA,KAAU,KACR,MAAM4L,EAASpB,EAAU5I,QAEzB,IAAKe,IAAYiJ,GAAU+Z,GAAc6/F,EAAU5jH,QACjD,OAGF4jH,EAAU5jH,SAAU,EAEpB,MAAM+6F,EAAM,IAAI4O,MAEVka,EAAcA,KAClB,MAAMz5G,EAAQs5G,GAAkB3oB,EAAI3wF,MAC9BC,EAASs5G,GAAmB5oB,EAAI1wF,OAChCC,EAAMN,EAAOO,WAAW,KAAM,CAAEu5G,OAAO,KAE7ChlF,EAAAA,EAAAA,KAAgB,KACd90B,EAAOI,MAAQA,EACfJ,EAAOK,OAASA,EAEZ4vC,EAAAA,KACF3vC,EAAInM,OAAU,QAAO6M,QAGvBV,EAAI+rD,UAAU0kC,EAAe,GAAT/vF,EAAsB,GAATA,EAAYZ,EAAiB,EAATY,EAAYX,EAAkB,EAATW,GAE1EhB,EAAOiH,UAAUoG,OAAO,qBAEnB4iC,EAAAA,KACH8pE,EAAAA,EAAAA,GAASz5G,EAAK,EAAG,EAAGF,EAAOC,EAAQW,EAAQw4G,EAC7C,GACA,EAGJzoB,EAAI8O,OAAS,KACP4Z,GACFzmG,EAAAA,EAAAA,IAAe6mG,GAEfA,GACF,EAGF9oB,EAAIj4F,IAAM/B,CAAO,GAChB,CAACA,EAASgjB,EAAY4/F,EAAiBD,EAAgB14G,EAAQy4G,IAE3D76G,CACT,C,oHC3DA,MA2KA,EA3K8B,SAAAjM,GA4BJ,IA5BK,KAC7BhB,EAAI,KACJq0B,EAAI,SACJm8C,EAAQ,SACRC,EAAQ,QACRxK,EAAO,gBACPiK,EAAe,cACf92B,EAAa,cACblmB,EAAa,UACbg3C,EAAS,aACT8I,EAAY,WACZC,EAAU,uBACVC,EAAsB,aACtB/e,GAeDnzD,EAAEqnH,EAAUt7G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACX,MAAMzL,GAAOC,EAAAA,EAAAA,MAEP,OAAEqpD,GAAWv2B,GAAQ,CAAC,EACtBi0F,EAAyBj0F,GAAM3zB,KAAO6nH,EAAAA,IAEtCC,GAAc5mH,EAAAA,EAAAA,KAAQ,KAC1B,GAAK5B,EAEL,OAAIo5C,EACK93C,EAAK,WAGVwwB,EAAAA,EAAAA,IAAS9xB,EAAKU,IACTY,EAAK,mBAGVmnH,EAAAA,EAAAA,IAAiBzoH,GACZsB,EAAK,eAGV00B,EAAAA,EAAAA,IAAch2B,GACTsB,EAAK,gBAGPA,EAAK,mBAAmB,GAC9B,CAACtB,EAAMo5C,EAAe93C,IAEzB,OAAOM,EAAAA,EAAAA,KAAQ,KACb,IAAK5B,GAAQkqE,EACX,OAGF,MAAM,iBACJw+C,EAAgB,wBAChBC,EAAuB,qBACvBxhD,EAAoB,mBACpByhD,EAAkB,iBAClBC,EAAgB,iBAChBrpC,IACEn+E,EAAAA,EAAAA,MAEEu+E,EAAqBnM,EAAAA,IAAgC,CACzDhiE,MAAOq3G,EAAAA,GAAc,qBAAuB,kBAC5C1hG,KAAM,kBACNovD,QAASA,KAELgJ,EADEpmC,EACe,CAAEr5C,OAAQmzB,EAAgB9Q,SAAUpiB,EAAKU,IAEzC,CAAEX,OAAQC,EAAKU,IAClC,GAIEqoH,EAAeA,KACf3vE,EACFuvE,EAAwB,CAAEjoH,GAAIV,EAAKU,KAEnCgoH,EAAiB,CAAEhoH,GAAIV,EAAKU,GAAI8vE,SAAUA,GAC5C,EAGIsP,EAAYrP,EACd,CACAh/D,MAAOnQ,EAAK,gBACZ8lB,KAAM,QACNovD,QAASuyC,GAET,CACAt3G,MAAOnQ,EAAK,YACZ8lB,KAAM,MACNovD,QAASuyC,GAGP9oC,EAAe,CACnBxuE,MAAO+2G,EACPphG,KAAM,SACNs8B,aAAa,EACb8yB,QAASxD,GAGX,GAAI55B,EACF,OAAOw9B,EAAAA,EAAAA,IAAQ,CAACgJ,EAAoBE,EAAWG,IAGjD,MAAM+oC,EAAoB94C,EAAkB,CAC1Cz+D,MAAOnQ,EAAK,+BACZ8lB,KAAM,SACNovD,QAAStD,QACPzyE,EAEEs/E,EAAa9Z,EACf,CACAx0D,MAAOnQ,EAAK,mBACZ8lB,KAAM,SACNovD,QAASA,IAAMrP,EAAqB,CAAEpnE,OAAQC,EAAKU,GAAIulE,SAAS,KAEhE,CACAx0D,MAAQ,GAAEnQ,EAAK,sBACf8lB,KAAM,OACNovD,QAASvD,GAGb,GAAIo1C,EACF,OAAOzxC,EAAAA,EAAAA,IAAQ,CAACgJ,EAAoBE,EAAWkpC,EAAmBjpC,IAGpE,MAAMkpC,EAAoBjpH,EAAK40E,aAAe50E,EAAK+0E,cAC/C,CAAEtjE,MAAOnQ,EAAK,cAAe8lB,KAAM,YAAaovD,QAASA,IAAMqyC,EAAiB,CAAEnoH,GAAIV,EAAKU,WAC3FD,EACEyoH,EAAuBlpH,EAAK40E,aAAe50E,EAAK+0E,eAAmB/0E,EAAKk1B,aAE1Ez0B,EADA,CAAEgR,MAAOnQ,EAAK,gBAAiB8lB,KAAM,SAAUovD,QAASA,IAAMqyC,EAAiB,CAAEnoH,GAAIV,EAAKU,MAGxFyoH,GAAgBC,EAAAA,EAAAA,IAAeppH,GACjC,CAAEyR,MAAOnQ,EAAK,aAAc8lB,KAAM,YAAaovD,QAASA,IAAMoyC,EAAmB,CAAEloH,GAAIV,EAAKU,MAC5F,CAAE+Q,MAAOnQ,EAAK,WAAY8lB,KAAM,UAAWovD,QAASA,IAAMoyC,EAAmB,CAAEloH,GAAIV,EAAKU,MAGtF2oH,EADYl1D,KAAiBn+B,EAAAA,EAAAA,IAAch2B,KAAS+4D,EAAAA,EAAAA,IAAY/4D,IAAUq0B,IAASA,EAAKu2B,QAE1F,CAAEn5C,MAAOnQ,EAAK,qBAAsB8lB,KAAM,OAAQovD,QAASriB,QAC3D1zD,EAEE6oH,OAA0B7oH,IAAb+vE,EAEnB,OAAOoG,EAAAA,EAAAA,IAAQ,CACbgJ,EACAopC,EACAC,EACAC,EACAppC,GACCl1B,GAAUm1B,GACVn1B,IAAW09D,IAA2BgB,GAAcH,EACrDE,EACAppC,GACA,GACD,CACDjgF,EAAMq0B,EAAM67C,EAAiB5uE,EAAM4xE,EAAwBzC,EAAU43C,EAAYpiD,EAAS/yC,EAC1F8/C,EAAcC,EAAY9e,EAAcqc,EAAU5lB,EAAQ09D,EAAwBlvE,EAAeovE,EACjGt+C,GAEJ,C,kFC7IA,QAzBA,SAA6Bq/C,EAAuCrU,GAAgD,IAAjBsU,EAAOz8G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACxG,MAAMs3G,EAAWnP,EAAeqU,EAAsC,IAAOA,EAC7ErU,IAAAA,EAAiB,CAACqU,IAElB,MAAO7E,EAAUD,IAAYzpF,EAAAA,EAAAA,MACvByuF,GAAchmF,EAAAA,EAAAA,GAAY4gF,GAEhC,SAASqF,IACP,MAAMC,EAAkBF,EAAYplH,QAChCmlH,EACDG,EAAqClF,GAEtCA,EAAUkF,IAEd,CAQA,OALAh5F,EAAAA,EAAAA,GAAc+4F,EAAoBxU,IAGlC0U,EAAAA,EAAAA,GAAgBF,EAAoBxU,GAE7BwP,CACT,C,6DCpCe,SAASlyC,EACtBzyE,EACAwR,EACAnJ,EACAyhH,EACAzhG,GAEA,MAAM,YAAE0hG,IAAgBzoH,EAAAA,EAAAA,OAExBoB,EAAAA,EAAAA,KAAU,KACJ2lB,GACA7W,IAAcnJ,GAChB0hH,EAAY,CAAE/pH,SAAQwR,UAAWA,EAAYs4G,iBAAkBA,GACjE,GACC,CAACzhG,EAAYroB,EAAQqI,EAASmJ,EAAWs4G,GAC9C,C,wECWA,QAtBA,SACE98E,EACAvb,EACAoD,GAEA,MAAM,qBAAE2yE,IAAyBlmG,EAAAA,EAAAA,MAE3B0oH,GAAqBnoH,EAAAA,EAAAA,KAAQ,KACjC,MAAMooH,GAAY1Z,EAAAA,EAAAA,IAAS/I,EAVD,KAU8C,GACxE,MAAO,KACLyiB,EAAU,CAAEj9E,OAAQA,EAAS66D,SAAU,CAACp2E,IAAY,CACrD,GACA,CAACA,EAASub,KAEbtqC,EAAAA,EAAAA,KAAU,KAEJsqC,GAAUvb,KADWoD,KAAW,YAAaA,MAAS,cAAeA,KAEvEm1F,GACF,GACC,CAACA,EAAoBn1F,EAAOpD,EAASub,GAC1C,C,2FCjBO,SAAS+oC,EAA8BtF,GAC5C,MAAMpQ,GAAcC,EAAAA,EAAAA,KAIpB,OAFA59D,EAAAA,EAAAA,KAAU,KAAMwnH,EAAAA,EAAAA,IAAsBz5C,EAAUpQ,IAAc,CAACoQ,EAAUpQ,KAElE8pD,EAAAA,EAAAA,IAAc15C,EACvB,CAEO,SAASyF,IACd,MAAM7V,GAAcC,EAAAA,EAAAA,KAIpB,OAFA59D,EAAAA,EAAAA,KAAU,KAAM0nH,EAAAA,EAAAA,IAA0B/pD,IAAc,CAACA,KAElDgqD,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAMjqD,GAAcC,EAAAA,EAAAA,KAIpB,OAFA59D,EAAAA,EAAAA,KAAU,KAAM6nH,EAAAA,EAAAA,IAAsBlqD,IAAc,CAACA,KAE9CmqD,EAAAA,EAAAA,KACT,C,mFC5Be,SAASC,IAA8C,IAA1Bz6C,EAAgBhjE,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAC1D,MAAM09G,GAA4B5mH,EAAAA,EAAAA,IAAOksE,GACnC26C,GAAwB7mH,EAAAA,EAAAA,KAAO,GAC/Bu8D,GAAcC,EAAAA,EAAAA,MAEpB1vC,EAAAA,EAAAA,IAAc,KACRo/C,IACF06C,EAA0BpmH,SAAU,EACtC,GACC,CAAC0rE,IAEJ,MAAM46C,GAA+B9jH,EAAAA,EAAAA,IAAgB,KACnD4jH,EAA0BpmH,SAAU,EACpCqmH,EAAsBrmH,SAAU,EAChC+7D,GAAa,IAGTwqD,GAAiC/jH,EAAAA,EAAAA,IAAgB,KACrD6jH,EAAsBrmH,SAAU,EAChC+7D,GAAa,IAGf,MAAO,CACLyqD,uBAAwBJ,EAA0BpmH,QAClDymH,mBAAoBJ,EAAsBrmH,QAC1CsmH,+BACAC,iCAEJ,C,kDChCe,SAASxvF,EAAqB2vF,GAC3C,MAAOC,EAAUC,IAAYjwF,EAAAA,EAAAA,MA+B7B,OA7BAv4B,EAAAA,EAAAA,KAAU,KACR,SAASyoH,IACP,MAAM3sF,EAAY92B,OAAO+2B,eACzB,IAAKD,GAAWI,WAAY,OAE5B,MAAMiT,EAAQrT,EAAUM,WAAW,GACnC,IAAK+S,EACH,OAIF,IADgBv8B,SAASwY,cAAck9F,GAErC,OAGF,MAAM,wBAAEjpB,GAA4BlwD,GACpBkwD,aAAmCqpB,QAC/CrpB,EACAA,EAAwBG,eAChBz5E,QAAQuiG,IAClBE,EAASr5E,EAEb,CAIA,OAFAv8B,SAAS6D,iBAAiB,kBAAmBgyG,GAEtC,IAAM71G,SAAS+D,oBAAoB,kBAAmB8xG,EAAkB,GAC9E,CAACH,EAAeE,IAEZD,CACT,C,kDCjCA,MA4BA,EA5B4B,SAC1BxxD,EACApxC,GAEG,IADHgjG,EAAoBr+G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,IAEpBtK,EAAAA,EAAAA,KAAU,KACR,GAAI2lB,EACF,OAGF,MAAMkzC,EAAY9B,EAAan1D,QAE/B,SAASw4E,EAAalsE,GAEfA,EAAE06G,SACL/vD,EAAWgwD,YAAc36G,EAAE2sE,OAAS,EAChC8tC,GAAsBz6G,EAAE4L,iBAEhC,CAIA,OAFA++C,EAAUpiD,iBAAiB,QAAS2jE,EAAc,CAAEU,SAAU6tC,IAEvD,KACL9vD,EAAUliD,oBAAoB,QAASyjE,EAAa,CACrD,GACA,CAACrjB,EAAcpxC,EAAYgjG,GAChC,C,4DCvBA,MAAMG,EAAc,IAAIvlH,IAAI,CAAC,QAAS,WAAY,WAE5Ci/G,GAAWuG,EAAAA,EAAAA,KAGV,SAAS7wC,EAAW8wC,IACzBhpH,EAAAA,EAAAA,KAAU,KACR,IAAKgpH,EACH,OAGF,MAAMrqB,EAAUj/F,OAAOi/F,QAAQqqB,GAc/B,OAAOxG,EAASyG,aAZhB,SAAuB/6G,IAgB3B,SAAyBA,GACvB,QAAIA,EAAEoU,kBAAkB7J,eACdqwG,EAAY/kH,IAAImK,EAAEoU,OAAO3J,QAIrC,EArBWuwG,CAAgBh7G,IAIrBywF,EAAQtyF,SAAQ9N,IAAuB,IAArB4qH,EAAQp1C,GAAQx1E,GCmDjC,SAA0B4qH,GAC/B,OAAQ3lE,GAlCV,SAAuB2lE,EAAgB3lE,GACrC,MAAM,IACJnqC,EAAG,KAAE+vG,EAAI,KAAEC,EAAI,IAAEC,EAAG,MAAE5sD,EAAK,IAAE3mB,GAC3BozE,GACE,OACJxuB,EAAM,QAAEniB,EAAO,QAAED,EAAO,SAAEmW,EAAU34C,IAAKwzE,GACvC/lE,EAEJ,GAAInqC,IAAQshF,EACV,OAAO,EAGT,GAAI2uB,GACF,IAAK9wC,IAAYD,EACf,OAAO,MAEJ,CACL,GAAI6wC,IAAS5wC,EACX,OAAO,EAET,GAAI6wC,IAAS9wC,EACX,OAAO,CAEX,CACA,OAAI7b,IAAUgyB,GAIPxwF,QAAQ63C,IACTwzE,EAAWttG,gBAAkB85B,EAAI95B,eAChCunC,EAAM2d,KAAKnpD,QAAQ,MAAO,IAAIiE,gBAAkB85B,EAAI95B,eAC7D,CAGoButG,CA1Db,SAAqBL,GAC1B,MAAM3gG,EAAO2gG,EACVltG,cACAylD,MAAM,KACN7hE,KAAKk0G,GAASA,EAAKruE,SAEhB+jF,EAA+B,CACnCpwG,IAAKmP,EAAKrR,SAAS,OACnBiyG,KAAM5gG,EAAKrR,SAAS,QACpBkyG,KAAM7gG,EAAKrR,SAAS,QACpBmyG,IAAK9gG,EAAKrR,SAAS,OACnBulD,MAAOl0C,EAAKrR,SAAS,UAGjBuyG,EAAe,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAItD,MAAO,IACFD,EACH1zE,IAJcvtB,EAAKoF,MAAMmoB,IAAS2zE,EAAavyG,SAAS4+B,KAM5D,CAoCkC4zE,CAAYR,GAAS3lE,EACvD,EDpDYomE,CAAiBT,EAAjBS,CAAyB17G,IAC3B6lE,EAAQ7lE,EACV,GAEJ,GAE0C,GACzC,CAAC86G,GACN,CAxBAp2G,SAASuH,gBAAgB1D,iBAAiB,UAAW+rG,EAASqH,a,wEED9D,MAAMC,EAAiB,IACjBC,EAAsB,IAEb,SAASC,EACtB5xF,EACArU,EACAI,GAEA,MAAM,SAAErc,IAAaC,EAAAA,EAAAA,OAErB/H,EAAAA,EAAAA,KAAU,KACJ+jB,EACGjc,GACHvD,YAAW,MACTm8B,EAAAA,EAAAA,KAAgB,KACVtI,EAASx2B,SAASgjG,aACpBxsE,EAASx2B,QAAQ8Q,OACnB,GACA,GACDo3G,IAGD1xF,EAASx2B,SAASgjG,aACpBxsE,EAASx2B,QAAQ8pC,OAGfvnB,GACF5f,WAAW4f,EAAS4lG,GAExB,GACC,CAAC3xF,EAAUtwB,EAAUic,EAAQI,GAClC,C,0ICxBA,MAAM8lG,EAAqB,IACrBC,EAAoB,KACpBC,EAAoB,IAEX,SAASlhH,EACtBmhH,GAKA,IAJA9nH,EAAMgI,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACN+/G,EAAW//G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGtH,EAAAA,GAAeC,QAC7ByvG,EAAsBpoG,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EACtBssH,EAAahgH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAEb,MAAMzB,EAAYuhH,EAAYv7D,EAAAA,GAA0Bu7D,QAAapsH,EAC/DusH,EAAcC,EAAAA,IAA4BH,IAAgBrnH,EAAAA,GAAey3G,YACzE98C,GAAcC,EAAAA,EAAAA,KACd7T,GAAW0gE,EAAAA,EAAAA,GAAYC,EAAAA,KACvBzsH,GAAK0sH,EAAAA,EAAAA,MACJ5hH,EAAc6hH,IAAmB1iH,EAAAA,EAAAA,IAASW,IAAc0hH,EAAc,EAAI,GAC3EM,GAAezpH,EAAAA,EAAAA,MAEf0pH,GAAiB3rH,EAAAA,EAAAA,KAAQ,KACtB0uG,EAAAA,EAAAA,KAAUhiG,IACXg/G,EAAajpH,WAAa8wG,GAAUt1F,KAAKC,MAAQwtG,EAAajpH,QAAU8wG,IAC1EkY,EAAgB/+G,EAClB,GACCs+G,GAAmB,IACrB,CAACzX,IAiDJ,OA/CA1yG,EAAAA,EAAAA,KAAU,MACHsC,GAAU8nH,IACRvhH,EAmBM0hH,GACThmH,YAAW,KACTqmH,EAAgBX,EAAmB,GAClCC,IArBHU,EAAgB,GAEZC,EAAajpH,SACfitD,EAAAA,GAA2Bi8D,GAG7BD,EAAajpH,QAAUwb,KAAKC,MAE5BwxC,EAAAA,GAAkBu7D,EAAWC,EAAaC,EAAeQ,EAAgB7sH,GAAI25D,MAAK,KAChF,MAAMmzD,EAAY3tG,KAAKC,MAAQwtG,EAAajpH,QAC5CipH,EAAajpH,aAAU5D,GAElB00G,GAASqY,GAAarY,EACzB/0C,IAEAp5D,WAAWo5D,EAAa+0C,EAAQqY,EAClC,KAON,GACC,CACDzoH,EAAQ8nH,EAAWvhH,EAAWwhH,EAAaE,EAAa7X,EAAOoY,EAAgBR,EAAersH,EAAI8rD,KAGpG/pD,EAAAA,EAAAA,KAAU,KACJsC,GAAUuoH,EAAajpH,UACzBitD,EAAAA,GAA2Bi8D,GAC3BF,EAAgB,GAChBC,EAAajpH,aAAU5D,EACzB,GACC,CAAC8sH,EAAgBxoH,KAEpBtC,EAAAA,EAAAA,KAAU,IACD,KACDoqH,GACFv7D,EAAAA,GAA2Bu7D,EAAWnsH,EACxC,GAED,CAACA,EAAImsH,IAED,CAAEvhH,YAAWE,eACtB,C,wECpFA,MAAMiiH,EAAqB,IAC3B,IAAIC,EAEW,SAAS9pG,EACtB4C,EAAiBI,GACjB,IAD8C+mG,EAAgB5gH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG0gH,EAAoBrlG,EAAUrb,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAE/F,MAAM6gH,GAAgB/pH,EAAAA,EAAAA,KAAO,GAEvB8f,GAAkB9c,EAAAA,EAAAA,IAAgB,KACtC+mH,EAAcvpH,SAAU,CAAI,IAqC9B,OAlCA5B,EAAAA,EAAAA,KAAU,KACJirH,IACFzkC,aAAaykC,GACbA,OAAejtH,IAGb+lB,GAAWO,EAAAA,IAAiBqB,IAC9BslG,EAAejmH,OAAOT,YAAW,KAC1B4mH,EAAcvpH,SACjBuiB,GACF,GACoB,EAAnB+mG,GACL,GACC,CAACvlG,EAAY5B,EAAQmnG,EAAkB/mG,IAqBnC,EAnBkB/f,EAAAA,EAAAA,IAAgB,KACvC+mH,EAAcvpH,SAAU,CAAI,KAGLwC,EAAAA,EAAAA,IAAgB,KACvC+mH,EAAcvpH,SAAU,EAEpBqpH,IACFzkC,aAAaykC,GACbA,OAAejtH,GAGjBitH,EAAejmH,OAAOT,YAAW,KAC1B4mH,EAAcvpH,SACjBuiB,GACF,GACC+mG,EAAiB,IAGsBhqG,EAC9C,C,mFC9Ce,SAASkqG,EAA0BxpH,EAAYgI,GAC5D,MAAMyhH,GAAOvyF,EAAAA,EAAAA,GAAYl3B,GAAS,GAC5B+wG,GAAavxG,EAAAA,EAAAA,MACbu8D,GAAcC,EAAAA,EAAAA,KAEd0tD,EAAmB1pH,QAEnB2pH,EAAgBF,QAiBtB,OAfIC,GAAoB3Y,EAAW/wG,UACjC4kF,aAAamsB,EAAW/wG,SACxB+wG,EAAW/wG,aAAU5D,IAGvBkwB,EAAAA,EAAAA,IAAc,KAERtkB,IAAa0hH,GAAoBC,IAAkB5Y,EAAW/wG,UAChE+wG,EAAW/wG,QAAUoD,OAAOT,YAAW,KACrCouG,EAAW/wG,aAAU5D,EACrB2/D,GAAa,GACZ/zD,GACL,GACC,CAACA,EAAU+zD,EAAa2tD,EAAkBC,IAEpC5Y,EAAW/wG,SAAYgI,IAAY0hH,EAA6BD,EAAVzpH,CACjE,C,6DCvBe,SAAS8/G,EACtB8J,EACAC,GAEA,MAAM9tD,GAAcC,EAAAA,EAAAA,KACd8tD,GAAatqH,EAAAA,EAAAA,IAAOoqH,GACpBrL,GAAQ/+G,EAAAA,EAAAA,IAAOqqH,GAEfE,GAAW3sH,EAAAA,EAAAA,KAAa2qB,IAC5Bw2F,EAAMv+G,QAAU8pH,EAAW9pH,QAAQu+G,EAAMv+G,QAAS+nB,GAClDg0C,IACOwiD,EAAMv+G,UACZ,IAEH,MAAO,CACLu+G,EAAMv+G,QACN+pH,EAEJ,C,kDCxBe,SAAS9kF,EAAgB2yE,EAAYuI,EAAmBI,GAAkC,IAAhBN,EAASv3G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,GACnG,OAAO4uE,EAAAA,EAAAA,IAAsBt7D,IAC3BA,GAAI,GAEHikG,EAAMrI,EAAIuI,EAASI,EACxB,C,+HCEA,MAQA,EAR0C//G,IACxC,MAAM,OAAE2hB,GAAW3hB,EACbwpH,GAAgBpsG,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBqE,GAGvE,OAAO6nG,EAAgBprH,EAAAA,GAAAC,cAACmrH,EAAkBxpH,QAAYpE,CAAS,ECmDjE,EArDoB48B,CAClBxH,EACAy4F,EACAC,KAEA,MAAMjtH,GAAOC,EAAAA,EAAAA,MACNitH,EAAaC,IAAkB9jH,EAAAA,EAAAA,MAEhC8kC,GAAwB5oC,EAAAA,EAAAA,IAAgB,SAAC2B,GAAqC,IAAzBkmH,EAAY3hH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAErE,MAAM4hC,EAAcphC,KAAK7J,MAAM6J,KAAK2B,IAAI1G,EAAKw2D,UAAWn/C,KAAKC,MAAQ,KAAa,MAC7E4uG,EAAe,GAAIC,EAAAA,EAAAA,OACxBH,IAAc7/E,GACd8/E,OAAehuH,EACjB,IAEMmuH,GAAmC/nH,EAAAA,EAAAA,IAAgB,KACvD4oC,EAAsB,IAAI5vB,KAA6B,IAAxBy0B,EAAAA,MAA+B,EAAK,IAG/Du6E,GAAsBhoH,EAAAA,EAAAA,IAAgB,KAC1C4nH,OAAehuH,GACf6tH,KAAY,IAGRnxF,GAAkBt2B,EAAAA,EAAAA,IAAiBioH,IACvCL,GAAe,IAAMK,GAAc,IAG/B37E,EAAuBo7E,EAAS,IAAI1uG,KAAc,IAAT0uG,GAAiB,IAAI1uG,KACpEszB,EAAqBC,WAAW,GAChCD,EAAqBE,gBAAgB,GAErC,MAAMC,EAAmB,IAAIzzB,KAiB7B,OAhBAyzB,EAAiBC,YAAYD,EAAiBE,cAAgB,GAgBvD,CAACrW,EAbNl6B,EAAAA,GAAAC,cAACmrH,EAAa,CACZ7nG,OAAQ7lB,QAAQ6tH,GAChBO,gBAAc,EACdC,WAAY77E,EAAqB6rB,UACjCiwD,OAAOC,EAAAA,EAAAA,IAAc57E,GACrB67E,cAAY,EACZC,kBAAmBv5F,EAAyBv0B,EAAK,gCAA6Bb,EAC9EmmB,QAASioG,EACTnpE,SAAUjW,EACV4/E,oBAAqBx5F,EAAyB+4F,OAAmCnuH,IAInD,C,mFCrDpC,MASA,EAT6By7B,CAACn8B,EAAiBqiB,KACtCxgB,EAAAA,EAAAA,KAAQ,KACN0uG,EAAAA,EAAAA,KAAUlkF,IACVrsB,GAAWqiB,IAChB/gB,EAAAA,EAAAA,MAAa46B,kBAAkB,CAAEl8B,SAAQqiB,WAAUgK,UAAS,GAC3DmX,EAAAA,MACF,CAACxjC,EAAQqiB,G,4HCLd,MAAMktG,EAAqB,IAEpB,SAASC,EAAa9hE,EAAuCl9B,EAAc6sB,GA+EhF,OA9EA36C,EAAAA,EAAAA,KAAU,KACR,IAAK8tB,IAAQk9B,EAASppD,QAAS,OAC/B,MAAMmrH,EAAmBC,IACnBvlH,EAAQujD,EAASppD,QAEvB,IAAK0+B,EAAAA,KAAcqa,IAAaoyE,GAAkBE,gBAAgBtyE,GAChE,OAEF,MAAMuyE,EAAc,IAAIH,EAaxB,SAASI,IACP,IAAKr/F,IAAQ6sB,EAAU,OAEvB,MAAMyyE,EAAeF,EAAYG,gBAAgB1yE,GAC3Cu/D,GAASC,EAAAA,EAAAA,GAAsBrsF,GAiBrCs/F,EAAa32G,iBAAiB,aAf9B,WACEyjG,EAAOoT,OACJ11D,MAAKr5D,IAGA,IAHC,MACLsiD,EAAK,KACL0sE,GACDhvH,EACgC,SAA3B2uH,EAAYM,aACZD,EACFE,EAAYP,GAGdQ,EAAaN,EAAcvsE,GAAM,GAEvC,IAIAq5D,EAAOoT,OACJ11D,MAAK93D,IAGA,IAHC,MACL+gD,EAAK,KACL0sE,GACDztH,EACKytH,GAAmC,SAA3BL,EAAYM,cAtC5B9sF,EAAAA,EAAAA,KAAgB,KACdj5B,EAAMjD,MAAMw1E,QAAU,QACtBz1E,YAAW,MACTm8B,EAAAA,EAAAA,KAAgB,MACdo4E,EAAAA,EAAAA,IAAYrxG,EAAO,CAAEovD,QAAS,KAAM,GACpC,GACDg2D,EAAmB,IAkCpBa,EAAaN,EAAcvsE,GAAM,GAEvC,CAYA,OAVAqsE,EAAYz2G,iBAAiB,aAAc02G,EAAc,CAAEvyB,MAAM,KAEjEl6D,EAAAA,EAAAA,KAAgB,MACdo4E,EAAAA,EAAAA,IAAYrxG,EAAO,CACjBuyE,QAAS,OACTnjB,QAAS,MAEXpvD,EAAM/C,IAAM8X,IAAIggF,gBAAgB0wB,EAAY,IAGvC,MACLxsF,EAAAA,EAAAA,KAAgB,KACd,MAAMh8B,EAAM+C,EAAM/C,KAClBo2G,EAAAA,EAAAA,GAAYrzG,GACZylH,EAAYv2G,oBAAoB,aAAcw2G,GACf,SAA3BD,EAAYM,YACdC,EAAYP,GAEd1wG,IAAI0gF,gBAAgBx4F,EAAI,GACxB,CACH,GACA,CAACi2C,EAAU7sB,EAAKk9B,IAEZwwD,EAA0B7gE,EACnC,CAEO,SAAS6gE,EAA0B7gE,GACxC,SAAKra,EAAAA,KAAcqa,IACZz8C,QAAQ8uH,KAAkBC,gBAAgBtyE,GACnD,CAEA,SAAS+yE,EAAaN,EAA4BO,GAChD,IACEP,EAAaM,aAAaC,EAC5B,CAAE,MAAOt1G,GACHF,EAAAA,KAEFC,QAAQw1G,KAAK,mCAAoCv1G,EAErD,CACF,CAEA,SAASo1G,EAAYP,GACnB,IACEA,EAAYO,aACd,CAAE,MAAOp1G,GACHF,EAAAA,KAEFC,QAAQw1G,KAAK,gCAAiCv1G,EAElD,CACF,CAEA,SAAS20G,IACP,MAAI,uBAAwBhoH,OAEnB6oH,mBAEL,gBAAiB7oH,OACZ8oH,iBADT,CAIF,C,wEC7He,SAASnmF,EAAgB4xE,GACtC,MAAMwU,GAAe3pH,EAAAA,EAAAA,GAAgBm1G,IAErCv5G,EAAAA,EAAAA,KAAU,KAAMguH,EAAAA,EAAAA,IAAeD,IAAe,CAACA,GACjD,C,ubC0EA,MAAME,EAKJn7B,WAAAA,CACSxwE,EACCkzB,EACAkvC,GACR,KAHOpiE,OAAAA,EAAc,KACbkzB,SAAAA,EAAsC,KACtCkvC,QAAAA,EAAgBsO,EAAA,qBAPF,IAAI2C,KAA4B3C,EAAA,+BAEtB,IAAI2C,IAOtC,CAGOrC,OAAAA,GACP,CAEAv2E,IAAAA,GAAqB,QAAAmxG,EAAA5jH,UAAA1J,OAAbqsC,EAAI,IAAApiC,MAAAqjH,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlhF,EAAIkhF,GAAA7jH,UAAA6jH,GACVl7B,KAAKm7B,YAAY,CACfzxG,KAAM,OACNswB,QAEJ,CAEAohF,OAAAA,CAAQC,GACN,MAAM,cAAEC,EAAa,wBAAEC,GAA4Bv7B,KAE7CnkF,GAAY2/G,EAAAA,EAAAA,KACZrlF,EAA0B,CAC9BzsB,KAAM,aACN7N,eACGw/G,GAGCI,EAAe,CAAE5/G,aAGjB6/G,EAAwB,IAAIp0G,SAAQ,CAACwE,EAASC,KAClDtf,OAAOkvH,OAAOF,EAAc,CAAE3vG,UAASC,UAAS,IAGlD,GAAqD,mBAA1CoqB,EAAQ6D,KAAK7D,EAAQ6D,KAAKrsC,OAAS,GAAmB,CAC/DwoC,EAAQylF,cAAe,EAEvB,MAAMtV,EAAWnwE,EAAQ6D,KAAK6hF,MAC9BJ,EAAanV,SAAWA,EACxBiV,EAAwB/2B,IAAI8hB,EAAUmV,EACxC,CAeA,OAbAH,EAAc92B,IAAI3oF,EAAW4/G,GAC7BC,EACGI,OAAM,KAAe,IACrBC,SAAQ,KACPT,EAAcz4B,OAAOhnF,GAEjB4/G,EAAanV,UACfiV,EAAwB14B,OAAO44B,EAAanV,SAC9C,IAGJtmB,KAAKm7B,YAAYhlF,GAEVulF,CACT,CAEAM,cAAAA,CAAeC,GACbA,EAAiBC,YAAa,EAE9B,MAAM,UAAErgH,GAAcmkF,KAAKu7B,wBAAwBv1F,IAAIi2F,IAAqB,CAAC,EACxEpgH,GAILmkF,KAAKm7B,YAAY,CACfzxG,KAAM,iBACN7N,aAEJ,CAEAsgH,SAAAA,CAAU3kH,GACR,MAAM,cAAE8jH,EAAa,QAAE7pC,GAAYuO,KACnC,GAAIxoF,EAAKi6E,UAAYA,EAOrB,GAHkB,WAAdj6E,EAAKkS,MAAqBs2E,KAAKz9C,UACjCy9C,KAAKz9C,SAAS/qC,EAAKi+B,QAEH,mBAAdj+B,EAAKkS,KAA2B,CAClC,MAAM+xG,EAAeH,EAAct1F,IAAIxuB,EAAKqE,WACxC4/G,IACEjkH,EAAK4N,MACPq2G,EAAa1vG,OAAOvU,EAAK4N,OAEzBq2G,EAAa3vG,QAAQtU,EAAK4kH,UAGhC,MAAO,GAAkB,mBAAd5kH,EAAKkS,KAA2B,CACzC,MAAM+xG,EAAeH,EAAct1F,IAAIxuB,EAAKqE,WAC5C4/G,GAAcnV,cAAc9uG,EAAK6kH,aACnC,MAAO,GAAkB,mBAAd7kH,EAAKkS,KACd,MAAM,IAAI26E,MAAM7sF,EAAK4N,OAAO1S,QAEhC,CAEQyoH,WAAAA,CAAY3jH,GAClBA,EAAKi6E,QAAUuO,KAAKvO,QAEpBuO,KAAK3wE,OAAO8rG,YAAY3jH,EAC1B,EAGK,SAAS8kH,EACdC,EACAh6E,EACAkvC,GAEA,MAAM+qC,EAAY,IAAIxB,EAAkBuB,EAAQh6E,EAAUkvC,GAE1D,SAASgrC,EAAanxH,GAA+B,IAA9B,KAAEkM,GAA0BlM,EACjDkxH,EAAUL,UAAU3kH,EACtB,CAQA,OANA+kH,EAAO/4G,iBAAiB,UAAWi5G,GAEnCD,EAAUn8B,QAAU,KAClBk8B,EAAO74G,oBAAoB,UAAW+4G,EAAc,EAG/CD,CACT,C,mFC9MA,MAAME,EAAmB,IAEnBC,EAAsC,IAAIj6B,IAEjC,SAASk6B,EAAwBh3D,EAAwB1qD,GAA2C,IAA7BvE,EAAQU,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGqlH,GAC1FjuH,EAAAA,EAAAA,MAA0BrC,EAAAA,EAAAA,SAC7BuK,EAAW,GAGb,MAAMzH,EAA0C,QAAlC02D,EAAU9/C,aAAa,QAC/B,WACJ8vG,EAAYx/D,YAAaymE,EAAc,YAAEhqG,EAAajN,SAAS,SAAEk3G,IAC/Dl3D,EAEJ,IAAI8P,EAAOx6D,EAAO06G,EAElB,GAAIlgD,EAAO,EAAG,CACZ,MAAMqnD,GAAiBnH,GAAc1mH,GAAS,EAAI,GAClDwmE,EAAO79D,KAAK2B,IAAIk8D,EAAMqnD,EACxB,MAAO,GAAIrnD,EAAO,EAAG,CACnB,MAAMqnD,EAAgBlqG,GAAe+iG,EAAaiH,GAClDnnD,EAAO79D,KAAKC,IAAI49D,EAAMqnD,EACxB,CAEA,GAAa,IAATrnD,EACF,OAAOpuD,QAAQwE,UAGbgxG,GAAYH,EAAS7rH,IAAIgsH,IAC3BH,EAAS32F,IAAI82F,EAAbH,GAGF,MAAMttG,EAASumG,EAAalgD,EAE5B,OAAO,IAAIpuD,SAAewE,KACxB2hB,EAAAA,EAAAA,KAAgB,KACd,GAAiB,IAAb92B,EAGF,OAFAivD,EAAUgwD,WAAavmG,OACvBvD,IAIF,IAAIkxG,GAAY,EAChB,MAAMhyH,EAAK6M,KAAKg3D,SAASh3B,WACzB+tB,EAAUhgD,QAAQk3G,SAAW9xH,EAC7B2xH,EAASn4B,IAAIx5F,GAAI,KACfgyH,GAAY,CAAI,IAGlBp3D,EAAUr0D,MAAM0rH,eAAiB,OAEjC,MAAMC,EAAU/yG,KAAKC,OAErB+yG,EAAAA,EAAAA,KAAQ,KACN,GAAIH,EAAW,OAAO,EAEtB,MAAMI,EAAIvlH,KAAKC,KAAKqS,KAAKC,MAAQ8yG,GAAWvmH,EAAU,GAEhD0mH,EAAc3nD,GAAQ,EAgBpC,SAAoB0nD,GAClB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAlBwCE,CAAWF,IAU3C,OATAx3D,EAAUgwD,WAAa/9G,KAAK7J,MAAMqhB,EAASguG,GAEvCD,GAAK,IACPx3D,EAAUr0D,MAAM0rH,eAAiB,UAC1Br3D,EAAUhgD,QAAQk3G,SACzBH,EAAS95B,OAAO73F,GAChB8gB,KAGKsxG,EAAI,CAAC,GACX3vF,EAAAA,GAAgB,GACnB,GAEN,C,kJC3DA,IACI8vF,EADAnvH,GAAc,EAGH,SAAS4rG,IAAsD,QAAAihB,EAAA5jH,UAAA1J,OAArCqsC,EAAI,IAAApiC,MAAAqjH,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlhF,EAAIkhF,GAAA7jH,UAAA6jH,GAC3CqC,EAAcvjF,EAAKrtC,MAAM,EAAG,GAE5B,MAAM6wH,EAASC,KAAwBF,GAGvC,GAD+BvjF,EAAK,GAElC,OAAOwjF,GAGT/vF,EAAAA,EAAAA,IAAgB+vF,EAElB,CAEO,SAASE,IACTtvH,KAILuvH,EAAAA,EAAAA,OAEAhyG,EAAAA,EAAAA,KAAe,MACb8hB,EAAAA,EAAAA,IAAgBgwF,KAAwBF,GAAc,IAE1D,CAEA,SAASE,EACP73D,EACA7pB,EACAzE,GAMA,IALAsmF,EAAMvmH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,EACTwmH,EAAWxmH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGymH,EAAAA,IACdC,EAA+B1mH,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAC/BizH,EAAsB3mH,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EACtBkzH,EAAoC5mH,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAGlCgzH,IAAmBG,EAAAA,GAAeC,SAC9B1vH,EAAAA,EAAAA,MAA0BrC,EAAAA,EAAAA,SAE9B4xH,EAAgB,GAGlB,MAAQhjD,UAAWojD,EAAYjyD,aAAckyD,GAAkBtiF,GACvDirC,UAAWs3C,EAAkBnyD,aAAcoyD,EAAe,aAAE52C,GAAiB/hB,EAC/E44D,EAAwBP,GAA8Br4D,EAAUhgD,QAAQ64G,aAC1EloF,OAAOqvB,EAAUhgD,QAAQ64G,cACzBF,EAEJ,IAAIG,EACJ,OAAQpnF,GACN,IAAK,QACHonF,EAAYN,EAAaR,GAAW17B,EAAAA,GAAa,EAAI,GACrD,MACF,IAAK,MACHw8B,EAAYN,EAAaC,EAAgBT,EAAUY,EACnD,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACHE,EAAWL,EAAgBG,EACtBJ,EAAaC,EAAgB,EAAIG,EAAwB,EACzDJ,EAAaR,EAItB,MAAMe,EA8DR,SACE/4D,EACA84D,GAGA,IAFAb,EAAWxmH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGymH,EAAAA,IACdC,EAA+B1mH,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAE/B,MAAM,UAAEi8E,GAAcphB,EAEtB,QAAuB76D,IAAnBgzH,EAA8B,CAChC,MAAMnsF,EAAS8sF,EAAW13C,EAE1B,GAAIp1C,GAAUisF,EACZ,OAAO72C,GAAap1C,EAASisF,GACxB,GAAIjsF,EAASisF,EAClB,OAAO72C,GAAap1C,EAASisF,EAEjC,KAAO,IAAIE,IAAmBG,EAAAA,GAAeU,GAC3C,OAAOF,EAAWb,EACb,GAAIE,IAAmBG,EAAAA,GAAeW,KAC3C,OAAOhnH,KAAK2B,IAAI,EAAGklH,EAAWb,EAChC,CAEA,OAAO72C,CACT,CArFqB83C,CAAoBl5D,EAAW84D,EAAUb,EAAaE,GAEzE,IAAIroD,EAAOgpD,EAAWC,EACtB,GAAIjpD,EAAO,EAAG,CACZ,MAAMqnD,GAAiB4B,EACvBjpD,EAAO79D,KAAK2B,IAAIk8D,EAAMqnD,EACxB,MAAO,GAAIrnD,EAAO,EAAG,CACnB,MAAMqnD,EAAgBp1C,GAAgBg3C,EAAaH,GACnD9oD,EAAO79D,KAAKC,IAAI49D,EAAMqnD,EACxB,CAEA,MAAMgC,EAAUlnH,KAAKu2E,IAAI1Y,GAEzB,MAAO,KACL,GAAIqpD,EAAU,EAKZ,YAJIT,IAAqBK,IACvB/4D,EAAUohB,UAAY23C,IAM1B,MAAMtvG,EAASsvG,EAAajpD,EAE5B,GAAsB,IAAlBsoD,EAEF,YADAp4D,EAAUohB,UAAY33D,GAIxBjhB,GAAc,EAEd,MAAMkvH,EAAayB,GAAWC,EAAAA,IAA4CC,EAAkBC,EACtFvoH,EAAWqnH,GACfmB,EAAAA,IACGJ,EAAUjB,EAAAA,KAA6BsB,EAAAA,IAA2BD,EAAAA,KAEjEjC,EAAU/yG,KAAKC,MACfi1G,GAAuBxzC,EAAAA,EAAAA,OAE7ByzC,EAAAA,EAAAA,KAAc,KACZ,MAAMlC,EAAIvlH,KAAKC,KAAKqS,KAAKC,MAAQ8yG,GAAWvmH,EAAU,GAChD0mH,EAAc3nD,GAAQ,EAAI4nD,EAAWF,IACrCh2C,EAAevvE,KAAK7J,MAAMqhB,EAASguG,GAWzC,OATAz3D,EAAUohB,UAAYI,EAEtBh5E,EAAcgvH,EAAI,GAAKh2C,IAAiB/3D,EAEnCjhB,IACHmvH,OAAcxyH,EACds0H,KAGKjxH,CAAW,GACjBq/B,EAAAA,GAAgB,CAEvB,CAEO,SAAS8xF,IACd,OAAOnxH,CACT,CA2BA,SAAS6wH,EAAgB7B,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAEA,SAAS8B,EAAe9B,GACtB,OAAO,GAAM,EAAIA,IAAM,GACzB,C,kJC7JA,MAAMoC,EAAS,IAAI98B,IAEnB,IAGI+8B,EAHAC,EAAwB,GACxBC,EAAwB,GA0D5B,SAASC,EAASvQ,EAAkBwQ,GAClC,MAAMC,EAAeL,GAAkBD,EAAOx5F,IAAIy5F,GAC9CK,IACFA,EAAazrH,MAAMgY,QACnByzG,EAAazrH,MAAMglD,YAAc,EAC7BymE,EAAapQ,eAAeoQ,EAAapQ,iBAG/C,MAEMqQ,EAAcC,EAAgB3Q,GAFrB1kH,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAaklH,YAAYz+G,QAAU4C,EAAAA,GAAY6G,OAExBujH,GACrD,IAAKE,EACH,OAGF,IAAKP,EAAO1uH,IAAIivH,GAId,YAFAp0H,EAAAA,EAAAA,MAAas0H,iBAAgBC,EAAAA,EAAAA,IAAgBC,EAAaJ,GAAax4D,aAKzE,MAAM64D,EAAYZ,EAAOx5F,IAAI+5F,GAEzBK,EAAU3Q,aACZ2Q,EAAU3Q,cAGZgQ,EAAiBM,EAEbK,EAAU/rH,MAAM5C,MAClB2uF,EAAAA,EAAAA,GAASggC,EAAU/rH,MAEvB,CAEO,SAAS4gG,IACd,MAAM6qB,EAAeL,GAAkBD,EAAOx5F,IAAIy5F,GAC9CK,GACFA,EAAazrH,MAAMgY,OAEvB,CAEO,SAAS4jG,EACdZ,EACA15G,EACAmrE,EACA2uC,EACAC,GAEA,IAAK8P,EAAO1uH,IAAIu+G,GAAU,CACxB,MAAMgR,EAxGV,SACEhR,EACA3lG,EACA+lG,EACAC,GAEA,MAAMr7G,EAAQ,IAAIwjG,MAElB,SAASyoB,EAAYpQ,GACnB,OAAQj1G,IACDukH,EAAO1uH,IAAIu+G,MAIZsC,EAAAA,EAAAA,GAAwBt9G,IAI5BmrH,EAAOx5F,IAAIqpF,GAAUE,SAASn2G,SAAS0nE,IACrCA,EAAQovC,EAAWj1G,EAAE,IACrB,CAEN,CAoBA,OAlBA5G,EAAMmP,iBAAiB,aAAc88G,EAAY,iBACjDjsH,EAAMmP,iBAAiB,OAAQ88G,EAAY,WAC3CjsH,EAAMmP,iBAAiB,QAAS88G,EAAY,YAC5CjsH,EAAMmP,iBAAiB,YAAa88G,EAAY,gBAChDjsH,EAAMmP,iBAAiB,aAAc88G,EAAY,iBACjDjsH,EAAMmP,iBAAiB,UAAW88G,EAAY,cAC9CjsH,EAAMmP,iBAAiB,SAAS,KACzBg8G,EAAO1uH,IAAIu+G,MAIZsC,EAAAA,EAAAA,GAAwBt9G,IAI5BurH,EAASvQ,GAAQ,IAGZ,CACLh7G,QACAqV,OACA4mG,MAAO,IAAIiQ,MAAMlsH,EAAO,CACtB2xB,IAAKA,CAAC3W,EAAQyzB,IAAgCzzB,EAAOyzB,KAEvDysE,SAAU,GACVE,cACAC,gBAEJ,CAoDkB8Q,CAAYnR,EAAS15G,EAAW85G,EAAaC,GAC3D8P,EAAOh7B,IAAI6qB,EAASgR,GAwIxB,SAAyBA,EAAchR,GAClB,UAAfgR,EAAM32G,MAAqBi2G,EAAWz7G,SAASmrG,KACjDsQ,EAAW5wH,KAAKsgH,GAChBsQ,EAAW91D,KAAK42D,IAGC,UAAfJ,EAAM32G,MAAqBg2G,EAAWx7G,SAASmrG,KACjDqQ,EAAW3wH,KAAKsgH,GAChBqQ,EAAW71D,KAAK42D,GAEpB,CAjJIC,CAAgBL,EAAOhR,EACzB,CACA,MAAM,MAAEh7G,EAAK,MAAEi8G,EAAK,SAAEf,GAAaiQ,EAAOx5F,IAAIqpF,GAI9C,OAFAE,EAASxgH,KAAK+xE,GAEP,CACLrI,IAAAA,CAAKhnE,GACH,IAAK4C,EAAM8rF,OAAQ,OACnB,MAAM2/B,EAAeL,GAAkBD,EAAOx5F,IAAIy5F,GAC9CK,GAAgBL,IAAmBpQ,IACrCyQ,EAAazrH,MAAMgY,QACnByzG,EAAazrH,MAAMglD,YAAc,GAC7Bs4D,EAAAA,EAAAA,GAAwBmO,EAAazrH,SACvCyrH,EAAazrH,MAAMuR,QAAQ+6G,sBAAwB,QAEjDb,EAAapQ,eAAeoQ,EAAapQ,iBAG/C+P,EAAiBpQ,EAEZh7G,EAAM5C,MACT4C,EAAM5C,IAAMA,EACZ4C,EAAMqzG,QAAU,OAEZj2G,EAAIyS,SAAS,kBAAoBmpB,EAAAA,YAC5Bh5B,EAAMuR,QAAQ+6G,uBACrBC,EAAAA,EAAAA,GAA4BvsH,MAIhC+rF,EAAAA,EAAAA,GAAS/rF,GA+Hf,SAAsBqV,EAAqB2lG,GACzC,IAAI1kH,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAay0H,aAAaC,iBAAmBC,EAAAA,GAAoBC,MAAO,OAC3F,MAAM,OAAE32H,IAAW61H,EAAAA,EAAAA,IAAgBC,EAAa9Q,GAAS9nD,YACnD05D,GAAelvG,EAAAA,EAAAA,MAAyB3lB,EAAAA,EAAAA,QAAc/B,OACtD62H,EAAel2H,GACnBA,EAAGwmC,WAAY,MAAKnnC,MAAc42H,GAAgBj2H,EAAGwmC,WAAY,MAAKyvF,KAG3D,UAATv3G,IACFi2G,EAAaA,EAAW7yH,OAAOo0H,IAGpB,UAATx3G,IACFg2G,EAAaA,EAAW5yH,OAAOo0H,GAEnC,CA7IMC,CAAaxrH,EAAW05G,EAC1B,EAEAhjG,KAAAA,GACMozG,IAAmBpQ,GACrBh7G,EAAMgY,OAEV,EAEAR,IAAAA,GACE,GAAI4zG,IAAmBpQ,EAAS,CAE9B,MAAMwC,EAAUx9G,EAAM5C,IACtB4C,EAAMgY,SAENod,EAAAA,EAAAA,KAAoB,KAClBp1B,EAAM5C,IAAM,GACZ4C,EAAM5C,IAAMogH,CAAO,GAEvB,CACF,EAEAn7G,cAAAA,CAAes7G,GACTyN,IAAmBpQ,IACjBh7G,EAAM+sH,SACR/sH,EAAM+sH,SAASpP,GAEf39G,EAAMglD,YAAc24D,EAG1B,EAEA7B,SAAAA,CAAU3kG,GACJi0G,IAAmBpQ,IACrBh7G,EAAMmX,OAASA,EACfnX,EAAMolD,OAAQ,EAElB,EAEA22D,eAAAA,CAAgBiR,GACV5B,IAAmBpQ,IACrBh7G,EAAMm9G,aAAe6P,EAEzB,EAEAhR,WAAAA,CAAY52D,GAERplD,EAAMolD,WADM1uD,IAAV0uD,GACaplD,EAAMolD,MAEPA,CAElB,EAEA62D,QAEAG,gBAAAA,GACEmP,EAASvQ,EACX,EAEA3zD,OAAMA,KACIskE,EAAgB3Q,GAAS1kH,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAaklH,YAAYz+G,QAG3E4oD,QAAOA,KACGukE,EAAgB3Q,GAAS1kH,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAaklH,YAAYz+G,QAAQ,GAGnF69G,oBAAAA,GACEkP,EAASvQ,GAAS,EACpB,EAEAhvB,OAAAA,GAAuC,IAA/BihC,EAAqBjqH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAC3B,MAAMgpH,EAAQb,EAAOx5F,IAAIqpF,GACpBgR,IAILA,EAAM9Q,SAAW8Q,EAAM9Q,SAASziH,QAAQy0H,GAAMA,IAAMzgD,IAE/Cu/C,EAAM9Q,SAAS5hH,SAClB0yH,EAAMhsH,MAAMgY,QACZmzG,EAAO38B,OAAOwsB,GAEViS,GAgCZ,SAAyBjB,EAAchR,GACrC,MAAMmS,EAAiBlgH,GAAgBA,IAAO+tG,EAC3B,UAAfgR,EAAM32G,OACRi2G,EAAaA,EAAW7yH,OAAO00H,IAGd,UAAfnB,EAAM32G,OACRg2G,EAAaA,EAAW5yH,OAAO00H,GAEnC,CAxCUC,CAAgBpB,EAAOhR,GAGrBA,IAAYoQ,IACdA,OAAiB10H,IAGvB,EAEJ,CAkDA,SAASi1H,EAAgB9X,GAA2E,IAAvDr1G,EAAMwE,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG5B,EAAAA,GAAY6G,OAAQujH,EAAwBxoH,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAChG,MACMohH,EAlDR,SAAuBkU,GACrB,OAAQA,EAAM32G,MACZ,IAAK,QAAS,OAAOi2G,EACrB,IAAK,QAAS,OAAOD,EACrB,QAAS,OAEb,CA4CgBgC,CADAlC,EAAOx5F,IAAIkiF,IAEzB,IAAKiE,EAAO,OAEZ,GAAIt5G,IAAW4C,EAAAA,GAAY8G,OAAQ,CACjC,MAAMmzD,EAAQy8C,EAAMzpG,QAAQwlG,GAC5B,GAAIx4C,EAAQ,EAAG,OAEf,OAAOy8C,EAAMz8C,GADKmwD,GAAkB,EAAI,GAE1C,CAEA,MAAM,OAAEx1H,IAAW61H,EAAAA,EAAAA,IAAgBC,EAAajY,GAAW3gD,YACrDo6D,EAAYxV,EAAMr/G,QAAQ9B,GAAOA,EAAGwmC,WAAY,MAAKnnC,OACrDqlE,EAAQiyD,EAAUj/G,QAAQwlG,GAChC,GAAIx4C,EAAQ,EAAG,OACf,IAAIlT,EAAY3pD,IAAW4C,EAAAA,GAAY6G,QAAU,EAAI,EAErD,OADIujH,IAAgBrjE,IAAc,GAC3BmlE,EAAUjyD,EAAQlT,EAC3B,CAEO,SAAS3lD,EAAYnE,GAC1B,MAAMowC,GAAM8+E,EAAAA,EAAAA,IAAoBlvH,GAChC,GAAKowC,EAGL,MAAQ,GAAEA,KAAOpwC,EAAQI,MAC3B,CAEA,SAASqtH,EAAa9Q,GAGpB,MAAO,CACL9nD,WAHiB8nD,EAAQ3qG,MAAM,qBAAsB,GAIrD5R,KAHWyjC,OAAO84E,EAAQ5gD,MAAM,KAAKotD,OAKzC,CAGA,SAAS4E,EAAkBoB,EAAeC,GACxC,IAAKD,IAAQC,EAAK,OAAO,EACzB,MAAQhvH,KAAMivH,EAASx6D,WAAYy6D,GAAW7B,EAAa0B,IACnD/uH,KAAMmvH,EAAS16D,WAAY26D,GAAW/B,EAAa2B,GACrD34D,EAAO84D,EAAUF,EACvB,OAAgB,IAAT54D,EAAa+4D,EAAOC,cAAcH,GAAU74D,CACrD,C,yGCxVO,SAASi5D,EAAQC,GACtB,MAAO,CACLC,SAASD,EAAMh+G,UAAU,EAAG,GAAI,IAChCi+G,SAASD,EAAMh+G,UAAU,EAAG,GAAI,IAChCi+G,SAASD,EAAMh+G,UAAU,EAAG,GAAI,IAEpC,CAOO,SAAS0tE,EAAQswC,GACtB,MAAME,EAAKF,EAAM,GAAGxqF,SAAS,IACvB2qF,EAAKH,EAAM,GAAGxqF,SAAS,IACvB4qF,EAAKJ,EAAM,GAAGxqF,SAAS,IAC7B,OAAqB,GAAb0qF,EAAG50H,OAAc,IAAM40H,EAAKA,IAAoB,GAAbC,EAAG70H,OAAc,IAAM60H,EAAKA,IAAoB,GAAbC,EAAG90H,OAAc,IAAM80H,EAAKA,EAC5G,CAaO,SAASC,EAAOp3H,GAAgE,IAA9DkrE,EAAGytB,EAAGl6B,GAA4Bz+D,EACzDkrE,GAAK,IACLytB,GAAK,IACLl6B,GAAK,IAEL,IACIw3D,EAAYrsD,EADZ17D,EAAM3B,KAAK2B,IAAIg9D,EAAGytB,EAAGl6B,GAAIjyD,EAAMD,KAAKC,IAAI0+D,EAAGytB,EAAGl6B,GACvB44D,EAAYnpH,EAEnC0nC,EAAI1nC,EAAM1B,EAGd,GAFAo9D,EAAW,GAAP17D,EAAW,EAAI0nC,EAAI1nC,EAEnBA,GAAO1B,EACTypH,EAAI,MACC,CACL,OAAQ/nH,GACN,KAAKg9D,EACH+qD,GAAKt9B,EAAIl6B,GAAK7oB,GAAK+iD,EAAIl6B,EAAI,EAAI,GAC/B,MACF,KAAKk6B,EACHs9B,GAAKx3D,EAAIyM,GAAKt1B,EAAI,EAClB,MACF,KAAK6oB,EACHw3D,GAAK/qD,EAAIytB,GAAK/iD,EAAI,EAItBqgF,GAAK,CACP,CAEA,MAAO,CAACA,EAAGrsD,EAAGytD,EAChB,CAaO,SAASC,EAAO/1H,GAAgE,IACjF2pE,EAAYytB,EAAYl6B,GADLw3D,EAAGrsD,EAAGytD,GAA4B91H,EAGrDiC,EAAI+I,KAAKsgC,MAAU,EAAJopF,GACfsB,EAAQ,EAAJtB,EAAQzyH,EACZg0H,EAAIH,GAAK,EAAIztD,GACb6tD,EAAIJ,GAAK,EAAIE,EAAI3tD,GACjBkoD,EAAIuF,GAAK,GAAK,EAAIE,GAAK3tD,GAE3B,OAAQpmE,EAAI,GACV,KAAK,EACH0nE,EAAImsD,EACJ1+B,EAAIm5B,EACJrzD,EAAI+4D,EACJ,MACF,KAAK,EACHtsD,EAAIusD,EACJ9+B,EAAI0+B,EACJ54D,EAAI+4D,EACJ,MACF,KAAK,EACHtsD,EAAIssD,EACJ7+B,EAAI0+B,EACJ54D,EAAIqzD,EACJ,MACF,KAAK,EACH5mD,EAAIssD,EACJ7+B,EAAI8+B,EACJh5D,EAAI44D,EACJ,MACF,KAAK,EACHnsD,EAAI4mD,EACJn5B,EAAI6+B,EACJ/4D,EAAI44D,EACJ,MACF,KAAK,EACHnsD,EAAImsD,EACJ1+B,EAAI6+B,EACJ/4D,EAAIg5D,EAIR,MAAO,CACLlrH,KAAK7J,MAAU,IAAJwoE,GACX3+D,KAAK7J,MAAU,IAAJi2F,GACXpsF,KAAK7J,MAAU,IAAJ+7D,GAEf,CAEOpmD,eAAemuE,EAAgBj3D,GAEpC,MACMmoG,EAAuC,CAAC,EAAG,EAAG,GACpD,IAAIxrH,EACAuB,EACAC,EAEArL,EADAmB,GAAK,EAELm0H,EAAgC,CAAC,EAAG,EAAG,GACvC1wC,EAAQ,EAEZ,MAAM55E,EAASgH,SAASnS,cAAc,UAChCsd,EAAUnS,EAAOO,YAAcP,EAAOO,WAAW,MACvD,IAAK4R,EACH,OAAOk4G,EAGT,MAAME,QAAcx+D,EAAAA,EAAAA,IAAa7pC,GACjC7hB,EAASkqH,EAAMC,eAAiBD,EAAM/2D,cAAgB+2D,EAAMlqH,OAC5DD,EAAQmqH,EAAME,cAAgBF,EAAM9sE,aAAe8sE,EAAMnqH,MACzDJ,EAAOK,OAASA,EAChBL,EAAOI,MAAQA,EAEf+R,EAAQk6C,UAAUk+D,EAAO,EAAG,GAE5B,IACE1rH,EAAOsT,EAAQ2tF,aAAa,EAAG,EAAG1/F,EAAOC,EAC3C,CAAE,MAAOiC,GACP,OAAO+nH,CACT,CAKA,IAHAr1H,EAAS6J,EAAKA,KAAK7J,QAGXmB,GAAK4zE,IAAiB/0E,GACH,IAArB6J,EAAKA,KAAK1I,EAAI,OAChByjF,EACF0wC,EAAI,IAAMzrH,EAAKA,KAAK1I,GACpBm0H,EAAI,IAAMzrH,EAAKA,KAAK1I,EAAI,GACxBm0H,EAAI,IAAMzrH,EAAKA,KAAK1I,EAAI,IAO1B,OAJAm0H,EAAI,GAAKprH,KAAKsgC,MAAM8qF,EAAI,GAAK1wC,GAC7B0wC,EAAI,GAAKprH,KAAKsgC,MAAM8qF,EAAI,GAAK1wC,GAC7B0wC,EAAI,GAAKprH,KAAKsgC,MAAM8qF,EAAI,GAAK1wC,GAEtB0wC,CACT,CAEO,SAASI,EAAaC,GAC3B,MAAO9sD,EAAGytB,EAAGl6B,GAAKu5D,EAElB,MADa,MAAS9sD,EAAI,MAASytB,EAAI,MAASl6B,CAElD,CAGO,SAASw5D,EAAgBD,GAC9B,IAAKE,EAAKC,EAAY71E,GAAS80E,EAAQY,GAOvC,OALAG,EAAa5rH,KAAKC,IAAI,EAAG2rH,EAAa,IAAO,IAAO,EAAIA,IACxD71E,EAAQA,EAAQ,GACZ/1C,KAAK2B,IAAI,EAAW,IAARo0C,GACZ/1C,KAAK2B,IAAI,EAAG3B,KAAKC,IAAI,EAAG,EAAY,IAAR81C,IAExB,QAAa,IAAN41E,MAA2B,IAAbC,OAA8B,IAAR71E,SACrD,C,kBC3Me,SAAS81E,EAAc/1H,EAAgB+hE,GACpD,OAAOA,EAAQ73D,KAAKsgC,MAAMu3B,EAAQ/hE,GAAUA,CAC9C,C,kECMA,MAAMg2H,EAAkB,GAClBC,EAAiB,IAEvB,IAAIC,EAAsC,GACtCC,GAAU,EAEC,SAASC,EAASlpG,EAAayuE,GAC5Cu6B,EAAiB90H,KAAK,CAAE8rB,MAAKyuE,aACxBw6B,IACHA,GAAU,EACVxyH,YAAWqS,gBAOfA,iBACE,IAAI4uE,EAAQ,EACZ,IAAK,MAAMyxC,KAAmBH,EAC5BI,EAAYD,GACZzxC,IACIA,IAAUoxC,UACNt3G,EAAAA,EAAAA,IAAMu3G,GACZrxC,EAAQ,GAGZsxC,EAAmB,EACrB,CAjBYK,GACNJ,GAAU,CAAK,GACdF,GAEP,CAeA,SAASK,EAAW34H,GAAqC,IAApC,IAAEuvB,EAAG,SAAEyuE,GAA2Bh+F,EACrD,MAAM0vB,EAAOrb,SAASnS,cAAc,KACpCwtB,EAAK9Z,KAAO2Z,EACZG,EAAK+oG,SAAWz6B,EAChB,IACEtuE,EAAKmpG,OACP,CAAE,MAAOl/G,GAEPE,QAAQC,MAAMH,EAChB,CACF,C,6DC7CA,MAEMm/G,EAAgB,IAAIl7G,OAAQ,OAAMomB,EAAAA,EAAalmB,YAAa,IAyClE,EAvC8Bnb,IAC5B,MACMo2H,GADmBC,EAAAA,EAAAA,GAAoBr2H,GACdwgE,MAAM,MAC/B81D,EAAsBF,EAAMx0G,KAAK,IACvC,GAAI00G,EAAoB52H,OAPP62H,IAQf,OAAO,EAIT,IADoBv5H,QAAQs5H,EAAoB7/G,MAAM0/G,IAEpD,OAAO,EAET,MAAMK,EAAeJ,EAAMz3H,KAAK83H,IAC9B,IAAIC,EAAa,EACjB,KAAOr1F,EAAAA,EAAas2D,KAAK8+B,IAGvB,GAFAC,IAEIA,EArBW,IAuBb,OADAr1F,EAAAA,EAAas1F,UAAY,GACjB,EAIZ,OAAOD,CAAU,IAGnB,IAAInrH,EAAM6qH,EAAM12H,OAChB,IAAK,IAAImB,EAAI,EAAGA,EAAI21H,EAAa92H,OAAQmB,IAAK,CAC5C,IAAyB,IAArB21H,EAAa31H,GACf,OAAO,EAEL21H,EAAa31H,GAAK0K,IACpBA,EAAMirH,EAAa31H,GAEvB,CAEA,OAAO0K,CAAG,C,kDCzCG,SAASkwB,EAAqBqS,EAAsBqhC,EAAiBynD,GAClF,IAAKznD,GAASrhC,IAAYp8B,SAASmE,cACjC,OAGF,MAAM+kB,EAAY92B,OAAO+2B,eACnBoT,EAAQv8B,SAASw8B,cACjBH,EAAYD,EAAQC,WAAaD,EAElC1qB,EAAAA,IAAiBwzG,GAA0B7oF,GAAcA,EAAU8oF,WAKxE5oF,EAAM6oF,mBAAmBF,EAAuB9oF,EAAUC,GAE1DE,EAAMouB,UAAS,GACfzhC,EAAUyT,kBACVzT,EAAU0T,SAASL,IARjBH,EAAQt8B,OASZ,C,kDCnBA,MAAMulH,EAAe,EAEN,SAASC,IACtB,MAAMp8F,EAAY92B,OAAO+2B,eACzB,IAAIo8F,EAAoBr8F,GAAWI,WAAaJ,EAAUM,WAAW,GAAGg8F,qBAAkBp6H,EAE1F,MAAMq6H,EAA2Bv8F,GAAWw8F,WAAax8F,EAAUy8F,YAAc,GAC5EC,EAAuB18F,EAAUw8F,UAAWG,EAAAA,KACjD,IAAKN,GAA6D,IAAxCA,EAAkBO,kBAC1C,OAGF,MAAMjyG,EAAa5b,MAAMgN,KAAKsgH,EAAkBQ,UAC7Cj6G,QAAO,CAAChK,EAAQR,IACXA,EAAK6B,WAAakiH,GAAgB/jH,EAAKrB,UAAUomG,SAAS,sBACrDpuG,MAAMgN,KAAK3D,EAAKqE,iBAAiB,aACrCmG,QAAO,CAACC,EAAKi6G,IAAcj6G,EAAIzD,OAAOsuB,OAAQovF,EAA0B//G,QAAQ/J,aAAa4F,GACvFR,EAAK6B,WAAakiH,GAAgB/jH,EAAKrB,UAAUomG,SAAS,WAC5DvkG,EAAOwG,OAAOsuB,OAAQt1B,EAAqB2E,QAAQ/J,YAGrD4F,GACN,IAGL,KAAOyjH,EAAkBU,YACvBV,EAAkB1oF,YAAY0oF,EAAkBU,YAQlD,OANAV,OAAoBn6H,EAEfq6H,GACH5xG,EAAWqoG,MAGNroG,CACT,CAEA,SAAS+xG,EAAuBxpF,EAAexwC,GAC7C,QAAIwwC,EAAQj5B,WAAakiH,IAAiBjpF,EAAwBn8B,UAAUomG,SAASz6G,OAI9EwwC,EAAQswD,YAAak5B,EAAuBxpF,EAAQswD,WAAY9gG,EACzE,C,0DC3CA,MAAMs6H,EAAiB,IAEhB,SAAS77B,EAAWk5B,EAAsB4C,GAAkE,IAAnDC,EAAkB1uH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,YACnF,MAAMwjB,EAAMqoG,aAAiBh3G,KAAO3C,IAAIggF,gBAAgB25B,GAASA,EAC3Dx5B,EAAM,IAAI4O,MAChB,OAAO,IAAIhxF,SAASwE,IAClB49E,EAAI8O,OAAS,KACXr/F,EAAMuwF,EAAKA,EAAI3wF,MAAQ+sH,EAAOp8B,EAAI1wF,OAAS8sH,EAAOC,GAC/CphE,MAAM14C,IACL,IAAKA,EAAM,MAAM,IAAIo4E,MAAM,wBAC3B,OAAO96E,IAAIggF,gBAAgBt9E,EAAK,IAEjC04C,KAAK74C,GACLiwG,SAAQ,KACHmH,aAAiBh3G,MACnB3C,IAAI0gF,gBAAgBpvE,EACtB,GACA,EAEN6uE,EAAIj4F,IAAMopB,CAAG,GAEjB,CAEO,SAASmrG,EACd9C,EAAsBnqH,EAAeC,GACpB,IADoC+sH,EAAkB1uH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,YAE1E,MAAMwjB,EAAMqoG,aAAiBh3G,KAAO3C,IAAIggF,gBAAgB25B,GAASA,EAC3Dx5B,EAAM,IAAI4O,MAChB,OAAO,IAAIhxF,SAASwE,IAClB49E,EAAI8O,OAAS,KACXr/F,EAAMuwF,EAAK3wF,EAAOC,EAAQ+sH,GACvBphE,MAAM14C,IACL,IAAKA,EAAM,MAAM,IAAIo4E,MAAM,wBAC3B,OAAO96E,IAAIggF,gBAAgBt9E,EAAK,IAEjC04C,KAAK74C,GACLiwG,SAAQ,KACHmH,aAAiBh3G,MACnB3C,IAAI0gF,gBAAgBpvE,EACtB,GACA,EAEN6uE,EAAIj4F,IAAMopB,CAAG,GAEjB,CAEAlX,eAAexK,EACbuwF,EAAuB3wF,EAAeC,GAChB,IADgC+sH,EAAkB1uH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,YAG3E,KAAI,sBAAuBtF,QA6BzB,OAAOk0H,EAAav8B,EAAK3wF,EAAOC,OAAQjO,EAAWg7H,GA5BnD,IACE,MAAMG,QAAen0H,OAAOo0H,kBAAkBz8B,EAC5C,CAAE08B,YAAartH,EAAOstH,aAAcrtH,EAAQstH,cAAe,SAC7D,GAAIJ,EAAOltH,SAAWA,GAAUktH,EAAOntH,QAAUA,EAC/C,MAAM,IAAIsrF,MAAM,sCAElB,MAAMxS,QAAqBC,EAAAA,EAAAA,IAAgB4X,EAAIj4F,KACzC80H,GAAYlD,EAAAA,EAAAA,IAAaxxC,GAAgBg0C,EAAiB,OAAS,OACzE,aAAa,IAAIv+G,SAASk/G,IACxB,MAAM7tH,EAASgH,SAASnS,cAAc,UACtCmL,EAAOI,MAAQmtH,EAAOntH,MACtBJ,EAAOK,OAASktH,EAAOltH,OACvB,MAAMytH,EAAQ9tH,EAAOO,WAAW,MAChCutH,EAAM5tH,UAAY0tH,EAClBE,EAAMphE,SAAS,EAAG,EAAG1sD,EAAOI,MAAOJ,EAAOK,QAC1C,MAAMC,EAAMN,EAAOO,WAAW,kBAC1BD,EACFA,EAAIytH,wBAAwBR,GAE5BO,EAAMzhE,UAAUkhE,EAAQ,EAAG,GAE7BvtH,EAAOguH,OAAOH,EAAKT,EAAW,GAElC,CAAE,MAAO9qH,GAEP,OAAOgrH,EAAav8B,EAAK3wF,EAAOC,OAAQjO,EAAWg7H,EACrD,CAIJ,CAEApiH,eAAesiH,EACbv8B,EAAuB3wF,EAAeC,GAChB,IADgC4tH,EAAYvvH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,GAAK0uH,EAAkB1uH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,YAE/F,MAAMsB,EAASgH,SAASnS,cAAc,UAChCyL,EAAMN,EAAOO,WAAW,MACxB2tH,EAAKlnH,SAASnS,cAAc,UAC5Bs5H,EAAOD,EAAG3tH,WAAW,MAK3B,GAHAP,EAAOI,MAAQA,EACfJ,EAAOK,OAASA,EAEZ0wF,EAAI3wF,MAAQ6tH,EAAO7tH,EAAO,CAC5B,MAAMguH,EAAM,EAAIH,EAChB,IAAII,EAAM,CACRjuH,MAAOlB,KAAKsgC,MAAMuxD,EAAI3wF,MAAQ6tH,GAC9B5tH,OAAQnB,KAAKsgC,MAAMuxD,EAAI1wF,OAAS4tH,IAQlC,IALAC,EAAG9tH,MAAQiuH,EAAIjuH,MACf8tH,EAAG7tH,OAASguH,EAAIhuH,OAEhB8tH,EAAK9hE,UAAU0kC,EAAK,EAAG,EAAGs9B,EAAIjuH,MAAOiuH,EAAIhuH,QAElCguH,EAAIjuH,MAAQ6tH,EAAO7tH,GACxBiuH,EAAM,CACJjuH,MAAOlB,KAAKsgC,MAAM6uF,EAAIjuH,MAAQ6tH,GAC9B5tH,OAAQnB,KAAKsgC,MAAM6uF,EAAIhuH,OAAS4tH,IAElCE,EAAK9hE,UAAU6hE,EAAI,EAAG,EAAGG,EAAIjuH,MAAQguH,EAAKC,EAAIhuH,OAAS+tH,EAAK,EAAG,EAAGC,EAAIjuH,MAAOiuH,EAAIhuH,QAGnFC,EAAI+rD,UAAU6hE,EAAI,EAAG,EAAGG,EAAIjuH,MAAOiuH,EAAIhuH,OAAQ,EAAG,EAAGL,EAAOI,MAAOJ,EAAOK,OAC5E,MACEC,EAAI+rD,UAAU0kC,EAAK,EAAG,EAAG/wF,EAAOI,MAAOJ,EAAOK,QAGhD,MAAM64E,QAAqBC,EAAAA,EAAAA,IAAgB4X,EAAIj4F,KACzC80H,GAAYlD,EAAAA,EAAAA,IAAaxxC,GAAgBg0C,EAAiB,OAAS,OAIzE,OAHA5sH,EAAIJ,UAAY0tH,EAChBttH,EAAImsD,yBAA2B,mBAC/BnsD,EAAIosD,SAAS,EAAG,EAAG1sD,EAAOI,MAAOJ,EAAOK,QACjC,IAAIsO,SAASwE,IAClBnT,EAAOguH,OAAO76G,EAASi6G,EAAW,GAEtC,C,iDC/HO,SAASkB,EAAoB3lH,GAClC,GAAyB,SAArBA,EAAG/P,MAAMw1E,QACX,OAAO,EAGT,MAAMj4B,EAAOxtC,EAAGnG,yBACRnC,OAAQkuH,GAAiBnhG,EAAAA,EAAWC,MAE5C,OAAQ8oB,EAAKhT,KAAOorF,GAAmBp4E,EAAKhT,IAAMgT,EAAK91C,QAAW,CACpE,C,+DCTA,MAAMmuH,EAAY,CAChBC,OAAQ,+BACRC,KAAM,qCACNC,IAAK,gCACLC,MAAO,0BAIHC,EAAe,IAAI9kC,IAAIj2F,OAAOi/F,QAAQ,CAC1C,mBAAoB,UACpB,eAAgB,UAChB,sBAAuB,UACvB,yBAA0B,UAC1B,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,mBAAoB,UACpB+7B,mBAAoB,UACpBC,SAAU,UACVC,UAAW,UACXp3E,MAAO,UACPq3E,KAAM,UACNC,KAAM,UACNC,UAAW,UACXC,eAAgB,UAChBC,MAAO,UACPC,OAAQ,UACRC,KAAM,aAGFC,EAAgB,CACpB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAGnF,SAASC,EAAcC,EAAkCC,GAAmD,IAAXr4D,EAAI54D,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,GAC7G,MAAM,IAAEkxH,EAAG,KAAEC,GAASF,EAChBG,EAActB,EAAUkB,GAC9B,OAAQA,GACN,IAAK,SACH,MAAQ,GAAEI,WAAqBF,KAAOC,MAASD,KAAOC,KAAQv4D,KAChE,IAAK,OACH,MAAQ,GAAEw4D,QAAkBF,KAAOC,SAAYv4D,cAAiBs4D,KAAOC,IACzE,IAAK,QACH,MAAQ,GAAEC,OAAiBF,KAAOC,IAEpC,QACE,MAAQ,GAAEC,WAAqBF,UAAYC,UAAav4D,IAE9D,CAEO,SAASy4D,EAAkBH,EAAat4D,GAE7C,OAAQ,aAAep4D,KAAK8wH,IAAIJ,GAAO1wH,KAAKk8F,GAAK,MAAS,GAAK9jC,CACjE,CAEO,SAAS24D,EAAgBl/G,GAC9B,OAAKA,EACG,0CAAyCA,WAD/B,EAEpB,CAGO,SAASm/G,EAAcn/G,GAC5B,OAAKA,EACE89G,EAAaxhG,IAAItc,IACnB89G,EAAaxhG,IAAItc,EAAK+kD,MAAM,KAAK,KACjC05D,GAGiBW,EAHYp/G,EAI3Bo/G,EAAIr6D,MAAM,IAAIhjD,QAAO,CAACs9G,EAAUC,KAElCD,GAAY,GAAKA,EAAYC,EAAQC,WAAW,GAAM,GAAI,GANrBd,EAAcx6H,SAHtC,UAMpB,IAAwBm7H,CAFxB,C,iFC5CA,MAAMI,EAAmB,CACvBzwD,UAAM1tE,EACNshB,WAAOthB,EACP6lH,kBAAc7lH,EACdgmH,iBAAahmH,EACbomH,mBAAepmH,EACfmmH,eAAWnmH,EACX8gB,UAAM9gB,EACNimH,YAAQjmH,GAGH,SAASwlH,EAAqB9lB,EAA0B8kB,GAC7D,MAAM,aAAE4Z,GAAiBp3H,OAAOq3H,UAC5BD,GACE1+B,GAAUinB,EAAejnB,GACzB8kB,GAAU8Z,EAAwB9Z,IAGtCpqG,QAAQw1G,KAAK,iDAEjB,CAEO,SAASjJ,EAAejnB,GAC7B,MAAM,aAAE0+B,GAAiBp3H,OAAOq3H,UAC5BD,IAEFA,EAAa1+B,SAAWA,GAAY,KAExC,CAEO,SAAS4+B,EAAwB9Z,GACtC,MAAM,aAAE4Z,GAAiBp3H,OAAOq3H,UAC5BD,GACF18H,OAAOi/F,QAAQ,IAAKw9B,KAAqB3Z,IAAYn2G,SAAQ9N,IAAoB,IAAlBw3C,EAAKg+B,GAAQx1E,EAC1E,IAEE69H,EAAaG,iBAAiBxmF,EAAKg+B,EACrC,CAAE,MAAO77D,GACP,IAIR,CAEO,SAASskH,IACd,MAAM,aAAEJ,GAAiBp3H,OAAOq3H,UAC5BD,IAEFA,EAAa1+B,SAAW,KACxB4+B,EAAwBH,GACpBC,EAAaK,gBAAeL,EAAaK,cAAgB,QAC7DL,EAAa1X,qBAEjB,CAEO,SAASJ,IAAgE,IAA/CnE,EAAoC71G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,OACtE,MAAM,aAAE8xH,GAAiBp3H,OAAOq3H,UAC5BD,GAAgBA,EAAaK,gBAC/BL,EAAaK,cAAgBtc,EAEjC,CAEO,SAASuE,EAAiBvE,GAC/B,IAAKA,QAA4BniH,IAAnBmiH,EAAM51E,eAA6CvsC,IAAnBmiH,EAAMv2G,SAAwB,OAC5Eu2G,EAAM51E,SAAWz/B,KAAKC,IAAIo1G,EAAM51E,SAAU41E,EAAMv2G,UAEhD,MAAM,aAAEwyH,GAAiBp3H,OAAOq3H,UAChCD,GAAc1X,mBAAmBvE,EACnC,CAEO,SAASuc,EAAkB58H,GAEN,IAFO,MACjCkP,EAAK,OAAE4uF,EAAM,MAAE++B,EAAK,QAAEC,GACE98H,EACxB,GAAI,kBAAmBkF,OACrB,OAAO,IAAIA,OAAO63H,cAAc,CAC9B7tH,QACA4uF,SACA++B,QACAC,WAIN,C,kDCxGA,MAAME,EAAQ,IAAIC,QAKH,SAAS/gH,EAAgCghH,GACtD,OAAO,WACL,MAAMC,EAASH,EAAM7jG,IAAI+jG,GAAI,QAAA9O,EAAA5jH,UAAA1J,OADpBqsC,EAAI,IAAApiC,MAAAqjH,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlhF,EAAIkhF,GAAA7jH,UAAA6jH,GAEb,GAAI8O,IAAUC,EAAAA,EAAAA,GAAqBD,EAAOE,SAAUlwF,GAClD,OAAOgwF,EAAOG,WAGhB,MAAM1oH,EAASsoH,KAAM/vF,GAErB,OADA6vF,EAAMrlC,IAAIulC,EAAI,CAAEG,SAAUlwF,EAAMmwF,WAAY1oH,IACrCA,CACT,CACF,C,2CChBO,MAAM2oH,EAAwC,CACnDhf,cAAc,EACd1hG,KAAM,UACN6rC,SAAU,iBACViC,YAAa,qBACb2zD,WAAY,OACZ31D,gBAAgB,EAChB81D,qBAAqB,GAGV+e,EAAkD,CAC7Djf,cAAc,EACd1hG,KAAM,kBACN6rC,SAAU,0BACV41D,WAAY,OACZG,qBAAqB,E,2FCXhB,MAAMrlG,EAAmE,CAC9EqkH,EAAGjkH,EAAAA,GAAsBkkH,KACzBC,OAAQnkH,EAAAA,GAAsBkkH,KAC9BE,EAAGpkH,EAAAA,GAAsBqkH,OACzBC,GAAItkH,EAAAA,GAAsBqkH,OAC1BE,IAAKvkH,EAAAA,GAAsBwkH,UAC3BC,EAAGzkH,EAAAA,GAAsBwkH,UACzBE,EAAG1kH,EAAAA,GAAsB2kH,OACzBC,OAAQ5kH,EAAAA,GAAsB2kH,OAC9BE,IAAK7kH,EAAAA,GAAsB2kH,OAC3BG,KAAM9kH,EAAAA,GAAsB+kH,KAC5BC,IAAKhlH,EAAAA,GAAsBilH,IAC3B5qH,WAAY2F,EAAAA,GAAsBklH,YAG9BC,EAAmB,EAEV,SAASjnH,EACtB1D,GACkB,IADJ4qH,EAAiBp0H,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAAUq0H,EAAYr0H,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAErD,MAAMmN,EAAW7E,SAASnS,cAAc,OACxCgX,EAASQ,UAAY0mH,EAAe7qH,EAmDtC,SAAuBA,GACrB,IAAI8qH,EAAa9qH,EAAKlU,MAAM,GAsD5B,OAnDAg/H,EAAaA,EAAW5mH,QAAQ,UAAW,KAG3C4mH,EAAaA,EAAW5mH,QAAQ,4BAA6B,MAE7D4mH,EAAaA,EAAW5mH,QAAQ,gBAAiB,MAGjD4mH,EAAaA,EAAW5mH,QAAQ,qBAAsB,MACtD4mH,EAAaA,EAAW5mH,QAAQ,SAAU,MAC1C4mH,EAAaA,EAAW5mH,QAAQ,WAAY,IAG5C4mH,EAAaA,EAAW5mH,QAAQ,sCAAuC,oCACvE4mH,EAAaA,EAAW5mH,QAAQ,kCAAmC,iBACnE4mH,EAAaA,EAAW5mH,QAAQ,uBAAwB,iBAGxD4mH,EAAaA,EAAW5mH,QACtB,wEACA,mBAIGsqB,EAAAA,KAEHs8F,EAAaA,EAAW5mH,QAAQ,oCAAqC,SAEvE4mH,EAAaA,EAAW5mH,QACtB,0FACA,wCAIF4mH,EAAaA,EAAW5mH,QACtB,wEACA,aAEF4mH,EAAaA,EAAW5mH,QACtB,wEACA,aAEF4mH,EAAaA,EAAW5mH,QACtB,wEACA,aAEF4mH,EAAaA,EAAW5mH,QACtB,wEACC,2BAA0BsB,EAAAA,GAAsBshD,sBAG5CgkE,CACT,CA1G0BC,CAApBH,EA4GN,SAA4B5qH,GAC1B,OAAOA,EAAKkE,QAAQ,IAAImE,OAAQ,qBAAoB2Q,EAAAA,YAA0B,MAAM,CAACijC,EAAG7uD,EAAM+sB,IAEpF,YADIA,EAAK9W,SAAS,OAAS8W,EAAOA,EAAK9W,SAAS,KAAQ,UAAS8W,IAAU,WAAUA,QAClE/sB,SAE/B,CAjHwC49H,CAAmBhrH,GAAuBA,GAChFirH,EAAgBtnH,GAChB,MAAMvW,EAAOuW,EAAS2B,UAAUssB,OAAO1tB,QAAQ,WAAY,IAE3D,IAAIgnH,GADcvnH,EAAS2B,UAAUzD,QAAQzU,EAAK,IAE9C+9H,EAAoB,EACxB,MAAMhlH,EAA+B,GAErC,SAASilH,EAAUhrH,GACjB,GAAIA,EAAK6B,WAAaopH,KAAKC,aAAc,OACzC,MAAM,MAAEz8D,EAAK,OAAE90C,GAyGnB,SACE3Z,EACAmrH,EACAL,GAEA,MAAMriH,EAyER,SAA+BzI,GAC7B,GAAIA,aAAgBuE,aAAevE,EAAK2E,QAAQC,WAC9C,OAAO5E,EAAK2E,QAAQC,WAGtB,GAAII,EAA0BhF,EAAKmB,UACjC,OAAO6D,EAA0BhF,EAAKmB,UAGxC,GAAsB,MAAlBnB,EAAKmB,SAAkB,CACzB,MAAMjB,EAASF,EACf,OAAIE,EAAOyE,QAAQC,aAAeQ,EAAAA,GAAsBC,YAC/CD,EAAAA,GAAsBC,YAE3BnF,EAAOyE,QAAQC,aAAeQ,EAAAA,GAAsBgC,IAC/ChC,EAAAA,GAAsBgC,IAE3BlH,EAAOD,KAAKswB,WAAW,WAClBnrB,EAAAA,GAAsBgmH,MAE3BlrH,EAAOD,KAAKswB,WAAW,QAClBnrB,EAAAA,GAAsBimH,MAE3BnrH,EAAOD,OAASC,EAAOe,YAClBmE,EAAAA,GAAsB+B,QAGxB/B,EAAAA,GAAsBgC,GAC/B,CAEA,MAAsB,SAAlBpH,EAAKmB,SACCnB,EAAqB2E,QAAQC,WAGjB,QAAlB5E,EAAKmB,UACFnB,EAA0B2E,QAAQuuB,WAC9B9tB,EAAAA,GAAsBE,iBAFjC,CAOF,CAlHegmH,CAAsBtrH,GAEnC,IAAKyI,IAASzI,EAAKiB,YACjB,MAAO,CACLwtD,MAAOq8D,EACPnxG,YAAQ7vB,GAIZ,MAAMyhI,EAAWJ,EAAQ1pH,QAAQzB,EAAKiB,YAAa6pH,GAG7Cr8D,EAAQ88D,GAAY,EAAIA,EAAWT,EACnCn6F,EAASw6F,EAAQ/nH,UAAU,EAAGqrD,GAAO/hE,QACrC,OAAEA,GAAWy+H,EAAQ/nH,UAAUqrD,EAAOA,EAAQzuD,EAAKiB,YAAYvU,QAErE,OAAI+b,IAASrD,EAAAA,GAAsB+B,QAC1B,CACLsnD,QACA90C,OAAQ,CACNlR,OACAkoB,SACAjkC,SACAktB,IAAM5Z,EAA2BC,OAInCwI,IAASrD,EAAAA,GAAsBC,YAC1B,CACLopD,QACA90C,OAAQ,CACNlR,OACAkoB,SACAjkC,SACAs3C,OAAShkC,EAA2B2E,QAAQq/B,SAK9Cv7B,IAASrD,EAAAA,GAAsBilH,IAC1B,CACL57D,QACA90C,OAAQ,CACNlR,OACAkoB,SACAjkC,SACAkvB,SAAW5b,EAAwB2E,QAAQiX,WAK7CnT,IAASrD,EAAAA,GAAsBE,YAC1B,CACLmpD,QACA90C,OAAQ,CACNlR,OACAkoB,SACAjkC,SACAwmC,WAAalzB,EAA0B2E,QAAQuuB,aAK9C,CACLu7B,QACA90C,OAAQ,CACNlR,OACAkoB,SACAjkC,UAGN,CArL8B8+H,CAAsBxrH,EAAMhT,EAAM89H,GAE5D,GAAInxG,EACFmxG,EAAYr8D,EACZ1oD,EAASjY,KAAK6rB,QACT,GAAI3Z,EAAKiB,YAAa,CAE3B,GAAc,IAAVwtD,GAA2C,KAA5BzuD,EAAKiB,YAAYuwB,OAClC,OAEFs5F,GAAa9qH,EAAKiB,YAAYvU,MAChC,CAEIsT,EAAKyrH,iBAAmBV,GAAqBR,IAC/CQ,GAAqB,EACrBp0H,MAAMgN,KAAK3D,EAAKoB,YAAYjJ,QAAQ6yH,GAExC,CAOA,OALAr0H,MAAMgN,KAAKJ,EAASnC,YAAYjJ,SAAS6H,IACvC+qH,EAAoB,EACpBC,EAAUhrH,EAAK,IAGV,CACLhT,OACA+Y,SAAUA,EAASrZ,OAASqZ,OAAWjc,EAE3C,CAEO,SAAS+gI,EAAgBtnH,GAC9BA,EAASc,iBAAiB,OAAOlM,SAAS6H,IACpCA,EAAK2E,QAAQuuB,WACflzB,EAAKiB,YAAejB,EAA0BmF,KAAO,GAErDnF,EAAK0E,YAAY1E,EAAKmF,KAAO,GAC/B,GAEJ,C,4DCxEA,MACMumH,EAAoB,OACpBC,EAAmB,QAEnBC,EAAc,IAAInqC,IAClBoqC,EAAY,IAAIpqC,IAChBqqC,EAAkB,IAAIrqC,IAErB,SAAgBwkB,EACrBrsF,GAAW,QACXtoB,EAAK8E,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,EACR21H,EAAS31H,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGs1H,EAAiB,yBAE7B,MAAMjoH,EAAQmW,EAAInW,MAAM,kBACxB,IAAIuoH,EAOJ,IALEA,EADEvoH,EACSA,GAAS6xB,OAAO7xB,EAAM,IAEtBooH,EAAU9mG,IAAInL,KAGd,CACX,GAAIoyG,GAAY16H,GAAS06H,EAAU,OAEnC,IAAIz6H,EAAMD,EAAQy6H,EAAY,EAC1BC,GAAYz6H,EAAMy6H,IACpBz6H,EAAMy6H,EAAW,GAInB,MAAMC,EAAY,GAAEryG,KAAOtoB,KAASC,IACpC,IAAI26H,EAAcN,EAAY7mG,IAAIknG,GAElC,IAAKC,EAAa,CAChB,IAAI/R,EAAU2R,EAAgB/mG,IAAIknG,GAC7B9R,IACHA,GAAUgS,EAAAA,EAAAA,IAAQ,gBAAiB,CACjChW,YAAarnH,EAAAA,GAAey3G,YAC5B3sF,MACAtoB,QACAC,QAGFu6H,EAAgBvoC,IAAI0oC,EAAU9R,IAGhC,MAAM35G,QAAe25G,EAAQW,SAAQ,KACnCgR,EAAgBlqC,OAAOqqC,EAAS,IAGlC,IAAKzrH,GAAQ0rH,YAAa,OAGtB1rH,EAAO4rH,WAAaJ,IACtBA,EAAWxrH,EAAO4rH,SAClBP,EAAUtoC,IAAI3pE,EAAKpZ,EAAO4rH,WAI5BF,EAAc1rH,EAAO0rH,YAGjB36H,GAAOo6H,GACTC,EAAYroC,IAAI0oC,EAAUzrH,EAAO0rH,YAErC,OAGMA,EAEN56H,EAAQC,EAAM,CAChB,CACF,CA7D+B,EA6D9B,OAAAyI,GAAA,OAAAqM,QAAAyE,OAAA9Q,EAAA,E,wEC5ED,MAAMqyH,EAAc3tH,SAASnS,cAAc,OAEpC,SAAS67B,EAAsBxoB,GACpC,MAAMgoB,EAAY92B,OAAO+2B,eAEzB,GAAID,GAAWM,YAAcN,EAAUI,WAAY,CACjD,MAAMiT,EAAQrT,EAAUM,WAAW,GACnC+S,EAAMqxF,iBAEN,MAAM/oH,EAAW03B,EAAMsxF,yBAAyB3sH,GAC1C4sH,EAAmBjpH,EAASw3B,UAClCE,EAAMwxF,WAAWlpH,GACbipH,GACFvxF,EAAMyxF,cAAcF,GACpBvxF,EAAM0xF,YAAYH,IAElBvxF,EAAMouB,UAAS,GAEjBzhC,EAAUyT,kBACVzT,EAAU0T,SAASL,EACrB,CACF,CAEO,SAAS8wD,EAAuBpnC,EAAyBioE,GAC9D,IAAKjoE,EACH,MAAO,GAGT,MAAMkoE,EAAM/7H,OAAO+2B,eACnB,IAAKglG,IAAQA,EAAI7kG,WACf,OAAO28B,EAAU5gD,UAGnB,MAAMk3B,EAAQ4xF,EAAI3kG,WAAW,GAAG4kG,aAChC,OAAK7xF,EAAM8xF,eAAepoE,GAIrBioE,GAAsBjoE,EAAUogD,SAAS9pE,EAAMkwD,0BAIpDlwD,EAAMouB,UAAS,GACfpuB,EAAME,SAASwpB,EAAW,GAE1B0nE,EAAYtoH,UAAY,GACxBsoH,EAAYxtH,YAAYo8B,EAAMipF,iBAEvBmI,EAAYtoH,WATV,GAJA4gD,EAAU5gD,SAcrB,CAGO,SAASwsF,EAAiBz1D,GAC/B,IAAIw1D,EAAgB,EACpB,MAAM1oE,EAAY92B,OAAO+2B,eACzB,IAAKD,GAAsC,IAAzBA,EAAUI,WAC1B,OAAOsoE,EAGT,MAAMr1D,EAAQrT,EAAUM,WAAW,GAC7B8kG,EAAa/xF,EAAM6xF,aAKzB,OAJAE,EAAWlJ,mBAAmBhpF,GAC9BkyF,EAAW5xF,OAAOH,EAAMgyF,aAAchyF,EAAMiyF,WAC5C58B,EAAgB08B,EAAWp2F,WAAWlqC,OAE/B4jG,CACT,CAGO,SAASG,EAAiB31D,EAAezE,GAC9C,IAAK,MAAMr2B,KAAQ86B,EAAQ15B,WACzB,GAAIpB,EAAK6B,WAAaopH,KAAKkC,UAAW,CACpC,GAAKntH,EAActT,QAAU2pC,EAAU,CACrC,MAAM4E,EAAQv8B,SAASw8B,cACjBtT,EAAY92B,OAAO+2B,eAMzB,OALAoT,EAAME,SAASn7B,EAAMq2B,GACrB4E,EAAMouB,UAAS,GACfzhC,EAAUyT,kBACVzT,EAAU0T,SAASL,IAEX,CACV,CACE5E,GAAY,WAAYr2B,EAAOA,EAAKtT,OAAmB,CAE3D,MAEE,IAAkB,KADlB2pC,EAAWo6D,EAAiBzwF,EAAMq2B,IAEhC,OAAQ,EAKd,OAAOA,CACT,CAEO,SAAS+2F,IACd,MAAMxlG,EAAY92B,OAAO+2B,eACzBD,GAAWyT,iBACb,C,kBClGA,IAAIgyF,EAEG,SAAS7+G,IAAsF,IAAhE8+G,EAAMl3H,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,IAAKivG,EAA4BjvG,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAAEyjI,EAAUn3H,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACrFi3H,IACHA,EAAe3uH,SAASnS,cAAc,SACtC8gI,EAAapoH,aAAa,OAAQ,SAGpCooH,EAAapoH,aAAa,SAAUqoH,GAEhCC,EACFF,EAAa7oH,gBAAgB,YAE7B6oH,EAAapoH,aAAa,WAAY,YAIxCooH,EAAaG,SAAW,KACxBH,EAAa1gF,MAAQ,GACrB0gF,EAAaG,SAAWnoB,EAExBgoB,EAAanK,OACf,C,kCCnBO,SAAS5rH,EAAem2H,GAC7B,MAAMC,EAAiC,EAArBD,EAAY/gI,OACxBihI,EAAc/2H,KAAKsgC,MAAMw2F,EAAY,GAC3C,IAAKC,EACH,MAAO,GAWT,MAAMntH,EAAS7J,MAAMg3H,GACfC,EAAWH,EACjB,IAAK,IAAI5/H,EAAI,EAAGmiF,EAAI29C,EAAc,EAAG9/H,IAAMmiF,IAAKniF,EAAG,CACjD,MAAMggI,EAAYj3H,KAAKsgC,MAAW,EAAJrpC,EAAS,GACjCigI,EAAWl3H,KAAKsgC,MAAW,EAAJrpC,EAAS,GAChC8+C,EAAQihF,EAASC,IAAcD,EAASC,EAAY,IAAM,GAChErtH,EAAO3S,GAAO8+C,GAASmhF,EAAY,EACrC,CACA,MAAMC,EAAgBn3H,KAAKsgC,MAA2B,GAAnBy2F,EAAc,GAAU,GACrDK,EAAep3H,KAAKsgC,MAA2B,GAAnBy2F,EAAc,GAAU,GACpDM,EAAYL,EAASG,IAAkBH,EAASG,EAAgB,IAAM,GAG5E,OAFAvtH,EAAOmtH,EAAc,GAAMM,GAAaD,EAAgB,GAEjDxtH,CACT,CAEO,SAAShJ,EAAiBjB,EAAgB23H,GAC/C,IAAIz3H,EAAO,EACX,MAAM03H,EAAU,IAAIx3H,MAAMu3H,GACpBE,EAAe73H,EAAK7J,OAASwhI,EAC7BG,EAAa93H,EAAK,GAClB+3H,EAAc/3H,EAAKA,EAAK7J,OAAS,GACvC,IAAK,IAAImB,EAAI,EAAGA,EAAIqgI,EAAUrgI,IAAK,CACjC,MAAMqmE,EAAMt9D,KAAKsgC,MAAMrpC,EAAIugI,GACrBG,IAAQh4H,EAAK29D,EAAM,IAAMm6D,IAAe93H,EAAK29D,IAAQm6D,IAAe93H,EAAK29D,EAAM,IAAMo6D,IAAgB,EAC3GH,EAAQtgI,GAAK0gI,EACT93H,EAAO83H,IACT93H,EAAO83H,EAEX,CACA,MAAO,CAAEh4H,KAAM43H,EAAS13H,OAC1B,C,2DChDA,SAAgB,KAAO,WAAW,OAAS,WAAW,iBAAiB,WAAW,cAAgB,WAAW,IAAM,WAAW,KAAO,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,WAAW,WAAW,QAAU,WAAW,QAAU,WAAW,SAAW,W,kCCArT,SAAgB,KAAO,WAAW,OAAS,WAAW,QAAU,WAAW,KAAO,WAAW,KAAO,WAAW,oBAAsB,WAAW,mBAAqB,WAAW,OAAS,WAAW,YAAc,W,mCCAlN,SAAgB,KAAO,WAAW,KAAO,WAAW,OAAS,WAAW,aAAe,WAAW,MAAQ,WAAW,iBAAmB,WAAW,gBAAkB,WAAW,UAAY,W","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? lang('EditMessage')\n            : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {lang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {lang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {lang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {lang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {lang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions, isModalShown,\n      },\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            editingMessage={editingMessage}\n            hasReplaceableMedia={canMediaBeReplaced}\n            isButtonVisible={!activeVoiceRecording}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={isInScheduledList}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    return {\n      availableReactions: type === 'story' ? global.reactions.availableReactions : undefined,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageWebPageDocument,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document! || getMessageWebPageDocument(message);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={buildClassName(styles.canvas, 'canvas-blur-setup')}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { CustomPeer, CustomPeerType, UniqueCustomPeer } from '../../types';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByKey } from '../../util/iteratees';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  selectedCategories?: CustomPeerType[];\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n  isCountryList?: boolean;\n  countryList?: ApiCountry[];\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  categories,\n  itemIds,\n  selectedCategories,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedSelectedIds,\n  lockedUnselectedIds,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  onSelectedCategoriesChange,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  isCountryList,\n  countryList,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      onSelectedCategoriesChange?.(newSelectedCategories);\n    } else {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      onSelectedIdsChange?.(newSelectedIds);\n    }\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useOldLang();\n\n  const countriesByIso = useMemo(() => {\n    if (!countryList) return undefined;\n    return buildCollectionByKey(countryList, 'iso2');\n  }, [countryList]);\n\n  const renderCategory = useLastCallback((category: CustomPeer) => {\n    return (\n      <PrivateChatInfo\n        customPeer={category}\n      />\n    );\n  });\n\n  const renderChatInfo = useLastCallback((id: string) => {\n    const isUnselectable = lockedUnselectedIdsSet.has(id);\n    if (isCountryList && countriesByIso) {\n      const country = countriesByIso[id];\n      return <div>{country.defaultName}</div>;\n    } else if (isUserId(id)) {\n      return (\n        <PrivateChatInfo\n          forceShowSelf={forceShowSelf}\n          userId={id}\n          status={isUnselectable ? lockedUnselectedSubtitle : undefined}\n        />\n      );\n    } else {\n      return <GroupChatInfo chatId={id} status={isUnselectable ? lockedUnselectedSubtitle : undefined} />;\n    }\n  });\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const shouldRenderLockIcon = lockedUnselectedIdsSet.has(id);\n    const isLocked = lockedSelectedIdsSet.has(id) || shouldRenderLockIcon;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n    const renderCheckbox = () => {\n      return (isViewOnly || shouldRenderLockIcon) ? undefined : (\n        <Checkbox\n          label=\"\"\n          disabled={isLocked}\n          checked={isChecked}\n          round={isRoundCheckbox}\n        />\n      );\n    };\n    return (\n      <ListItem\n        key={id}\n        className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        allowDisabledClick={Boolean(onDisabledClick)}\n        secondaryIcon={shouldRenderLockIcon ? 'lock-badge' : undefined}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {!isRoundCheckbox ? renderCheckbox() : undefined}\n        {category ? renderCategory(category) : renderChatInfo(id)}\n        {isRoundCheckbox ? renderCheckbox() : undefined}\n      </ListItem>\n    );\n  }, [\n    categoriesByType, isRoundCheckbox, isViewOnly, lockedSelectedIdsSet, lockedUnselectedIdsSet,\n    onDisabledClick, renderChatInfo, selectedCategories, selectedIds,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    return (\n      <div key=\"categories\">\n        {Boolean(categories?.length) && (\n          <div className=\"picker-category-title\">{lang('PrivacyUserTypes')}</div>\n        )}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className=\"picker-category-title\">{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, lang, renderItem]);\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PickerSelectedItem\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  customPeer?: CustomPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <Icon name={icon} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (customPeer || user || chat) {\n    iconElement = (\n      <Avatar\n        peer={customPeer || user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = (customPeer && lang(customPeer.titleKey))\n      || (!chat || (user && !isSavedMessages)\n        ? getUserFirstOrLastName(user)\n        : getChatTitle(lang, chat, isSavedMessages));\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    (chat?.isForum || customPeer?.isAvatarSquare) && 'square-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(customPeer || chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb canvas-blur-setup\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n    emojiStatusSticker?: ApiSticker;\n  }\n  & Pick<GlobalState, 'isSynced'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSynced,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n  emojiStatusSticker,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (isSynced && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, isSynced, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (!photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const peerId = (chatId || userId)!;\n\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const { isSynced } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      isSynced,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      mediaId,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(wrappedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content);\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerPreviewHash(customEmoji.id) : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftPremiumModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker.id);\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker.id);\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftPremiumModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\">{renderText(lang(valueKey, [formattedDate, age], undefined, age))}</div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const lang = useOldLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: lang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, lang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), lang(isChat ? 'Link' : 'Username'));\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir=\"auto\">{formatUsername(mainUsername.username, isChat)}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{lang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {lang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{lang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  shouldDelayInit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways={!shouldDelayInit}\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways={!shouldDelayInit}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways={!shouldDelayInit}\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const {\n    openPremiumModal, requestConfetti, checkGiftCode, getReceipt,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\n\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type LangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, '⭐', <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(photo.isSpoiler);\n\n  useEffect(() => {\n    if (photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [photo.isSpoiler]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useSignal,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMessageMediaFormat, getMessageMediaHash, getMessageMediaThumbDataUri, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMessageMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number, isGif?: boolean) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(video.isSpoiler);\n\n  useEffect(() => {\n    if (video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [video.isSpoiler]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id, video?.isGif);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          isToBottom ? 'end' : 'centerOrTop',\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const availableReactions = useMemo(() => {\n    const reactions = isInSavedMessages ? defaultTagReactions\n      : (enabledReactions?.type === 'some' ? enabledReactions.allowed\n        : allAvailableReactions?.map((reaction) => reaction.reaction));\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction: currentReaction }) => isSameReaction(reaction, currentReaction))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    maxUniqueReactions, topReactions,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  shouldDelayInit,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n        shouldDelayInit={shouldDelayInit}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal, focusMessage, closeStoryViewer } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost': {\n            const isShiny = isActive && (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type {\n  ApiInputInvoice, ApiRequestInputInvoice, ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { GlobalState } from '../types';\n\nimport { formatInteger } from '../../util/textFormat';\nimport { selectChat, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug' || inputInvoice.type === 'stars') return inputInvoice;\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      peerColorId: -1, // Defaults to black\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(amount: number) {\n  if (amount < 0) {\n    return `- ${formatInteger(Math.abs(amount))}`;\n  }\n\n  return `+ ${formatInteger(amount)}`;\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        canvas.classList.remove('canvas-blur-setup');\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useSignal } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_TO_BE_DISTRIBUTED: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'toBeDistributed',\n  titleKey: 'BoostingToBeDistributed',\n  avatarIcon: 'user',\n  withPremiumGradient: true,\n};\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","result","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_IMAGE_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","availableReactions","reactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isChatChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","isInvertedMedia","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","getMessageWebPageDocument","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","mimeType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","isRestricted","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","value","readOnly","DropdownMenu","trigger","destructive","isProtected","mediaBlobUrl","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","categories","itemIds","selectedCategories","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedSelectedIds","lockedUnselectedIds","lockedUnselectedSubtitle","forceShowSelf","isViewOnly","onSelectedCategoriesChange","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","isCountryList","countryList","shouldMinimize","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","handleItemClick","categoryType","newSelectedCategories","splice","newSelectedIds","handleFilterChange","viewportIds","getMore","useInfiniteScroll","countriesByIso","renderCategory","category","PrivateChatInfo","customPeer","renderChatInfo","isUnselectable","country","defaultName","GroupChatInfo","renderItem","isCategory","shouldRenderLockIcon","isLocked","isChecked","renderCheckbox","ListItem","inactive","secondaryIcon","beforeChildren","PickerSelectedItem","clickArg","canClose","isMinimized","InputText","InfiniteScroll","Loading","isSelf","fluid","withPeerColors","iconElement","titleText","titleKey","isAvatarSquare","leftText","rightText","floatingBadgeText","floatingBadgeIcon","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","isSynced","userStatus","selectUserStatus","noFake","noVerified","adminMember","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","mediaViewer","currentTopicId","userFullInfo","emojiStatus","emojiStatusSticker","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","media","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentHeight","handleResize","entry","contentRect","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openGiftPremiumModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserIds","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","BusinessHours","usernameList","otherUsernames","usernameLinks","s","idx","particleSize","onEnded","stickerHash","previewMediaData","paths","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldDelayInit","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","AnimatedSticker","animatedIcon","roundToNearestEven","play","effect","CustomEmojiEffect","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","checkGiftCode","getReceipt","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","withStars","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ActionMessageSuggestedAvatar","SimilarChannels","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","onStop","playerRef","circleRef","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","shouldPlay","stopPlaying","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","isWebPageVideo","calculateVideoDimensions","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","REACTION_SIZE","chosen","noAppearAnimation","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","maxUniqueReactions","areReactionsLocked","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","currentReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","isPrimary","ReactionSelectorReaction","getReactionKey","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","closeStoryViewer","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","getRequestInputInvoice","inputInvoice","boostChannelId","amount","currency","option","purpose","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","peerColorId","withPremiumGradient","formatStarsTransactionAmount","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","scrollLeft","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_TO_BE_DISTRIBUTED","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}