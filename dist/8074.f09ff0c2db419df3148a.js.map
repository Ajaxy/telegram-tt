{"version":3,"file":"8074.f09ff0c2db419df3148a.js","mappings":"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","sources":["webpack://telegram-t/webpack/runtime/chunk loaded","webpack://telegram-t/webpack/runtime/startup chunk dependencies","webpack://telegram-t/./src/lib/rlottie/rlottie.worker.ts","webpack://telegram-t/./src/lib/video-preview/requestPart.ts","webpack://telegram-t/./src/lib/video-preview/MP4Demuxer.ts","webpack://telegram-t/./src/util/generateUniqueId.ts","webpack://telegram-t/./src/util/schedulers.ts","webpack://telegram-t/./src/lib/video-preview/video-preview.worker.ts","webpack://telegram-t/webpack/bootstrap","webpack://telegram-t/webpack/runtime/define property getters","webpack://telegram-t/webpack/runtime/ensure chunk","webpack://telegram-t/webpack/runtime/get javascript chunk filename","webpack://telegram-t/webpack/runtime/get mini-css chunk filename","webpack://telegram-t/webpack/runtime/global","webpack://telegram-t/webpack/runtime/hasOwnProperty shorthand","webpack://telegram-t/webpack/runtime/publicPath","webpack://telegram-t/webpack/runtime/importScripts chunk loading","webpack://telegram-t/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([7784,5905,9357].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","import { inflate } from 'pako/dist/pako_inflate';\n\nimport type { CancellableCallback } from '../../util/PostMessageConnector';\n\nimport { createWorkerInterface } from '../../util/createPostMessageInterface';\n\nimportScripts(new URL('./rlottie-wasm.js', import.meta.url));\n\ndeclare const Module: any;\n\ndeclare function allocate(...args: any[]): string;\n\ndeclare function intArrayFromString(str: String): string;\n\nlet rLottieApi: Record<string, Function>;\nconst rLottieApiPromise = new Promise<void>((resolve) => {\n  Module.onRuntimeInitialized = () => {\n    rLottieApi = {\n      init: Module.cwrap('lottie_init', '', []),\n      destroy: Module.cwrap('lottie_destroy', '', ['number']),\n      resize: Module.cwrap('lottie_resize', '', ['number', 'number', 'number']),\n      buffer: Module.cwrap('lottie_buffer', 'number', ['number']),\n      render: Module.cwrap('lottie_render', '', ['number', 'number']),\n      loadFromData: Module.cwrap('lottie_load_from_data', 'number', ['number', 'number']),\n    };\n\n    resolve();\n  };\n});\n\nconst HIGH_PRIORITY_MAX_FPS = 60;\nconst LOW_PRIORITY_MAX_FPS = 30;\nconst DESTROY_REPEAT_DELAY = 1000;\n\nconst renderers = new Map<string, {\n  imgSize: number;\n  reduceFactor: number;\n  handle: any;\n  imageData: ImageData;\n  customColor?: [number, number, number];\n}>();\n\nasync function init(\n  key: string,\n  tgsUrl: string,\n  imgSize: number,\n  isLowPriority: boolean,\n  customColor: [number, number, number] | undefined,\n  onInit: CancellableCallback,\n) {\n  if (!rLottieApi) {\n    await rLottieApiPromise;\n  }\n\n  const json = await extractJson(tgsUrl);\n  const stringOnWasmHeap = allocate(intArrayFromString(json), 'i8', 0);\n  const handle = rLottieApi.init();\n  const framesCount = rLottieApi.loadFromData(handle, stringOnWasmHeap);\n  rLottieApi.resize(handle, imgSize, imgSize);\n\n  const imageData = new ImageData(imgSize, imgSize);\n\n  const { reduceFactor, msPerFrame, reducedFramesCount } = calcParams(json, isLowPriority, framesCount);\n\n  renderers.set(key, {\n    imgSize, reduceFactor, handle, imageData, customColor,\n  });\n\n  onInit(reduceFactor, msPerFrame, reducedFramesCount);\n}\n\nasync function changeData(\n  key: string,\n  tgsUrl: string,\n  isLowPriority: boolean,\n  onInit: CancellableCallback,\n) {\n  if (!rLottieApi) {\n    await rLottieApiPromise;\n  }\n\n  const json = await extractJson(tgsUrl);\n  const stringOnWasmHeap = allocate(intArrayFromString(json), 'i8', 0);\n  const { handle } = renderers.get(key)!;\n  const framesCount = rLottieApi.loadFromData(handle, stringOnWasmHeap);\n\n  const { reduceFactor, msPerFrame, reducedFramesCount } = calcParams(json, isLowPriority, framesCount);\n\n  onInit(reduceFactor, msPerFrame, reducedFramesCount);\n}\n\nasync function extractJson(tgsUrl: string) {\n  const response = await fetch(tgsUrl);\n  const contentType = response.headers.get('Content-Type');\n\n  // Support deprecated JSON format cached locally\n  if (contentType?.startsWith('text/')) {\n    return response.text();\n  }\n\n  const arrayBuffer = await response.arrayBuffer();\n  return inflate(arrayBuffer, { to: 'string' });\n}\n\nfunction calcParams(json: string, isLowPriority: boolean, framesCount: number) {\n  const animationData = JSON.parse(json);\n  const maxFps = isLowPriority ? LOW_PRIORITY_MAX_FPS : HIGH_PRIORITY_MAX_FPS;\n  const sourceFps = animationData.fr || maxFps;\n  const reduceFactor = sourceFps % maxFps === 0 ? sourceFps / maxFps : 1;\n\n  return {\n    reduceFactor,\n    msPerFrame: 1000 / (sourceFps / reduceFactor),\n    reducedFramesCount: Math.ceil(framesCount / reduceFactor),\n  };\n}\n\nasync function renderFrames(\n  key: string, frameIndex: number, onProgress: CancellableCallback,\n) {\n  if (!rLottieApi) {\n    await rLottieApiPromise;\n  }\n\n  const {\n    imgSize, reduceFactor, handle, imageData, customColor,\n  } = renderers.get(key)!;\n\n  const realIndex = frameIndex * reduceFactor;\n\n  rLottieApi.render(handle, realIndex);\n  const bufferPointer = rLottieApi.buffer(handle);\n  const data = Module.HEAPU8.subarray(bufferPointer, bufferPointer + (imgSize * imgSize * 4));\n\n  if (customColor) {\n    const arr = new Uint8ClampedArray(data);\n    applyColor(arr, customColor);\n    imageData.data.set(arr);\n  } else {\n    imageData.data.set(data);\n  }\n\n  const imageBitmap = await createImageBitmap(imageData);\n\n  onProgress(frameIndex, imageBitmap);\n}\n\nfunction applyColor(arr: Uint8ClampedArray, color: [number, number, number]) {\n  for (let i = 0; i < arr.length; i += 4) {\n    arr[i] = color[0];\n    arr[i + 1] = color[1];\n    arr[i + 2] = color[2];\n  }\n}\n\nfunction destroy(key: string, isRepeated = false) {\n  try {\n    const renderer = renderers.get(key)!;\n    rLottieApi.destroy(renderer.handle);\n    renderers.delete(key);\n  } catch (err) {\n    // `destroy` sometimes can be called before the initialization is finished\n    if (!isRepeated) {\n      setTimeout(() => destroy(key, true), DESTROY_REPEAT_DELAY);\n    }\n  }\n}\n\nconst api = {\n  'rlottie:init': init,\n  'rlottie:changeData': changeData,\n  'rlottie:renderFrames': renderFrames,\n  'rlottie:destroy': destroy,\n};\n\ncreateWorkerInterface(api);\n\nexport type RLottieApi = typeof api;\n","import generateUniqueId from '../../util/generateUniqueId';\nimport { pause } from '../../util/schedulers';\n\ndeclare const self: WorkerGlobalScope;\n\ntype RequestStates = {\n  resolve: (response: ArrayBuffer) => void;\n  reject: () => void;\n};\n\ntype RequestPartParams = { url: string; start: number; end: number };\n\nconst PART_TIMEOUT = 30000;\n\nconst requestStates = new Map<string, RequestStates>();\n\nexport function requestPart(params: RequestPartParams): Promise<ArrayBuffer | undefined> {\n  const messageId = generateUniqueId();\n  const requestState = {} as RequestStates;\n\n  let isResolved = false;\n  const promise = Promise.race([\n    pause(PART_TIMEOUT).then(() => (isResolved ? undefined : Promise.reject(new Error('ERROR_PART_TIMEOUT')))),\n    new Promise<ArrayBuffer>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    }),\n  ]);\n\n  requestStates.set(messageId, requestState);\n\n  promise\n    .catch(() => undefined)\n    .finally(() => {\n      requestStates.delete(messageId);\n      isResolved = true;\n    });\n\n  const message = {\n    type: 'requestPart',\n    messageId,\n    params,\n  };\n\n  postMessage(message);\n\n  return promise;\n}\n\nself.addEventListener('message', (e) => {\n  const { type, messageId, result } = (e as any).data as {\n    type: string;\n    messageId: string;\n    result: ArrayBuffer;\n  };\n\n  if (type === 'partResponse') {\n    const requestState = requestStates.get(messageId);\n    if (requestState) {\n      requestState.resolve(result);\n    }\n  }\n});\n","import type { MP4ArrayBuffer, MP4Info, MP4VideoTrack } from 'mp4box';\nimport MP4Box, { DataStream } from 'mp4box';\n\nimport { requestPart } from './requestPart';\n\nconst META_PART_SIZE = 128 * 1024;\nconst MIN_PART_SIZE = 1024;\nenum Status {\n  loading = 'loading',\n  ready = 'ready',\n  closed = 'closed',\n}\n\nexport type MP4DecoderConfig = {\n  codec: string;\n  codedHeight: number;\n  codedWidth: number;\n  description: Uint8Array;\n};\n\ntype MP4DemuxerConfig = {\n  stepOffset: number;\n  stepMultiplier: number;\n  isPolyfill: boolean;\n  maxFrames: number;\n  onConfig: (config: any) => void;\n  onChunk: (chunk: any) => void;\n};\n\nexport class MP4Demuxer {\n  private readonly url: string;\n\n  private file: MP4Box.MP4File;\n\n  private status = Status.loading;\n\n  private readonly stepOffset: number;\n\n  private readonly stepMultiplier: number;\n\n  private readonly maxFrames: number;\n\n  private readonly isPolyfill: boolean;\n\n  private decodedSamples = new Set<string>();\n\n  private lastSample = 0;\n\n  private readonly onConfig: (config: MP4DecoderConfig) => void;\n\n  private readonly onChunk: (chunk: any) => void;\n\n  constructor(url: string, {\n    onConfig,\n    onChunk,\n    stepOffset,\n    stepMultiplier,\n    isPolyfill,\n    maxFrames,\n  }: MP4DemuxerConfig) {\n    this.url = url;\n    this.stepOffset = stepOffset;\n    this.stepMultiplier = stepMultiplier;\n    this.maxFrames = maxFrames;\n    this.isPolyfill = isPolyfill;\n    this.onConfig = onConfig;\n    this.onChunk = onChunk;\n\n    this.file = MP4Box.createFile();\n    this.file.onError = (e) => {\n      // eslint-disable-next-line no-console\n      console.error(e);\n    };\n    this.file.onReady = this.onReady.bind(this);\n    this.file.onSamples = this.onSamples.bind(this);\n\n    void this.loadMetadata();\n  }\n\n  private async loadMetadata() {\n    let offset: number | undefined = 0;\n    while (offset !== undefined) {\n      try {\n        offset = await this.requestPart(offset, META_PART_SIZE);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      }\n      if (this.status === Status.ready) break;\n    }\n  }\n\n  private async loadNextFrames(step: number, duration: number, partSize: number) {\n    let tick = step * this.stepOffset;\n    let lastSample = 0;\n    let rap = this.file.seek(tick, true);\n    while (this.status !== Status.closed) {\n      try {\n        await this.requestPart(rap.offset, partSize);\n        if (tick > duration) break;\n        if (this.lastSample > 1 && lastSample < this.lastSample) {\n          tick += step * this.stepMultiplier;\n          lastSample = this.lastSample;\n        }\n        rap = this.file.seek(tick, true);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      }\n    }\n    this.file.flush();\n  }\n\n  private async requestPart(offset: number, partSize: number, useRap = true) {\n    const reminder = (offset % MIN_PART_SIZE);\n    const start = offset - reminder;\n    const end = start + partSize - 1;\n    let arrayBuffer = await requestPart({ url: this.url, start, end }) as MP4ArrayBuffer;\n    if (!arrayBuffer) {\n      return undefined;\n    }\n    if (reminder) {\n      arrayBuffer = arrayBuffer.slice(reminder) as MP4ArrayBuffer;\n    }\n    arrayBuffer.fileStart = offset;\n    const nextOffset = this.file.appendBuffer(arrayBuffer);\n    if (!useRap) return offset + arrayBuffer.byteLength;\n    return nextOffset;\n  }\n\n  private description(track: MP4VideoTrack) {\n    const t = this.file.getTrackById(track.id);\n    for (const entry of t.mdia.minf.stbl.stsd.entries) {\n      if (entry.avcC || entry.hvcC || entry.av1C) {\n        const stream = new DataStream(undefined, 0, DataStream.BIG_ENDIAN);\n        if (entry.avcC) {\n          entry.avcC.write(stream);\n        } else if (entry.hvcC) {\n          entry.hvcC.write(stream);\n        } else if (entry.av1C) {\n          entry.av1C.write(stream);\n        }\n        return new Uint8Array(stream.buffer, 8); // Remove the box header.\n      }\n    }\n    throw new Error('avcC, hvcC ro av1C not found');\n  }\n\n  private onReady(info: MP4Info) {\n    const track = info.videoTracks[0];\n\n    let codec = track.codec;\n    if (codec.startsWith('avc1')) {\n      // Somehow this is the only avc1 codec that works.\n      codec = 'avc1.4d001f';\n    }\n\n    // Generate and emit an appropriate VideoDecoderConfig.\n    this.onConfig({\n      codec,\n      codedHeight: track.video.height,\n      codedWidth: track.video.width,\n      description: this.description(track),\n    });\n\n    const duration = info.duration / info.timescale;\n\n    // If we set a part size too small, the onSamples callback is not called.\n    // If we use polyfill, we need to set a smaller part size to avoid decoding multiple frames.\n    const partSizeDivider = this.isPolyfill ? 24 : 12;\n    const partSize = roundPartSize(track.bitrate / partSizeDivider);\n    const step = calculateStep(duration, this.maxFrames);\n\n    // Start demuxing.\n    this.file.setExtractionOptions(track.id, undefined, { nbSamples: 1 });\n    this.file.start();\n\n    this.status = Status.ready;\n\n    // // Load frames\n    void this.loadNextFrames(step, duration, partSize);\n  }\n\n  private onSamples(trackId: number, ref: any, samples: any) {\n    if (this.status !== Status.ready) return;\n    // Generate and emit an EncodedVideoChunk for each demuxed sample.\n    for (const sample of samples) {\n      const time = sample.cts / sample.timescale;\n      const type = sample.is_sync ? 'key' : 'delta';\n      const id = `${type}${sample.number}`;\n\n      // Skip already decoded samples.\n      if (this.decodedSamples.has(id)) continue;\n\n      // @ts-ignore\n      this.onChunk(new EncodedVideoChunk({\n        type,\n        timestamp: (1e6 * time),\n        duration: (1e6 * sample.duration) / sample.timescale,\n        data: sample.data,\n      }));\n\n      this.decodedSamples.add(id);\n      this.lastSample = parseInt(sample.number, 10);\n\n      if (sample.is_sync) {\n        this.file.releaseUsedSamples(trackId, sample.number);\n      }\n    }\n  }\n\n  close() {\n    this.file.flush();\n    this.file.stop();\n    this.status = Status.closed;\n  }\n}\n\nfunction roundPartSize(size: number) {\n  return size + MIN_PART_SIZE - (size % MIN_PART_SIZE);\n}\n\nfunction calculateStep(duration: number, max: number): number {\n  return Math.round((duration + max) / max);\n}\n","export default function generateUniqueId() {\n  return Date.now().toString(36) + Math.random().toString(36).slice(2);\n}\n","export type Scheduler = typeof requestAnimationFrame | typeof onTickEnd;\n\nexport function debounce<F extends AnyToVoidFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true,\n  shouldRunLast = true,\n) {\n  let waitingTimeout: number | undefined;\n\n  return (...args: Parameters<F>) => {\n    if (waitingTimeout) {\n      clearTimeout(waitingTimeout);\n      waitingTimeout = undefined;\n    } else if (shouldRunFirst) {\n      fn(...args);\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    waitingTimeout = self.setTimeout(() => {\n      if (shouldRunLast) {\n        fn(...args);\n      }\n\n      waitingTimeout = undefined;\n    }, ms);\n  };\n}\n\nexport function throttle<F extends AnyToVoidFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true,\n) {\n  let interval: number | undefined;\n  let isPending: boolean;\n  let args: Parameters<F>;\n\n  return (..._args: Parameters<F>) => {\n    isPending = true;\n    args = _args;\n\n    if (!interval) {\n      if (shouldRunFirst) {\n        isPending = false;\n        fn(...args);\n      }\n\n      // eslint-disable-next-line no-restricted-globals\n      interval = self.setInterval(() => {\n        if (!isPending) {\n          // eslint-disable-next-line no-restricted-globals\n          self.clearInterval(interval!);\n          interval = undefined;\n          return;\n        }\n\n        isPending = false;\n        fn(...args);\n      }, ms);\n    }\n  };\n}\n\nexport function throttleWithTickEnd<F extends AnyToVoidFunction>(fn: F) {\n  return throttleWith(onTickEnd, fn);\n}\n\nexport function throttleWith<F extends AnyToVoidFunction>(schedulerFn: Scheduler, fn: F) {\n  let waiting = false;\n  let args: Parameters<F>;\n\n  return (..._args: Parameters<F>) => {\n    args = _args;\n\n    if (!waiting) {\n      waiting = true;\n\n      schedulerFn(() => {\n        waiting = false;\n        fn(...args);\n      });\n    }\n  };\n}\n\nexport function onIdle(cb: NoneToVoidFunction, timeout?: number) {\n  // eslint-disable-next-line no-restricted-globals\n  if (self.requestIdleCallback) {\n    // eslint-disable-next-line no-restricted-globals\n    self.requestIdleCallback(cb, { timeout });\n  } else {\n    onTickEnd(cb);\n  }\n}\n\nexport const pause = (ms: number) => new Promise<void>((resolve) => {\n  setTimeout(() => resolve(), ms);\n});\n\nexport function rafPromise() {\n  return new Promise<void>((resolve) => {\n    fastRaf(resolve);\n  });\n}\n\nconst FAST_RAF_TIMEOUT_FALLBACK_MS = 35; // < 30 FPS\n\nlet fastRafCallbacks: Set<NoneToVoidFunction> | undefined;\nlet fastRafFallbackCallbacks: Set<NoneToVoidFunction> | undefined;\nlet fastRafFallbackTimeout: number | undefined;\n\n// May result in an immediate execution if called from another RAF callback which was scheduled\n// (and therefore is executed) earlier than RAF callback scheduled by `fastRaf`\nexport function fastRaf(callback: NoneToVoidFunction, withTimeoutFallback = false) {\n  if (!fastRafCallbacks) {\n    fastRafCallbacks = new Set([callback]);\n\n    requestAnimationFrame(() => {\n      const currentCallbacks = fastRafCallbacks!;\n\n      fastRafCallbacks = undefined;\n      fastRafFallbackCallbacks = undefined;\n\n      if (fastRafFallbackTimeout) {\n        clearTimeout(fastRafFallbackTimeout);\n        fastRafFallbackTimeout = undefined;\n      }\n\n      currentCallbacks.forEach((cb) => cb());\n    });\n  } else {\n    fastRafCallbacks.add(callback);\n  }\n\n  if (withTimeoutFallback) {\n    if (!fastRafFallbackCallbacks) {\n      fastRafFallbackCallbacks = new Set([callback]);\n    } else {\n      fastRafFallbackCallbacks.add(callback);\n    }\n\n    if (!fastRafFallbackTimeout) {\n      fastRafFallbackTimeout = window.setTimeout(() => {\n        const currentTimeoutCallbacks = fastRafFallbackCallbacks!;\n\n        if (fastRafCallbacks) {\n          currentTimeoutCallbacks.forEach(fastRafCallbacks.delete, fastRafCallbacks);\n        }\n        fastRafFallbackCallbacks = undefined;\n\n        if (fastRafFallbackTimeout) {\n          clearTimeout(fastRafFallbackTimeout);\n          fastRafFallbackTimeout = undefined;\n        }\n\n        currentTimeoutCallbacks.forEach((cb) => cb());\n      }, FAST_RAF_TIMEOUT_FALLBACK_MS);\n    }\n  }\n}\n\nlet onTickEndCallbacks: NoneToVoidFunction[] | undefined;\n\nexport function onTickEnd(callback: NoneToVoidFunction) {\n  if (!onTickEndCallbacks) {\n    onTickEndCallbacks = [callback];\n\n    Promise.resolve().then(() => {\n      const currentCallbacks = onTickEndCallbacks!;\n      onTickEndCallbacks = undefined;\n      currentCallbacks.forEach((cb) => cb());\n    });\n  } else {\n    onTickEndCallbacks.push(callback);\n  }\n}\n\nlet beforeUnloadCallbacks: NoneToVoidFunction[] | undefined;\n\nexport function onBeforeUnload(callback: NoneToVoidFunction, isLast = false) {\n  if (!beforeUnloadCallbacks) {\n    beforeUnloadCallbacks = [];\n    // eslint-disable-next-line no-restricted-globals\n    self.addEventListener('beforeunload', () => {\n      beforeUnloadCallbacks!.forEach((cb) => cb());\n    });\n  }\n\n  if (isLast) {\n    beforeUnloadCallbacks.push(callback);\n  } else {\n    beforeUnloadCallbacks.unshift(callback);\n  }\n\n  return () => {\n    beforeUnloadCallbacks = beforeUnloadCallbacks!.filter((cb) => cb !== callback);\n  };\n}\n","import type { CancellableCallback } from '../../util/PostMessageConnector';\n\nimport { createWorkerInterface } from '../../util/createPostMessageInterface';\n\nimport { MP4Demuxer } from './MP4Demuxer';\n\nlet decoder: any;\nlet demuxer: any;\nlet onDestroy: VoidFunction | undefined;\n\nfunction init(\n  url: string,\n  maxFrames: number,\n  workerIndex: number,\n  workersTotal: number,\n  onFrame: CancellableCallback,\n) {\n  const hasWebCodecs = 'VideoDecoder' in globalThis;\n  if (!hasWebCodecs) {\n    // eslint-disable-next-line no-console\n    console.log('[Video Preview] WebCodecs not supported');\n    return new Promise<void>((resolve) => {\n      onDestroy = resolve;\n    });\n  }\n\n  const decodedFrames = new Set<number>();\n\n  // @ts-ignore\n  decoder = new VideoDecoder({\n    async output(frame: any) {\n      const time = frame.timestamp / 1e6;\n      const seconds = Math.floor(time);\n      // Only render whole second frames\n      if (!decodedFrames.has(seconds)) {\n        const bitmap = await createImageBitmap(frame);\n        decodedFrames.add(seconds);\n        onFrame(seconds, bitmap);\n      }\n      frame.close();\n    },\n    error(e: any) {\n      // eslint-disable-next-line no-console\n      console.error('[Video Preview] error', e);\n    },\n  });\n\n  demuxer = new MP4Demuxer(url, {\n    stepOffset: workerIndex,\n    stepMultiplier: workersTotal,\n    isPolyfill: !hasWebCodecs,\n    maxFrames,\n    onConfig(config) {\n      decoder?.configure(config);\n    },\n    onChunk(chunk) {\n      if (decoder?.state !== 'configured') return;\n      decoder?.decode(chunk);\n    },\n  });\n\n  return new Promise<void>((resolve) => {\n    onDestroy = resolve;\n  });\n}\n\nfunction destroy() {\n  try {\n    decoder?.close();\n    demuxer?.close();\n  } catch {\n    // Ignore\n  }\n  decoder = undefined;\n  demuxer = undefined;\n  onDestroy?.();\n}\n\nconst api = {\n  'video-preview:init': init,\n  'video-preview:destroy': destroy,\n};\n\ncreateWorkerInterface(api);\n\nexport type VideoPreviewApi = typeof api;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [7784,5905,9357], () => (__webpack_require__(88074)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"5905\":\"efaeccc9ed0bc890f551\",\"7784\":\"4e167a928464165e6412\",\"9357\":\"e8336159e4030a040ba1\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t8074: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunktelegram_t\"] = self[\"webpackChunktelegram_t\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","rLottieApi","importScripts","URL","rLottieApiPromise","Promise","resolve","Module","onRuntimeInitialized","init","cwrap","destroy","resize","buffer","render","loadFromData","renderers","Map","async","extractJson","tgsUrl","response","fetch","contentType","headers","get","startsWith","text","arrayBuffer","inflate","to","calcParams","json","isLowPriority","framesCount","maxFps","sourceFps","JSON","parse","fr","reduceFactor","msPerFrame","reducedFramesCount","Math","ceil","api","key","imgSize","customColor","onInit","stringOnWasmHeap","allocate","intArrayFromString","handle","imageData","ImageData","set","frameIndex","onProgress","realIndex","bufferPointer","data","HEAPU8","subarray","arr","Uint8ClampedArray","color","i","length","applyColor","createImageBitmap","isRepeated","arguments","undefined","renderer","delete","err","setTimeout","createWorkerInterface","requestStates","self","addEventListener","e","type","messageId","result","requestState","MIN_PART_SIZE","Status","MP4Demuxer","constructor","url","_ref","onConfig","onChunk","stepOffset","stepMultiplier","isPolyfill","maxFrames","_defineProperty","loading","Set","this","file","MP4Box","onError","console","error","onReady","bind","onSamples","loadMetadata","offset","requestPart","status","ready","loadNextFrames","step","duration","partSize","tick","lastSample","rap","seek","closed","flush","useRap","reminder","start","end","params","Date","now","toString","random","slice","isResolved","promise","race","then","reject","Error","Object","assign","catch","finally","postMessage","fileStart","nextOffset","appendBuffer","byteLength","description","track","t","getTrackById","id","entry","mdia","minf","stbl","stsd","entries","avcC","hvcC","av1C","stream","DataStream","BIG_ENDIAN","write","Uint8Array","info","videoTracks","codec","codedHeight","video","height","codedWidth","width","timescale","partSizeDivider","size","bitrate","max","round","calculateStep","setExtractionOptions","nbSamples","trackId","ref","samples","sample","time","cts","is_sync","number","decodedSamples","has","EncodedVideoChunk","timestamp","add","parseInt","releaseUsedSamples","close","stop","decoder","demuxer","onDestroy","workerIndex","workersTotal","onFrame","hasWebCodecs","globalThis","log","decodedFrames","VideoDecoder","output","frame","seconds","floor","bitmap","config","configure","chunk","state","decode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","x","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","d","definition","o","defineProperty","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","g","Function","window","obj","prop","prototype","hasOwnProperty","scriptUrl","location","document","currentScript","src","scripts","getElementsByTagName","test","replace","p","b","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","push","moreModules","runtime","pop","map"],"sourceRoot":""}