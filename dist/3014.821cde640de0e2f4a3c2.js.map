{"version":3,"file":"3014.821cde640de0e2f4a3c2.js","mappings":"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CAmU,YACAlU,iBACAC,0BACAC,yBACAs4F,kBACA8uC,mBACAxoI,gBACApN,SACA/D,mBACAG,UACAD,iBACAG,gBACA00I,aACAG,eACAM,mBACAC,gBACAG,sBACAE,6BACAC,oBACAE,cACAD,kBACAE,eACA/nH,kBACAulC,kBACA4jF,qBACAyC,qBACAlmF,eACA36C,mBACAk9H,aACAE,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACAt1G,gBACA3qC,kBACA+J,iBACAT,uBACA2sC,aACAmoG,WACAxc,YACA4e,aACArtD,iBACAwtD,uBACAe,sBACAruI,iBACAimF,kBACAzqE,cACA8zH,mBACApwI,YACA0uI,mBACAtrG,sBACAqtG,mBACAvc,2BACAnqH,mBACAumI,gBACAntI,YACArI,iBACAI,oBACAE,oBACAm1I,sBACAl5C,yBACAooC,qBACAv8H,qBACAtC,wBACAqrI,qBACA4C,gBACAD,gBACA3uC,oBACAivC,0BACA2B,4BACA9B,gCACAE,oCACA8B,uBACAhF,gBACArP,eACAl0H,yBACA8uF,wBACA83C,gBACA+B,QACAzB,sBACAC,kBACAptG,UACAwb,QACA8xF,gBACA9kF,yBACA1xB,eACA62G,oBACA3gJ,oBACAqwC,kBACA1xB,mBACA8hI,iBACAxwG,WACAn+B,gCAEA,MAAM,uBACJmxH,GAAsB,qBACtBn8F,GAAoB,4BACpBg7G,GAA2B,oBAC3BC,GAAmB,+BACnBC,GAA8B,uBAC9BC,GAAsB,sBACtB3vI,GAAqB,iBACrBke,GAAgB,iBAChBne,KACErvB,EAAAA,EAAAA,MAEEof,IAAMvS,EAAAA,EAAAA,MACNqyJ,IAAkBryJ,EAAAA,EAAAA,MAClBmwI,IAAmBnwI,EAAAA,EAAAA,MAEnB0T,IAAUrgB,EAAAA,EAAAA,KACVD,IAAO0P,EAAAA,EAAAA,MAEN6/G,GAAuB2vC,KAA0BrvJ,EAAAA,EAAAA,KAAS,IAC1DsvJ,GAAwBC,KAA6BvvJ,EAAAA,EAAAA,KAAS,IAC9DwvJ,GAA0BC,KAA+BzvJ,EAAAA,EAAAA,KAAS,IAClE+/C,GAAkB2vG,G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","sources":["webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.tsx","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.module.scss?c6aa","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/helpers/groupMessages.ts","webpack://telegram-t/./src/components/middle/ContactGreeting.tsx","webpack://telegram-t/./src/components/middle/ContactGreeting.module.scss?8a0f","webpack://telegram-t/./src/components/middle/MessageListAccountInfo.module.scss?912e","webpack://telegram-t/./src/components/middle/MessageListAccountInfo.tsx","webpack://telegram-t/./src/components/middle/hooks/useMessageObservers.ts","webpack://telegram-t/./src/components/middle/message/SenderGroupContainer.module.scss?0f2f","webpack://telegram-t/./src/components/middle/message/SenderGroupContainer.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessage.tsx","webpack://telegram-t/./src/components/middle/MessageListContent.tsx","webpack://telegram-t/./src/components/middle/hooks/useScrollHooks.ts","webpack://telegram-t/./src/components/middle/NoMessages.tsx","webpack://telegram-t/./src/components/middle/RequirementToContactMessage.module.scss?677e","webpack://telegram-t/./src/components/middle/RequirementToContactMessage.tsx","webpack://telegram-t/./src/components/middle/MessageList.tsx","webpack://telegram-t/./src/hooks/useNativeCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/hooks/useStickyDates.ts","webpack://telegram-t/./src/components/middle/hooks/useContainerHeight.ts","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/ChatTags.module.scss?bf8a","webpack://telegram-t/./src/components/left/main/ChatTags.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useLoadLinkPreview.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ToDoListModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.module.scss?90e3","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/media/useMessageMediaHash.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/styles/_patternBackground.module.scss?c0b7","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/animations/useVtn.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/common/helpers/preloadDocumentMedia.ts","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useScrollNotch.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/components/right/statistics/helpers/isGraph.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/hooks/useConnectionStatus.ts","webpack://telegram-t/./src/hooks/window/useBrowserOnline.ts","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/common/profile/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/profile/ProfilePinnedGifts.module.scss?70d3","webpack://telegram-t/./src/components/common/profile/ProfilePinnedGifts.tsx","webpack://telegram-t/./src/components/common/profile/ProfileInfo.module.scss?af06","webpack://telegram-t/./src/components/common/profile/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/TodoList.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): Complete<StateProps> => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import { type ElementRef, useEffect, useRef, useSignal } from '@teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport stopEvent from '../../util/stopEvent';\nimport useLastCallback from '../useLastCallback';\n\ntype State = 'overscroll' | 'animating' | 'normal';\n\ntype ActiveScrollContext = {\n  lastDeltas: number[];\n  lastAverageDelta: number;\n  isStartedAtTop: boolean;\n  resetStartTopAt?: number;\n  timeout: number | undefined;\n};\n\nconst LAST_DELTA_COUNT = 7;\nconst ACTIVE_SCROLL_RESET_TIMEOUT = 100;\nconst NEW_INPUT_DELTA_THRESHOLD = 7;\nconst OVERSCROLL_CONTAINER_CLASS = 'no-overscroll';\nconst NO_TOUCH_CONTAINER_CLASS = 'no-touch';\nconst TRANSITION_DURATION = 350;\nconst DRAG_TRIGGER_DISTANCE = 75;\n\nconst initialActiveScrollContext: ActiveScrollContext = {\n  lastDeltas: new Array(LAST_DELTA_COUNT).fill(0),\n  lastAverageDelta: 0,\n  isStartedAtTop: false,\n  resetStartTopAt: undefined,\n  timeout: undefined,\n};\n\nexport default function useTopOverscroll({\n  containerRef,\n  isOverscrolled,\n  isDisabled,\n  onOverscroll,\n  onReset,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  isOverscrolled?: boolean;\n  onOverscroll?: AnyToVoidFunction;\n  onReset?: AnyToVoidFunction;\n  isDisabled?: boolean;\n},\n) {\n  const [getState, setState] = useSignal<State>('normal');\n  const activeScrollRef = useRef<ActiveScrollContext>({ ...initialActiveScrollContext });\n  const transitionTimeoutRef = useRef<number | undefined>();\n  const touchStartYRef = useRef<number | undefined>();\n\n  const triggerOverscroll = useLastCallback(() => {\n    clearTimeout(transitionTimeoutRef.current);\n    setState('overscroll');\n    onOverscroll?.();\n  });\n\n  const triggerReset = useLastCallback(() => {\n    setState('animating');\n    transitionTimeoutRef.current = window.setTimeout(() => {\n      setState('normal');\n    }, TRANSITION_DURATION);\n    onReset?.();\n  });\n\n  const scheduleResetActiveScroll = useLastCallback((timeout: number) => {\n    clearTimeout(activeScrollRef.current.timeout);\n    activeScrollRef.current.timeout = window.setTimeout(() => {\n      activeScrollRef.current = { ...initialActiveScrollContext };\n    }, timeout);\n  });\n\n  const handleWheel = useLastCallback((e: WheelEvent) => {\n    const container = containerRef.current;\n    if (!container || e.defaultPrevented) {\n      return;\n    }\n\n    const { deltaY } = e;\n    const { scrollTop } = container;\n    const state = getState();\n\n    const activeScroll = activeScrollRef.current;\n    const lastAverageDelta = activeScroll.lastAverageDelta;\n\n    const isStarting = activeScroll.lastDeltas.at(-1) === 0\n      || (activeScroll.resetStartTopAt && Date.now() >= activeScroll.resetStartTopAt);\n    if (scrollTop === 0 && isStarting) {\n      activeScroll.isStartedAtTop = true;\n      activeScroll.resetStartTopAt = undefined;\n    }\n\n    const lastDeltas = activeScrollRef.current.lastDeltas.slice(); // Copy\n    lastDeltas.push(deltaY);\n    if (lastDeltas.length > LAST_DELTA_COUNT) {\n      lastDeltas.shift();\n    }\n    activeScrollRef.current.lastDeltas = lastDeltas;\n    const currentAverageDelta = lastDeltas.reduce((a, b) => a + b, 0) / lastDeltas.length;\n    activeScrollRef.current.lastAverageDelta = currentAverageDelta;\n\n    const isNewInput = Math.abs(currentAverageDelta) - Math.abs(lastAverageDelta) > NEW_INPUT_DELTA_THRESHOLD;\n\n    scheduleResetActiveScroll(ACTIVE_SCROLL_RESET_TIMEOUT);\n\n    // If we're at the top and scrolling up\n    if (scrollTop === 0 && deltaY < 0 && state !== 'overscroll') {\n      if (!activeScroll.resetStartTopAt) {\n        // Schedule delta reset, so we would respond to new input with `isStartedAtTop` flag set\n        activeScroll.resetStartTopAt = Date.now() + ACTIVE_SCROLL_RESET_TIMEOUT;\n      }\n\n      // Only trigger overscroll on new input, ignore momentum events\n      if (isNewInput && activeScroll.isStartedAtTop) {\n        triggerOverscroll();\n      }\n      return;\n    }\n\n    // Ignore scroll events during collapse animation\n    if (state === 'animating' && deltaY > 0) {\n      stopEvent(e);\n      return;\n    }\n\n    // If we're overscrolled, any down wheel event should reset\n    if (state === 'overscroll' && deltaY > 0) {\n      triggerReset();\n      stopEvent(e);\n      return;\n    }\n  });\n\n  const handleTouchStart = useLastCallback((e: TouchEvent) => {\n    const container = containerRef.current;\n    if (!container || e.touches.length !== 1) return;\n\n    const { scrollTop } = container;\n    const state = getState();\n\n    // Register touch start position when at top or in overscroll state\n    if (scrollTop === 0 || state === 'overscroll') {\n      touchStartYRef.current = e.touches[0].clientY;\n    }\n  });\n\n  const handleTouchMove = useLastCallback((e: TouchEvent) => {\n    const container = containerRef.current;\n    const startY = touchStartYRef.current;\n    if (!container || startY === undefined || e.touches.length !== 1) return;\n\n    const { scrollTop } = container;\n    const state = getState();\n    const currentY = e.touches[0].clientY;\n    const deltaY = currentY - startY;\n\n    if (state === 'animating') {\n      return;\n    }\n\n    // If we're at the top and dragging down by more than trigger distance\n    if (scrollTop === 0 && deltaY > DRAG_TRIGGER_DISTANCE && state !== 'overscroll') {\n      triggerOverscroll();\n      touchStartYRef.current = undefined; // Reset to prevent multiple triggers\n      return;\n    }\n\n    // If we're overscrolled and dragging up by more than trigger distance, reset\n    if (state === 'overscroll' && deltaY < -DRAG_TRIGGER_DISTANCE) {\n      triggerReset();\n      touchStartYRef.current = undefined; // Reset to prevent multiple triggers\n      return;\n    }\n  });\n\n  const handleTouchEnd = useLastCallback(() => {\n    touchStartYRef.current = undefined;\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (isDisabled || !container) return;\n    requestMutation(() => {\n      container.classList.add(OVERSCROLL_CONTAINER_CLASS);\n    });\n\n    return () => {\n      requestMutation(() => {\n        container.classList.remove(OVERSCROLL_CONTAINER_CLASS);\n      });\n    };\n  }, [containerRef, isDisabled]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (isDisabled || !container) return;\n    requestMutation(() => {\n      container.classList.toggle(NO_TOUCH_CONTAINER_CLASS, getState() !== 'normal');\n    });\n\n    return () => {\n      requestMutation(() => {\n        container.classList.remove(NO_TOUCH_CONTAINER_CLASS);\n      });\n    };\n  }, [containerRef, isDisabled, getState]);\n\n  useEffect(() => {\n    setState(isOverscrolled ? 'overscroll' : 'normal');\n  }, [isOverscrolled, setState]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (isDisabled || !container) {\n      return undefined;\n    }\n\n    container.addEventListener('wheel', handleWheel, { passive: getState() === 'normal' });\n    container.addEventListener('touchstart', handleTouchStart, { passive: true });\n    container.addEventListener('touchmove', handleTouchMove, { passive: true });\n    container.addEventListener('touchend', handleTouchEnd, { passive: true });\n    container.addEventListener('touchcancel', handleTouchEnd, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleWheel);\n      container.removeEventListener('touchstart', handleTouchStart);\n      container.removeEventListener('touchmove', handleTouchMove);\n      container.removeEventListener('touchend', handleTouchEnd);\n      container.removeEventListener('touchcancel', handleTouchEnd);\n\n      const activeScroll = activeScrollRef.current;\n      if (activeScroll?.timeout) clearTimeout(activeScroll.timeout);\n    };\n  }, [containerRef, handleWheel, handleTouchStart, handleTouchMove, handleTouchEnd, getState, isDisabled]);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { VERIFY_AGE_MIN_DEFAULT } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './SensitiveContentConfirmModal.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  shouldAlwaysShow: boolean;\n  onAlwaysShowChanged: (value: boolean) => void;\n  confirmHandler: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  verifyAgeMin: number;\n};\n\nconst SensitiveContentConfirmModal = ({\n  isOpen,\n  onClose,\n  shouldAlwaysShow,\n  onAlwaysShowChanged,\n  confirmHandler,\n  verifyAgeMin,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleSensitiveModal', { years: verifyAgeMin })}\n      confirmLabel={lang('ButtonSensitiveView')}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {lang('TextSensitiveModal')}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('ButtonSensitiveAlways', { years: verifyAgeMin })}\n        checked={shouldAlwaysShow}\n        onCheck={onAlwaysShowChanged}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const verifyAgeMin = appConfig.verifyAgeMin;\n\n  return {\n    verifyAgeMin: verifyAgeMin || VERIFY_AGE_MIN_DEFAULT,\n  };\n})(SensitiveContentConfirmModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"mYXi2mIC\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { IAlbum } from '../../../types';\n\nimport { isActionMessage } from '../../../global/helpers';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\n\ntype SenderGroup = (ApiMessage | IAlbum)[];\n\nconst GROUP_INTERVAL_SECONDS = 600; // 10 minutes\n\nexport type MessageDateGroup = {\n  originalDate: number;\n  datetime: number;\n  senderGroups: SenderGroup[];\n};\n\nexport function isAlbum(messageOrAlbum: ApiMessage | IAlbum): messageOrAlbum is IAlbum {\n  return 'albumId' in messageOrAlbum;\n}\n\nexport function groupMessages(\n  messages: ApiMessage[], firstUnreadId?: number, topMessageId?: number, isChatWithSelf?: boolean, withUsers?: boolean,\n) {\n  const initDateGroup: MessageDateGroup = {\n    originalDate: messages[0].date,\n    datetime: getDayStartAt(messages[0].date * 1000),\n    senderGroups: [[]],\n  };\n  let currentAlbum: IAlbum | undefined;\n\n  const dateGroups: MessageDateGroup[] = [initDateGroup];\n\n  messages.forEach((message, index) => {\n    const currentDateGroup = dateGroups[dateGroups.length - 1];\n    const currentSenderGroup = currentDateGroup.senderGroups[currentDateGroup.senderGroups.length - 1];\n    if (message.isInAlbum) {\n      if (!currentAlbum) {\n        currentAlbum = {\n          albumId: message.groupedId!,\n          messages: [message],\n          mainMessage: message,\n          hasMultipleCaptions: false,\n        } satisfies IAlbum;\n      } else {\n        currentAlbum.messages.push(message);\n        if (message.hasComments) {\n          currentAlbum.commentsMessage = message;\n        }\n        if (message.content.text && !currentAlbum.hasMultipleCaptions) {\n          if (currentAlbum.captionMessage) {\n            currentAlbum.hasMultipleCaptions = true;\n            currentAlbum.captionMessage = undefined;\n          } else {\n            currentAlbum.captionMessage = message;\n          }\n        }\n      }\n    } else if ((message.content.paidMedia?.extendedMedia.length || 0) > 1) {\n      currentSenderGroup.push({\n        albumId: `paid-${message.id}`,\n        messages: [message],\n        mainMessage: message,\n        hasMultipleCaptions: false,\n        isPaidMedia: true,\n      } satisfies IAlbum);\n    } else {\n      currentSenderGroup.push(message);\n    }\n\n    const nextMessage = messages[index + 1];\n\n    if (\n      currentAlbum\n      && (!nextMessage || !nextMessage.groupedId || nextMessage.groupedId !== currentAlbum.albumId)\n    ) {\n      currentSenderGroup.push(currentAlbum);\n      currentAlbum = undefined;\n    }\n\n    const lastMessageInSenderGroup = currentSenderGroup[currentSenderGroup.length - 1];\n    if (nextMessage && !currentAlbum) {\n      const nextMessageDayStartsAt = getDayStartAt(nextMessage.date * 1000);\n      if (currentDateGroup.datetime !== nextMessageDayStartsAt) {\n        const newDateGroup: MessageDateGroup = {\n          originalDate: nextMessage.date,\n          datetime: nextMessageDayStartsAt,\n          senderGroups: [[]],\n        };\n        dateGroups.push(newDateGroup);\n      } else if (\n        nextMessage.id === firstUnreadId\n        || message.senderId !== nextMessage.senderId\n        || (!withUsers && message.paidMessageStars)\n        || (nextMessage.suggestedPostInfo)\n        || message.isOutgoing !== nextMessage.isOutgoing\n        || message.postAuthorTitle !== nextMessage.postAuthorTitle\n        || (isActionMessage(message) && message.content.action?.type !== 'phoneCall')\n        || (isActionMessage(nextMessage) && nextMessage.content.action?.type !== 'phoneCall')\n        || message.inlineButtons\n        || nextMessage.inlineButtons\n        || (nextMessage.date - message.date) > GROUP_INTERVAL_SECONDS\n        || (topMessageId\n          && (message.id === topMessageId\n            || (lastMessageInSenderGroup\n              && 'mainMessage' in lastMessageInSenderGroup\n              && lastMessageInSenderGroup.mainMessage?.id === topMessageId))\n            && nextMessage.id !== topMessageId)\n          || (isChatWithSelf && message.forwardInfo?.fromId !== nextMessage.forwardInfo?.fromId)\n      ) {\n        currentDateGroup.senderGroups.push([]);\n      }\n    }\n  });\n\n  return dateGroups;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiBusinessIntro, ApiSticker, ApiUpdateConnectionStateType, ApiUser,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatLastMessage,\n  selectCurrentMessageList,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerView from '../common/StickerView';\n\nimport styles from './ContactGreeting.module.scss';\n\ntype OwnProps = {\n  userId: string;\n};\n\ntype StateProps = {\n  defaultStickers?: ApiSticker[];\n  lastUnreadMessageId?: number;\n  connectionState?: ApiUpdateConnectionStateType;\n  currentMessageList?: MessageList;\n  businessIntro?: ApiBusinessIntro;\n  user?: ApiUser;\n};\n\nconst ContactGreeting: FC<OwnProps & StateProps> = ({\n  defaultStickers,\n  connectionState,\n  lastUnreadMessageId,\n  currentMessageList,\n  businessIntro,\n  user,\n}) => {\n  const {\n    loadGreetingStickers,\n    sendMessage,\n    markMessageListRead,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const containerRef = useRef<HTMLDivElement>();\n\n  const sticker = useMemo(() => {\n    if (businessIntro?.sticker) return businessIntro.sticker;\n    if (!defaultStickers?.length) return undefined;\n\n    const randomIndex = Math.floor(Math.random() * defaultStickers.length);\n    return defaultStickers[randomIndex];\n  }, [businessIntro?.sticker, defaultStickers]);\n\n  useEffect(() => {\n    if (defaultStickers?.length || connectionState !== 'connectionStateReady') {\n      return;\n    }\n\n    loadGreetingStickers();\n  }, [connectionState, loadGreetingStickers, defaultStickers]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && lastUnreadMessageId) {\n      markMessageListRead({ maxId: lastUnreadMessageId });\n    }\n  }, [connectionState, markMessageListRead, lastUnreadMessageId]);\n\n  const handleStickerSelect = useLastCallback(() => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    sendMessage({\n      sticker: {\n        ...sticker!,\n        isPreloadedGlobally: true,\n      },\n      messageList: currentMessageList,\n    });\n  });\n\n  const title = businessIntro?.title || lang('Conversation.EmptyPlaceholder');\n  const description = businessIntro?.description || lang('Conversation.GreetingText');\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.wrapper}>\n        <p className={styles.title} dir=\"auto\">{title}</p>\n        <p className={styles.description} dir=\"auto\">{description}</p>\n\n        <div ref={containerRef} className={styles.sticker} onClick={handleStickerSelect}>\n          {sticker && (\n            <StickerView\n              containerRef={containerRef}\n              sticker={sticker}\n              size={160}\n              shouldLoop\n            />\n          )}\n        </div>\n      </div>\n      {businessIntro && (\n        <div className={styles.explainer}>\n          {lang('Chat.EmptyStateIntroFooter', getUserFullName(user))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): Complete<StateProps> => {\n    const { stickers } = global.stickers.greeting;\n    const chat = selectChat(global, userId);\n    if (!chat) {\n      return {} as Complete<StateProps>;\n    }\n\n    const user = selectUser(global, userId);\n    const fullInfo = selectUserFullInfo(global, userId);\n\n    const lastMessage = selectChatLastMessage(global, chat.id);\n\n    return {\n      defaultStickers: stickers,\n      lastUnreadMessageId: lastMessage && lastMessage.id !== chat.lastReadInboxMessageId\n        ? lastMessage.id\n        : undefined,\n      connectionState: global.connectionState,\n      currentMessageList: selectCurrentMessageList(global),\n      businessIntro: fullInfo?.businessIntro,\n      user,\n    };\n  },\n)(ContactGreeting));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"osdROIcA\",\"wrapper\":\"c3NtU3JZ\",\"explainer\":\"WIbO6rja\",\"title\":\"n2KO1cAv\",\"description\":\"MVSedxKc\",\"sticker\":\"qsfxNv7L\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tFPZHCMt\",\"chatInfo\":\"ubFGDy3d\",\"chatBackground\":\"niS9Gfcl\",\"botBackground\":\"kXKBpNnb\",\"bot-info-description\":\"kpMdEhns\",\"botInfoDescription\":\"kpMdEhns\",\"bot-info-title\":\"H__cBlx8\",\"botInfoTitle\":\"H__cBlx8\",\"media\":\"mtKNWJmZ\",\"chatInfoTitle\":\"RyB2zw9K\",\"chatInfoSubtitle\":\"n9OcHdnh\",\"chatDescription\":\"TYJGFKqJ\",\"country\":\"WuX68A65\",\"chatNotVerified\":\"sCB3zhO3\",\"verifiedTitle\":\"dlaTjW_s\",\"link\":\"yIJ4jRxH\",\"linkInfo\":\"_MPDNfhr\",\"icon\":\"KYcoeDmo\",\"textColor\":\"BH_g_jqY\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiBotInfo, ApiChat, ApiCountryCode, ApiUserCommonChats, ApiUserFullInfo,\n} from '../../api/types';\n\nimport {\n  getBotCoverMediaHash,\n  getChatTitle,\n  getPhotoFullDimensions,\n  getVideoDimensions,\n  getVideoMediaHash,\n  isChatWithVerificationCodesBot,\n} from '../../global/helpers';\nimport {\n  selectBot, selectChat, selectPeer, selectUserCommonChats, selectUserFullInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport { formatPastDatetime, formatRegistrationMonth } from '../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../util/emoji/emoji';\nimport { getCountryCodeByIso } from '../../util/phoneNumber';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport MiniTable, { type TableEntry } from '../common/MiniTable';\nimport Link from '../ui/Link';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './MessageListAccountInfo.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasMessages?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botInfo?: ApiBotInfo;\n  isLoadingFullUser?: boolean;\n  phoneCodeList?: ApiCountryCode[];\n  commonChats?: ApiUserCommonChats;\n  userFullInfo?: ApiUserFullInfo;\n};\n\nconst MessageListAccountInfo: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  botInfo,\n  isLoadingFullUser,\n  phoneCodeList,\n  commonChats,\n  userFullInfo,\n  hasMessages,\n}) => {\n  const { loadCommonChats, openChatWithInfo } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    phoneCountry,\n    registrationMonth,\n    nameChangeDate,\n    photoChangeDate,\n  } = userFullInfo?.settings || {};\n\n  useEffect(() => {\n    loadCommonChats({ userId: chatId });\n  }, [chatId]);\n\n  const country = useMemo(() => {\n    if (!phoneCodeList || !phoneCountry) return undefined;\n    return getCountryCodeByIso(phoneCodeList, phoneCountry);\n  }, [phoneCodeList, phoneCountry]);\n\n  const botInfoPhotoUrl = useMedia(botInfo?.photo ? getBotCoverMediaHash(botInfo.photo) : undefined);\n  const botInfoGifUrl = useMedia(botInfo?.gif ? getVideoMediaHash(botInfo.gif, 'full') : undefined);\n  const botInfoDimensions = botInfo?.photo ? getPhotoFullDimensions(botInfo.photo) : botInfo?.gif\n    ? getVideoDimensions(botInfo.gif) : undefined;\n  const isBotInfoEmpty = botInfo && !botInfo.description && !botInfo.gif && !botInfo.photo;\n  const isChatInfoEmpty = !country || !registrationMonth;\n\n  const isVerifyCodes = isChatWithVerificationCodesBot(chatId);\n\n  const { width, height } = botInfoDimensions || {};\n\n  const handleClick = useLastCallback((e: React.SyntheticEvent<any>) => {\n    stopEvent(e);\n    openChatWithInfo({\n      id: chatId, shouldReplaceHistory: true, profileTab: 'commonChats', forceScrollProfileTab: true,\n    });\n  });\n\n  const securityNameInfo = nameChangeDate && chat ? (\n    <div className=\"local-action-message\" key=\"security-name-message\">\n      <span>\n        {lang('UserUpdatedName', {\n          user: chat.title,\n          time: formatPastDatetime(lang, nameChangeDate),\n        }, { withNodes: true, withMarkdown: true })}\n      </span>\n    </div>\n  ) : undefined;\n\n  const securityPhotoInfo = photoChangeDate && chat ? (\n    <div className=\"local-action-message\" key=\"security-photo-message\">\n      <span>\n        {lang('UserUpdatedPhoto', {\n          user: chat.title,\n          time: formatPastDatetime(lang, photoChangeDate),\n        }, { withNodes: true, withMarkdown: true })}\n      </span>\n    </div>\n  ) : undefined;\n\n  const tableData = useMemo((): TableEntry[] => {\n    const entries: TableEntry[] = [];\n    if (country) {\n      entries.push([\n        oldLang('PrivacyPhone'),\n        <span className={styles.chatDescription}>\n          <span className={styles.country}>\n            {renderText(isoToEmoji(country?.iso2))}\n          </span>\n          {country?.defaultName}\n        </span>,\n      ]);\n    }\n    if (registrationMonth) {\n      entries.push([\n        lang('ContactInfoRegistration'),\n        formatRegistrationMonth(lang.code, registrationMonth),\n      ]);\n    }\n    if (userFullInfo?.commonChatsCount) {\n      const global = getGlobal();\n      const peers = commonChats?.ids.slice(0, 3).map((id) => selectPeer(global, id)!).filter(Boolean);\n      entries.push([\n        lang('ChatNonContactUserGroups'),\n        <Link className={styles.link} onClick={handleClick}>\n          <span className={styles.linkInfo}>\n            {lang('ChatGroups', {\n              count: userFullInfo.commonChatsCount,\n            }, {\n              pluralValue: userFullInfo.commonChatsCount,\n            })}\n          </span>\n          {Boolean(peers?.length) && <AvatarList size=\"micro\" peers={peers} />}\n          <Icon name=\"next\" className={styles.icon} />\n        </Link>,\n      ]);\n    }\n    return entries;\n  }, [lang, oldLang, country, registrationMonth, commonChats, userFullInfo]);\n\n  return (\n    <div className={buildClassName(styles.root, 'empty')}>\n      {isLoadingFullUser && isChatInfoEmpty && <span>{oldLang('Loading')}</span>}\n      {(isBotInfoEmpty && isChatInfoEmpty) && !isLoadingFullUser && !hasMessages && (\n        <span>{oldLang('NoMessages')}</span>\n      )}\n      {botInfo && (\n        <div\n          className={buildClassName(styles.chatInfo, styles.botBackground)}\n          style={buildStyle(\n            width ? `width: ${width}px` : undefined,\n          )}\n        >\n          {botInfoPhotoUrl && (\n            <img\n              className={styles.media}\n              src={botInfoPhotoUrl}\n              width={width}\n              height={height}\n              alt=\"Bot info\"\n            />\n          )}\n          {botInfoGifUrl && (\n            <OptimizedVideo\n              canPlay\n              className={styles.media}\n              src={botInfoGifUrl}\n              loop\n              disablePictureInPicture\n              muted\n              playsInline\n              style={buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`)}\n            />\n          )}\n          {botInfoDimensions && !botInfoPhotoUrl && !botInfoGifUrl && (\n            <Skeleton\n              className={styles.media}\n              width={width}\n              height={height}\n              forceAspectRatio\n            />\n          )}\n          {isVerifyCodes && (\n            <div className={styles.botInfoDescription}>\n              {oldLang('VerifyChatInfo')}\n            </div>\n          )}\n          {!isVerifyCodes && botInfo.description && (\n            <div className={styles.botInfoDescription}>\n              <p className={styles.botInfoTitle}>{oldLang('BotInfoTitle')}</p>\n              {renderText(botInfo.description, ['br', 'emoji', 'links'])}\n            </div>\n          )}\n        </div>\n      )}\n      {!isChatInfoEmpty && chat && (\n        <div\n          className={buildClassName(styles.chatInfo, styles.chatBackground)}\n        >\n          <h3 className={styles.chatInfoTitle}>{renderText(getChatTitle(lang, chat))}</h3>\n          <p className={buildClassName(styles.chatInfoSubtitle, styles.textColor)}>\n            {lang('ChatNonContactUserSubtitle')}\n          </p>\n          <MiniTable keyClassName={styles.textColor} data={tableData} />\n          {!chat?.isVerified && (\n            <div className={buildClassName(styles.chatNotVerified, styles.textColor)}>\n              <Icon name=\"info-filled\" />\n              <p className={styles.verifiedTitle}>{lang('ContactInfoNotVerified')}</p>\n            </div>\n          )}\n        </div>\n      )}\n      {securityNameInfo}\n      {securityPhotoInfo}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }) => {\n    const {\n      countryList: { phoneCodes: phoneCodeList },\n    } = global;\n    const chat = selectChat(global, chatId);\n    const userFullInfo = selectUserFullInfo(global, chatId);\n    const commonChats = selectUserCommonChats(global, chatId);\n    const chatBot = selectBot(global, chatId);\n\n    let isLoadingFullUser = false;\n    let botInfo;\n    if (chatBot) {\n      if (userFullInfo) {\n        botInfo = userFullInfo.botInfo;\n      } else {\n        isLoadingFullUser = true;\n      }\n    }\n\n    return {\n      chat,\n      userFullInfo,\n      botInfo,\n      isLoadingFullUser,\n      phoneCodeList,\n      commonChats,\n    };\n  },\n)(MessageListAccountInfo));\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { MessageListType } from '../../../types';\nimport type { OnIntersectPinnedMessage } from './usePinnedMessage';\n\nimport { IS_ANDROID } from '../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useBackgroundMode, { isBackgroundModeActive } from '../../../hooks/window/useBackgroundMode';\n\nconst INTERSECTION_THROTTLE_FOR_READING = 150;\nconst INTERSECTION_THROTTLE_FOR_MEDIA = IS_ANDROID ? 1000 : 350;\n\nexport default function useMessageObservers(\n  type: MessageListType,\n  containerRef: ElementRef<HTMLDivElement>,\n  memoFirstUnreadIdRef: { current: number | undefined },\n  onIntersectPinnedMessage: OnIntersectPinnedMessage | undefined,\n  chatId: string,\n  isQuickPreview?: boolean,\n) {\n  const {\n    markMessageListRead, markMentionsRead, animateUnreadReaction,\n    scheduleForViewsIncrement,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const INTERSECTION_MARGIN_FOR_LOADING = isMobile ? 300 : 500;\n\n  const {\n    observe: observeIntersectionForReading, freeze: freezeForReading, unfreeze: unfreezeForReading,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE_FOR_READING,\n  }, (entries) => {\n    if (type !== 'thread' || isBackgroundModeActive()) {\n      return;\n    }\n\n    let maxId = 0;\n    const mentionIds: number[] = [];\n    const reactionIds: number[] = [];\n    const viewportPinnedIdsToAdd: number[] = [];\n    const viewportPinnedIdsToRemove: number[] = [];\n    const scheduledToUpdateViews: number[] = [];\n\n    entries.forEach((entry) => {\n      const { isIntersecting, target } = entry;\n\n      const { dataset } = target as HTMLDivElement;\n      const messageId = Number(dataset.lastMessageId || dataset.messageId);\n      const shouldUpdateViews = dataset.shouldUpdateViews === 'true';\n      const albumMainId = dataset.albumMainId ? Number(dataset.albumMainId) : undefined;\n\n      if (!isIntersecting) {\n        if (dataset.isPinned) {\n          viewportPinnedIdsToRemove.push(albumMainId || messageId);\n        }\n        return;\n      }\n\n      if (messageId > maxId) {\n        maxId = messageId;\n      }\n\n      if (dataset.hasUnreadMention) {\n        mentionIds.push(messageId);\n      }\n\n      if (dataset.hasUnreadReaction) {\n        reactionIds.push(messageId);\n      }\n\n      if (dataset.isPinned) {\n        viewportPinnedIdsToAdd.push(albumMainId || messageId);\n      }\n\n      if (shouldUpdateViews) {\n        scheduledToUpdateViews.push(albumMainId || messageId);\n      }\n    });\n\n    if (!isQuickPreview) {\n      if (memoFirstUnreadIdRef.current && maxId >= memoFirstUnreadIdRef.current) {\n        markMessageListRead({ maxId });\n      }\n\n      if (mentionIds.length) {\n        markMentionsRead({ chatId, messageIds: mentionIds });\n      }\n\n      if (scheduledToUpdateViews.length) {\n        scheduleForViewsIncrement({ chatId, ids: scheduledToUpdateViews });\n      }\n    }\n\n    if (reactionIds.length) {\n      animateUnreadReaction({ messageIds: reactionIds });\n    }\n\n    if (viewportPinnedIdsToAdd.length || viewportPinnedIdsToRemove.length) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToAdd, viewportPinnedIdsToRemove });\n    }\n  });\n\n  useBackgroundMode(freezeForReading, unfreezeForReading);\n\n  const {\n    observe: observeIntersectionForLoading,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE_FOR_MEDIA,\n    margin: INTERSECTION_MARGIN_FOR_LOADING,\n  });\n\n  const { observe: observeIntersectionForPlaying } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE_FOR_MEDIA,\n  });\n\n  return {\n    observeIntersectionForReading,\n    observeIntersectionForLoading,\n    observeIntersectionForPlaying,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tk8btfOT\",\"avatarContainer\":\"UPrRM3Ks\",\"senderAvatar\":\"jdvqXfYh\",\"contextMenu\":\"FHxnbOg6\"};","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport {\n  EDITABLE_INPUT_CSS_SELECTOR,\n  MESSAGE_APPEARANCE_DELAY,\n} from '../../../config';\nimport {\n  getMainUsername,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectSender,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './SenderGroupContainer.module.scss';\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    withAvatar?: boolean;\n    children: React.ReactNode;\n    id: string;\n    appearanceOrder: number;\n    canPost?: boolean;\n  };\n\n  type StateProps = {\n    sender?: ApiPeer;\n    canShowSender: boolean;\n    originSender?: ApiPeer;\n    isChatWithSelf?: boolean;\n    isRepliesChat?: boolean;\n    isAnonymousForwards?: boolean;\n  };\n\nconst SenderGroupContainer: FC<OwnProps & StateProps> = ({\n  message,\n  withAvatar,\n  children,\n  id,\n  appearanceOrder,\n  sender,\n  canShowSender,\n  originSender,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  canPost,\n}) => {\n  const { openChat, updateInsertingPeerIdMention } = getActions();\n\n  const { forwardInfo } = message;\n\n  const messageSender = canShowSender ? sender : undefined;\n  const lang = useLang();\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n  const isAvatarPeerUser = avatarPeer && isApiPeerUser(avatarPeer);\n\n  const handleOpenChat = useLastCallback(() => {\n    if (!avatarPeer) {\n      return;\n    }\n\n    openChat({ id: avatarPeer.id });\n  });\n\n  const handleMention = useLastCallback(() => {\n    if (!avatarPeer) {\n      return;\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n    if (messageInput) {\n      updateInsertingPeerIdMention({ peerId: avatarPeer.id });\n    }\n  });\n\n  const handleAvatarClick = useLastCallback(() => {\n    handleOpenChat();\n  });\n\n  const {\n    ref: avatarRef,\n    shouldRender,\n  } = useShowTransition({\n    isOpen: withAvatar && isShown,\n    noMountTransition: isShown,\n    withShouldRender: true,\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(avatarRef);\n\n  const getTriggerElement = useLastCallback(() => avatarRef.current);\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n  const getMenuElement = useLastCallback(\n    () => avatarRef?.current?.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const canMention = canPost && avatarPeer && (isAvatarPeerUser || Boolean(getMainUsername(avatarPeer)));\n  const shouldRenderContextMenu = Boolean(contextMenuAnchor) && (isAvatarPeerUser || canMention);\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getLayout={getLayout}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        withPortal\n        autoClose\n      >\n        <>\n          {isAvatarPeerUser && (\n            <MenuItem\n              icon=\"comments\"\n              onClick={handleOpenChat}\n            >\n              {lang('SendMessage')}\n            </MenuItem>\n          )}\n          {canMention && (\n            <MenuItem\n              icon=\"mention\"\n              onClick={handleMention}\n            >\n              {lang('ContextMenuItemMention')}\n            </MenuItem>\n          )}\n        </>\n      </Menu>\n    );\n  }\n\n  function renderAvatar() {\n    const hiddenName = (!avatarPeer && forwardInfo) ? forwardInfo.hiddenUserName : undefined;\n\n    return (\n      <Avatar\n        size=\"small\"\n        className={styles.senderAvatar}\n        peer={avatarPeer}\n        text={hiddenName}\n        onClick={avatarPeer ? handleAvatarClick : undefined}\n        onContextMenu={handleContextMenu}\n      />\n    );\n  }\n\n  const className = buildClassName(\n    'sender-group-container',\n    styles.root,\n  );\n\n  return (\n    <div id={id} className={className}>\n      {shouldRender && (\n        <div ref={avatarRef} className={styles.avatarContainer}>\n          {renderAvatar()}\n          {shouldRenderContextMenu && renderContextMenu()}\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): Complete<StateProps> => {\n    const {\n      message, withAvatar,\n    } = ownProps;\n    const { chatId } = message;\n\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n\n    return {\n      sender,\n      canShowSender,\n      originSender,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n    };\n  },\n)(SenderGroupContainer));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SponsoredContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SponsoredContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SponsoredContextMenuContainer = useModuleLoader(\n    Bundles.Extra, 'SponsoredContextMenuContainer', !isOpen,\n  );\n\n  return SponsoredContextMenuContainer ? <SponsoredContextMenuContainer {...props} /> : undefined;\n};\n\nexport default SponsoredContextMenuContainerAsync;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getIsDownloading,\n  getMessageContent,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads, selectCanAutoLoadMedia, selectCanAutoPlayMedia,\n  selectSponsoredMessage,\n  selectTheme,\n} from '../../../global/selectors';\nimport { selectMessageDownloadableMedia } from '../../../global/selectors/media';\nimport { IS_ANDROID } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\nimport { preventMessageInputBlur } from '../helpers/preventMessageInputBlur';\nimport { calculateMediaDimensions, getMinMediaWidth, getMinMediaWidthWithText } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { type ObserveFn, useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport BadgeButton from '../../common/BadgeButton';\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport MessageAppendix from './MessageAppendix';\nimport Photo from './Photo';\nimport SponsoredContextMenuContainer from './SponsoredContextMenuContainer.async';\nimport Video from './Video';\n\nimport './SponsoredMessage.scss';\n\ntype OwnProps = {\n  chatId: string;\n  containerRef: ElementRef<HTMLDivElement>;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n};\n\ntype StateProps = {\n  message?: ApiSponsoredMessage;\n  theme: ThemeKey;\n  isDownloading?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\n\nconst SponsoredMessage: FC<OwnProps & StateProps> = ({\n  chatId,\n  message,\n  containerRef,\n  theme,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n}) => {\n  const {\n    viewSponsored,\n    openUrl,\n    hideSponsored,\n    clickSponsored,\n    openMediaViewer,\n    openAboutAdsModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const contentRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const shouldObserve = Boolean(message);\n\n  const { isMobile } = useAppLayout();\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    threshold: 1,\n  });\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, undefined, true, IS_ANDROID);\n\n  useEffect(() => {\n    return shouldObserve ? observeIntersection(contentRef.current!, (target) => {\n      if (target.isIntersecting && message?.randomId) {\n        viewSponsored({ randomId: message.randomId });\n      }\n    }) : undefined;\n  }, [message?.randomId, shouldObserve, observeIntersection, viewSponsored]);\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleHideSponsoredMessage = useLastCallback(() => {\n    hideSponsored();\n  });\n\n  const content = message && getMessageContent(message);\n  const {\n    photo, video, text,\n  } = content || {};\n\n  const isGif = video?.isGif;\n  const hasMedia = Boolean(photo || video);\n\n  const handleClick = useLastCallback(() => {\n    if (!message) return;\n\n    clickSponsored({ randomId: message.randomId, isMedia: photo || isGif ? true : undefined });\n    openUrl({ url: message.url, shouldSkipModal: true });\n  });\n\n  const handleOpenMedia = useLastCallback(() => {\n    if (!message) return;\n    clickSponsored({ randomId: message.randomId, isMedia: true });\n    openMediaViewer({\n      origin: MediaViewerOrigin.SponsoredMessage,\n      chatId,\n      isSponsoredMessage: true,\n    });\n  });\n\n  const handleOpenAboutAdsModal = useLastCallback(() => {\n    if (!message) return;\n    openAboutAdsModal({\n      randomId: message.randomId,\n      canReport: message.canReport,\n      additionalInfo: message.additionalInfo,\n      sponsorInfo: message.sponsorInfo,\n    });\n  });\n\n  const extraPadding = 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    const noMediaCorners = false;\n    let style = '';\n\n    if (photo || video) {\n      let width: number | undefined;\n      if (photo) {\n        width = calculateMediaDimensions({\n          media: photo,\n          isMobile,\n        }).width;\n      } else if (video) {\n        width = calculateMediaDimensions({\n          media: video,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < getMinMediaWidthWithText(isMobile)) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMobile), width);\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth + extraPadding}px`;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style,\n    };\n  }, [photo, video, isMobile, text?.text]);\n\n  const {\n    contentWidth, style,\n  } = sizeCalculations;\n\n  if (!message || !message.content) {\n    return undefined;\n  }\n\n  function renderContent() {\n    if (!message) return undefined;\n    return (\n      <>\n        <div className=\"message-title message-peer\" dir=\"auto\">{message.title}</div>\n        {Boolean(message.content?.text) && (\n          <div className=\"text-content with-meta\" dir=\"auto\" ref={contentRef}>\n            <span className=\"text-content-inner\" dir=\"auto\">\n              {renderTextWithEntities({\n                text: message.content.text.text,\n                entities: message.content.text.entities,\n              })}\n            </span>\n          </div>\n        )}\n\n        <Button\n          className=\"SponsoredMessage__button\"\n          size=\"tiny\"\n          color=\"translucent\"\n          isRectangular\n          onClick={handleClick}\n        >\n          {message.buttonText}\n        </Button>\n      </>\n    );\n  }\n\n  function renderMediaContent() {\n    if (!message) return undefined;\n\n    if (photo) {\n      return (\n        <Photo\n          photo={photo}\n          theme={theme}\n          canAutoLoad={canAutoLoadMedia}\n          isDownloading={isDownloading}\n          observeIntersection={observeIntersectionForLoading}\n          noAvatars\n          onClick={handleClick}\n          forcedWidth={contentWidth}\n        />\n      );\n    }\n    if (video) {\n      return (\n        <Video\n          video={video}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          noAvatars\n          canAutoLoad={canAutoLoadMedia}\n          canAutoPlay={canAutoPlayMedia}\n          isDownloading={isDownloading}\n          onClick={isGif ? handleClick : handleOpenMedia}\n          forcedWidth={contentWidth}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div\n      ref={ref}\n      key=\"sponsored-message\"\n      className=\"SponsoredMessage Message open sponsored-media-preview\"\n    >\n      <div\n        className=\"message-content media has-shadow has-solid-background has-appendix\"\n        dir=\"auto\"\n        style={style}\n        onMouseDown={handleMouseDown}\n        onContextMenu={handleContextMenu}\n      >\n        <PeerColorWrapper peerColor={message.peerColor} className=\"content-inner\" dir=\"auto\">\n          {renderMediaContent()}\n          {message.photo && (\n            <Avatar\n              size=\"large\"\n              photo={message.photo}\n              className={buildClassName('channel-avatar', lang.isRtl && 'is-rtl')}\n            />\n          )}\n          <span className={buildClassName('message-title message-type', hasMedia && 'has-media')}>\n            {message.isRecommended ? lang('Message.RecommendedLabel') : lang('SponsoredMessage')}\n            <BadgeButton onClick={handleOpenAboutAdsModal} className=\"ad-about\">\n              {lang('SponsoredMessageAdWhatIsThis')}\n            </BadgeButton>\n          </span>\n          {renderContent()}\n        </PeerColorWrapper>\n        <MessageAppendix />\n        <div className=\"message-action-buttons\">\n          <Button\n            className=\"message-action-button\"\n            color=\"translucent-white\"\n            round\n            size=\"tiny\"\n            ariaLabel={lang('Close')}\n            onClick={handleHideSponsoredMessage}\n          >\n            <Icon name=\"close\" className=\"sponsored-action-icon\" />\n          </Button>\n          {message.canReport && (\n            <Button\n              className=\"message-action-button\"\n              color=\"translucent-white\"\n              round\n              size=\"tiny\"\n              ariaLabel={lang('More')}\n              onClick={handleContextMenu}\n              onContextMenu={handleContextMenu}\n            >\n              <Icon name=\"more\" className=\"sponsored-action-icon\" />\n            </Button>\n          )}\n        </div>\n      </div>\n      {contextMenuAnchor && (\n        <SponsoredContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          triggerRef={ref}\n          randomId={message.randomId}\n          canReport={message.canReport}\n          sponsorInfo={message.sponsorInfo}\n          additionalInfo={message.additionalInfo}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): Complete<StateProps> => {\n    const message = selectSponsoredMessage(global, chatId);\n\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = message ? selectMessageDownloadableMedia(global, message) : undefined;\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    return {\n      message,\n      theme: selectTheme(global),\n      isDownloading,\n      canAutoLoadMedia: message ? selectCanAutoLoadMedia(global, message) : undefined,\n      canAutoPlayMedia: message ? selectCanAutoPlayMedia(global, message) : undefined,\n    };\n  },\n)(SponsoredMessage));\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport { getIsHeavyAnimating, memo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum, MessageListType, ThreadId } from '../../types';\nimport type { Signal } from '../../util/signals';\nimport type { MessageDateGroup } from './helpers/groupMessages';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../../config';\nimport {\n  getMessageHtmlId,\n  getMessageOriginalId,\n  getSuggestedChangesActionText,\n  getSuggestedChangesInfo,\n  isActionMessage,\n  isOwnMessage,\n  isServiceNotificationMessage,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectChatMessage, selectSender } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatHumanDate, formatScheduledDateTime } from '../../util/dates/dateFormat';\nimport { convertTonFromNanos } from '../../util/formatCurrency';\nimport { compact } from '../../util/iteratees';\nimport { formatStarsAsText, formatTonAsText } from '../../util/localization/format';\nimport { isAlbum } from './helpers/groupMessages';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\nimport { renderPeerLink } from './message/helpers/messageActions';\n\nimport useDerivedSignal from '../../hooks/useDerivedSignal';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useMessageObservers from './hooks/useMessageObservers';\nimport useScrollHooks from './hooks/useScrollHooks';\n\nimport MiniTable, { type TableEntry } from '../common/MiniTable';\nimport ActionMessage from './message/ActionMessage';\nimport Message from './message/Message';\nimport SenderGroupContainer from './message/SenderGroupContainer';\nimport SponsoredMessage from './message/SponsoredMessage';\nimport MessageListAccountInfo from './MessageListAccountInfo';\n\nimport actionMessageStyles from './message/ActionMessage.module.scss';\n\ninterface OwnProps {\n  canShowAds?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageIds: number[];\n  messageGroups: MessageDateGroup[];\n  getContainerHeight: Signal<number | undefined>;\n  isViewportNewest: boolean;\n  isUnread: boolean;\n  withUsers: boolean;\n  isChannelChat: boolean | undefined;\n  isChatMonoforum?: boolean;\n  isEmptyThread?: boolean;\n  isComments?: boolean;\n  noAvatars: boolean;\n  containerRef: ElementRef<HTMLDivElement>;\n  anchorIdRef: { current: string | undefined };\n  memoUnreadDividerBeforeIdRef: { current: number | undefined };\n  memoFirstUnreadIdRef: { current: number | undefined };\n  type: MessageListType;\n  isReady: boolean;\n  hasLinkedChat: boolean | undefined;\n  isSchedule: boolean;\n  shouldRenderAccountInfo?: boolean;\n  nameChangeDate?: number;\n  photoChangeDate?: number;\n  noAppearanceAnimation: boolean;\n  isSavedDialog?: boolean;\n  isQuickPreview?: boolean;\n  onScrollDownToggle?: BooleanToVoidFunction;\n  onNotchToggle?: AnyToVoidFunction;\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  canPost?: boolean;\n}\n\nconst UNREAD_DIVIDER_CLASS = 'unread-divider';\n\nconst MessageListContent: FC<OwnProps> = ({\n  canShowAds,\n  chatId,\n  threadId,\n  messageIds,\n  messageGroups,\n  getContainerHeight,\n  isViewportNewest,\n  isUnread,\n  isComments,\n  isEmptyThread,\n  withUsers,\n  isChannelChat,\n  isChatMonoforum,\n  noAvatars,\n  containerRef,\n  anchorIdRef,\n  memoUnreadDividerBeforeIdRef,\n  memoFirstUnreadIdRef,\n  type,\n  isReady,\n  hasLinkedChat,\n  isSchedule,\n  shouldRenderAccountInfo,\n  nameChangeDate,\n  photoChangeDate,\n  noAppearanceAnimation,\n  isSavedDialog,\n  isQuickPreview,\n  onScrollDownToggle,\n  onNotchToggle,\n  onIntersectPinnedMessage,\n  canPost,\n}) => {\n  const { openHistoryCalendar } = getActions();\n\n  const getIsHeavyAnimating2 = getIsHeavyAnimating;\n  const getIsReady = useDerivedSignal(() => isReady && !getIsHeavyAnimating2(), [isReady, getIsHeavyAnimating2]);\n\n  const areDatesClickable = !isSavedDialog && !isSchedule;\n\n  const {\n    observeIntersectionForReading,\n    observeIntersectionForLoading,\n    observeIntersectionForPlaying,\n  } = useMessageObservers(type, containerRef, memoFirstUnreadIdRef, onIntersectPinnedMessage, chatId, isQuickPreview);\n\n  const {\n    withHistoryTriggers,\n    backwardsTriggerRef,\n    forwardsTriggerRef,\n    fabTriggerRef,\n  } = useScrollHooks(\n    type,\n    containerRef,\n    messageIds,\n    getContainerHeight,\n    isViewportNewest,\n    isUnread,\n    onScrollDownToggle,\n    onNotchToggle,\n    isReady,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const unreadDivider = (\n    <div className={buildClassName(UNREAD_DIVIDER_CLASS, 'local-action-message')} key=\"unread-messages\">\n      <span>{oldLang('UnreadMessages')}</span>\n    </div>\n  );\n  const renderPaidMessageAction = (message: ApiMessage, album?: IAlbum) => {\n    if (message.paidMessageStars) {\n      const messagesLength = album?.messages?.length || 1;\n      const amount = message.paidMessageStars * messagesLength;\n      return (\n        <div\n          className={buildClassName('local-action-message')}\n          key={`paid-messages-action-${message.id}`}\n        >\n          <span>\n            {\n              message.isOutgoing\n                ? lang('ActionPaidOneMessageOutgoing', {\n                  amount: formatStarsAsText(lang, amount),\n                })\n                : (() => {\n                  const sender = selectSender(getGlobal(), message);\n                  const userTitle = sender ? getPeerTitle(lang, sender) : '';\n                  return lang('ActionPaidOneMessageIncoming', {\n                    user: userTitle,\n                    amount: formatStarsAsText(lang, amount),\n                  });\n                })()\n            }\n          </span>\n        </div>\n      );\n    }\n    return undefined;\n  };\n\n  const renderSuggestedPostInfoAction = (message: ApiMessage) => {\n    if (message.suggestedPostInfo) {\n      const { price, scheduleDate } = message.suggestedPostInfo;\n      const sender = selectSender(getGlobal(), message);\n      const userTitle = sender ? getPeerTitle(lang, sender) : '';\n      const userLink = renderPeerLink(sender?.id, userTitle || lang('ActionFallbackUser'));\n\n      const originalMessage = message.replyInfo?.type === 'message' && message.replyInfo.replyToMsgId\n        ? selectChatMessage(getGlobal(), message.chatId, message.replyInfo.replyToMsgId)\n        : undefined;\n      const changesInfo = getSuggestedChangesInfo(message, originalMessage);\n\n      const titleText = changesInfo\n        ? getSuggestedChangesActionText(lang, message, originalMessage, message.isOutgoing, userLink)\n        : message.isOutgoing\n          ? lang('ActionSuggestedPostOutgoing', undefined, { withNodes: true, withMarkdown: true })\n          : lang('ActionSuggestedPostIncoming', { user: userLink }, { withNodes: true, withMarkdown: true });\n\n      const tableData: TableEntry[] = compact([\n        [lang('TitlePrice'), price ? (price.currency === 'TON'\n          ? formatTonAsText(lang, convertTonFromNanos(price.amount))\n          : formatStarsAsText(lang, price.amount)) : lang('SuggestMessageNoPrice')],\n        [lang('TitleTime'),\n          scheduleDate\n            ? formatScheduledDateTime(scheduleDate, lang, oldLang)\n            : lang('SuggestMessageAnytime'),\n        ],\n      ]);\n\n      return (\n        <div\n          className={buildClassName('local-action-message')}\n          key={`suggested-post-action-${message.id}`}\n        >\n          <span className={actionMessageStyles.suggestedPostContainer}>\n            <div\n              className={actionMessageStyles.suggestedPostTitle}\n            >\n              {titleText}\n            </div>\n            {Boolean(tableData.length) && (\n              <MiniTable\n                className={actionMessageStyles.suggestedPostInfo}\n                data={tableData}\n              />\n            )}\n          </span>\n        </div>\n      );\n    }\n    return undefined;\n  };\n\n  const messageCountToAnimate = noAppearanceAnimation ? 0 : messageGroups.reduce((acc, messageGroup) => {\n    return acc + messageGroup.senderGroups.flat().length;\n  }, 0);\n  let appearanceIndex = 0;\n\n  const prevMessageIds = usePreviousDeprecated(messageIds);\n  const isNewMessage = Boolean(\n    messageIds && prevMessageIds && messageIds[messageIds.length - 2] === prevMessageIds[prevMessageIds.length - 1],\n  );\n\n  function calculateSenderGroups(\n    dateGroup: MessageDateGroup, dateGroupIndex: number, dateGroupsArray: MessageDateGroup[],\n  ) {\n    return dateGroup.senderGroups.map((\n      senderGroup,\n      senderGroupIndex,\n      senderGroupsArray,\n    ) => {\n      if (\n        senderGroup.length === 1\n        && !isAlbum(senderGroup[0])\n        && isActionMessage(senderGroup[0])\n        && senderGroup[0].content.action?.type !== 'phoneCall'\n      ) {\n        const message = senderGroup[0];\n        const isLastInList = (\n          senderGroupIndex === senderGroupsArray.length - 1\n          && dateGroupIndex === dateGroupsArray.length - 1\n        );\n\n        return compact([\n          message.id === memoUnreadDividerBeforeIdRef.current && unreadDivider,\n          <ActionMessage\n            key={message.id}\n            message={message}\n            threadId={threadId}\n            observeIntersectionForBottom={observeIntersectionForReading}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            memoFirstUnreadIdRef={memoFirstUnreadIdRef}\n            appearanceOrder={messageCountToAnimate - ++appearanceIndex}\n            isJustAdded={isLastInList && isNewMessage}\n            isLastInList={isLastInList}\n            getIsMessageListReady={getIsReady}\n            onIntersectPinnedMessage={onIntersectPinnedMessage}\n          />,\n        ]);\n      }\n\n      let currentDocumentGroupId: string | undefined;\n\n      const senderGroupElements = senderGroup.map((\n        messageOrAlbum,\n        messageIndex,\n      ) => {\n        const message = isAlbum(messageOrAlbum) ? messageOrAlbum.mainMessage : messageOrAlbum;\n        const album = isAlbum(messageOrAlbum) ? messageOrAlbum : undefined;\n        const isOwn = isOwnMessage(message);\n        const isMessageAlbum = isAlbum(messageOrAlbum);\n        const nextMessage = senderGroup[messageIndex + 1];\n\n        if (message.previousLocalId && anchorIdRef.current === getMessageHtmlId(message.previousLocalId)) {\n          anchorIdRef.current = getMessageHtmlId(message.id);\n        }\n\n        const documentGroupId = !isMessageAlbum && message.groupedId ? message.groupedId : undefined;\n        const nextDocumentGroupId = nextMessage && !isAlbum(nextMessage) ? nextMessage.groupedId : undefined;\n        const isTopicTopMessage = message.id === threadId;\n\n        const position = {\n          isFirstInGroup: messageIndex === 0,\n          isLastInGroup: messageIndex === senderGroup.length - 1,\n          isFirstInDocumentGroup: Boolean(documentGroupId && documentGroupId !== currentDocumentGroupId),\n          isLastInDocumentGroup: Boolean(documentGroupId && documentGroupId !== nextDocumentGroupId),\n          isLastInList: (\n            messageIndex === senderGroup.length - 1\n            && senderGroupIndex === senderGroupsArray.length - 1\n            && dateGroupIndex === dateGroupsArray.length - 1\n          ),\n        };\n\n        currentDocumentGroupId = documentGroupId;\n\n        const originalId = getMessageOriginalId(message);\n        // Service notifications saved in cache in previous versions may share the same `previousLocalId`\n        const key = isServiceNotificationMessage(message) ? `${message.date}_${originalId}` : originalId;\n\n        const noComments = hasLinkedChat === false || !isChannelChat || Boolean(isChatMonoforum);\n\n        return compact([\n          message.id === memoUnreadDividerBeforeIdRef.current && unreadDivider,\n          message.paidMessageStars && !withUsers && renderPaidMessageAction(message, album),\n          message.suggestedPostInfo && renderSuggestedPostInfoAction(message),\n          <Message\n            key={key}\n            message={message}\n            observeIntersectionForBottom={observeIntersectionForReading}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            album={album}\n            noAvatars={noAvatars}\n            withAvatar={position.isLastInGroup && withUsers && !isOwn && (!isTopicTopMessage || !isComments)}\n            withSenderName={position.isFirstInGroup && withUsers && !isOwn}\n            threadId={threadId}\n            messageListType={type}\n            noComments={noComments}\n            noReplies={!noComments || threadId !== MAIN_THREAD_ID || type === 'scheduled'}\n            appearanceOrder={messageCountToAnimate - ++appearanceIndex}\n            isJustAdded={position.isLastInList && isNewMessage}\n            isFirstInGroup={position.isFirstInGroup}\n            isLastInGroup={position.isLastInGroup}\n            isFirstInDocumentGroup={position.isFirstInDocumentGroup}\n            isLastInDocumentGroup={position.isLastInDocumentGroup}\n            isLastInList={position.isLastInList}\n            memoFirstUnreadIdRef={memoFirstUnreadIdRef}\n            onIntersectPinnedMessage={onIntersectPinnedMessage}\n            getIsMessageListReady={getIsReady}\n          />,\n          message.id === threadId && (\n            // eslint-disable-next-line react-x/no-duplicate-key\n            <div className=\"local-action-message\" key=\"discussion-started\">\n              <span>\n                {oldLang(isEmptyThread\n                  ? (isComments ? 'NoComments' : 'NoReplies') : 'DiscussionStarted')}\n              </span>\n            </div>\n          ),\n        ]);\n      }).flat();\n\n      if (!withUsers) return senderGroupElements;\n\n      const lastMessageOrAlbum = senderGroup[senderGroup.length - 1];\n      const lastMessage = isAlbum(lastMessageOrAlbum) ? lastMessageOrAlbum.mainMessage : lastMessageOrAlbum;\n      const lastMessageId = getMessageOriginalId(lastMessage);\n      const lastAppearanceOrder = messageCountToAnimate - appearanceIndex;\n\n      const isTopicTopMessage = lastMessage.id === threadId;\n      const isOwn = isOwnMessage(lastMessage);\n\n      const firstMessageOrAlbum = senderGroup[0];\n      const firstMessage = isAlbum(firstMessageOrAlbum) ? firstMessageOrAlbum.mainMessage : firstMessageOrAlbum;\n      const firstMessageId = getMessageOriginalId(firstMessage);\n\n      const key = `${firstMessageId}-${lastMessageId}`;\n      const id = (firstMessageId === lastMessageId) ? `message-group-${firstMessageId}`\n        : `message-group-${firstMessageId}-${lastMessageId}`;\n\n      const withAvatar = withUsers && !isOwn && (!isTopicTopMessage || !isComments);\n      return (\n        <SenderGroupContainer\n          key={key}\n          id={id}\n          message={lastMessage}\n          withAvatar={withAvatar}\n          appearanceOrder={lastAppearanceOrder}\n          canPost={canPost}\n        >\n          {senderGroupElements}\n        </SenderGroupContainer>\n      );\n    });\n  }\n\n  const dateGroups = messageGroups.map((\n    dateGroup: MessageDateGroup,\n    dateGroupIndex: number,\n    dateGroupsArray: MessageDateGroup[],\n  ) => {\n    const senderGroups = calculateSenderGroups(dateGroup, dateGroupIndex, dateGroupsArray);\n\n    return (\n      <div\n        className={buildClassName('message-date-group', !(nameChangeDate || photoChangeDate)\n        && dateGroupIndex === 0 && 'first-message-date-group')}\n        key={dateGroup.datetime}\n        onMouseDown={preventMessageInputBlur}\n        teactFastList\n      >\n        <div\n          className={buildClassName('sticky-date', areDatesClickable && 'interactive')}\n          key=\"date-header\"\n          onMouseDown={preventMessageInputBlur}\n          onClick={areDatesClickable ? () => openHistoryCalendar({ selectedAt: dateGroup.datetime }) : undefined}\n        >\n          <span dir=\"auto\">\n            {isSchedule && dateGroup.originalDate === SCHEDULED_WHEN_ONLINE && (\n              oldLang('MessageScheduledUntilOnline')\n            )}\n            {isSchedule && dateGroup.originalDate !== SCHEDULED_WHEN_ONLINE && (\n              oldLang('MessageScheduledOn', formatHumanDate(oldLang, dateGroup.datetime, undefined, true))\n            )}\n            {!isSchedule && formatHumanDate(oldLang, dateGroup.datetime)}\n          </span>\n        </div>\n        {senderGroups.flat()}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"messages-container\" teactFastList>\n      {withHistoryTriggers && <div ref={backwardsTriggerRef} key=\"backwards-trigger\" className=\"backwards-trigger\" />}\n      {shouldRenderAccountInfo\n        && <MessageListAccountInfo key={`account_info_${chatId}`} chatId={chatId} hasMessages />}\n      {dateGroups.flat()}\n      {withHistoryTriggers && (\n        <div\n          ref={forwardsTriggerRef}\n          key=\"forwards-trigger\"\n          className=\"forwards-trigger\"\n        />\n      )}\n      <div\n        ref={fabTriggerRef}\n        key=\"fab-trigger\"\n        className=\"fab-trigger\"\n      />\n      {canShowAds && isViewportNewest && (\n        <SponsoredMessage\n          key={chatId}\n          chatId={chatId}\n          containerRef={containerRef}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MessageListContent);\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { useEffect, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { MessageListType } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { MESSAGE_LIST_SENSITIVE_AREA } from '../../../util/browser/windowEnvironment';\nimport { debounce } from '../../../util/schedulers';\n\nimport { useDebouncedSignal } from '../../../hooks/useAsyncResolvers';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { useSignalEffect } from '../../../hooks/useSignalEffect';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst FAB_THRESHOLD = 50;\nconst NOTCH_THRESHOLD = 1; // Notch has zero height so we at least need a 1px margin to intersect\nconst CONTAINER_HEIGHT_DEBOUNCE = 200;\nconst TOOLS_FREEZE_TIMEOUT = 350; // Approximate message sending animation duration\n\nexport default function useScrollHooks(\n  type: MessageListType,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageIds: number[],\n  getContainerHeight: Signal<number | undefined>,\n  isViewportNewest: boolean,\n  isUnread: boolean,\n  onScrollDownToggle: BooleanToVoidFunction | undefined,\n  onNotchToggle: AnyToVoidFunction | undefined,\n  isReady: boolean,\n) {\n  const { loadViewportMessages } = getActions();\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(\n    () => (type === 'thread' ? [\n      debounce(() => loadViewportMessages({ direction: LoadMoreDirection.Backwards }), 1000, true, false),\n      debounce(() => loadViewportMessages({ direction: LoadMoreDirection.Forwards }), 1000, true, false),\n    ] : []),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [loadViewportMessages, messageIds],\n  );\n\n  const backwardsTriggerRef = useRef<HTMLDivElement>();\n  const forwardsTriggerRef = useRef<HTMLDivElement>();\n  const fabTriggerRef = useRef<HTMLDivElement>();\n\n  const toggleScrollTools = useLastCallback(() => {\n    if (!isReady) return;\n\n    if (!messageIds?.length) {\n      onScrollDownToggle?.(false);\n      onNotchToggle?.(false);\n\n      return;\n    }\n\n    if (!isViewportNewest) {\n      onScrollDownToggle?.(true);\n      onNotchToggle?.(true);\n\n      return;\n    }\n\n    const container = containerRef.current;\n    const fabTrigger = fabTriggerRef.current;\n    if (!container || !fabTrigger) return;\n\n    const { offsetHeight, scrollHeight, scrollTop } = container;\n    const fabOffsetTop = fabTrigger.offsetTop;\n    const scrollBottom = Math.round(fabOffsetTop - scrollTop - offsetHeight);\n    const isNearBottom = scrollBottom <= FAB_THRESHOLD;\n    const isAtBottom = scrollBottom <= NOTCH_THRESHOLD;\n\n    if (scrollHeight === 0) return;\n\n    onScrollDownToggle?.(isUnread ? !isAtBottom : !isNearBottom);\n    onNotchToggle?.(!isAtBottom);\n  });\n\n  const {\n    observe: observeIntersectionForHistory,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    margin: MESSAGE_LIST_SENSITIVE_AREA,\n  }, (entries) => {\n    if (!loadMoreForwards || !loadMoreBackwards) {\n      return;\n    }\n\n    entries.forEach(({ isIntersecting, target }) => {\n      if (!isIntersecting) return;\n\n      if (target.className === 'backwards-trigger') {\n        loadMoreBackwards();\n      }\n\n      if (target.className === 'forwards-trigger') {\n        loadMoreForwards();\n      }\n    });\n  });\n\n  const withHistoryTriggers = messageIds && messageIds.length > 1;\n\n  useOnIntersect(backwardsTriggerRef, withHistoryTriggers ? observeIntersectionForHistory : undefined);\n  useOnIntersect(forwardsTriggerRef, withHistoryTriggers ? observeIntersectionForHistory : undefined);\n\n  const {\n    observe: observeIntersectionForFab,\n    freeze: freezeForFab,\n    unfreeze: unfreezeForFab,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    margin: FAB_THRESHOLD * 2,\n    throttleScheduler: requestMeasure,\n  }, toggleScrollTools);\n\n  useOnIntersect(fabTriggerRef, observeIntersectionForFab);\n\n  const {\n    observe: observeIntersectionForNotch,\n    freeze: freezeForNotch,\n    unfreeze: unfreezeForNotch,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    margin: NOTCH_THRESHOLD,\n    throttleScheduler: requestMeasure,\n  }, toggleScrollTools);\n\n  useOnIntersect(fabTriggerRef, observeIntersectionForNotch);\n\n  useEffect(() => {\n    if (isReady) {\n      toggleScrollTools();\n    }\n  }, [isReady, toggleScrollTools]);\n\n  const freezeShortly = useLastCallback(() => {\n    freezeForFab();\n    freezeForNotch();\n\n    setTimeout(() => {\n      unfreezeForNotch();\n      unfreezeForFab();\n    }, TOOLS_FREEZE_TIMEOUT);\n  });\n\n  // Workaround for FAB and notch flickering with tall incoming message\n  useSyncEffect(freezeShortly, [freezeShortly, messageIds]);\n\n  // Workaround for notch flickering when opening Composer Embedded Message\n  const getContainerHeightDebounced = useDebouncedSignal(getContainerHeight, CONTAINER_HEIGHT_DEBOUNCE);\n  useSignalEffect(freezeShortly, [freezeShortly, getContainerHeightDebounced]);\n\n  return {\n    withHistoryTriggers,\n    backwardsTriggerRef,\n    forwardsTriggerRef,\n    fabTriggerRef,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { MessageListType } from '../../types';\n\nimport { REM } from '../common/helpers/mediaDimensions';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\n\nimport './NoMessages.scss';\n\nconst ICON_SIZE = 3 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  isChatWithSelf?: boolean;\n  type: MessageListType;\n  isGroupChatJustCreated?: boolean;\n  topic?: ApiTopic;\n};\n\nconst NoMessages: FC<OwnProps> = ({\n  isChatWithSelf,\n  type,\n  isGroupChatJustCreated,\n  topic,\n}) => {\n  const lang = useOldLang();\n\n  if (type === 'scheduled') {\n    return renderScheduled(lang);\n  }\n\n  if (isChatWithSelf) {\n    return renderSavedMessages(lang);\n  }\n\n  if (isGroupChatJustCreated) {\n    return renderGroup(lang);\n  }\n\n  if (topic) {\n    return renderTopic(lang, topic);\n  }\n\n  return (\n    <div className=\"empty\"><span>{lang('NoMessages')}</span></div>\n  );\n};\n\nfunction renderTopic(lang: OldLangFn, topic: ApiTopic) {\n  return (\n    <div className=\"NoMessages\">\n      <div className=\"wrapper\">\n        <TopicIcon\n          topic={topic}\n          size={ICON_SIZE}\n          className=\"no-messages-icon topic-icon\"\n        />\n        <h3 className=\"title\">{lang('Chat.EmptyTopicPlaceholder.Title')}</h3>\n        <p className=\"description topic-description\">{renderText(lang('Chat.EmptyTopicPlaceholder.Text'), ['br'])}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction renderScheduled(lang: OldLangFn) {\n  return (\n    <div className=\"empty\"><span>{lang('ScheduledMessages.EmptyPlaceholder')}</span></div>\n  );\n}\n\nfunction renderSavedMessages(lang: OldLangFn) {\n  return (\n    <div className=\"NoMessages\">\n      <div className=\"wrapper\">\n        <Icon name=\"cloud-download\" className=\"no-messages-icon\" />\n        <h3 className=\"title\">{lang('Conversation.CloudStorageInfo.Title')}</h3>\n        <ul className=\"description\">\n          <li>{lang('Conversation.ClousStorageInfo.Description1')}</li>\n          <li>{lang('Conversation.ClousStorageInfo.Description2')}</li>\n          <li>{lang('Conversation.ClousStorageInfo.Description3')}</li>\n          <li>{lang('Conversation.ClousStorageInfo.Description4')}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nfunction renderGroup(lang: OldLangFn) {\n  return (\n    <div className=\"NoMessages\">\n      <div className=\"wrapper\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <h3 className=\"title\">{lang('EmptyGroupInfo.Title')}</h3>\n        <p className=\"description\">{lang('EmptyGroupInfo.Subtitle')}</p>\n        <ul className=\"list-checkmarks\">\n          <li>{lang('EmptyGroupInfo.Line1')}</li>\n          <li>{lang('EmptyGroupInfo.Line2')}</li>\n          <li>{lang('EmptyGroupInfo.Line3')}</li>\n          <li>{lang('EmptyGroupInfo.Line4')}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(NoMessages);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2RfusJI\",\"button\":\"Nz8BOo0i\",\"disabled\":\"zHsizIwX\",\"inner\":\"C90W_KKX\",\"icons-container\":\"Qi7tZATP\",\"iconsContainer\":\"Qi7tZATP\",\"animated-unlock\":\"lfcZJyxp\",\"animatedUnlock\":\"lfcZJyxp\",\"comments-icon\":\"zd5EAc5e\",\"commentsIcon\":\"zd5EAc5e\",\"description\":\"E_YZ3IQs\",\"starIconContainer\":\"IL_EHscS\",\"starIcon\":\"C_e1ij6A\"};","import { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\n\nimport { getPeerTitle, isApiPeerUser } from '../../global/helpers/peers';\nimport { selectPeer, selectTheme, selectThemeValues } from '../../global/selectors';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { LOCAL_TGS_URLS } from '../common/helpers/animatedAssets';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../common/AnimatedIconWithPreview';\nimport Icon from '../common/icons/Icon';\nimport Sparkles from '../common/Sparkles';\nimport Button from '../ui/Button';\n\nimport styles from './RequirementToContactMessage.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  paidMessagesStars?: number;\n};\n\ntype StateProps = {\n  patternColor?: string;\n  peer?: ApiPeer;\n};\n\nfunction RequirementToContactMessage({\n  patternColor, peer, paidMessagesStars,\n}: OwnProps & StateProps) {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { openPremiumModal, openStarsBalanceModal } = getActions();\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  const handleGetMoreStars = useLastCallback(() => {\n    openStarsBalanceModal({});\n  });\n\n  if (!peer) return undefined;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.inner}>\n        <div className={styles.iconsContainer}>\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Unlock}\n            size={54}\n            color={patternColor}\n            className={styles.animatedUnlock}\n          />\n          <Icon name=\"comments-sticker\" className={styles.commentsIcon} />\n        </div>\n        <span className={styles.description}>\n          {\n            paidMessagesStars\n              ? lang(isApiPeerUser(peer) ? 'MessagesPlaceholderPaidUser' : 'MessagesPlaceholderPaidChannel', {\n                peer: getPeerTitle(lang, peer),\n                amount: formatStarsAsIcon(lang,\n                  paidMessagesStars,\n                  {\n                    asFont: true,\n                    className: styles.starIcon,\n                    containerClassName: styles.starIconContainer,\n                  }),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })\n              : renderText(oldLang('MessageLockedPremium', getPeerTitle(lang, peer)), ['simple_markdown'])\n          }\n        </span>\n        <Button\n          color=\"translucent-black\"\n          size=\"default\"\n          pill\n          onClick={paidMessagesStars ? handleGetMoreStars : handleOpenPremiumModal}\n          className={styles.button}\n        >\n          {\n            paidMessagesStars\n              ? (\n                <>\n                  {lang('ButtonBuyStars')}\n                  <Sparkles preset=\"button\" />\n                </>\n              )\n              : oldLang('MessagePremiumUnlock')\n          }\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { peerId: userId }): Complete<StateProps> => {\n    const theme = selectTheme(global);\n    const { patternColor } = selectThemeValues(global, theme) || {};\n    const peer = selectPeer(global, userId);\n\n    return {\n      patternColor,\n      peer,\n    };\n  })(RequirementToContactMessage),\n);\n","import type { FC } from '@teact';\nimport { beginHeavyAnimation, memo, useEffect, useMemo, useRef } from '@teact';\nimport { addExtraClass, removeExtraClass } from '@teact/teact-dom';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatFullInfo, ApiMessage, ApiRestrictionReason, ApiTopic } from '../../api/types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { LoadMoreDirection, type MessageListType, type ThreadId } from '../../types';\n\nimport {\n  ANIMATION_END_DELAY,\n  ANONYMOUS_USER_ID,\n  MESSAGE_LIST_SLICE,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { forceMeasure, requestForcedReflow, requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog,\n  getMessageHtmlId,\n  isAnonymousForwardsChat,\n  isChatChannel,\n  isChatGroup,\n  isChatMonoforum,\n  isSystemBot,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectChatLastMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentMessageIds,\n  selectFirstUnreadId,\n  selectFocusedMessageId,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsViewportNewest,\n  selectLastScrollOffset,\n  selectMonoforumChannel,\n  selectPerformanceSettingsValue,\n  selectScrollOffset,\n  selectTabState,\n  selectThreadInfo,\n  selectTopic,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectIsChatRestricted } from '../../global/selectors/chats';\nimport { selectActiveRestrictionReasons, selectCurrentMessageList } from '../../global/selectors/messages';\nimport animateScroll, { isAnimatingScroll, restartCurrentScrollAnimation } from '../../util/animateScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { orderBy } from '../../util/iteratees';\nimport { isLocalMessageId } from '../../util/keys/messageKey';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce, onTickEnd } from '../../util/schedulers';\nimport getOffsetToContainer from '../../util/visibility/getOffsetToContainer';\nimport { groupMessages } from './helpers/groupMessages';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useNativeCopySelectedMessages from '../../hooks/useNativeCopySelectedMessages';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport { isBackgroundModeActive } from '../../hooks/window/useBackgroundMode';\nimport useContainerHeight from './hooks/useContainerHeight';\nimport useStickyDates from './hooks/useStickyDates';\n\nimport Loading from '../ui/Loading';\nimport Transition from '../ui/Transition.tsx';\nimport ContactGreeting from './ContactGreeting';\nimport MessageListAccountInfo from './MessageListAccountInfo';\nimport MessageListContent from './MessageListContent';\nimport NoMessages from './NoMessages';\nimport RequirementToContactMessage from './RequirementToContactMessage';\n\nimport './MessageList.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  type: MessageListType;\n  isComments?: boolean;\n  canPost: boolean;\n  isReady: boolean;\n  withBottomShift?: boolean;\n  withDefaultBg: boolean;\n  isContactRequirePremium?: boolean;\n  paidMessagesStars?: number;\n  isQuickPreview?: boolean;\n  onScrollDownToggle?: BooleanToVoidFunction;\n  onNotchToggle?: AnyToVoidFunction;\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  isChatLoaded?: boolean;\n  isChannelChat?: boolean;\n  isGroupChat?: boolean;\n  isChatMonoforum?: boolean;\n  isChatWithSelf?: boolean;\n  isSystemBotChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isCreator?: boolean;\n  isChannelWithAvatars?: boolean;\n  isBot?: boolean;\n  isNonContact?: boolean;\n  nameChangeDate?: number;\n  photoChangeDate?: number;\n  isSynced?: boolean;\n  messageIds?: number[];\n  messagesById?: Record<number, ApiMessage>;\n  firstUnreadId?: number;\n  isViewportNewest?: boolean;\n  isRestricted?: boolean;\n  restrictionReasons?: ApiRestrictionReason[];\n  focusingId?: number;\n  isSelectModeActive?: boolean;\n  lastMessage?: ApiMessage;\n  hasLinkedChat?: boolean;\n  topic?: ApiTopic;\n  noMessageSendingAnimation?: boolean;\n  isServiceNotificationsChat?: boolean;\n  isEmptyThread?: boolean;\n  isForum?: boolean;\n  currentUserId: string;\n  isAccountFrozen?: boolean;\n  areAdsEnabled?: boolean;\n  channelJoinInfo?: ApiChatFullInfo['joinInfo'];\n  isChatProtected?: boolean;\n  hasCustomGreeting?: boolean;\n  isAppConfigLoaded?: boolean;\n  monoforumChannelId?: string;\n  canTranslate?: boolean;\n  translationLanguage?: string;\n  shouldAutoTranslate?: boolean;\n  isActive?: boolean;\n};\n\nenum Content {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Loading,\n  Restricted,\n  StarsRequired,\n  PremiumRequired,\n  AccountInfo,\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  ContactGreeting,\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  NoMessages,\n  MessageList,\n}\n\nconst MESSAGE_REACTIONS_POLLING_INTERVAL = 20 * 1000;\nconst MESSAGE_COMMENTS_POLLING_INTERVAL = 20 * 1000;\nconst MESSAGE_FACT_CHECK_UPDATE_INTERVAL = 5 * 1000;\nconst MESSAGE_STORY_POLLING_INTERVAL = 5 * 60 * 1000;\nconst BOTTOM_THRESHOLD = 50;\nconst UNREAD_DIVIDER_TOP = 10;\nconst SCROLL_DEBOUNCE = 200;\nconst MESSAGE_ANIMATION_DURATION = 500;\nconst BOTTOM_FOCUS_MARGIN = 20;\nconst SELECT_MODE_ANIMATION_DURATION = 200;\nconst UNREAD_DIVIDER_CLASS = 'unread-divider';\n\nconst runDebouncedForScroll = debounce((cb) => cb(), SCROLL_DEBOUNCE, false);\n\nconst MessageList: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  type,\n  isChatLoaded,\n  isForum,\n  isChannelChat,\n  isGroupChat,\n  isChannelWithAvatars,\n  canPost,\n  isSynced,\n  isActive,\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  isChatMonoforum,\n  isReady,\n  isChatWithSelf,\n  isSystemBotChat,\n  isAnonymousForwards,\n  isCreator,\n  isBot,\n  isNonContact,\n  nameChangeDate,\n  photoChangeDate,\n  messageIds,\n  messagesById,\n  firstUnreadId,\n  isComments,\n  isViewportNewest,\n  isRestricted,\n  restrictionReasons,\n  isEmptyThread,\n  focusingId,\n  isSelectModeActive,\n  lastMessage,\n  hasLinkedChat,\n  withBottomShift,\n  withDefaultBg,\n  topic,\n  noMessageSendingAnimation,\n  isServiceNotificationsChat,\n  currentUserId,\n  isContactRequirePremium,\n  paidMessagesStars,\n  areAdsEnabled,\n  channelJoinInfo,\n  isChatProtected,\n  isAccountFrozen,\n  hasCustomGreeting,\n  monoforumChannelId,\n  isAppConfigLoaded,\n  canTranslate,\n  translationLanguage,\n  shouldAutoTranslate,\n  isQuickPreview,\n  onIntersectPinnedMessage,\n  onScrollDownToggle,\n  onNotchToggle,\n}) => {\n  const {\n    loadViewportMessages, setScrollOffset, loadSponsoredMessages, loadMessageReactions, copyMessagesByIds,\n    loadMessageViews, loadPeerStoriesByIds, loadFactChecks, requestChatTranslation,\n  } = getActions();\n\n  const containerRef = useRef<HTMLDivElement>();\n\n  // We update local cached `scrollOffsetRef` when opening chat.\n  // Then we update global version every second on scrolling.\n  const scrollOffsetRef = useRef<number>(\n    (type === 'thread' && selectScrollOffset(getGlobal(), chatId, threadId))\n    || selectLastScrollOffset(getGlobal(), chatId, threadId)\n    || 0,\n  );\n\n  const anchorIdRef = useRef<string>();\n  const anchorTopRef = useRef<number>();\n  const listItemElementsRef = useRef<HTMLDivElement[]>();\n  const memoFirstUnreadIdRef = useRef<number>();\n  const memoUnreadDividerBeforeIdRef = useRef<number | undefined>();\n  const memoFocusingIdRef = useRef<number>();\n  const isScrollTopJustUpdatedRef = useRef(false);\n  const shouldAnimateAppearanceRef = useRef(Boolean(lastMessage));\n\n  const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n  const hasOpenChatButton = isSavedDialog && threadId !== ANONYMOUS_USER_ID;\n\n  const areMessagesLoaded = Boolean(messageIds);\n\n  const isPrivate = isUserId(chatId);\n  const withUsers = Boolean((!isPrivate && !isChannelChat)\n    || isChatWithSelf || isSystemBotChat || isAnonymousForwards || isChannelWithAvatars);\n\n  useSyncEffect(() => {\n    // We only need it first time when message list appears\n    if (areMessagesLoaded) {\n      onTickEnd(() => {\n        shouldAnimateAppearanceRef.current = false;\n      });\n    }\n  }, [areMessagesLoaded]);\n\n  // Updated every time (to be used from intersection callback closure)\n  useSyncEffect(() => {\n    memoFirstUnreadIdRef.current = firstUnreadId;\n  }, [firstUnreadId]);\n\n  useEffect(() => {\n    const canHaveAds = isChannelChat || isBot;\n    if (areAdsEnabled && canHaveAds && isSynced && isReady && isAppConfigLoaded) {\n      loadSponsoredMessages({ peerId: chatId });\n    }\n  }, [chatId, isSynced, isReady, isChannelChat, isBot, areAdsEnabled, isAppConfigLoaded]);\n\n  // Updated only once when messages are loaded (as we want the unread divider to keep its position)\n  useSyncEffect(() => {\n    if (areMessagesLoaded) {\n      memoUnreadDividerBeforeIdRef.current = memoFirstUnreadIdRef.current;\n    }\n  }, [areMessagesLoaded]);\n\n  useSyncEffect(() => {\n    memoFocusingIdRef.current = focusingId;\n  }, [focusingId]);\n\n  // Enable auto translation for the chat if it's available\n  useEffect(() => {\n    if (!shouldAutoTranslate || !canTranslate) return;\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  }, [shouldAutoTranslate, canTranslate, translationLanguage, chatId]);\n\n  useNativeCopySelectedMessages(copyMessagesByIds);\n\n  const messageGroups = useMemo(() => {\n    if (!messageIds?.length || !messagesById) {\n      return undefined;\n    }\n\n    const listedMessages: ApiMessage[] = [];\n    messageIds.forEach((id, index, arr) => {\n      const prevMessage = listedMessages[listedMessages.length - 1];\n\n      const message = messagesById[id];\n      if (!message) {\n        return;\n      }\n\n      const { shouldAppendJoinMessage, shouldAppendJoinMessageAfterCurrent } = (() => {\n        if (!channelJoinInfo || type !== 'thread') return undefined;\n        if (prevMessage\n          && prevMessage.date < channelJoinInfo.joinedDate && channelJoinInfo.joinedDate <= message.date) {\n          return { shouldAppendJoinMessage: true, shouldAppendJoinMessageAfterCurrent: false };\n        }\n\n        if (index === arr.length - 1 && message.date < channelJoinInfo.joinedDate) {\n          return {\n            shouldAppendJoinMessage: true,\n            shouldAppendJoinMessageAfterCurrent: true,\n          };\n        }\n\n        return undefined;\n      })() || {};\n\n      if (shouldAppendJoinMessageAfterCurrent) {\n        listedMessages.push(message);\n      }\n\n      if (shouldAppendJoinMessage) {\n        const lastMessageId = shouldAppendJoinMessageAfterCurrent ? message.id : (prevMessage?.id || (message.id - 1));\n        listedMessages.push({\n          id: generateChannelJoinMessageId(lastMessageId),\n          chatId: message.chatId,\n          date: channelJoinInfo!.joinedDate,\n          isOutgoing: false,\n          content: {\n            action: {\n              mediaType: 'action',\n              type: 'channelJoined',\n              inviterId: channelJoinInfo?.inviterId,\n              isViaRequest: channelJoinInfo?.isViaRequest || undefined,\n            },\n          },\n        } satisfies ApiMessage);\n      }\n\n      if (!shouldAppendJoinMessageAfterCurrent) {\n        listedMessages.push(message);\n      }\n    });\n\n    // Service notifications have local IDs which may be not in sync with real message history\n    const orderRule: (keyof ApiMessage)[] = type === 'scheduled' || isServiceNotificationsChat\n      ? ['date', 'id']\n      : ['id'];\n\n    return listedMessages.length\n      ? groupMessages(\n        orderBy(listedMessages, orderRule),\n        memoUnreadDividerBeforeIdRef.current,\n        !isForum ? Number(threadId) : undefined,\n        isChatWithSelf,\n        withUsers,\n      )\n      : undefined;\n  }, [withUsers,\n    messageIds, messagesById, type,\n    isServiceNotificationsChat, isForum,\n    threadId, isChatWithSelf, channelJoinInfo]);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || type === 'scheduled' || isAccountFrozen || !isActive) return;\n    if (!isChannelChat && !isGroupChat) return;\n\n    const ids = messageIds.filter((id) => {\n      const message = messagesById[id];\n      return message && message.reactions && !message.content.action;\n    });\n\n    if (!ids.length) return;\n\n    loadMessageReactions({ chatId, ids });\n  }, MESSAGE_REACTIONS_POLLING_INTERVAL);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || type === 'scheduled' || !isActive) {\n      return;\n    }\n    const storyDataList = messageIds.map((id) => messagesById[id]?.content.storyData).filter(Boolean);\n\n    if (!storyDataList.length) return;\n\n    const storiesByPeerIds = storyDataList.reduce((acc, storyData) => {\n      const { peerId, id } = storyData;\n      if (!acc[peerId]) {\n        acc[peerId] = [];\n      }\n      acc[peerId].push(id);\n      return acc;\n    }, {} as Record<string, number[]>);\n\n    Object.entries(storiesByPeerIds).forEach(([peerId, storyIds]) => {\n      loadPeerStoriesByIds({ peerId, storyIds });\n    });\n  }, MESSAGE_STORY_POLLING_INTERVAL);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || threadId !== MAIN_THREAD_ID || type === 'scheduled' || !isActive) {\n      return;\n    }\n    const global = getGlobal();\n    const ids = messageIds.filter((id) => selectThreadInfo(global, chatId, id)?.isCommentsInfo\n      || messagesById[id]?.viewsCount !== undefined);\n\n    if (!ids.length) return;\n\n    loadMessageViews({ chatId, ids });\n  }, MESSAGE_COMMENTS_POLLING_INTERVAL, true);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || threadId !== MAIN_THREAD_ID || type === 'scheduled' || !isActive) {\n      return;\n    }\n    const ids = messageIds.filter((id) => messagesById[id]?.factCheck?.shouldFetch);\n\n    if (!ids.length) return;\n\n    loadFactChecks({ chatId, ids });\n  }, MESSAGE_FACT_CHECK_UPDATE_INTERVAL);\n\n  const loadMoreAround = useMemo(() => {\n    if (type !== 'thread') {\n      return undefined;\n    }\n\n    return debounce(\n      () => loadViewportMessages({ direction: LoadMoreDirection.Around, chatId, threadId }),\n      1000,\n      true,\n      false,\n    );\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [loadViewportMessages, messageIds]);\n\n  const { isScrolled, updateStickyDates } = useStickyDates();\n\n  const handleScroll = useLastCallback(() => {\n    if (isScrollTopJustUpdatedRef.current) {\n      isScrollTopJustUpdatedRef.current = false;\n      return;\n    }\n\n    const container = containerRef.current;\n    if (!container) {\n      return;\n    }\n\n    if (!memoFocusingIdRef.current) {\n      updateStickyDates(container);\n    }\n\n    runDebouncedForScroll(() => {\n      const global = getGlobal();\n\n      const isFocusing = Boolean(selectTabState(global).focusedMessage?.chatId);\n      if (!isFocusing) {\n        onIntersectPinnedMessage?.({ shouldCancelWaiting: true });\n      }\n\n      if (!container.parentElement) {\n        return;\n      }\n\n      scrollOffsetRef.current = container.scrollHeight - container.scrollTop;\n\n      if (type === 'thread' && !isQuickPreview) {\n        setScrollOffset({ chatId, threadId, scrollOffset: scrollOffsetRef.current });\n      }\n    });\n  });\n\n  const [getContainerHeight, prevContainerHeightRef] = useContainerHeight(containerRef, canPost && !isSelectModeActive);\n\n  // Initial message loading\n  useEffect(() => {\n    if (!loadMoreAround || !isChatLoaded || isRestricted || focusingId) {\n      return;\n    }\n\n    // Loading history while sending a message can return the same message and cause ambiguity\n    const isLastMessageLocal = messageIds && isLocalMessageId(messageIds[messageIds.length - 1]);\n    if (isLastMessageLocal) {\n      return;\n    }\n\n    const container = containerRef.current!;\n\n    if (!messageIds || messageIds.length === 1 || (\n      messageIds.length < MESSAGE_LIST_SLICE / 2\n      && (container.firstElementChild as HTMLDivElement).clientHeight <= container.offsetHeight\n    )) {\n      loadMoreAround();\n    }\n  }, [isChatLoaded, messageIds, loadMoreAround, focusingId, isRestricted]);\n\n  const rememberScrollPositionRef = useStateRef(() => {\n    if (!messageIds || !listItemElementsRef.current) {\n      return;\n    }\n\n    const preservedItemElements = listItemElementsRef.current\n      .filter((element) => messageIds.includes(Number(element.dataset.messageId)));\n\n    // We avoid the very first item as it may be a partly-loaded album\n    // and also because it may be removed when messages limit is reached\n    const anchor = preservedItemElements[1] || preservedItemElements[0];\n    if (!anchor) {\n      return;\n    }\n\n    anchorIdRef.current = anchor.id;\n    anchorTopRef.current = anchor.getBoundingClientRect().top;\n  });\n\n  useSyncEffect(\n    () => forceMeasure(() => rememberScrollPositionRef.current()),\n    // This will run before modifying content and should match deps for `useLayoutEffectWithPrevDeps` below\n    [messageIds, isViewportNewest, rememberScrollPositionRef],\n  );\n  useEffect(\n    () => rememberScrollPositionRef.current(),\n    // This is only needed to react on signal updates\n    [getContainerHeight, rememberScrollPositionRef],\n  );\n\n  // Handles updated message list, takes care of scroll repositioning\n  useLayoutEffectWithPrevDeps(([prevMessageIds, prevIsViewportNewest]) => {\n    if (process.env.APP_ENV === 'perf') {\n      // eslint-disable-next-line no-console\n      console.time('scrollTop');\n    }\n\n    const containerHeight = getContainerHeight();\n    const prevContainerHeight = prevContainerHeightRef.current;\n    prevContainerHeightRef.current = containerHeight;\n\n    // Skip initial resize observer callback\n    if (\n      messageIds === prevMessageIds\n      && isViewportNewest === prevIsViewportNewest\n      && containerHeight !== prevContainerHeight\n      && prevContainerHeight === undefined\n    ) {\n      return;\n    }\n\n    const container = containerRef.current!;\n    listItemElementsRef.current = Array.from(container.querySelectorAll<HTMLDivElement>('.message-list-item'));\n    const lastItemElement = listItemElementsRef.current[listItemElementsRef.current.length - 1];\n    const firstUnreadElement = memoFirstUnreadIdRef.current\n      ? container.querySelector<HTMLDivElement>(`#${getMessageHtmlId(memoFirstUnreadIdRef.current)}`)\n      : undefined;\n\n    const hasLastMessageChanged = (\n      messageIds && prevMessageIds && messageIds[messageIds.length - 1] !== prevMessageIds[prevMessageIds.length - 1]\n    );\n    const hasViewportShifted = (\n      messageIds?.[0] !== prevMessageIds?.[0] && messageIds?.length === (MESSAGE_LIST_SLICE / 2 + 1)\n    );\n    const wasMessageAdded = hasLastMessageChanged && !hasViewportShifted;\n\n    // Add extra height when few messages to allow scroll animation\n    if (\n      isViewportNewest\n      && wasMessageAdded\n      && (messageIds && messageIds.length < MESSAGE_LIST_SLICE / 2)\n      && !container.parentElement!.classList.contains('force-messages-scroll')\n      && forceMeasure(() => (\n        (container.firstElementChild as HTMLDivElement).clientHeight <= container.offsetHeight * 2\n      ))\n    ) {\n      addExtraClass(container.parentElement!, 'force-messages-scroll');\n      container.parentElement!.classList.add('force-messages-scroll');\n\n      setTimeout(() => {\n        if (container.parentElement) {\n          removeExtraClass(container.parentElement, 'force-messages-scroll');\n        }\n      }, MESSAGE_ANIMATION_DURATION);\n    }\n\n    requestForcedReflow(() => {\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const scrollOffset = scrollOffsetRef.current;\n\n      let bottomOffset = scrollOffset - (prevContainerHeight || offsetHeight);\n      if (wasMessageAdded) {\n        // If two new messages come at once (e.g. when bot responds) then the first message will update `scrollOffset`\n        // right away (before animation) which creates inconsistency until the animation completes. To work around that,\n        // we calculate `isAtBottom` with a \"buffer\" of the latest message height (this is approximate).\n        const lastItemHeight = lastItemElement ? lastItemElement.offsetHeight : 0;\n        bottomOffset -= lastItemHeight;\n      }\n      const isAtBottom = isViewportNewest && prevIsViewportNewest && bottomOffset <= BOTTOM_THRESHOLD;\n      const isAlreadyFocusing = messageIds && memoFocusingIdRef.current === messageIds[messageIds.length - 1];\n\n      // Animate incoming message, but if app is in background mode, scroll to the first unread\n      if (wasMessageAdded && isAtBottom && !isAlreadyFocusing) {\n        // Break out of `forceLayout`\n        requestMeasure(() => {\n          const shouldScrollToBottom = !isBackgroundModeActive() || !firstUnreadElement;\n          animateScroll({\n            container,\n            element: shouldScrollToBottom ? lastItemElement : firstUnreadElement,\n            position: shouldScrollToBottom ? 'end' : 'start',\n            margin: BOTTOM_FOCUS_MARGIN,\n            forceDuration: noMessageSendingAnimation ? 0 : undefined,\n          });\n        });\n      }\n\n      const isResized = prevContainerHeight !== undefined && prevContainerHeight !== containerHeight;\n      if (isResized && isAnimatingScroll()) {\n        return undefined;\n      }\n\n      const anchor = anchorIdRef.current && container.querySelector(`#${anchorIdRef.current}`);\n      const unreadDivider = (\n        !anchor\n        && memoUnreadDividerBeforeIdRef.current\n        && container.querySelector<HTMLDivElement>(`.${UNREAD_DIVIDER_CLASS}`)\n      );\n\n      let newScrollTop!: number;\n      if (isAtBottom && isResized) {\n        newScrollTop = scrollHeight - offsetHeight;\n      } else if (anchor) {\n        const newAnchorTop = anchor.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - (anchorTopRef.current || 0));\n      } else if (unreadDivider) {\n        newScrollTop = Math.min(\n          getOffsetToContainer(unreadDivider, container).top - UNREAD_DIVIDER_TOP,\n          scrollHeight - scrollOffset,\n        );\n      } else {\n        newScrollTop = scrollHeight - scrollOffset;\n      }\n\n      return () => {\n        resetScroll(container, Math.ceil(newScrollTop));\n        restartCurrentScrollAnimation();\n\n        scrollOffsetRef.current = Math.max(Math.ceil(scrollHeight - newScrollTop), offsetHeight);\n\n        if (!memoFocusingIdRef.current) {\n          isScrollTopJustUpdatedRef.current = true;\n\n          requestMeasure(() => {\n            isScrollTopJustUpdatedRef.current = false;\n          });\n        }\n\n        if (process.env.APP_ENV === 'perf') {\n          // eslint-disable-next-line no-console\n          console.timeEnd('scrollTop');\n        }\n      };\n    });\n    // This should match deps for `useSyncEffect` above\n  }, [messageIds, isViewportNewest, getContainerHeight, prevContainerHeightRef, noMessageSendingAnimation]);\n\n  useEffectWithPrevDeps(([prevIsSelectModeActive]) => {\n    if (prevIsSelectModeActive !== undefined) {\n      beginHeavyAnimation(SELECT_MODE_ANIMATION_DURATION + ANIMATION_END_DELAY);\n    }\n  }, [isSelectModeActive]);\n\n  const noAvatars = Boolean(!withUsers || (isChannelChat && !isChannelWithAvatars));\n  const shouldRenderGreeting = isUserId(chatId) && !isChatWithSelf && !isBot && !isAnonymousForwards\n    && type === 'thread'\n    && (\n      (\n        !messageGroups && !lastMessage && messageIds\n        // Used to avoid flickering when deleting a greeting that has just been sent\n        && (!listItemElementsRef.current || listItemElementsRef.current.length === 0)\n      )\n      || (messageIds?.length === 1 && messagesById?.[messageIds[0]]?.content.action?.type === 'contactSignUp')\n      || (lastMessage?.content?.action?.type === 'contactSignUp')\n    );\n\n  const isGroupChatJustCreated = isGroupChat && isCreator\n    && messageIds?.length === 1 && messagesById?.[messageIds[0]]?.content.action?.type === 'chatCreate';\n  const isEmptyTopic = messageIds?.length === 1\n    && messagesById?.[messageIds[0]]?.content.action?.type === 'topicCreate';\n\n  const className = buildClassName(\n    'MessageList custom-scroll',\n    noAvatars && 'no-avatars',\n    !canPost && 'no-composer',\n    type === 'pinned' && 'type-pinned',\n    withBottomShift && 'with-bottom-shift',\n    withDefaultBg && 'with-default-bg',\n    isSelectModeActive && 'select-mode-active',\n    isScrolled && 'scrolled',\n    !isReady && 'is-animating',\n    hasOpenChatButton && 'saved-dialog',\n    isChatProtected && 'hide-on-print',\n  );\n\n  const hasMessages = Boolean((messageIds && messageGroups) || lastMessage);\n\n  useEffect(() => {\n    if (hasMessages) return;\n\n    onScrollDownToggle?.(false);\n  }, [hasMessages, onScrollDownToggle]);\n\n  const activeKey = isRestricted ? (\n    Content.Restricted\n  ) : paidMessagesStars && !hasMessages && !hasCustomGreeting ? (\n    Content.StarsRequired\n  ) : isContactRequirePremium && !hasMessages ? (\n    Content.PremiumRequired\n  ) : (isBot || isNonContact) && !hasMessages ? (\n    Content.AccountInfo\n  ) : shouldRenderGreeting ? (\n    Content.ContactGreeting\n  ) : messageIds && (!messageGroups || isGroupChatJustCreated || isEmptyTopic) ? (\n    Content.NoMessages\n  ) : hasMessages ? (\n    Content.MessageList\n  ) : (\n    Content.Loading\n  );\n\n  function renderContent() {\n    return activeKey === Content.Restricted ? (\n      <div className=\"empty\">\n        <span>\n          {restrictionReasons?.[0]?.text || `This is a private ${isChannelChat ? 'channel' : 'chat'}`}\n        </span>\n      </div>\n    ) : activeKey === Content.StarsRequired ? (\n      <RequirementToContactMessage paidMessagesStars={paidMessagesStars} peerId={monoforumChannelId || chatId} />\n    ) : activeKey === Content.PremiumRequired ? (\n      <RequirementToContactMessage peerId={chatId} />\n    ) : activeKey === Content.AccountInfo ? (\n      <MessageListAccountInfo chatId={chatId} hasMessages={hasMessages} />\n    ) : activeKey === Content.ContactGreeting ? (\n      <ContactGreeting key={chatId} userId={chatId} />\n    ) : activeKey === Content.NoMessages ? (\n      <NoMessages\n        chatId={chatId}\n        topic={topic}\n        type={type}\n        isChatWithSelf={isChatWithSelf}\n        isGroupChatJustCreated={isGroupChatJustCreated}\n      />\n    ) : activeKey === Content.MessageList ? (\n      <MessageListContent\n        canShowAds={areAdsEnabled && isChannelChat}\n        chatId={chatId}\n        isComments={isComments}\n        isChannelChat={isChannelChat}\n        isChatMonoforum={isChatMonoforum}\n        isSavedDialog={isSavedDialog}\n        messageIds={messageIds || [lastMessage!.id]}\n        messageGroups={messageGroups || groupMessages([lastMessage!])}\n        getContainerHeight={getContainerHeight}\n        isViewportNewest={Boolean(isViewportNewest)}\n        isUnread={Boolean(firstUnreadId)}\n        isEmptyThread={isEmptyThread}\n        withUsers={withUsers}\n        noAvatars={noAvatars}\n        containerRef={containerRef}\n        anchorIdRef={anchorIdRef}\n        memoUnreadDividerBeforeIdRef={memoUnreadDividerBeforeIdRef}\n        memoFirstUnreadIdRef={memoFirstUnreadIdRef}\n        threadId={threadId}\n        type={type}\n        isReady={isReady}\n        hasLinkedChat={hasLinkedChat}\n        isSchedule={messageGroups ? type === 'scheduled' : false}\n        shouldRenderAccountInfo={isBot || isNonContact}\n        nameChangeDate={nameChangeDate}\n        photoChangeDate={photoChangeDate}\n        noAppearanceAnimation={!messageGroups || !shouldAnimateAppearanceRef.current}\n        isQuickPreview={isQuickPreview}\n        onScrollDownToggle={onScrollDownToggle}\n        onNotchToggle={onNotchToggle}\n        onIntersectPinnedMessage={onIntersectPinnedMessage}\n        canPost={canPost}\n      />\n    ) : (\n      <Loading color=\"white\" backgroundColor=\"dark\" />\n    );\n  }\n\n  return (\n    <Transition\n      ref={containerRef}\n      className={className}\n      name=\"fade\"\n      activeKey={activeKey}\n      shouldCleanup\n      onScroll={handleScroll}\n      onMouseDown={preventMessageInputBlur}\n    >\n      {renderContent()}\n    </Transition>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId, type }): Complete<StateProps> => {\n    const currentUserId = global.currentUserId!;\n    const chat = selectChat(global, chatId);\n    const userFullInfo = selectUserFullInfo(global, chatId);\n    if (!chat) {\n      return { currentUserId } as Complete<StateProps>;\n    }\n\n    const messageIds = selectCurrentMessageIds(global, chatId, threadId, type);\n    const messagesById = type === 'scheduled'\n      ? selectChatScheduledMessages(global, chatId)\n      : selectChatMessages(global, chatId);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    if (\n      threadId !== MAIN_THREAD_ID && !isSavedDialog && !chat?.isForum\n      && !(messagesById && threadId && messagesById[Number(threadId)])\n    ) {\n      return { currentUserId } as Complete<StateProps>;\n    }\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    const restrictionReasons = selectActiveRestrictionReasons(global, chat?.restrictionReasons);\n    const lastMessage = selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const focusingId = selectFocusedMessageId(global, chatId);\n\n    const withLastMessageWhenPreloading = (\n      threadId === MAIN_THREAD_ID\n      && !messageIds && !chat.unreadCount && !focusingId && lastMessage && !lastMessage.groupedId\n    );\n\n    const chatBot = selectBot(global, chatId);\n    const isNonContact = Boolean(userFullInfo?.settings?.canAddContact);\n    const nameChangeDate = userFullInfo?.settings?.nameChangeDate;\n    const photoChangeDate = userFullInfo?.settings?.photoChangeDate;\n\n    const topic = selectTopic(global, chatId, threadId);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isEmptyThread = !selectThreadInfo(global, chatId, threadId)?.messagesCount;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    const areAdsEnabled = !isCurrentUserPremium || selectUserFullInfo(global, currentUserId)?.areAdsEnabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const hasCustomGreeting = Boolean(userFullInfo?.businessIntro);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n\n    const monoforumChannelId = selectMonoforumChannel(global, chatId)?.id;\n    const canTranslate = selectCanTranslateChat(global, chatId) && !chatFullInfo?.isTranslationDisabled;\n    const shouldAutoTranslate = chat?.hasAutoTranslation;\n    const translationLanguage = selectTranslationLanguage(global);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isActive = currentMessageList && currentMessageList.chatId === chatId\n      && currentMessageList.threadId === threadId && currentMessageList.type === type;\n\n    return {\n      isActive,\n      areAdsEnabled,\n      isChatLoaded: true,\n      isRestricted,\n      restrictionReasons,\n      isChannelChat: isChatChannel(chat),\n      isChatMonoforum: isChatMonoforum(chat),\n      isGroupChat: isChatGroup(chat),\n      isChannelWithAvatars: chat.areProfilesShown,\n      isCreator: chat.isCreator,\n      isChatWithSelf: selectIsChatWithSelf(global, chatId),\n      isSystemBotChat: isSystemBot(chatId),\n      isAnonymousForwards: isAnonymousForwardsChat(chatId),\n      isBot: Boolean(chatBot),\n      isNonContact,\n      nameChangeDate,\n      photoChangeDate,\n      isSynced: global.isSynced,\n      messageIds,\n      messagesById,\n      firstUnreadId: selectFirstUnreadId(global, chatId, threadId),\n      isViewportNewest: type !== 'thread' || selectIsViewportNewest(global, chatId, threadId),\n      focusingId,\n      isSelectModeActive: selectIsInSelectMode(global),\n      hasLinkedChat: chatFullInfo ? Boolean(chatFullInfo.linkedChatId) : undefined,\n      channelJoinInfo: chatFullInfo?.joinInfo,\n      topic,\n      noMessageSendingAnimation: !selectPerformanceSettingsValue(global, 'messageSendingAnimations'),\n      isServiceNotificationsChat: chatId === SERVICE_NOTIFICATIONS_USER_ID,\n      isForum: chat.isForum,\n      isEmptyThread,\n      currentUserId,\n      isChatProtected: selectIsChatProtected(global, chatId),\n      lastMessage: withLastMessageWhenPreloading ? lastMessage : undefined,\n      isAccountFrozen,\n      hasCustomGreeting,\n      isAppConfigLoaded,\n      monoforumChannelId,\n      canTranslate,\n      translationLanguage,\n      shouldAutoTranslate,\n    };\n  },\n)(MessageList));\n\nfunction generateChannelJoinMessageId(lastMessageId: number) {\n  return lastMessageId + 10e-7; // Smaller than smallest possible id with `getNextLocalMessageId`\n}\n","import { useMemo } from '../lib/teact/teact';\n\nimport getMessageIdsForSelectedText from '../util/getMessageIdsForSelectedText';\nimport { useHotkeys } from './useHotkeys';\nimport useLastCallback from './useLastCallback';\n\nconst useNativeCopySelectedMessages = (copyMessagesByIds: ({ messageIds }: { messageIds?: number[] }) => void) => {\n  const handleCopy = useLastCallback((e: KeyboardEvent) => {\n    const messageIds = getMessageIdsForSelectedText();\n\n    if (messageIds && messageIds.length > 1) {\n      e.preventDefault();\n      copyMessagesByIds({ messageIds });\n    }\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+C': handleCopy,\n  }), []));\n};\n\nexport default useNativeCopySelectedMessages;\n","import { requestMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nconst DEBOUNCE = 1000;\nconst STICKY_TOP = 10;\n\nexport default function useStickyDates() {\n  // For some reason we can not synchronously hide a sticky element (from `useLayoutEffect`) when chat opens\n  // so we will add `position: sticky` only after first scroll. There would be no animation on the first show though.\n  const [isScrolled, markIsScrolled] = useFlag(false);\n\n  const runDebounced = useRunDebounced(DEBOUNCE, true);\n\n  const updateStickyDates = useLastCallback((container: HTMLDivElement) => {\n    markIsScrolled();\n\n    if (!document.body.classList.contains('is-scrolling-messages')) {\n      requestMutation(() => {\n        document.body.classList.add('is-scrolling-messages');\n      });\n    }\n\n    runDebounced(() => {\n      const stuckDateEl = findStuckDate(container);\n\n      requestMutation(() => {\n        const currentStuck = document.querySelector('.stuck');\n        if (currentStuck) {\n          currentStuck.classList.remove('stuck');\n        }\n\n        if (stuckDateEl) {\n          stuckDateEl.classList.add('stuck');\n        }\n\n        document.body.classList.remove('is-scrolling-messages');\n      });\n    });\n  });\n\n  return {\n    isScrolled,\n    updateStickyDates,\n  };\n}\n\nfunction findStuckDate(container: HTMLElement) {\n  const allElements = container.querySelectorAll<HTMLDivElement>('.sticky-date');\n  const containerTop = container.scrollTop;\n\n  const computedStyle = getComputedStyle(container);\n  const headerActionsHeight = parseInt(computedStyle.getPropertyValue('--middle-header-panes-height'), 10);\n\n  return Array.from(allElements).find((el) => {\n    const { offsetTop, offsetHeight } = el;\n    const top = offsetTop - containerTop;\n    return -offsetHeight <= top && top <= headerActionsHeight + STICKY_TOP;\n  });\n}\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { useEffect, useRef, useSignal } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nexport default function useContainerHeight(containerRef: ElementRef<HTMLDivElement>, isComposerVisible: boolean) {\n  const [getContainerHeight, setContainerHeight] = useSignal<number | undefined>();\n\n  // Container resize observer (caused by Composer reply/webpage panels)\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setContainerHeight(entry.contentRect.height);\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const currentNormalHeight = Number(containerRef.current!.dataset.normalHeight) || 0;\n    const containerHeight = getContainerHeight();\n\n    if (containerHeight && containerHeight > currentNormalHeight && isComposerVisible) {\n      containerRef.current!.dataset.normalHeight = String(containerHeight);\n    }\n  }, [isComposerVisible, containerRef, getContainerHeight]);\n\n  const prevContainerHeight = useRef<number>();\n\n  return [getContainerHeight, prevContainerHeight] as const;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): Complete<StateProps> => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"cgAMX02q\",\"tag\":\"oIgI9O0L\",\"tagColorMore\":\"hZDqIz3W\"};","import { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getApiPeerColorClass } from '../../common/helpers/peerColor';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport styles from './ChatTags.module.scss';\n\nconst MAX_VISIBLE_TAGS = 3;\n\ntype OwnProps = {\n  orderedFolderIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n};\n\nconst ChatTags = ({\n  orderedFolderIds,\n  chatFoldersById,\n}: OwnProps) => {\n  if (!orderedFolderIds) {\n    return undefined;\n  }\n\n  const visibleFolderIds = orderedFolderIds.slice(0, MAX_VISIBLE_TAGS);\n  const remainingCount = orderedFolderIds.length - visibleFolderIds.length;\n\n  return (\n    <div className={styles.wrapper}>\n      {visibleFolderIds.map((folderId) => {\n        const folder = chatFoldersById?.[folderId];\n        return folder && (\n          <div\n            key={folder.id}\n            className={buildClassName(\n              'ChatTags',\n              styles.tag,\n              getApiPeerColorClass({ color: folder.color }),\n            )}\n          >\n            {renderTextWithEntities({\n              text: folder.title.text,\n              entities: folder.title.entities,\n              noCustomEmojiPlayback: folder.noTitleAnimations,\n              emojiSize: 12,\n            })}\n          </div>\n        );\n      })}\n      {remainingCount > 0 && (\n        <div className={`ChatTags ${styles.tag} ${styles.tagColorMore}`}>\n          +\n          {remainingCount}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ChatTags);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiChatFolder,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ALL_FOLDER_ID, UNMUTE_TIMESTAMP } from '../../../config';\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getChatFolderIds } from '../../../util/folderManager';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatTags from './ChatTags';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n  withTags?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n  chatFolderIds?: number[];\n  orderedFolderIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n  areTagsEnabled?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n  chatFolderIds,\n  orderedFolderIds,\n  chatFoldersById,\n  areTagsEnabled,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n    updateChatMutedState,\n    openQuickPreview,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const tagFolderIds = useMemo(() => {\n    const chatFolderIdsSet = new Set(chatFolderIds);\n\n    return orderedFolderIds?.filter((id) => {\n      if (!chatFolderIdsSet.has(id)) return undefined;\n\n      const isActive = id === folderId;\n      const isAll = id === ALL_FOLDER_ID;\n\n      const folder = chatFoldersById?.[id];\n      const hasColor = folder?.color !== undefined && folder.color !== -1;\n\n      return !isActive && !isAll && hasColor;\n    });\n  }, [orderedFolderIds, folderId, chatFoldersById, chatFolderIds]);\n\n  const shouldRenderTags = areTagsEnabled && withTags && Boolean(tagFolderIds?.length);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n    noForumTitle: shouldRenderTags,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    if (e.altKey && !isSavedDialog && !isForum && !isPreview) {\n      e.preventDefault();\n      openQuickPreview({ id: chatId });\n      return;\n    }\n\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    updateChatMutedState({ chatId, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleUnmute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    areTagsEnabled && withTags && 'chat-item-with-tags',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n          withStory={!user?.isSelf && !isMonoforum}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className={buildClassName('info', areTagsEnabled && withTags && 'has-tags')}>\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n            withStatusTextColor={isSelected}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n        {shouldRenderTags && (\n          <ChatTags\n            orderedFolderIds={tagFolderIds}\n            chatFoldersById={chatFoldersById}\n          />\n        )}\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      } as Complete<StateProps>;\n    }\n\n    const chatFolderIds = getChatFolderIds(chatId);\n    const { areTagsEnabled } = global.chatFolders;\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastMessageOutgoingStatus: isOutgoing && lastMessage ? selectOutgoingStatus(global, lastMessage) : undefined,\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n      monoforumChannel,\n      chatFolderIds,\n      orderedFolderIds: global.chatFolders.orderedIds,\n      chatFoldersById: global.chatFolders.byId,\n      areTagsEnabled: areTagsEnabled && isPremium,\n    };\n  },\n)(Chat));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const {\n    showNotification,\n    updateShouldSaveAttachmentsCompression,\n    applyDefaultAttachmentsCompression } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        updateShouldSaveAttachmentsCompression({ shouldSave: true });\n        applyDefaultAttachmentsCompression();\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n        shouldKeepSuggestedPost: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n    const shouldUpdateSuggestedPost = draft?.suggestedPostInfo && !prevDraft?.suggestedPostInfo;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched && !shouldUpdateSuggestedPost) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n    if (shouldUpdateSuggestedPost) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm || switchWebview) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect, useRef } from '@teact';\nimport { getActions } from '../../../../global';\n\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport {\n  type ApiFormattedText,\n  type ApiMessageEntityTextUrl,\n  ApiMessageEntityTypes,\n} from '../../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../../config';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nexport default function useLoadLinkPreview({\n  getHtml,\n  chatId,\n  threadId,\n}: {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n}) {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canAttachToDoLists: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onTodoListCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canAttachToDoLists,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  onTodoListCreate,\n}: OwnProps) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n        {canAttachToDoLists && !editingMessage && (\n          <MenuItem icon=\"select\" onClick={onTodoListCreate}>{lang('TitleToDoList')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  threadId?: ThreadId;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, threadId, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n\n                onClick={() => clickBotInlineButton({\n                  chatId: message.chatId, messageId: message.id, threadId, button,\n                })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): Complete<StateProps> => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n\n    const message = chatId ? selectChatMessage(global, chatId, messageId) : undefined;\n    return {\n      message,\n    };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiInputSuggestedPostInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { selectIsMediaNsfw } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n  isMediaNsfw?: boolean;\n};\n\ntype OwnProps = {\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  onClear?: () => void;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  suggestedPostInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n  isMediaNsfw,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    resetDraftSuggestedPostInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n    openSuggestMessageModal,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n  const isShowingSuggestedPost = Boolean(suggestedPostInfo) && !shouldForceShowEditing;\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    if (isShowingSuggestedPost) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (isShowingSuggestedPost) {\n      resetDraftSuggestedPostInfo();\n      resetDraftReplyInfo();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    if (suggestedPostInfo) {\n      openSuggestMessageModal({ chatId });\n      return;\n    }\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isShowingSuggestedPost) {\n      return 'cash-circle';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply, isShowingSuggestedPost]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          suggestedPostInfo={suggestedPostInfo}\n          isMediaNsfw={isMediaNsfw}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          noCaptions={noCaptions}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): Complete<StateProps> => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const suggestedPostInfo = draft?.suggestedPostInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    const isMediaNsfw = message && selectIsMediaNsfw(global, message);\n\n    return {\n      replyInfo,\n      suggestedPostInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n      isMediaNsfw,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ToDoListModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ToDoListModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ToDoListModal = useModuleLoader(Bundles.Extra, 'ToDoListModal', !modal);\n\n  return ToDoListModal ? <ToDoListModal {...props} /> : undefined;\n};\n\nexport default ToDoListModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O3di3ULC\",\"no-page-transitions\":\"UDdgVrUQ\",\"noPageTransitions\":\"UDdgVrUQ\",\"select-mode-active\":\"Y5TInySi\",\"selectModeActive\":\"Y5TInySi\",\"middle-column-footer\":\"XlGyc4tC\",\"middleColumnFooter\":\"XlGyc4tC\",\"no-message-composer-animations\":\"eDMArdYq\",\"noMessageComposerAnimations\":\"eDMArdYq\",\"ComposerEmbeddedMessage\":\"z4RvByc2\",\"composerEmbeddedMessage\":\"z4RvByc2\",\"inner\":\"m3DBx9f5\",\"contextMenu\":\"zqTOc7LU\",\"clear\":\"yhxytYkd\",\"left-icon\":\"vFWsMwfP\",\"leftIcon\":\"vFWsMwfP\",\"preview\":\"otSxF62k\",\"previewText\":\"itmZe2qi\",\"previewImageContainer\":\"VvwZOug9\",\"previewImage\":\"b0A9Zfoa\",\"siteName\":\"ER149gdz\",\"siteDescription\":\"FSYSqC60\",\"interactive\":\"G5_7x_Hn\"};","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiWebPage,\n  ApiWebPageFull,\n  ApiWebPagePending,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId, WebPageMediaSize } from '../../../types';\n\nimport {\n  getMediaHash,\n  getWebPageAudio,\n  getWebPageDocument,\n  getWebPagePhoto,\n  getWebPageVideo,\n} from '../../../global/helpers';\nimport { selectNoWebPage, selectTabState, selectWebPage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './WebPagePreview.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPageFull | ApiWebPagePending;\n  noWebPage?: boolean;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst WebPagePreview = ({\n  chatId,\n  threadId,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  attachmentSettings,\n  isEditing,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useLang();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && !noWebPage && !isDisabled);\n  }, [isDisabled, noWebPage, webPagePreview]);\n  const { shouldRender } = useShowTransition({ isOpen: isShown, ref, withShouldRender: true });\n\n  const hasMediaSizeOptions = webPagePreview?.webpageType === 'full' && webPagePreview.hasLargeMedia;\n\n  const prevWebPageRef = useRef<ApiWebPage | undefined>(webPagePreview);\n\n  if (webPagePreview && webPagePreview !== prevWebPageRef.current) {\n    prevWebPageRef.current = webPagePreview;\n  }\n\n  const renderingWebPage = webPagePreview || prevWebPageRef.current;\n\n  const isFullWebPage = renderingWebPage?.webpageType === 'full';\n\n  const thumbnailUrl = useThumbnail(isFullWebPage ? { content: renderingWebPage } : undefined);\n  const previewMedia = getWebPagePhoto(renderingWebPage) || getWebPageVideo(renderingWebPage)\n    || getWebPageAudio(renderingWebPage) || getWebPageDocument(renderingWebPage);\n  const previewMediaHash = previewMedia && getMediaHash(previewMedia, 'pictogram');\n  const previewMediaUrl = useMedia(previewMediaHash);\n\n  const { shouldRender: shouldRenderPreviewMedia, ref: previewMediaRef } = useShowTransition<HTMLImageElement>({\n    isOpen: Boolean(previewMediaUrl),\n    withShouldRender: true,\n    noCloseTransition: true,\n  });\n\n  const hasPreviewMedia = Boolean(previewMediaUrl || shouldRenderPreviewMedia);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide, handleBeforeContextMenu,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('ContextMoveTextUp')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang('ContextMoveTextDown')}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ContextLinkLargerMedia')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang('ContextLinkSmallerMedia')}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ContextLinkRemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isEditing && styles.interactive,\n      )}\n      ref={ref}\n    >\n      <div className={styles.inner}>\n        <div className={styles.leftIcon} onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        {renderingWebPage && renderingWebPage.webpageType !== 'empty' && (\n          <PeerColorWrapper\n            noUserColors\n            className={styles.preview}\n            onContextMenu={handleContextMenu}\n            onMouseDown={handleBeforeContextMenu}\n            onClick={handlePreviewClick}\n          >\n            {hasPreviewMedia && (\n              <div className={styles.previewImageContainer}>\n                {thumbnailUrl && (\n                  <img src={thumbnailUrl} alt=\"\" className={styles.previewImage} />\n                )}\n                {shouldRenderPreviewMedia && (\n                  <img ref={previewMediaRef} src={previewMediaUrl} alt=\"\" className={styles.previewImage} />\n                )}\n              </div>\n            )}\n            <div className={styles.previewText}>\n              <span className={styles.siteName}>\n                {isFullWebPage\n                  ? (renderingWebPage.siteName || renderingWebPage.url)\n                  : lang('Loading')}\n              </span>\n              <span className={styles.siteDescription}>\n                {isFullWebPage\n                  ? (renderingWebPage.description || lang(getMediaTypeKey(renderingWebPage)))\n                  : renderingWebPage.url}\n              </span>\n            </div>\n          </PeerColorWrapper>\n        )}\n        <Button\n          className={styles.clear}\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('AccLinkRemovePreview')}\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nfunction getMediaTypeKey(webPage: ApiWebPageFull) {\n  if (webPage.photo) return 'AttachPhoto';\n  if (webPage.video) return 'AttachVideo';\n  if (webPage.audio) return 'AttachMusic';\n  if (webPage.document) return 'AttachDocument';\n  if (webPage.story) return 'AttachStory';\n  return 'LinkPreview';\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const tabState = selectTabState(global);\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      webPagePreview: webPagePreview?.webpageType === 'empty' ? undefined : webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo, useRef, useSignal, useState } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewMediaTodo,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type { GlobalState, TabState } from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  STARS_CURRENCY_CODE,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n  selectWebPage,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport { DEFAULT_MAX_MESSAGE_LENGTH } from '../../limits';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useLoadLinkPreview from '../middle/composer/hooks/useLoadLinkPreview';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport ToDoListModal from '../middle/composer/ToDoListModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    isReplying?: boolean;\n    hasSuggestedPost?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    todoListModal: TabState['todoListModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  isReplying,\n  hasSuggestedPost,\n  forwardedMessagesCount,\n  pollModal,\n  todoListModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    openTodoListModal,\n    closeTodoListModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n    updateDraftSuggestedPostInfo,\n    updateShouldSaveAttachmentsCompression,\n    applyDefaultAttachmentsCompression,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  useEffect(() => {\n    if (!attachments.length || !attachments) {\n      updateShouldSaveAttachmentsCompression({ shouldSave: false });\n    }\n  }, [attachments]);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks, canAttachToDoLists,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(\n      chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList,\n    ),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((\n    newHtml: string, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount && !shouldPrepend) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    if (shouldPrepend) {\n      const newFirstWord = newHtml.split(' ')[0];\n      const shouldReplace = getHtml().startsWith(newFirstWord);\n\n      setHtml(shouldReplace ? newHtml : `${newHtml}${getHtml()}`);\n    } else {\n      setHtml(`${getHtml()}${newHtml}`);\n    }\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId, shouldPrepend);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || (!hasSuggestedPost && isMonoforum),\n  });\n\n  useLoadLinkPreview({\n    chatId,\n    threadId,\n    getHtml,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n  const shouldShowSuggestedPostButton = isMonoforum && !editingMessage\n    && !isForwarding && !isReplying && !draft?.suggestedPostInfo;\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, threadId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleTodoListCreate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForCreateToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n\n    openTodoListModal({ chatId });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft, undefined, true);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      updateShouldSaveAttachmentsCompression({ shouldSave: true });\n      applyDefaultAttachmentsCompression();\n    } else {\n      updateShouldSaveAttachmentsCompression({ shouldSave: false });\n    }\n  }, [requestedDraftFiles, updateShouldSaveAttachmentsCompression, applyDefaultAttachmentsCompression]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n\n    clearDraft({ chatId, threadId, isLocalOnly: true });\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        },\n      );\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, threadId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, threadId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const handleToDoListSend = useLastCallback((todo: ApiNewMediaTodo) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { todo },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, todo, isSilent: isSilentPosting },\n      );\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n  const handleSuggestPostClick = useLastCallback(() => {\n    updateDraftSuggestedPostInfo({\n      price: { currency: STARS_CURRENCY_CODE, amount: 0, nanos: 0 },\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (isReplying && hasSuggestedPost) {\n        return lang('ComposerPlaceholderCaption');\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, isReplying, threadId, windowWidth, paidMessagesStars,\n    hasSuggestedPost,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = selectCustomEmoji(getGlobal(), reaction.documentId);\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({});\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n  const prevShouldRenderPaidBadge = usePrevious(shouldRenderPaidBadge);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <ToDoListModal\n        modal={todoListModal}\n        onClear={closeTodoListModal}\n        onSend={handleToDoListSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#000\"\n                filter=\"url(#composerAppendix)\"\n              />\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#FFF\"\n                className=\"corner\"\n              />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              isDisabled={!canAttachEmbedLinks || hasAttachments || !hasText}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"scheduled\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {shouldShowSuggestedPostButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleSuggestPostClick}\n                      >\n                        <Icon name=\"cash-circle\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canAttachToDoLists={canAttachToDoLists}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              onTodoListCreate={handleTodoListCreate}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              threadId={threadId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName(\n            'paidStarsBadge',\n            shouldRenderPaidBadge && 'visible',\n            prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hiding',\n            !prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hidden',\n          )}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): Complete<StateProps> => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const isReplying = Boolean(draft?.replyInfo);\n    const hasSuggestedPost = Boolean(draft?.suggestedPostInfo);\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      isReplying,\n      hasSuggestedPost,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      todoListModal: tabState.todoListModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectIsChatRestricted, selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        const isRestricted = selectIsChatRestricted(global, chat.id);\n        return isChatChannel(chat) && !isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const { cancelMediaDownload, updateContentSettings, openAgeVerificationModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const shouldShowSpoiler = isPaidPreview || video.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const { ref: previewRef } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean((hasThumb || previewBlobUrl) && !shouldHidePreview),\n  });\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        isNsfw={isMediaNsfw}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Video));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setColor'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'setColor':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          color: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks = new Set<NoneToVoidFunction>();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: String(zIndex),\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: String(zIndex),\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: String(zIndex),\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: String(zIndex),\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidthWithText(isMobile: boolean) {\n  return (isMobile ? 14 : 20) * REM;\n}\n\nexport function getMinMediaWidth(text: string = '', isMobile: boolean, hasCommentButton?: boolean) {\n  return text.length > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? getMinMediaWidthWithText(isMobile)\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText, isMobile);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { MediaContainer, SizeTarget } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { getMessageMediaHash } from '../../global/helpers/messageMedia';\nimport useSelector from '../data/useSelector';\n\nfunction selectWebPagesById(global: GlobalState) {\n  return global.messages.webPageById;\n}\n\nexport default function useMessageMediaHash(message: MediaContainer | undefined, target: SizeTarget) {\n  const webPagesById = useSelector(selectWebPagesById);\n  if (!message) return undefined;\n\n  const webPageId = message.content.webPage?.id;\n  const webPage = webPageId ? webPagesById[webPageId] : undefined;\n\n  return getMessageMediaHash(message, { webPage }, target);\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage,\n  getMessageTextWithFallback,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype StateProps = {\n  webPage?: ApiWebPage;\n};\n\nconst WebLink = ({\n  message, webPage, senderTitle, isProtected, observeIntersection, onMessageClick,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = webPage;\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageTextWithFallback(lang, message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (linkData?.webpageType !== 'full') {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(oldLang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n\n    return {\n      webPage,\n    };\n  },\n)(WebLink));\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"LzylDSXD\",\"customBgImage\":\"iBGWkDsW\",\"customBgColor\":\"HnpqkkHj\",\"withTransition\":\"V96TOnoY\",\"blurred\":\"K_W7XNrk\",\"withRightColumn\":\"EiMC9Ymb\"};","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): Complete<StateProps> => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import buildStyle from '../../util/buildStyle';\nimport useLastCallback from '../useLastCallback';\nimport useUniqueId from '../useUniqueId';\n\nconst VTN_PROPERTY_NAME = '--_vtn';\n\nCSS.registerProperty?.({\n  name: VTN_PROPERTY_NAME,\n  syntax: '*',\n  inherits: false,\n});\n\nexport function useVtn(uniqueId?: string) {\n  const fallbackId = useUniqueId();\n\n  // Pass `true` to use the same class name as the name parameter\n  const createVtnStyle = useLastCallback((name: string, vtClass?: string | boolean) => {\n    const vtClassString = vtClass === true ? name : (vtClass || undefined);\n    return buildStyle(\n      `${VTN_PROPERTY_NAME}: vtn-${name}-${uniqueId || fallbackId}`,\n      vtClassString && `view-transition-class: ${vtClassString}`,\n    );\n  });\n\n  return {\n    createVtnStyle,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">{lang('FileDropZoneTitle')}</div>\n        {!isGeneric && (\n          <div className=\"description\">\n            {isQuick ? lang('FileDropZoneQuick') : lang('FileDropZoneNoCompression')}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  editingMessage?: ApiMessage | undefined;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea = ({\n  isOpen, withQuick, editingMessage, onHide, onFileSelect,\n}: OwnProps) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { LOCAL_TGS_PREVIEW_URLS, LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n  withSticker?: boolean;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description, withSticker }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName(\n      'NothingFound',\n      transitionClassNames,\n      description && 'with-description',\n      withSticker && 'with-sticker')}\n    >\n      {withSticker && (\n        <AnimatedIconWithPreview\n          className=\"sticker\"\n          size={120}\n          tgsUrl={LOCAL_TGS_URLS.DuckNothingFound}\n          previewUrl={LOCAL_TGS_PREVIEW_URLS.DuckNothingFound}\n          nonInteractive\n          noLoop={false}\n        />\n      )}\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const value = useMemo(() => {\n    if (age) {\n      return lang(\n        `ProfileBirthday${isToday ? 'Today' : ''}ValueYear`,\n        { date: formattedDate, age },\n        { pluralValue: age },\n      );\n    }\n\n    return lang(`ProfileBirthday${isToday ? 'Today' : ''}Value`, { date: formattedDate });\n  }, [age, formattedDate, isToday, lang]);\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(value)}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { type BotAppPermissions, ManagementScreens } from '../../../types';\n\nimport {\n  FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH, MUTE_INDEFINITE_TIMESTAMP, UNMUTE_TIMESTAMP,\n} from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatAdmin,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatRestricted,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isOwnProfile?: boolean;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n  className?: string;\n  style?: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n  canViewSubscribers?: boolean;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isOwnProfile,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n  className,\n  style,\n  isInSettings,\n  canViewSubscribers,\n}: OwnProps & StateProps) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n    requestNextManagementScreen,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleToggleNotifications = useLastCallback(() => {\n    const mutedUntil = isMuted ? UNMUTE_TIMESTAMP : MUTE_INDEFINITE_TIMESTAMP;\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        mutedUntil,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, mutedUntil });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenSubscribers = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.ChannelSubscribers });\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const isRestricted = chatId ? selectIsChatRestricted(getGlobal(), chatId) : false;\n  if (isRestricted || (isSelf && !isOwnProfile && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatExtra', className)} style={style}>\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isOwnProfile && !isInSettings && (\n        <ListItem icon={isMuted ? 'mute' : 'unmute'} narrow ripple onClick={handleToggleNotifications}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={lang(userId ? 'AriaToggleUserNotifications' : 'AriaToggleChatNotifications')}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isOwnProfile && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {canViewSubscribers && (\n        <ListItem icon=\"group\" narrow multiline ripple onClick={handleOpenSubscribers}>\n          <div className=\"title\">{lang('ProfileItemSubscribers')}</div>\n          <span className=\"subtitle\">{lang.number(chat?.membersCount || 0)}</span>\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): Complete<StateProps> => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canViewSubscribers = chat && isChatChannel(chat) && isChatAdmin(chat);\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n      canViewSubscribers,\n    };\n  },\n)(ChatExtra));\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport { getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup } from '../global/helpers';\nimport { IS_TAURI } from '../util/browser/globalEnvironment';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n      openQuickPreview,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_TAURI ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const actionQuickPreview = !isSavedDialog && !chat.isForum && {\n      title: lang('QuickPreview'),\n      icon: 'eye-outline',\n      handler: () => {\n        openQuickPreview({\n          id: chat.id,\n        });\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionQuickPreview, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([\n        actionOpenInNewTab, actionQuickPreview, actionPin, actionAddToFolder, actionMute,\n      ]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    )\n      ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionQuickPreview,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics, handleUnmute,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\nimport focusNoScroll from '../../util/focusNoScroll';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  isAccountFrozen,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setFocusInSearchInput();\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  }, [language, lang]);\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    if (!chat || isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      } as Complete<StateProps>;\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  if (searchInput) {\n    focusNoScroll(searchInput);\n  }\n}\n","import type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","interface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): Complete<StateProps> => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n  withTags?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  useTopOverscroll({\n    containerRef,\n    onOverscroll: handleShowStoryRibbon,\n    onReset: handleHideStoryRibbon,\n    isDisabled: isSaved,\n  });\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n          withTags={withTags}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectIsChatRestricted,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin } = chat || {};\n  const isRestricted = selectIsChatRestricted(getGlobal(), chatId!);\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            asMessageBubble={Boolean(monoforumChannel)}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  isMediaNsfw,\n  observeIntersection,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const prevMediaData = usePrevious(mediaData);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const { ref: fullMediaRef, shouldRender: shouldRenderFullMedia } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean(fullMediaData),\n    withShouldRender: true,\n  });\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const { updateContentSettings, openAgeVerificationModal } = getActions();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isPaidPreview || photo.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img\n          ref={fullMediaRef}\n          src={fullMediaData || prevMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">\n          {Math.round(transferProgress * 100)}\n          %\n        </span>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Photo));\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n  noForumTitle?: boolean;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n  noForumTitle,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {\n        !noForumTitle && (\n          <>\n            {lastActiveTopic && (\n              <div className={styles.titleRow}>\n                <div\n                  className={buildClassName(\n                    styles.mainColumn,\n                    lastActiveTopic.unreadCount && styles.unread,\n                  )}\n                  ref={mainColumnRef}\n                  onClick={handleOpenTopicClick}\n                  onMouseDown={handleOpenTopicMouseDown}\n                >\n                  <TopicIcon\n                    topic={lastActiveTopic}\n                    observeIntersection={observeIntersection}\n                  />\n                  <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n                  {!overwrittenWidth && isReversedCorner && (\n                    <div className={styles.afterWrapper}>\n                      <div className={styles.after} />\n                    </div>\n                  )}\n                </div>\n\n                <div className={styles.otherColumns}>\n                  {otherTopics.map((topic) => (\n                    <div\n                      className={buildClassName(\n                        styles.otherColumn, topic.unreadCount && styles.unread,\n                      )}\n                      key={topic.id}\n                    >\n                      <TopicIcon\n                        topic={topic}\n                        className={styles.otherColumnIcon}\n                        observeIntersection={observeIntersection}\n                      />\n                      <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <div className={styles.ellipsis} />\n              </div>\n            )}\n            {!lastActiveTopic && (\n              <div className={buildClassName(styles.titleRow, styles.loading)}>\n                {lang('Loading')}\n              </div>\n            )}\n          </>\n        )\n      }\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && !noForumTitle && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useMessageMediaHash from '../../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../../hooks/media/useThumbnail';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n  noForumTitle,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n  noForumTitle?: boolean;\n}) {\n  const lang = useLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const thumbDataUri = useThumbnail(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? thumbDataUri : undefined;\n  const mediaHash = useMessageMediaHash(mediaContent, 'micro');\n  const mediaBlobUrl = useMedia(mediaHasPreview ? mediaHash : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('ChatDraftPrefix')}</span>\n          <span className=\"last-message-summary\" dir=\"auto\">\n            {renderTextWithEntities({\n              text: draft.text?.text || '',\n              entities: draft.text?.entities,\n              asPreview: true,\n              withTranslucentThumbs: true,\n            })}\n          </span>\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(lang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        <span className=\"last-message-summary\" dir=\"auto\">\n          {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </span>\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n          noForumTitle={noForumTitle}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): Complete<StateProps> => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_STANDARD_QUALITY_IMG_SIZE = 1280; // px\nconst MAX_HIGH_QUALITY_IMG_SIZE = 2560;\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n  const shouldSendInHighQuality = options?.shouldSendInHighQuality;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const maxQuickImgSize = shouldSendInHighQuality ? MAX_HIGH_QUALITY_IMG_SIZE : MAX_STANDARD_QUALITY_IMG_SIZE;\n    const shouldShrink = Math.max(width, height) > maxQuickImgSize;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? maxQuickImgSize / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          ...options,\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width, height, duration };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blob,\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","import { fetchBlob } from './files';\n\ntype AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { parseBlob, selectCover } = await import('music-metadata');\n  const blob = await fetchBlob(url);\n  const metadata = await parseBlob(blob);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import { getGlobal, setGlobal } from '../../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../../api/types';\n\nimport {\n  getDocumentMediaHash, getMediaFormat, getMessageDocumentPhoto, getMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { updateChatMessage } from '../../../global/reducers';\nimport { selectChatMessage } from '../../../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { preloadImage, preloadVideo } from '../../../util/files';\nimport { fetch } from '../../../util/mediaLoader';\nimport LimitedMap from '../../../util/primitives/LimitedMap';\n\nconst preloadedHashes = new LimitedMap<string, void>(100);\n\nexport async function preloadDocumentMedia(mediaContainer: ApiMessage) {\n  const video = getMessageDocumentVideo(mediaContainer);\n  const photo = getMessageDocumentPhoto(mediaContainer);\n\n  const media = video || photo;\n\n  // Skip large photos that were not processed by the server\n  const shouldSkipPhoto = photo && photo.mediaSize && !photo.mediaSize.fromDocumentAttribute;\n  if (!media || media.previewBlobUrl || shouldSkipPhoto) {\n    return;\n  }\n\n  const hash = getDocumentMediaHash(media, 'full');\n  if (!hash || preloadedHashes.has(hash)) {\n    return;\n  }\n\n  preloadedHashes.set(hash, undefined);\n\n  const url = await fetch(hash, getMediaFormat(media, 'full'));\n  if (!url) {\n    return;\n  }\n\n  let dimensions: ApiDocument['mediaSize'] | undefined;\n\n  if (video && IS_PROGRESSIVE_SUPPORTED) {\n    const videoEl = await preloadVideo(url);\n    dimensions = { width: videoEl.videoWidth, height: videoEl.videoHeight, fromPreload: true };\n  }\n\n  if (photo) {\n    const img = await preloadImage(url);\n    dimensions = { width: img.naturalWidth, height: img.naturalHeight, fromPreload: true };\n  }\n\n  if (!dimensions || dimensions.width <= 0 || dimensions.height <= 0) {\n    return;\n  }\n\n  let global = getGlobal();\n  const message = selectChatMessage(global, mediaContainer.chatId, mediaContainer.id);\n  if (!message || !message.content.document) return;\n  global = updateChatMessage(global, mediaContainer.chatId, mediaContainer.id, {\n    content: {\n      ...message.content,\n      document: {\n        ...message.content.document,\n        mediaSize: dimensions,\n      },\n    },\n  });\n  setGlobal(global);\n}\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { isIpRevealingMedia } from '../../util/media/ipRevealingMedia';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport { preloadDocumentMedia } from './helpers/preloadDocumentMedia';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutFiles,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isFileIpDialogOpen, openFileIpDialog, closeFileIpDialog] = useFlag();\n  const [shouldNotWarnAboutFiles, setShouldNotWarnAboutFiles] = useState(false);\n\n  const { fileName, size, mimeType } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const shouldForceDownload = document.innerMediaType === 'photo' && document.mediaSize\n    && !document.mediaSize.fromDocumentAttribute && !document.mediaSize.fromPreload;\n\n  const withMediaViewer = onMediaClick && document.innerMediaType && !shouldForceDownload;\n\n  useEffect(() => {\n    const fileEl = ref.current;\n    if (!withMediaViewer || !fileEl || !message) return;\n\n    const onHover = () => {\n      preloadDocumentMedia(message);\n    };\n\n    fileEl.addEventListener('mouseenter', onHover);\n\n    return () => {\n      fileEl.removeEventListener('mouseenter', onHover);\n    };\n  }, [withMediaViewer, message]);\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick();\n      return;\n    }\n\n    if (isIpRevealingMedia({ mimeType, extension }) && shouldWarnAboutFiles) {\n      openFileIpDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleFileIpConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutFiles: !shouldNotWarnAboutFiles });\n    closeFileIpDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={datetime}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isFileIpDialogOpen}\n        onClose={closeFileIpDialog}\n        confirmHandler={handleFileIpConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutFiles}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutFiles}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getTextColor, int2cssRgba } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = int2cssRgba(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): Complete<StateProps> => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import type { ElementRef } from '@teact';\nimport { useEffect, useLayoutEffect } from '@teact';\nimport { addExtraClass, removeExtraClass, toggleExtraClass } from '@teact/teact-dom.ts';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom.ts';\nimport { throttle } from '../util/schedulers.ts';\n\nconst THROTTLE_DELAY = 100;\n\nconst useScrollNotch = ({\n  containerRef,\n  selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useLayoutEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n\n      requestMutation(() => {\n        toggleExtraClass(target, 'scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => {\n      addExtraClass(el, 'with-notch');\n      el.addEventListener('scroll', handleScroll, { passive: true });\n    });\n\n    return () => {\n      elements.forEach((el) => {\n        el.removeEventListener('scroll', handleScroll);\n        removeExtraClass(el, 'with-notch');\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n\n  useEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    elements.forEach((el) => {\n      const isScrolled = el.scrollTop > 0;\n      requestMutation(() => {\n        toggleExtraClass(el, 'scrolled', isScrolled);\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useScrollNotch;\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import type { ElementRef } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n  ApiWebPage,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport { selectMessageMediaDuration } from '../../global/selectors/media';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\ntype StateProps = {\n  mediaDuration?: number;\n  webPage?: ApiWebPage;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  webPage,\n  mediaDuration,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}: OwnProps & StateProps) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getWebPageAudio(webPage);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    mediaDuration!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n    const mediaDuration = selectMessageMediaDuration(global, message);\n\n    return {\n      webPage,\n      mediaDuration,\n    };\n  },\n)(Audio));\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: ElementRef<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const mediaData = mediaHash\n    ? (isStreaming ? mediaLoader.getProgressiveUrl(mediaHash)\n      : mediaLoader.getFromMemory(mediaHash)) : undefined;\n\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { convertTonFromNanos } from '../../../util/formatCurrency';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nconst DEFAULT_VALUE = 0;\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(\n                balances?.availableBalance ? convertTonFromNanos(balances.availableBalance.amount) : 0,\n                usdRate || 0,\n                'lng_channel_earn_available',\n              )}\n              {renderBalanceCell(\n                balances?.currentBalance ? convertTonFromNanos(balances.currentBalance.amount) : 0,\n                usdRate || 0,\n                'lng_channel_earn_reward',\n              )}\n              {renderBalanceCell(\n                balances?.overallRevenue ? convertTonFromNanos(balances.overallRevenue.amount) : 0,\n                usdRate || 0,\n                'lng_channel_earn_total',\n              )}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)?.[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(field ?? DEFAULT_VALUE)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                const part = field?.part ?? DEFAULT_VALUE;\n                const percentage = field?.percentage ?? DEFAULT_VALUE;\n\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field?.current ?? DEFAULT_VALUE)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { TypeStatisticsGraph } from '../../../../api/types';\n\nexport function isGraph(obj: unknown): obj is TypeStatisticsGraph {\n  // eslint-disable-next-line no-null/no-null\n  return typeof obj === 'object' && obj !== null && 'graphType' in obj;\n}\n","import type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  const ref = useRef<HTMLDivElement>();\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): Complete<StateProps> => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import type { GlobalState } from '../global/types';\nimport type { OldLangFn } from './useOldLang';\n\nimport useBrowserOnline from './window/useBrowserOnline';\n\nexport enum ConnectionStatus {\n  waitingForNetwork,\n  syncing,\n  online,\n}\n\ntype ConnectionStatusPosition =\n  'overlay'\n  | 'minimized'\n  | 'middleHeader'\n  | 'none';\n\nexport default function useConnectionStatus(\n  lang: OldLangFn,\n  connectionState: GlobalState['connectionState'],\n  isSyncing: boolean | undefined,\n  hasMiddleHeader: boolean,\n  isMinimized?: boolean,\n  isDisabled?: boolean,\n) {\n  let status: ConnectionStatus;\n  const isBrowserOnline = useBrowserOnline();\n  if (!isBrowserOnline || connectionState === 'connectionStateConnecting') {\n    status = ConnectionStatus.waitingForNetwork;\n  } else if (isSyncing) {\n    status = ConnectionStatus.syncing;\n  } else {\n    status = ConnectionStatus.online;\n  }\n\n  let position: ConnectionStatusPosition;\n  if (status === ConnectionStatus.online || isDisabled) {\n    position = 'none';\n  } else if (hasMiddleHeader) {\n    position = 'middleHeader';\n  } else if (isMinimized) {\n    position = 'minimized';\n  } else {\n    position = 'overlay';\n  }\n\n  let text: string | undefined;\n  if (status === ConnectionStatus.waitingForNetwork) {\n    text = lang('WaitingForNetwork');\n  } else if (status === ConnectionStatus.syncing) {\n    text = lang('Updating');\n  }\n\n  if (position === 'middleHeader') {\n    text = text!.toLowerCase().replace(/\\.+$/, '');\n  }\n\n  return {\n    connectionStatus: status,\n    connectionStatusPosition: position,\n    connectionStatusText: text,\n  };\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\n\nexport default function useBrowserOnline() {\n  const [isOnline, setIsOnline] = useState(window.navigator.onLine);\n\n  useEffect(() => {\n    function handleChange() {\n      setIsOnline(window.navigator.onLine);\n    }\n\n    window.addEventListener('online', handleChange);\n    window.addEventListener('offline', handleChange);\n\n    return () => {\n      window.removeEventListener('offline', handleChange);\n      window.removeEventListener('online', handleChange);\n    };\n  }, []);\n\n  return isOnline;\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectCustomEmoji, selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { hex2rgbaObj } from '../../../../util/colors.ts';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = selectCustomEmoji(global, documentId);\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hex2rgbaObj(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { SharedSettings } from '../../../global/types';\nimport type {\n  IAnchorPosition, MessageListType, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (!isActive && inputRef.current) {\n      inputRef.current.blur();\n    }\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            spellCheck={IS_TAURI ? false : undefined}\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): Complete<StateProps> => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): Complete<StateProps> => {\n    if (!typingStatus.userId) {\n      return { typingUser: undefined };\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageVideo,\n  getVideoMediaHash,\n} from '../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useMessageMediaHash from '../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../hooks/media/useThumbnail';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  canAutoPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  canAutoPlay,\n  observeIntersection,\n  onClick,\n}: OwnProps) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [isHovering, markMouseOver, markMouseOut] = useFlag();\n\n  const thumbDataUri = useThumbnail(message);\n  const mediaHash = useMessageMediaHash(message, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n  const fullGiftHash = video?.isGif ? getVideoMediaHash(video, 'full') : undefined;\n  const fullGifBlobUrl = useMedia(fullGiftHash, !isIntersecting);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n      onMouseOver={!IS_TOUCH_ENV ? markMouseOver : undefined}\n      onMouseOut={!IS_TOUCH_ENV ? markMouseOut : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {fullGifBlobUrl ? (\n        <OptimizedVideo\n          canPlay={isIntersecting && !hasSpoiler && isHovering && Boolean(canAutoPlay)}\n          src={fullGifBlobUrl}\n          className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n          muted\n          loop\n          playsInline\n          draggable={false}\n          disablePictureInPicture\n          onContextMenu={isProtected ? stopEvent : undefined}\n        />\n      ) : (\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n          decoding=\"async\"\n          onContextMenu={isProtected ? stopEvent : undefined}\n        />\n      )}\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const thumbDataUri = useThumbnail(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ hasMediaData: !noThumb, ref: thumbRef });\n\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport Spinner from '../../ui/Spinner';\nimport Icon from '../icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  className?: string;\n  style?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  className,\n  style,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              draggable={false}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n    className,\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined} style={style}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dspICZx5\",\"gift\":\"GtRefNqT\",\"fadeOut\":\"CviSFYWp\",\"fadeIn\":\"zARAyL86\"};","import { memo, useMemo, useRef } from '@teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSavedStarGift } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { clamp } from '../../../util/math';\nimport { getGiftAttributes } from '../helpers/gifts';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useVtn } from '../../../hooks/animations/useVtn';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport GiftEffectWrapper from '../gift/GiftEffectWrapper';\nimport StickerView from '../StickerView';\n\nimport styles from './ProfilePinnedGifts.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  className?: string;\n  gifts?: ApiSavedStarGift[];\n  isExpanded?: boolean;\n  withGlow?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 2 * REM;\nconst POSITIONS = [\n  { x: -0.2, y: -0.3 },\n  { x: 0.3, y: 0.1 },\n  { x: -0.4, y: -0.1 },\n  { x: 0.4, y: -0.1 },\n  { x: -0.25, y: 0.1 },\n  { x: 0.25, y: -0.25 },\n];\n\nconst CENTER = { x: 0.5, y: 0.5 };\n\nconst ProfilePinnedGifts = ({\n  peerId,\n  gifts,\n  isExpanded,\n  className,\n  withGlow,\n}: OwnProps) => {\n  const { createVtnStyle } = useVtn();\n\n  if (!gifts) return undefined;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {gifts.slice(0, POSITIONS.length).map((gift, index) => {\n        const position = !isExpanded ? POSITIONS[index] : getExpandedPosition(POSITIONS[index]);\n        const style = buildStyle(\n          `top: ${(CENTER.y + position.y) * 100}%`,\n          `left: ${(CENTER.x + position.x) * 100}%`,\n        );\n        return (\n          <PinnedGift\n            peerId={peerId}\n            className={styles.gift}\n            key={gift.gift.id}\n            gift={gift}\n            style={buildStyle(style, createVtnStyle(`profilePinnedGift${index}`, 'profilePinnedGift'))}\n            withGlow={withGlow}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nfunction getExpandedPosition(position: { x: number; y: number }) {\n  return {\n    x: clamp(position.x * 1.5, -0.45, 0.45),\n    y: clamp(position.y * 1.5, -0.45, 0.45),\n  };\n}\n\nconst PinnedGift = ({\n  gift, style, className, withGlow, peerId,\n}: {\n  gift: ApiSavedStarGift;\n  style?: string;\n  className?: string;\n  withGlow?: boolean;\n  peerId: string;\n}) => {\n  const { openGiftInfoModal } = getActions();\n\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const giftAttributes = useMemo(() => {\n    return getGiftAttributes(gift.gift);\n  }, [gift]);\n\n  const handleClick = useLastCallback(() => {\n    openGiftInfoModal({ peerId, gift });\n  });\n\n  if (!giftAttributes?.model || !giftAttributes.backdrop) return undefined;\n\n  return (\n    <GiftEffectWrapper\n      withSparkles\n      sparklesColor={giftAttributes.backdrop.textColor}\n      glowColor={withGlow ? giftAttributes.backdrop.edgeColor : undefined}\n      ref={stickerRef}\n      className={className}\n      style={style}\n      onClick={handleClick}\n    >\n      <StickerView\n        containerRef={stickerRef}\n        sticker={giftAttributes.model.sticker}\n        size={GIFT_STICKER_SIZE}\n        withTranslucentThumb\n        noPlay\n      />\n    </GiftEffectWrapper>\n  );\n};\n\nexport default memo(ProfilePinnedGifts);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Z_HM0Jqg\",\"plain\":\"YIhgPXW6\",\"minimized\":\"blI_IH7j\",\"userRatingNegativeWrapper\":\"vuUzgWI1\",\"userRatingWrapper\":\"P6tsZMON\",\"status\":\"XxRtPe_4\",\"getStatus\":\"wCXGPPTY\",\"userStatus\":\"F4JyLH2c\",\"fallbackPhoto\":\"eZ2DGNou\",\"fallbackPhotoContents\":\"ldzIKEUp\",\"fallbackPhotoVisible\":\"uNvH08Qp\",\"fallbackPhotoAvatar\":\"a9OwsvOP\",\"photoWrapper\":\"UZ7NDj8N\",\"photoDashes\":\"e7iOf_3T\",\"photoDash\":\"eD0Is6TL\",\"photoDash_current\":\"MSdiAM06\",\"photoDashCurrent\":\"MSdiAM06\",\"navigation\":\"Yr9FHqbF\",\"navigation_prev\":\"Z1ZX2xot\",\"navigationPrev\":\"Z1ZX2xot\",\"navigation_next\":\"X0stLWTl\",\"navigationNext\":\"X0stLWTl\",\"info\":\"ZFBuRDGK\",\"title\":\"atYgxkWV\",\"ratingIcon\":\"Yvu9iM5n\",\"ratingNegativeIcon\":\"JZBCjHv0\",\"ratingLevel\":\"eFsZljMG\",\"topicContainer\":\"dNcezQH8\",\"topicTitle\":\"hjk4U031\",\"topicIcon\":\"YwVcTLvK\",\"topicIconTitle\":\"_sQEevF7\",\"topicMessagesCounter\":\"GXxwbzqF\",\"radialPatternBackground\":\"BvunKb6r\",\"standaloneAvatar\":\"rLHO_VQT\",\"activeProfilePhoto\":\"yltXKQri\",\"pinnedGifts\":\"JX3wjADD\",\"profileExpandAvatar\":\"KtpaSfR5\",\"profileCollapseAvatar\":\"c1xe6OKs\"};","import { memo, useEffect, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiEmojiStatusType,\n  ApiPeerColorOption,\n  ApiPeerPhotos,\n  ApiPeerProfileColorSet,\n  ApiSavedGifts,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUserStatus,\n} from '../../../api/types/index';\nimport type { IconName } from '../../../types/icons/index';\nimport type { AnimationLevel, ThemeKey } from '../../../types/index';\nimport { MediaViewerOrigin } from '../../../types/index';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../../global/helpers/index';\nimport { getActions, withGlobal } from '../../../global/index';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectPeer,\n  selectPeerHasProfileBackground,\n  selectPeerPhotos,\n  selectPeerProfileColor,\n  selectPeerSavedGifts,\n  selectTabState,\n  selectTheme,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../../global/selectors/index';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { resolveTransitionName } from '../../../util/resolveTransitionName';\nimport { REM } from '../helpers/mediaDimensions.ts';\nimport renderText from '../helpers/renderText.tsx';\n\nimport { useVtn } from '../../../hooks/animations/useVtn';\nimport useIntervalForceUpdate from '../../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\nimport usePhotosPreload from '../hooks/usePhotosPreload';\n\nimport Transition from '../../ui/Transition.tsx';\nimport Avatar from '../Avatar.tsx';\nimport FullNameTitle from '../FullNameTitle.tsx';\nimport Icon from '../icons/Icon.tsx';\nimport TopicIcon from '../TopicIcon.tsx';\nimport ProfilePhoto from './ProfilePhoto';\nimport ProfilePinnedGifts from './ProfilePinnedGifts.tsx';\nimport RadialPatternBackground from './RadialPatternBackground.tsx';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\nconst MAX_LEVEL_ICON = 90;\n\ntype OwnProps = {\n  isExpanded?: boolean;\n  peerId: string;\n  isForSettings?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n  onExpand?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userFullInfo?: ApiUserFullInfo;\n  userStatus?: ApiUserStatus;\n  chat?: ApiChat;\n  mediaIndex?: number;\n  avatarOwnerId?: string;\n  topic?: ApiTopic;\n  messagesCount?: number;\n  animationLevel: AnimationLevel;\n  emojiStatus?: ApiEmojiStatusType;\n  emojiStatusSticker?: ApiSticker;\n  emojiStatusSlug?: string;\n  profilePhotos?: ApiPeerPhotos;\n  profileColorOption?: ApiPeerColorOption<ApiPeerProfileColorSet>;\n  theme: ThemeKey;\n  isPlain?: boolean;\n  savedGifts?: ApiSavedGifts;\n};\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\nconst PATTERN_Y_SHIFT = 8 * REM;\n\nconst ProfileInfo = ({\n  isExpanded,\n  isForSettings,\n  canPlayVideo,\n  user,\n  userFullInfo,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  animationLevel,\n  emojiStatus,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n  profileColorOption,\n  theme,\n  isPlain,\n  savedGifts,\n  onExpand,\n}: OwnProps & StateProps) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n    openProfileRatingModal,\n    loadPeerSavedGifts,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const { createVtnStyle } = useVtn();\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  const collectibleEmojiStatus = emojiStatus?.type === 'collectible' ? emojiStatus : undefined;\n\n  const peer = user || chat;\n  const { customEmoji: backgroundEmoji } = useCustomEmoji(\n    collectibleEmojiStatus?.patternDocumentId || peer?.profileColor?.backgroundEmojiId,\n  );\n\n  const profileColorSet = useMemo(() => {\n    if (collectibleEmojiStatus) {\n      return {\n        bgColors: [collectibleEmojiStatus.centerColor, collectibleEmojiStatus.edgeColor],\n        storyColors: [collectibleEmojiStatus.textColor, collectibleEmojiStatus.textColor],\n      };\n    }\n\n    const colors = profileColorOption\n      && (theme === 'dark' ? profileColorOption.darkColors : profileColorOption.colors);\n    if (!colors) return undefined;\n\n    // Why are they reversed on the server?\n    return {\n      bgColors: [...colors.bgColors].reverse(),\n      storyColors: [...colors.storyColors].reverse(),\n    };\n  }, [profileColorOption, theme, collectibleEmojiStatus]);\n\n  const pinnedGifts = useMemo(() => {\n    return savedGifts?.gifts.filter((gift) => {\n      if (gift.gift.type === 'starGiftUnique') {\n        return gift.isPinned && gift.gift.slug !== collectibleEmojiStatus?.slug;\n      }\n\n      return gift.isPinned;\n    });\n  }, [savedGifts, collectibleEmojiStatus?.slug]);\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  useEffect(() => {\n    loadPeerSavedGifts({ peerId });\n  }, [peerId]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  // Reset photo index when collapsing\n  useEffect(() => {\n    if (!isExpanded) {\n      setCurrentPhotoIndex(0);\n    }\n  }, [isExpanded]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: isForSettings ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  const handleRatingClick = useLastCallback((level: number) => {\n    if (user) {\n      openProfileRatingModal({ userId: user.id, level });\n    }\n  });\n\n  const handleMinimizedAvatarClick = useLastCallback(() => {\n    if (isForSettings) {\n      handleProfilePhotoClick();\n      return;\n    }\n\n    onExpand?.();\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        className={buildClassName(isActive && styles.activeProfilePhoto)}\n        style={isActive ? createVtnStyle('avatar', true) : undefined}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderUserRating() {\n    if (!userFullInfo?.starsRating) return undefined;\n\n    const level = userFullInfo.starsRating.level;\n    const isNegative = level < 0;\n\n    const onRatingClick = () => handleRatingClick(level);\n\n    if (isNegative) {\n      return (\n        <span role=\"button\" tabIndex={0} className={styles.userRatingNegativeWrapper} onClick={onRatingClick}>\n          <Icon\n            name=\"rating-icons-negative\"\n            className={styles.ratingNegativeIcon}\n          />\n          <span className={styles.ratingLevel}>!</span>\n        </span>\n      );\n    }\n\n    const safeLevel = Math.max(level, 1);\n    const iconLevel = Math.min(safeLevel, MAX_LEVEL_ICON);\n    const iconName = (iconLevel < 10\n      ? `rating-icons-level${iconLevel}`\n      : `rating-icons-level${Math.floor(iconLevel / 10) * 10}`) as IconName;\n\n    return (\n      <span role=\"button\" tabIndex={0} className={styles.userRatingWrapper} onClick={onRatingClick}>\n        <Icon\n          name={iconName}\n          className={styles.ratingIcon}\n        />\n        <span className={styles.ratingLevel}>{level}</span>\n      </span>\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span\n          className={buildClassName(styles.status, 'status')}\n          dir=\"auto\"\n          style={createVtnStyle('status', true)}\n        >\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n          style={createVtnStyle('status', true)}\n        >\n          {renderUserRating()}\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span\n        className={buildClassName(styles.status, 'status')}\n        dir=\"auto\"\n        style={createVtnStyle('status', true)}\n      >\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        'ProfileInfo',\n        styles.root,\n        !isExpanded && styles.minimized,\n        isPlain && styles.plain,\n      )}\n      style={buildStyle(\n        profileColorSet && `--rating-outline-color: ${isExpanded ? 'transparent' : profileColorSet?.bgColors[1]}`,\n        profileColorSet && !isExpanded && `--rating-text-color: ${profileColorSet?.bgColors[1]}`,\n        createVtnStyle('profileInfo', true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {profileColorSet?.bgColors && (\n        <RadialPatternBackground\n          backgroundColors={profileColorSet.bgColors}\n          patternIcon={backgroundEmoji}\n          patternSize={16}\n          withLinearGradient={!collectibleEmojiStatus}\n          className={styles.radialPatternBackground}\n          yPosition={PATTERN_Y_SHIFT}\n        />\n      )}\n      {pinnedGifts && (\n        <ProfilePinnedGifts\n          peerId={peerId}\n          gifts={pinnedGifts}\n          isExpanded={isExpanded}\n          className={styles.pinnedGifts}\n          withGlow={!isPlain}\n        />\n      )}\n      {isExpanded && (\n        <div className={styles.photoWrapper} style={createVtnStyle('photoWrapper', true)}>\n          {renderPhotoTabs()}\n          {!isForSettings && profilePhotos?.personalPhoto && (\n            <div className={buildClassName(\n              styles.fallbackPhoto,\n              isFirst && styles.fallbackPhotoVisible,\n            )}\n            >\n              <div className={styles.fallbackPhotoContents}>\n                {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n              </div>\n            </div>\n          )}\n          {isForSettings && profilePhotos?.fallbackPhoto && (\n            <div className={buildClassName(\n              styles.fallbackPhoto,\n              (isFirst || isLast) && styles.fallbackPhotoVisible,\n            )}\n            >\n              <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n                {!isLast && (\n                  <Avatar\n                    photo={profilePhotos.fallbackPhoto}\n                    className={styles.fallbackPhotoAvatar}\n                    size=\"mini\"\n                  />\n                )}\n                {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n              </div>\n            </div>\n          )}\n          <Transition\n            activeKey={currentPhotoIndex}\n            name={resolveTransitionName('slide', animationLevel, !hasSlideAnimation, lang.isRtl)}\n          >\n            {renderPhoto}\n          </Transition>\n\n          {!isFirst && (\n            <button\n              type=\"button\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              className={buildClassName(styles.navigation, styles.navigation_prev)}\n              aria-label={oldLang('AccDescrPrevious')}\n              onClick={selectPreviousMedia}\n            />\n          )}\n          {!isLast && (\n            <button\n              type=\"button\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              className={buildClassName(styles.navigation, styles.navigation_next)}\n              aria-label={oldLang('Next')}\n              onClick={selectNextMedia}\n            />\n          )}\n        </div>\n      )}\n      {!isExpanded && (\n        <Avatar\n          withStory\n          storyColors={profileColorSet?.storyColors}\n          className={styles.standaloneAvatar}\n          key={peer?.id}\n          size=\"jumbo\"\n          peer={peer}\n          style={createVtnStyle('avatar', true)}\n          onClick={handleMinimizedAvatarClick}\n        />\n      )}\n\n      <div\n        className={styles.info}\n        dir={lang.isRtl ? 'rtl' : 'auto'}\n        style={createVtnStyle('info', true)}\n      >\n        {(user || chat) && (\n          <FullNameTitle\n            className={styles.title}\n            style={createVtnStyle('title', true)}\n            peer={(user || chat)!}\n            withEmojiStatus\n            withStatusTextColor\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): Complete<StateProps> => {\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const userFullInfo = user ? selectUserFullInfo(global, peerId) : undefined;\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n    const { animationLevel } = selectSharedSettings(global);\n\n    const emojiStatus = peer?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? selectCustomEmoji(global, emojiStatus.documentId) : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    const profileColor = peer && selectPeerProfileColor(global, peer);\n    const theme = selectTheme(global);\n\n    const hasBackground = selectPeerHasProfileBackground(global, peerId);\n    const savedGifts = selectPeerSavedGifts(global, peerId);\n\n    return {\n      user,\n      userFullInfo,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      animationLevel,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      emojiStatus,\n      profilePhotos,\n      topic,\n      messagesCount: topic ? selectThreadMessagesCount(global, peerId, currentTopicId!) : undefined,\n      profileColorOption: profileColor,\n      theme,\n      isPlain: !hasBackground,\n      savedGifts,\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): Complete<StateProps> => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { UNMUTE_TIMESTAMP } from '../../../config';\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n    updateTopicMutedState,\n    openQuickPreview,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    updateTopicMutedState({ chatId, topicId: topic.id, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback((e: React.MouseEvent) => {\n    if (e.altKey) {\n      e.preventDefault();\n      openQuickPreview({ id: chatId, threadId: topic.id });\n      return;\n    }\n\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n    handleUnmute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      openChatInNewTab,\n      openQuickPreview,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionQuickPreview = {\n      title: lang('QuickPreview'),\n      icon: 'eye-outline',\n      handler: () => {\n        openQuickPreview({ id: chatId, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: oldLang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: oldLang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: oldLang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: oldLang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${oldLang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: oldLang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: oldLang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: oldLang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionQuickPreview,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, oldLang, canDelete, handleDelete, handleMute, handleUnmute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    let removeTauriListener: VoidFunction | undefined;\n    const setupTauriListener = async () => {\n      const tauriWindow = await window.tauri?.getCurrentWindow();\n      removeTauriListener = await tauriWindow.onResized(() => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n    };\n\n    if (IS_TAURI) {\n      window.tauri?.getCurrentWindow().then((tauriWindow) => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n      setupTauriListener();\n    }\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeTauriListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage: boolean, isMobile: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, Boolean(album.isPaidMedia), isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_TAURI && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n  selectCustomEmoji,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = selectCustomEmoji(global, customEmojiId);\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): Complete<StateProps> => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  threadId,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): Complete<StateProps> => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n      case 'suggestedMessage':\n        if (button.buttonType === 'suggestChanges') {\n          return <Icon className=\"left-icon\" name=\"edit\" />;\n        }\n        if (button.buttonType === 'approve') {\n          return <Icon className=\"left-icon\" name=\"check\" />;\n        }\n        if (button.buttonType === 'decline') {\n          return <Icon className=\"left-icon\" name=\"close\" />;\n        }\n        break;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported' || (button.type === 'suggestedMessage' && button.disabled)}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              {renderIcon(button)}\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import type React from '../../../lib/teact/teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getMediaThumbUri, getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  onStopEffect?: VoidFunction;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Sticker: FC<OwnProps & StateProps> = ({\n  message,\n  shouldLoop,\n  shouldPlayEffect,\n  withEffect,\n  isMediaNsfw,\n  onStopEffect,\n  observeIntersection,\n  observeIntersectionForPlaying,\n  needsAgeVerification,\n}) => {\n  const { showNotification, openStickerSet, updateContentSettings, openAgeVerificationModal } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(sticker);\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Sticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import {\n  memo, useLayoutEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMediaTodo,\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport { getPeerFullTitle, getPeerTitle } from '../../../global/helpers/peers';\nimport { selectIsCurrentUserPremium, selectSender, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\n\nimport './TodoList.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  todoList: ApiMediaTodo;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst TodoList = ({\n  message,\n  todoList,\n  sender,\n  isCurrentUserPremium,\n  isSynced,\n}: OwnProps & StateProps) => {\n  const { toggleTodoCompleted, showNotification, requestConfetti } = getActions();\n  const { todo, completions } = todoList;\n  const { title, items, othersCanComplete } = todo;\n  const [completedTasks, setCompletedTasks] = useState<string[]>([]);\n  const completedTasksSet = useMemo(() => new Set(completedTasks), [completedTasks]);\n\n  const canToggle = !message.isScheduled && isCurrentUserPremium && isSynced;\n\n  useLayoutEffect(() => {\n    const completedIds = completions?.map((c) => c.itemId.toString()) || [];\n    setCompletedTasks(completedIds);\n  }, [completions]);\n\n  const lang = useLang();\n\n  const handleTaskLabelClick = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForToggleTask'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n  });\n\n  const handleTaskToggle = useLastCallback((newCompletedTasks: string[]) => {\n    const newCompletedId = newCompletedTasks.find((id) => !completedTasksSet.has(id));\n    const newIncompletedId = Array.from(completedTasksSet).find((id) => !newCompletedTasks.includes(id));\n\n    toggleTodoCompleted({\n      chatId: message.chatId,\n      messageId: message.id,\n      completedIds: newCompletedId ? [Number(newCompletedId)] : [],\n      incompletedIds: newIncompletedId ? [Number(newIncompletedId)] : [],\n    });\n\n    if (newCompletedTasks.length === items.length) {\n      requestConfetti({});\n    }\n  });\n  const isReadOnly = Boolean(message.forwardInfo) || (!othersCanComplete && !message.isOutgoing);\n  const isOutgoing = message.isOutgoing;\n\n  const tasks = useMemo(() => items.map((task) => {\n    const user = !othersCanComplete ? undefined : selectUser(getGlobal(),\n      completions?.find((c) => c.itemId === task.id)?.completedBy || '');\n    const subLabel = user ? getPeerFullTitle(lang, user) : undefined;\n    return {\n      label: renderTextWithEntities(task.title),\n      value: task.id.toString(),\n      user,\n      subLabel,\n    };\n  }), [items, othersCanComplete, completions, lang]);\n\n  const renderCheckBoxGroup = () => {\n    return (\n      <CheckboxGroup\n        options={tasks}\n        selected={completedTasks}\n        onChange={handleTaskToggle}\n        onClickLabel={!isCurrentUserPremium ? handleTaskLabelClick : undefined}\n        disabled={!canToggle}\n        isRound\n      />\n    );\n  };\n\n  const renderReadOnlyTodoList = () => {\n    return (\n      <div className=\"todo-list-items\">\n        {tasks.map((task) => (\n          <div\n            key={task.value}\n            className=\"todo-list-readonly-item\"\n          >\n            <div className=\"todo-readonly-item-checkbox\">\n              {completedTasksSet.has(task.value)\n                ? <Icon name=\"check\" />\n                : <div className=\"todo-item-bullet-point\" />}\n            </div>\n            <div\n              className={buildClassName(\n                'readonly-item-label',\n                completedTasksSet.has(task.value) && 'completed-label',\n              )}\n            >\n              {task.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderTodoListType = () => {\n    if (message.forwardInfo) {\n      return lang('TitleToDoList');\n    }\n\n    if (othersCanComplete) {\n      return lang('TitleGroupToDoList');\n    }\n\n    if (isOutgoing) {\n      return lang('TitleYourToDoList');\n    }\n\n    if (sender) {\n      return lang('TitleUserToDoList', { peer: getPeerTitle(lang, sender) }, { withNodes: true });\n    }\n\n    return lang('TitleToDoList');\n  };\n\n  return (\n    <div className=\"todo-list\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"todo-list-header\">\n        <div className=\"todo-list-title\">\n          {renderTextWithEntities(title)}\n        </div>\n        <div className=\"list-type\">\n          {renderTodoListType()}\n        </div>\n      </div>\n\n      <div className=\"todo-list-items\">\n        {isReadOnly ? renderReadOnlyTodoList() : renderCheckBoxGroup()}\n      </div>\n      <div className=\"completed-tasks-count\">\n        <AnimatedCounter text={\n          lang('DescriptionCompletedToDoTasks', {\n            number: completedTasks.length,\n            count: tasks.length,\n          })\n        }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const sender = selectSender(global, message);\n  return {\n    sender,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    isSynced: global.isSynced,\n  };\n},\n)(TodoList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import { memo, useRef } from '@teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport useFlag from '../../../hooks/useFlag.ts';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const [isHover, markHover, unmarkHover] = useFlag();\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={buildClassName('interactive-gift', styles.root)}\n      onClick={onClick}\n      onMouseEnter={!IS_TOUCH_ENV ? markHover : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? unmarkHover : undefined}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternIcon={pattern!.sticker}\n          centerEmptiness={0.15}\n          ringsCount={2}\n          ovalFactor={1.2}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          shouldLoop={isHover}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageWebPage, ApiTypeStory, ApiWebPage, ApiWebPageFull } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey, type WebPageMediaSize } from '../../../types';\n\nimport { getPhotoFullDimensions } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  messageWebPage: ApiMessageWebPage;\n  webPage: ApiWebPage;\n  message?: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutFiles?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  messageWebPage,\n  webPage,\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutFiles,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const fullWebPage = webPage?.webpageType === 'full' ? webPage : undefined;\n\n  const { story: storyData, stickers } = fullWebPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (webPage?.webpageType !== 'full') return undefined;\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const { mediaSize } = messageWebPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    isSquarePhoto = getIsSmallPhoto(webPage, mediaSize);\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', 'WebPage-text_interactive')}\n            onClick={() => openUrl({ url, shouldSkipModal: messageWebPage.isSafe })}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {video && (\n          <Video\n            video={video}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {audio && (\n          <Audio\n            theme={theme}\n            message={message!}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getIsSmallPhoto(webPage: ApiWebPageFull, mediaSize?: WebPageMediaSize) {\n  if (!webPage?.photo) return false;\n  if (mediaSize === 'small') return true;\n  if (mediaSize === 'large') return false;\n\n  const { width, height } = getPhotoFullDimensions(webPage.photo) || {};\n  if (!width || !height) return false;\n\n  return width === height && !webPage.hasLargeMedia;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getMessageWebPage,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectFullWebPageFromMessage,\n  selectIsChatProtected,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport {\n  selectIsMediaNsfw,\n  selectMessageDownloadableMedia,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n} from '../../../global/selectors/media';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport { IS_ANDROID, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, getMinMediaWidthWithText } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport TodoList from './TodoList';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n  minFutureTime?: number;\n  isMediaNsfw?: boolean;\n  isReplyMediaNsfw?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\nconst MAX_REASON_LENGTH = 200;\n\nconst Message = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutFiles,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  isMediaNsfw,\n  isReplyMediaNsfw,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n  minFutureTime,\n  webPage,\n  onIntersectPinnedMessage,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    clickSuggestedMessageButton,\n    rejectSuggestedPost,\n    openSuggestedPostApprovalModal,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const [isDeclineDialogOpen, openDeclineDialog, closeDeclineDialog] = useFlag();\n  const [declineReason, setDeclineReason] = useState('');\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_TAURI,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults, todo,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang: oldLang,\n    selectMessage,\n    message,\n    webPage,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled && shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || (\n      (photo || video || storyData || (location?.mediaType === 'geo')) && (!hasText || isInvertedMedia))\n    );\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasBottomCommentButton: withCommentButton && !isCustomShape,\n    hasActionButton: canForward || canFocus || (withCommentButton && isCustomShape),\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(text?.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(oldLang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < getMinMediaWidthWithText(isMobile)) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMobile, isMediaWithCommentButton), width);\n      }\n    } else if (albumLayout) {\n      const minWidth = getMinMediaWidth(text?.text, isMobile, isMediaWithCommentButton);\n      calculatedWidth = Math.max(minWidth, albumLayout.containerStyle.width);\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName(\n          'quick-reaction',\n          'no-selection',\n          isQuickReactionVisible && !hasActiveReactions && 'visible',\n        )}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && reactionsPosition !== 'inside')) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                isMediaNsfw={isReplyMediaNsfw}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            isMediaNsfw={isMediaNsfw}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {todo && (\n          <TodoList message={message} todoList={todo} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            threadId={threadId}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? oldLang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    const messageWebPage = getMessageWebPage(message);\n    if (!messageWebPage || !webPage) return undefined;\n    return (\n      <WebPage\n        messageWebPage={messageWebPage}\n        webPage={webPage}\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutFiles={shouldWarnAboutFiles}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            isMediaNsfw={isMediaNsfw}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            isMediaNsfw={isMediaNsfw}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {oldLang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  const handleSuggestedMessageButton = useLastCallback((payload: ActionPayloads['clickBotInlineButton']) => {\n    if (payload.button.type !== 'suggestedMessage') return;\n    if (payload.button.buttonType === 'approve') {\n      openSuggestedPostApprovalModal({\n        chatId,\n        messageId: message.id,\n      });\n      return;\n    }\n\n    if (payload.button.buttonType === 'decline') {\n      openDeclineDialog();\n      return;\n    }\n\n    clickSuggestedMessageButton({\n      ...payload,\n      button: payload.button,\n    });\n  });\n\n  const handleDeclineReasonChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setDeclineReason(e.target.value);\n  });\n\n  const handleDeclineConfirm = useLastCallback(() => {\n    rejectSuggestedPost({\n      chatId,\n      messageId: message.id,\n      rejectComment: declineReason.trim() || undefined,\n    });\n    closeDeclineDialog();\n    setDeclineReason('');\n  });\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(oldLang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(oldLang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{oldLang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{oldLang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || oldLang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n  const shouldRenderSuggestedPostButtons = message.suggestedPostInfo\n    && !message.isOutgoing && !message.suggestedPostInfo.isAccepted && !message.suggestedPostInfo.isRejected;\n\n  const isSuggestedPostExpired = useMemo(() => {\n    if (!message.suggestedPostInfo?.scheduleDate || !minFutureTime) return false;\n    const now = getServerTime();\n    return message.suggestedPostInfo.scheduleDate <= now + minFutureTime;\n  }, [message.suggestedPostInfo, minFutureTime]);\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={oldLang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('FocusMessage')}\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !isCustomShape && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {shouldRenderSuggestedPostButtons && (\n          <InlineButtons\n            message={{\n              ...message,\n              inlineButtons: [\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'decline',\n                    text: lang('SuggestedPostDecline'),\n                  },\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'approve',\n                    text: lang('SuggestedPostApprove'),\n                    disabled: isSuggestedPostExpired,\n                  },\n                ],\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'suggestChanges',\n                    text: lang('SuggestedPostSuggestChanges'),\n                  },\n                ],\n              ],\n            }}\n            onClick={handleSuggestedMessageButton}\n          />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n      {isDeclineDialogOpen && (\n        <ConfirmDialog\n          isOpen={isDeclineDialogOpen}\n          onClose={closeDeclineDialog}\n          title={lang('SuggestedPostDecline')}\n          confirmLabel={lang('SuggestedPostDecline')}\n          confirmHandler={handleDeclineConfirm}\n          confirmIsDestructive\n        >\n          <div className=\"decline-dialog-question\">\n            {renderText(lang('DeclinePostDialogQuestion', {\n              sender: sender ? getPeerFullTitle(oldLang, sender) : '',\n            }, { withNodes: true, withMarkdown: true }))}\n          </div>\n          <InputText\n            placeholder={lang('DeclineReasonPlaceholder')}\n            value={declineReason}\n            onChange={handleDeclineReasonChange}\n            maxLength={MAX_REASON_LENGTH}\n          />\n        </ConfirmDialog>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): Complete<StateProps> => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const webPage = selectFullWebPageFromMessage(global, message);\n\n    const { shouldWarnAboutFiles } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || selectIsChatRestricted(global, replyMessageChat.id));\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const minFutureTime = global.appConfig.starsSuggestedPostFutureMin;\n\n    const isMediaNsfw = selectIsMediaNsfw(global, message);\n    const isReplyMediaNsfw = replyMessage && selectIsMediaNsfw(global, replyMessage);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutFiles,\n      outgoingStatus: isOutgoing ? selectOutgoingStatus(global, message, messageListType === 'scheduled') : undefined,\n      uploadProgress: typeof uploadProgress === 'number' ? uploadProgress : undefined,\n      focusDirection: isFocused ? focusDirection : undefined,\n      noFocusHighlight: isFocused ? noFocusHighlight : undefined,\n      isResizingContainer: isFocused ? isResizingContainer : undefined,\n      focusedQuote: isFocused ? focusedQuote : undefined,\n      focusedQuoteOffset: isFocused ? focusedQuoteOffset : undefined,\n      scrollTargetPosition: isFocused ? scrollTargetPosition : undefined,\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      minFutureTime,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n      isMediaNsfw,\n      isReplyMediaNsfw,\n      webPage,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser, ApiWebPage } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMainUsername, getMessagePhoto, getWebPagePhoto, getWebPageVideo } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  webPage,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  webPage?: ApiWebPage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, openChatWithDraft, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChatWithDraft({\n      chatId,\n      threadId,\n      text: {\n        text: `@${getMainUsername(botSender)} `,\n      },\n    });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || getWebPageVideo(webPage);\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getWebPagePhoto(webPage);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll, ApiWebPage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasBottomCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    webPage?: ApiWebPage;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasBottomCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && text?.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (text.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${text.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage?.webpageType === 'full') {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasBottomCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiInputSuggestedPostInfo,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { TON_CURRENCY_CODE } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatScheduledDateTime } from '../../../util/dates/dateFormat';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../../util/localization/format';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport useMessageMediaHash from '../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  isMediaNsfw?: boolean;\n  noCaptions?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  suggestedPostInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  isMediaNsfw,\n  noCaptions,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = useMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia)) || isMediaNsfw;\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    const isFree = !(suggestedPostInfo?.price?.amount);\n    if (suggestedPostInfo) {\n      if (isFree && !suggestedPostInfo.scheduleDate) {\n        return lang('ComposerEmbeddedMessageSuggestedPostDescription');\n      }\n      const priceText = suggestedPostInfo.price\n        ? (suggestedPostInfo.price.currency === TON_CURRENCY_CODE\n          ? formatTonAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-ton-icon',\n            shouldConvertFromNanos: true,\n          })\n          : formatStarsAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-star-icon',\n          }))\n        : '';\n      const scheduleText = suggestedPostInfo.scheduleDate\n        ? formatScheduledDateTime(suggestedPostInfo.scheduleDate, lang, oldLang)\n        : '';\n      if (priceText && !scheduleText) {\n        return (\n          <span className=\"suggested-post-price-wrapper\">\n            {\n              lang('TitleSuggestedPostAmountForAnyTime',\n                { amount: priceText },\n                {\n                  withNodes: true,\n                  withMarkdown: true,\n                })\n            }\n          </span>\n        );\n      }\n      return (\n        <span className=\"suggested-post-price-wrapper\">\n          {priceText}\n          {scheduleText ? ` • ${scheduleText}` : ''}\n        </span>\n      );\n    }\n\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (noCaptions) {\n      return lang('EmbeddedMessageNoCaption');\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (suggestedPostInfo && replyInfo) {\n      return lang('TitleSuggestedChanges');\n    }\n\n    if (suggestedPostInfo) {\n      return lang('ComposerEmbeddedMessageSuggestedPostTitle');\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n        suggestedPostInfo && 'is-suggested-post',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n"],"names":["Keys","memo","MessageOutgoingStatus","status","_jsx","className","children","Transition","name","activeKey","Icon","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","ConnectorClass","requestStates","Map","requestStatesByCallback","pendingPayloads","pendingTransferables","constructor","onUpdate","channel","destroy","init","args","this","postMessageOnTickEnd","type","request","messageData","transferables","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","payloads","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","throttleWithTickEnd","postMessage","createConnector","worker","connector","handleMessage","removeEventListener","props","CustomSend","useModuleLoader","Bundles","Extra","LAST_DELTA_COUNT","ACTIVE_SCROLL_RESET_TIMEOUT","NEW_INPUT_DELTA_THRESHOLD","OVERSCROLL_CONTAINER_CLASS","NO_TOUCH_CONTAINER_CLASS","TRANSITION_DURATION","DRAG_TRIGGER_DISTANCE","initialActiveScrollContext","lastDeltas","Array","fill","lastAverageDelta","isStartedAtTop","resetStartTopAt","timeout","useTopOverscroll","containerRef","isOverscrolled","isDisabled","onOverscroll","onReset","getState","setState","useSignal","activeScrollRef","useRef","transitionTimeoutRef","touchStartYRef","triggerOverscroll","clearTimeout","triggerReset","window","setTimeout","scheduleResetActiveScroll","handleWheel","container","defaultPrevented","deltaY","scrollTop","state","activeScroll","isStarting","at","Date","now","slice","currentAverageDelta","reduce","a","b","isNewInput","Math","abs","stopEvent","handleTouchStart","touches","clientY","handleTouchMove","startY","handleTouchEnd","requestMutation","classList","add","remove","toggle","passive","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","currentUserId","useLang","filteredUsers","setFilteredUsers","useState","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","startsWith","usernameTag","usersById","getGlobal","users","byId","memberIds","acc","member","filter","filteredIds","filterPeersByQuery","ids","unique","query","values","pickTruthy","insertMention","peer","forceFocus","insertAtEnd","hasUsername","getPeerTitle","mainUsername","getMainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useOrderDiff","orderedIds","orderById","useMemo","i","prevOrderById","usePreviousDeprecated","prevChatId","orderDiffById","mapValues","order","getAnimationType","useChatAnimationType","OFFSET_X","REM","useOverlayPosition","anchorRef","overlayRef","isMirrored","isForMessageEffect","updatePosition","element","anchor","anchorRect","getBoundingClientRect","elementRect","windowWidth","innerWidth","anchorCenterY","top","height","anchorBottomY","bottom","y","style","left","right","messagesContainer","closest","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","isForumPanelOpen","shouldRenderForumPanelRef","isAnimationStartedRef","forceUpdate","useForceUpdate","useSyncEffect","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","verifyAgeMin","appConfig","VERIFY_AGE_MIN_DEFAULT","SensitiveContentConfirmModal","shouldAlwaysShow","onAlwaysShowChanged","_jsxs","years","Checkbox","label","checked","onCheck","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","styles","root","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","rect","x","scrollX","scrollY","width","innerHeight","seed","floor","filterId","SNAP_EFFECT_ID","component","ghost","viewBox","createFilter","min","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","from","setProperty","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","once","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","result","in","slope","intercept","attributeName","dur","in2","operator","scale","xChannelSelector","yChannelSelector","isAlbum","messageOrAlbum","groupMessages","messages","firstUnreadId","topMessageId","isChatWithSelf","withUsers","currentAlbum","dateGroups","originalDate","date","datetime","getDayStartAt","senderGroups","index","currentDateGroup","currentSenderGroup","isInAlbum","hasComments","commentsMessage","content","text","hasMultipleCaptions","captionMessage","albumId","groupedId","mainMessage","paidMedia","extendedMedia","isPaidMedia","nextMessage","lastMessageInSenderGroup","nextMessageDayStartsAt","newDateGroup","senderId","paidMessageStars","suggestedPostInfo","isOutgoing","postAuthorTitle","isActionMessage","action","inlineButtons","forwardInfo","fromId","stickers","greeting","selectChat","fullInfo","selectUserFullInfo","lastMessage","selectChatLastMessage","defaultStickers","lastUnreadMessageId","lastReadInboxMessageId","connectionState","currentMessageList","selectCurrentMessageList","businessIntro","ContactGreeting","loadGreetingStickers","sendMessage","markMessageListRead","sticker","randomIndex","random","maxId","handleStickerSelect","isPreloadedGlobally","messageList","description","dir","ref","onClick","StickerView","size","shouldLoop","getUserFullName","countryList","phoneCodes","phoneCodeList","userFullInfo","commonChats","selectUserCommonChats","botInfo","isLoadingFullUser","selectBot","MessageListAccountInfo","hasMessages","loadCommonChats","openChatWithInfo","oldLang","phoneCountry","registrationMonth","nameChangeDate","photoChangeDate","settings","country","getCountryCodeByIso","botInfoPhotoUrl","useMedia","photo","getBotCoverMediaHash","botInfoGifUrl","gif","getVideoMediaHash","botInfoDimensions","getPhotoFullDimensions","getVideoDimensions","isBotInfoEmpty","isChatInfoEmpty","isVerifyCodes","isChatWithVerificationCodesBot","handleClick","shouldReplaceHistory","profileTab","forceScrollProfileTab","securityNameInfo","time","formatPastDatetime","withNodes","withMarkdown","securityPhotoInfo","tableData","isoToEmoji","iso2","defaultName","formatRegistrationMonth","commonChatsCount","peers","selectPeer","Link","pluralValue","AvatarList","buildClassName","buildStyle","src","OptimizedVideo","canPlay","loop","disablePictureInPicture","muted","playsInline","Skeleton","forceAspectRatio","getChatTitle","MiniTable","keyClassName","isVerified","INTERSECTION_THROTTLE_FOR_MEDIA","IS_ANDROID","ownProps","withAvatar","selectIsChatWithSelf","isSystemBotChat","isSystemBot","isAnonymousForwards","isAnonymousForwardsChat","forceSenderName","isAnonymousOwnMessage","canShowSender","sender","selectSender","originSender","selectForwardedSender","isRepliesChat","SenderGroupContainer","appearanceOrder","canPost","openChat","updateInsertingPeerIdMention","messageSender","noAppearanceAnimation","isShown","markShown","MESSAGE_APPEARANCE_DELAY","avatarPeer","isAvatarPeerUser","isApiPeerUser","handleOpenChat","handleMention","EDITABLE_INPUT_CSS_SELECTOR","peerId","handleAvatarClick","avatarRef","shouldRender","useShowTransition","noMountTransition","withShouldRender","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","canMention","shouldRenderContextMenu","hiddenName","hiddenUserName","Avatar","onContextMenu","renderAvatar","Menu","onCloseAnimationEnd","autoClose","_Fragment","MenuItem","icon","SponsoredContextMenuContainer","selectSponsoredMessage","activeDownloads","selectActiveDownloads","downloadableMedia","selectMessageDownloadableMedia","isDownloading","getIsDownloading","theme","selectTheme","canAutoLoadMedia","selectCanAutoLoadMedia","canAutoPlayMedia","selectCanAutoPlayMedia","SponsoredMessage","observeIntersectionForLoading","observeIntersectionForPlaying","viewSponsored","openUrl","hideSponsored","clickSponsored","openMediaViewer","openAboutAdsModal","contentRef","shouldObserve","isMobile","useAppLayout","observe","observeIntersection","useIntersectionObserver","rootRef","debounceMs","threshold","handleBeforeContextMenu","isIntersecting","randomId","handleHideSponsoredMessage","getMessageContent","video","isGif","hasMedia","isMedia","url","shouldSkipModal","handleOpenMedia","origin","MediaViewerOrigin","isSponsoredMessage","handleOpenAboutAdsModal","canReport","additionalInfo","sponsorInfo","sizeCalculations","calculatedWidth","contentWidth","calculateMediaDimensions","media","getMinMediaWidthWithText","max","getMinMediaWidth","noMediaCorners","onMouseDown","preventMessageInputBlur","PeerColorWrapper","peerColor","Photo","canAutoLoad","noAvatars","forcedWidth","Video","canAutoPlay","renderMediaContent","isRtl","isRecommended","BadgeButton","renderTextWithEntities","entities","Button","color","isRectangular","buttonText","renderContent","MessageAppendix","round","ariaLabel","triggerRef","MessageListContent","canShowAds","threadId","messageIds","messageGroups","getContainerHeight","isViewportNewest","isUnread","isComments","isEmptyThread","isChannelChat","isChatMonoforum","anchorIdRef","memoUnreadDividerBeforeIdRef","memoFirstUnreadIdRef","isReady","hasLinkedChat","isSchedule","shouldRenderAccountInfo","isSavedDialog","isQuickPreview","onScrollDownToggle","onNotchToggle","onIntersectPinnedMessage","openHistoryCalendar","getIsHeavyAnimating2","getIsHeavyAnimating","getIsReady","areDatesClickable","observeIntersectionForReading","markMentionsRead","animateUnreadReaction","scheduleForViewsIncrement","INTERSECTION_MARGIN_FOR_LOADING","freeze","freezeForReading","unfreeze","unfreezeForReading","throttleMs","isBackgroundModeActive","mentionIds","reactionIds","viewportPinnedIdsToAdd","viewportPinnedIdsToRemove","scheduledToUpdateViews","entry","dataset","Number","lastMessageId","shouldUpdateViews","albumMainId","hasUnreadMention","hasUnreadReaction","isPinned","useBackgroundMode","margin","useMessageObservers","withHistoryTriggers","backwardsTriggerRef","forwardsTriggerRef","fabTriggerRef","loadViewportMessages","loadMoreBackwards","loadMoreForwards","debounce","direction","LoadMoreDirection","Backwards","Forwards","toggleScrollTools","fabTrigger","offsetHeight","scrollHeight","fabOffsetTop","offsetTop","scrollBottom","isNearBottom","isAtBottom","observeIntersectionForHistory","MESSAGE_LIST_SENSITIVE_AREA","useOnIntersect","observeIntersectionForFab","freezeForFab","unfreezeForFab","FAB_THRESHOLD","throttleScheduler","requestMeasure","observeIntersectionForNotch","freezeForNotch","unfreezeForNotch","freezeShortly","getContainerHeightDebounced","useDebouncedSignal","useSignalEffect","useScrollHooks","unreadDivider","renderPaidMessageAction","album","messagesLength","amount","formatStarsAsText","userTitle","renderSuggestedPostInfoAction","price","scheduleDate","userLink","renderPeerLink","originalMessage","replyInfo","replyToMsgId","selectChatMessage","titleText","getSuggestedChangesInfo","getSuggestedChangesActionText","compact","currency","formatTonAsText","convertTonFromNanos","formatScheduledDateTime","actionMessageStyles","suggestedPostContainer","suggestedPostTitle","messageCountToAnimate","messageGroup","flat","appearanceIndex","prevMessageIds","isNewMessage","dateGroup","dateGroupIndex","dateGroupsArray","senderGroup","senderGroupIndex","senderGroupsArray","isLastInList","ActionMessage","observeIntersectionForBottom","isJustAdded","getIsMessageListReady","currentDocumentGroupId","senderGroupElements","messageIndex","isOwn","isOwnMessage","isMessageAlbum","previousLocalId","getMessageHtmlId","documentGroupId","nextDocumentGroupId","isTopicTopMessage","position","isFirstInGroup","isLastInGroup","isFirstInDocumentGroup","isLastInDocumentGroup","originalId","getMessageOriginalId","isServiceNotificationMessage","noComments","Message","withSenderName","messageListType","noReplies","MAIN_THREAD_ID","lastMessageOrAlbum","lastAppearanceOrder","firstMessageOrAlbum","firstMessage","firstMessageId","calculateSenderGroups","teactFastList","selectedAt","SCHEDULED_WHEN_ONLINE","formatHumanDate","ICON_SIZE","NoMessages","isGroupChatJustCreated","topic","renderScheduled","renderSavedMessages","renderGroup","TopicIcon","renderTopic","patternColor","selectThemeValues","paidMessagesStars","openPremiumModal","openStarsBalanceModal","handleOpenPremiumModal","handleGetMoreStars","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","Unlock","formatStarsAsIcon","asFont","containerClassName","pill","Sparkles","preset","Content","runDebouncedForScroll","cb","selectCurrentMessageIds","messagesById","selectChatScheduledMessages","selectChatMessages","getIsSavedDialog","isForum","isRestricted","selectIsChatRestricted","restrictionReasons","selectActiveRestrictionReasons","focusingId","selectFocusedMessageId","withLastMessageWhenPreloading","unreadCount","chatBot","isNonContact","canAddContact","selectTopic","chatFullInfo","isUserId","selectChatFullInfo","selectThreadInfo","messagesCount","areAdsEnabled","selectIsCurrentUserPremium","isAccountFrozen","selectIsCurrentUserFrozen","hasCustomGreeting","isAppConfigLoaded","monoforumChannelId","selectMonoforumChannel","canTranslate","selectCanTranslateChat","isTranslationDisabled","shouldAutoTranslate","hasAutoTranslation","translationLanguage","selectTranslationLanguage","isChatLoaded","isChatChannel","isGroupChat","isChatGroup","isChannelWithAvatars","areProfilesShown","isCreator","isBot","isSynced","selectFirstUnreadId","selectIsViewportNewest","isSelectModeActive","selectIsInSelectMode","linkedChatId","channelJoinInfo","joinInfo","noMessageSendingAnimation","selectPerformanceSettingsValue","isServiceNotificationsChat","SERVICE_NOTIFICATIONS_USER_ID","isChatProtected","selectIsChatProtected","MessageList","withBottomShift","withDefaultBg","isContactRequirePremium","setScrollOffset","loadSponsoredMessages","loadMessageReactions","copyMessagesByIds","loadMessageViews","loadPeerStoriesByIds","loadFactChecks","requestChatTranslation","scrollOffsetRef","selectScrollOffset","selectLastScrollOffset","anchorTopRef","listItemElementsRef","memoFocusingIdRef","isScrollTopJustUpdatedRef","shouldAnimateAppearanceRef","hasOpenChatButton","ANONYMOUS_USER_ID","areMessagesLoaded","isPrivate","onTickEnd","toLanguageCode","handleCopy","getMessageIdsForSelectedText","preventDefault","useNativeCopySelectedMessages","listedMessages","arr","prevMessage","shouldAppendJoinMessage","shouldAppendJoinMessageAfterCurrent","joinedDate","generateChannelJoinMessageId","mediaType","inviterId","isViaRequest","orderRule","orderBy","useInterval","reactions","storyDataList","storyData","storiesByPeerIds","storyIds","isCommentsInfo","viewsCount","factCheck","shouldFetch","loadMoreAround","Around","isScrolled","updateStickyDates","markIsScrolled","runDebounced","useRunDebounced","body","contains","stuckDateEl","allElements","querySelectorAll","containerTop","headerActionsHeight","parseInt","el","findStuckDate","currentStuck","useStickyDates","handleScroll","selectTabState","focusedMessage","shouldCancelWaiting","scrollOffset","prevContainerHeightRef","isComposerVisible","setContainerHeight","handleResize","contentRect","useResizeObserver","currentNormalHeight","normalHeight","containerHeight","String","prevContainerHeight","useContainerHeight","isLocalMessageId","MESSAGE_LIST_SLICE","firstElementChild","clientHeight","rememberScrollPositionRef","useStateRef","preservedItemElements","forceMeasure","useLayoutEffectWithPrevDeps","prevIsViewportNewest","lastItemElement","firstUnreadElement","hasLastMessageChanged","hasViewportShifted","wasMessageAdded","addExtraClass","removeExtraClass","requestForcedReflow","bottomOffset","isAlreadyFocusing","shouldScrollToBottom","animateScroll","forceDuration","isResized","isAnimatingScroll","newScrollTop","newAnchorTop","getOffsetToContainer","resetScroll","ceil","restartCurrentScrollAnimation","useEffectWithPrevDeps","prevIsSelectModeActive","beginHeavyAnimation","ANIMATION_END_DELAY","shouldRenderGreeting","isEmptyTopic","Restricted","PremiumRequired","Loading","AccountInfo","StarsRequired","shouldCleanup","onScroll","RequirementToContactMessage","backgroundColor","forceShowSelf","userStatus","selectUserStatus","isSavedMessages","isSelf","self","PrivateChatInfo","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withStory","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","adminMember","ripple","storyViewerOrigin","onEmojiStatusClick","iconElement","rightElement","loadFullUser","loadMoreProfilePhotos","hasAvatarMediaViewer","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","stopPropagation","isAvatarView","mediaIndex","ProfileAvatar","MiddleHeaderAvatar","customTitle","isOwner","storyViewerMode","FullNameTitle","withEmojiStatus","DotAnimation","subtitleKey","TypingStatus","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","ChatCallStatus","isSelected","ChatTags","orderedFolderIds","chatFoldersById","visibleFolderIds","remainingCount","folderId","folder","getApiPeerColorClass","noCustomEmojiPlayback","noTitleAnimations","emojiSize","isPreview","previewMessageId","chatFolderIds","getChatFolderIds","areTagsEnabled","chatFolders","isPremium","selectChatLastMessageId","savedDialogSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","selectPeerStory","monoforumChannel","isMuted","getIsChatMuted","selectNotifyDefaults","selectNotifyException","draft","selectDraft","selectIsForumPanelOpen","canScrollDown","canChangeFolder","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","selectCanAnimateInterface","listedTopicIds","topics","topicsById","Chat","orderDiff","animationType","onDragEnter","withTags","openSavedDialog","toggleChatInfo","focusLastMessage","focusMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","updateChatMutedState","openQuickPreview","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","isMonoforum","useEnsureMessage","tagFolderIds","chatFolderIdsSet","isAll","ALL_FOLDER_ID","hasColor","shouldRenderTags","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","story","noForumTitle","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","noForumTopicPanel","value","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleUnmute","mutedUntil","UNMUTE_TIMESTAMP","handleChatFolderChange","handleReport","contextActions","useChatContextActions","useIsIntersecting","isOnline","hasShownClass","isAvatarOnlineShown","useShowTransitionDeprecated","href","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","ListItem","withPortalForMenu","asMessageBubble","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","isCallActive","isCallNotEmpty","monoforumBadgeClassName","withStatusTextColor","LastMessageMeta","outgoingStatus","draftDate","hasMiniApp","hasMainMiniApp","DeleteChatModal","MuteChatModal","ChatFolderModal","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","byKey","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","storyId","loadStoryThrottled","throttled","throttle","resetInput","applyIosAutoCapitalizationFix","focus","IS_IOS","createElement","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","DOMParser","parseFromString","wrapNodeAnchor","node","wrapNodeInline","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","updateShouldSaveAttachmentsCompression","applyDefaultAttachmentsCompression","handlePaste","async","clipboardData","input","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","err","DEBUG","console","textContents","getElementsByTagName","removeAttribute","replaceWith","entityType","getAttribute","ignoreOnPaste","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","isWordDocument","hasText","shouldSetAttachments","newAttachments","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","shouldSave","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","RE_LINK","RE_LINK_TEMPLATE","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","default","start","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","waveform","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","Uint8Array","isDestroyed","tick","getByteFrequencyData","volume","subscribeToAnalyzer","stop","onstop","blob","Blob","duration","onerror","delayStop","pause","AttachmentModal","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canAttachToDoLists","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","canEditMedia","editingMessage","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","onTodoListCreate","updateAttachmentSettings","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","validateFiles","handleQuickSelect","shouldCompress","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","positionX","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","button","renderKeyboardButtonText","noCompact","j","BotMenuButton","textRef","textEl","scrollWidth","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","isForwarding","forwardedMessages","replyToPeerId","senderChat","selectEditingMessage","forwardSenders","m","selectSenderFromForwardedMessage","forwardedMessage","isChannelPost","quoteText","isSenderChannel","forwardsHaveCaptions","some","forward","isContextMenuDisabled","isReplyToDiscussion","isMediaNsfw","selectIsMediaNsfw","forwardedMessagesCount","isCurrentUserPremium","isInChangingRecipientMode","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","resetDraftSuggestedPostInfo","updateDraftReplyInfo","setEditingId","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","openSuggestMessageModal","isReplyToTopicStart","isShowingReply","isReplyWithQuote","isShowingSuggestedPost","senders","transitionClassNames","clearEmbedded","captureEscKeyListener","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","renderingSender","useCurrentOrPrev","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","modal","ToDoListModal","tabState","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","webPagePreviewId","selectWebPage","webpageType","WebPagePreview","isEditing","toggleMessageWebPage","isInvertedMedia","isSmallerMedia","webPageMediaSize","hasMediaSizeOptions","hasLargeMedia","prevWebPageRef","renderingWebPage","isFullWebPage","thumbnailUrl","useThumbnail","previewMedia","getWebPagePhoto","getWebPageVideo","getWebPageAudio","getWebPageDocument","previewMediaHash","getMediaHash","previewMediaUrl","shouldRenderPreviewMedia","previewMediaRef","noCloseTransition","hasPreviewMedia","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","noUserColors","siteName","webPage","audio","MainButtonState","isChatWithBot","isChatWithUser","selectPeerPaidMessagesStars","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","sendAsId","sendAsPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","isStoryViewerOpen","storyViewer","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","areEffectsSupported","canPlayEffect","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","isReplying","hasSuggestedPost","stars","balance","isStarsBalanceModalOpen","starsBalanceModal","insertingPeerIdMention","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","todoListModal","stickersForEmoji","forEmoji","customEmojiForEmoji","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","Composer","dropAreaState","inputPlaceholder","editableInputCssSelector","editableInputId","onDropHide","onFocus","onBlur","onForward","clearDraft","showDialog","openPollModal","closePollModal","openTodoListModal","closeTodoListModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateDraftSuggestedPostInfo","counterRef","storyReactionRef","isMounted","setIsMounted","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","windowSize","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","isChatWithSendAs","isChatSuperGroup","isChatPublic","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","setShouldPaidMessageAutoApprove","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","shouldPrepend","selection","getSelection","messageInput","rangeCount","getRangeAt","insertHtmlInSelection","dispatchEvent","Event","bubbles","newFirstWord","shouldReplace","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","shouldSendInHighQuality","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","handleUpdateAttachmentsQuality","filename","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","shouldKeepSuggestedPost","runDebouncedForSaveDraft","DRAFT_DEBOUNCE","prevThreadId","prevDraft","isTouched","shouldUpdateSuggestedPost","customEmojiIds","entity","documentId","useLayoutEffect","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBeforeUnload","loadWebPagePreview","clearWebPagePreview","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","link","useLoadLinkPreview","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","shouldShowSuggestedPostButton","showCustomEmojiPremiumNotification","notificationNumber","actionText","initialSection","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","formatMediaDuration","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","voice","handleSendWithConfirmation","handleTodoListCreate","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","isScheduleRequested","canUpdateStickerSetsOrder","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","handleToDoListSend","todo","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleSuggestPostClick","STARS_CURRENCY_CODE","nanos","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","adminRights","anonymous","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","fullClassName","handleToggleReaction","reaction","emoticon","selectCustomEmoji","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","prevShouldRenderPaidBadge","usePrevious","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","filterUnits","dy","stdDeviation","d","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","Spinner","slideClassName","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","ReactionAnimatedEmoji","withEffectOnly","getReactionKey","allowDisabledClick","noFastClick","nonInteractive","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","messagePriceInStars","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","loadStoriesMaxIds","peerIds","usePeerStoriesPolling","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","usePrevDuringAnimation","prev","timeoutRef","isCurrentPresent","isPrevPresent","wasTopicOpened","requestMainWebView","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","shouldBeUnMuted","notifySettings","isEveryUnreadMuted","hasUnreadMark","isSignal","handleOpenApp","extractCurrentThemeParams","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","needsAgeVerification","needAgeVideoVerification","isInWebPage","uploadProgress","dimensions","asForwarded","isProtected","lastPlaybackTimestamp","clickArg","onCancelUpload","cancelMediaDownload","updateContentSettings","openAgeVerificationModal","videoRef","isNsfwModalOpen","openNsfwModal","closeNsfwModal","shouldAlwaysShowNsfw","setShouldAlwaysShowNsfw","isPaidPreview","localBlobUrl","blobUrl","shouldShowSpoiler","isSpoilerShown","showSpoiler","hideSpoiler","handleNsfwConfirm","isSensitiveEnabled","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","mediaLoader","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","fullMediaData","isPlayerReady","markPlayerReady","thumbDataUri","getMediaThumbUri","hasThumb","withBlurredBackground","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","hasMediaData","noThumb","thumbRef","useBlurredMediaThumbRef","blurredBackgroundRef","downloadProgress","isUploading","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRenderSpinner","playButtonRef","playProgress","setPlayProgress","handleTimeUpdate","currentTarget","currentTime","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","isAllowed","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","defaultMuted","draggable","onTimeUpdate","onReady","MediaSpoiler","isVisible","withAnimation","isNsfw","ProgressSpinner","progress","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","matchedNames","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","onLoad","onSearchOpen","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","ANIMATION_DURATION","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","animateOpening","isArchived","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","reverse","isLast","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","opacity","transform","ghostRevealName","createDelayedCallback","animateClosing","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","canvas","getContext","drawImage","ms","clear","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","hasCommentButton","messageText","isPhoto","isVideo","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","selectWebPagesById","webPageById","useMessageMediaHash","webPagesById","useSelector","webPageId","getMessageMediaHash","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","selectWebPageFromMessage","WebLink","senderTitle","onMessageClick","linkData","getFirstLinkInMessage","domain","formattedDescription","getMessageTextWithFallback","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","formatPastTimeShort","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","letterClassName","noLoopLimit","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","onStart","onEnd","isLongPressActive","isPressed","timerId","canProcessEvent","end","cancel","useUnmountCleanup","onMouseUp","onTouchStart","onTouchEnd","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","orderedPeerIds","archived","active","byPeerId","isRibbonShown","isArchivedRibbonShown","chatsById","chats","peerStories","canShow","toggleStoryRibbon","PREVIEW_AVATAR_COUNT","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","useStoryPreloader","avatar","withStorySolid","forceFriendStorySolid","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","getCustomAppendixBg","requestMediaWorker","MAX_WORKERS","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","inputSelector","getRange","setRange","onSelectionChange","Element","VTN_PROPERTY_NAME","useVtn","uniqueId","fallbackId","useUniqueId","createVtnStyle","vtClass","vtClassString","CSS","registerProperty","syntax","inherits","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","handleDragLeave","relatedTarget","toTarget","onDrop","onDragLeave","rx","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","matches","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","reducer","initialState","reducerRef","dispatch","NothingFound","withSticker","DuckNothingFound","previewUrl","LOCAL_TGS_PREVIEW_URLS","noLoop","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","last","DAYS","_","BusinessHours","businessHours","transitionRef","isExpanded","expand","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","role","tabIndex","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","byEmoji","digit","effectSticker","randomEffect","hash","getStickerMediaHash","ApiMediaFormat","BlobUrl","effectHash","column","canGiftPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","forceAlways","birthdate","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","botAppPermissions","selectBotAppPermissions","botVerification","chatInviteLink","inviteLink","bio","about","canViewSubscribers","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","isBotCanManageEmojiStatus","ChatExtra","isOwnProfile","updateTopicMutedState","loadPeerStories","openMapModal","requestCollectibleInfo","toggleUserEmojiStatusPermission","toggleUserLocationPermission","requestNextManagementScreen","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","copyTextToClipboard","geoPoint","handleToggleNotifications","MUTE_INDEFINITE_TIMESTAMP","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenSubscribers","screen","ManagementScreens","ChannelSubscribers","shouldMarkBotTrusted","appTermsInfo","terms","membersCount","ChatAnimationTypes","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","idx","dataTransferItems","traverseFileTreePromise","item","itemFile","getAsFile","isDirectory","createReader","readEntries","entriesPromises","kind","webkitGetAsEntry","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionOpenInNewTab","IS_TAURI","actionQuickPreview","togglePinned","actionPin","actionDelete","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","confirmPaymentMessage","totalAmount","HeaderMenuContainer","isSuperGroup","selectLanguageCode","doNotTranslate","noMenu","isMainThread","isDiscussionThread","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","channelMonoforumId","linkedMonoforumId","detectedChatLanguage","detectedLanguage","HeaderActions","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","setViewForumAsMessages","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","handleJoinRequestsClick","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","IS_APP","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","focusNoScroll","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","currentHeight","useThrottledCallback","applyAnimationState","list","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","transition","isPanelOpen","path","DEFAULT_HANDLERS","play","seekbackward","seekforward","previoustrack","nexttrack","seekTo","registerMediaSession","metadata","mediaSession","updateMetadata","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","artwork","MediaMetadata","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","unread","actionMinimize","isMinimized","actionExpand","actionHide","isHidden","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","openSettingsScreen","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","handleAccept","isConfirmed","handleReject","isText","RESERVED_HOTKEYS","canDisplayArchive","isMainList","openNextChat","openLeftColumnContent","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isAllFolder","isSaved","resolvedFolderId","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","targetIndexDelta","handleKeyDown","IS_MAC_OS","isArchiveInList","contentKey","LeftColumnContent","Archived","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","clientX","handleShowStoryRibbon","handleHideStoryRibbon","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onLoadMore","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","TOPIC_ICON_SIZE","threadInfo","onlineCount","selectChatOnlineCount","selectThreadMessagesCount","GroupChatInfo","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","isInSelectMode","shouldAffectAppendix","getPhotoMediaHash","prevMediaData","fullMediaRef","shouldRenderFullMedia","withThumb","downloadButtonRef","shouldRenderDownloadButton","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","appendixBg","dimensionsStyle","fileSelector","accept","noMultiple","onchange","click","extension","timestamp","thumbnailDataUri","previewData","smaller","isSelectable","actionIcon","onDateClick","elementRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","formatMediaDateTime","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","mediaThumbnail","mediaHash","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","asPreview","withTranslucentThumbs","senderName","getMessageSenderName","renderSummary","Opacity","Move","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","AudioOrigin","Inline","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","safePlay","stopCurrentAudio","register","trackType","track","Audio","handleEvent","eventName","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","fastSeek","setVolume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","isPrivateChat","getPrivateChatUserId","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","chatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","stroke","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","interval","MAX_STANDARD_QUALITY_IMG_SIZE","MAX_HIGH_QUALITY_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","options","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","maxQuickImgSize","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","performer","coverUrl","parseBlob","selectCover","fetchBlob","common","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","preloadedHashes","LimitedMap","Document","autoLoadFileMaxSizeMb","shouldWarnAboutFiles","onMediaClick","downloadMedia","setSharedSettingOption","isFileIpDialogOpen","openFileIpDialog","closeFileIpDialog","shouldNotWarnAboutFiles","setShouldNotWarnAboutFiles","fileName","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","isLoaded","hasPreview","getDocumentHasPreview","shouldForceDownload","innerMediaType","mediaSize","fromDocumentAttribute","fromPreload","fileEl","onHover","mediaContainer","getMessageDocumentVideo","getMessageDocumentPhoto","shouldSkipPhoto","fetch","IS_PROGRESSIVE_SUPPORTED","videoEl","naturalWidth","naturalHeight","updateChatMessage","setGlobal","preloadDocumentMedia","handleDownload","originMessage","isIpRevealingMedia","handleFileIpConfirm","handleDateClick","isDocumentVideo","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","r","shouldDisplayCount","updateCustomEmojiSize","prevReactionCount","effectSize","shouldPause","formatTemperature","temperatureC","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","int2cssRgba","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","MediaAreaOverlay","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","lastCallback","onBeforeUnload","useScrollNotch","selector","deps","toggleExtraClass","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","GroupCallTopPane","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","renderingFetchedParticipants","isRendering","resolver","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","debouncedResolver","PENDING_TRANSLATIONS","useMessageTranslation","chatTranslations","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translatedText","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderAudio","isPlaying","bufferedRanges","seekerRef","showProgress","showSeekline","renderSeekline","renderVoice","waveformCanvasRef","isMediaUnread","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","onClickTranscribe","onHideTranscription","ry","OneTimeModal","mediaDuration","selectMessageMediaDuration","canDownload","canTranscribe","autoPlay","onPlay","onPause","onReadMedia","transcribeAudio","openOneTimeMediaModal","contentAudio","mediaSource","isVoice","isSeeking","isActivated","setIsActivated","coverHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","isMessageLocal","reversePlayProgress","isReverse","spikes","peak","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","fillStyle","progressFillStyle","ctx","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","renderSecondLine","captureEvents","onCapture","onRelease","onDrag","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","loader","makeProgressiveLoader","next","done","readyState","endOfStream","appendBuffer","display","unloadVideo","checkIfStreamingSupported","buffer","ManagedMediaSource","MediaSource","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","delay","isHtmlAllowed","isStreaming","Progressive","selectIsSynced","setLoadProgress","startedAtRef","handleProgress","spentTime","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderOverviewItemValue","change","percentage","isChangeNegative","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","isGraph","obj","openStoryViewer","toggleStoriesHidden","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","ConnectionStatus","useConnectionStatus","isSyncing","hasMiddleHeader","setIsOnline","onLine","handleChange","useBrowserOnline","syncing","online","waitingForNetwork","connectionStatus","connectionStatusPosition","connectionStatusText","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","shouldUseTextColor","hex2rgbaObj","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","scroller","newHeight","isOverflown","transitionDuration","log","htmlRef","focusInput","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","spellCheck","onChange","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","anchorPosition","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","isHovering","markMouseOver","markMouseOut","fullGiftHash","fullGifBlobUrl","hasSpoiler","onMouseOver","onMouseOut","decoding","shouldUseDraft","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","RoundVideo","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","strokeDashOffset","stopPlaying","capturePlaying","togglePlaying","isPriority","onEnded","cx","cy","replaceWithTeact","STARS_ICON_PLACEHOLDER","ProfilePhoto","canPlayVideo","isDeleted","isDeletedUser","isChatWithRepliesBot","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","specialIcon","userFullName","getFirstLetters","GIFT_STICKER_SIZE","POSITIONS","PinnedGift","gift","withGlow","openGiftInfoModal","stickerRef","giftAttributes","getGiftAttributes","model","backdrop","GiftEffectWrapper","withSparkles","sparklesColor","glowColor","edgeColor","ProfilePinnedGifts","gifts","clamp","getExpandedPosition","PATTERN_Y_SHIFT","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","animationLevel","emojiStatus","emojiStatusSticker","emojiStatusSlug","profileColor","selectPeerProfileColor","hasBackground","selectPeerHasProfileBackground","savedGifts","selectPeerSavedGifts","profileColorOption","ProfileInfo","isForSettings","isForMonoforum","onExpand","openStickerSet","openPrivacySettingsNoticeModal","openProfileRatingModal","loadPeerSavedGifts","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","currentPhotoIndex","setCurrentPhotoIndex","collectibleEmojiStatus","backgroundEmoji","useCustomEmoji","patternDocumentId","backgroundEmojiId","profileColorSet","bgColors","centerColor","storyColors","colors","darkColors","pinnedGifts","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","handleRatingClick","handleMinimizedAvatarClick","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","RadialPatternBackground","backgroundColors","patternIcon","patternSize","withLinearGradient","yPosition","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","renderPhotoTabs","personalPhoto","fallbackPhoto","resolveTransitionName","canCopyTitle","renderUserRating","isReadDateRestrictedByMe","renderStatus","starsRating","onRatingClick","safeLevel","iconLevel","iconName","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","SponsoredContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","onItemClick","reportSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","ForumPanel","onOpenAnimationStart","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","waitForTransitionEnd","onTransitionEnd","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","renderTopics","GENERAL_TOPIC_ID","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeTauriListener","tauri","getCurrentWindow","tauriWindow","onResized","setupTauriListener","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","getSingularPaidMedia","singularMedia","accumulate","initValue","accumulator","calculateContainerSize","layout","sides","calculateAlbumLayout","ratios","isSingleMessage","allMedia","getRatios","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","w","h0","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","CHAT_STATS","throttledMakeChatDecision","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","clearInterval","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","renderPictogram","srcUrl","getPictogramDimensions","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","getStoryMediaHash","pictogramUrl","handleFastClick","shouldReset","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","VideoWithSelect","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","getCanAddContact","handleAddContact","emojiIconClassName","ContextMenuContainer","COLOR","FactCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","Separator","Game","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","getMessageText","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","handlePeerClick","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","renderIcon","RE_TME_LINK","buttonType","Invoice","invoice","getMessageInvoice","isTest","photoUrl","getWebDocumentHash","crossOrigin","formatCurrency","InvoiceMediaPreview","isConnected","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","MOVE_THRESHOLD","PinSvg","Location","countdownRef","location","getMessageLocation","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","timeLeft","formatCountdownShort","renderPin","pinClassName","heading","venueType","iconSrc","mapPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","forwardsCount","repliesTitle","isImported","isVideoProcessingPending","MessagePhoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","isClickable","isBought","starsAmount","getPercentage","total","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","getPollTypeString","summary","isPublic","closed","quiz","getReadableVotersCount","Poll","onSendVote","loadMessage","openPollResults","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","CheckboxGroup","selected","loadingOptions","isRound","RadioGroup","loadingOption","Sticker","withEffect","onStopEffect","effectRef","hasEffect","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","openModal","isMemojiSticker","getStickerDimensions","fullMediaClassName","AnimatedSticker","imageHash","imgBlobUrl","isSinglePeer","isSingleStory","BaseStory","selectPeerStories","targetUser","thumbUrl","TodoList","todoList","toggleTodoCompleted","completions","othersCanComplete","completedTasks","setCompletedTasks","completedTasksSet","canToggle","completedIds","itemId","handleTaskLabelClick","handleTaskToggle","newCompletedTasks","newCompletedId","newIncompletedId","incompletedIds","isReadOnly","tasks","task","completedBy","subLabel","getPeerFullTitle","onClickLabel","WebPageUniqueGift","pattern","isHover","markHover","unmarkHover","centerEmptiness","ringsCount","ovalFactor","WebPage","messageWebPage","onDocumentClick","onContainerClick","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","fullWebPage","hasCustomColor","isWithTextColor","documents","linkTimestamp","handleOpenTelegramLink","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","getIsSmallPhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","isSafe","caption","noForcedUpperCase","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","activeReactions","loadingThread","viaBotId","transcriptionId","viaBusinessBotId","selectFullWebPageFromMessage","isGroup","webPageStoryData","webPageStory","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","requestedChatTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","selectMessageLastPlaybackTimestamp","minFutureTime","starsSuggestedPostFutureMin","isReplyMediaNsfw","selectIsMessageProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","withAnimatedEffects","isLoadingComments","loadingChatId","loadingMessageId","tags","savedReactionTags","clickSuggestedMessageButton","rejectSuggestedPost","openSuggestedPostApprovalModal","disableContextMenuHint","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isDeclineDialogOpen","openDeclineDialog","closeDeclineDialog","declineReason","setDeclineReason","contextMenuTarget","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasTextContent","hasMessageText","setLanguage","detectLanguage","useTextLanguage","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasBottomCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","reactionsMaxWidth","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","Reactions","metaChildren","noRecentReactors","renderInvertedMediaContent","textContentClass","footerClass","hasContentAfterText","isMetaInText","renderWebPage","renderInvertibleMediaContent","getMessageWebPage","shouldRenderSenderName","renderForwardTitle","handleSuggestedMessageButton","handleDeclineReasonChange","handleDeclineConfirm","rejectComment","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","shouldRenderSuggestedPostButtons","isAccepted","isRejected","isSuggestedPostExpired","onCopy","onDoubleClick","onMouseMove","shouldReadMedia","EmbeddedMessage","forwardSender","Story","StoryMention","isOutside","targetHref","InputText","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","priceText","TON_CURRENCY_CODE","formatTonAsIcon","shouldConvertFromNanos","scheduleText","getMediaContentTypeDescription","renderMediaContentType","renderTextContent","isReplyToQuote","renderSender","isFullVideo","shouldRenderVideo","freezeWhenClosed","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","head","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","preloadIds","findIdsAroundCurrentId","currentStoryId","altVideos","getPreloadMediaHashes","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","startPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName"],"sourceRoot":""}