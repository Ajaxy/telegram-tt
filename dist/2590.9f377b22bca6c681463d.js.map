{"version":3,"file":"2590.9f377b22bca6c681463d.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/Icon.tsx","webpack://telegram-t/./src/components/common/InviteLink.module.scss?000d","webpack://telegram-t/./src/components/common/InviteLink.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseMessageInput';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseMessageInput(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: number } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        draft: parseMessageInput(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft));\n\n    const customEmojiIds = draft.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: number,\n  type: MessageListType,\n  draft?: ApiFormattedText,\n  editingDraft?: ApiFormattedText,\n  replyingToId?: number,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseMessageInput(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseMessageInput(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseMessageInput(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/i;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: number;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_MAC_OS, IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  useEffect(() => {\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code === 'KeyU') {\n        e.preventDefault();\n        handleQuickSelect();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideoHotkey'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectReplyingToId,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport EmbeddedMessage from '../../common/EmbeddedMessage';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyingToId?: number;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyingToId,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  onClear,\n}) => {\n  const {\n    setReplyingToId,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyingToId || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [forwardedMessagesCount],\n    forwardedMessagesCount ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(canAnimate && isShown, undefined, !shouldAnimate, undefined, !shouldAnimate);\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      setReplyingToId({ messageId: undefined });\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n\n  const leftIcon = useMemo(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      return 'icon-reply';\n    }\n    if (editingId) {\n      return 'icon-edit';\n    }\n    if (isForwarding) {\n      return 'icon-forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, replyingToId, shouldForceShowEditing]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className=\"ComposerEmbeddedMessage_inner\">\n        <div className=\"embedded-left-icon\">\n          <i className={buildClassName('icon', leftIcon)} />\n        </div>\n        <EmbeddedMessage\n          className=\"inside-input\"\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={editingId ? lang('EditMessage') : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          hasContextMenu={isForwarding && !isContextMenuDisabled}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    let message: ApiMessage | undefined;\n    if (replyingToId && !shouldForceShowEditing) {\n      message = selectChatMessage(global, chatId, replyingToId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyingToId && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && !forwardInfo?.hiddenUserName) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    return {\n      replyingToId,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseMessageInput(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type { IAnchorPosition, InlineBotSettings, ISettings } from '../../types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  ULU_APP as ULU_APP_CONSTANTS,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isMainThread,\n  isUserId,\n  ULU_APP as ULU_APP_UTILS,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectReplyingToId,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseMessageInput from '../../util/parseMessageInput';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: number;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  onDropHide?: NoneToVoidFunction;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    replyingToId?: number;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  replyingToId,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openChat,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n    replyingToId,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const shouldOpenRepliesChat = (\n      replyingToId\n      && ULU_APP_CONSTANTS.SHOULD_OPEN_REPLIES_CHAT_ON_REPLY\n      && ULU_APP_UTILS.doesChatSupportThreads(chat)\n    );\n    const repliesChatToOpen = {\n      id: chatId,\n      threadId: isMainThread(threadId) ? replyingToId : threadId,\n    };\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (currentAttachments.length) {\n      if (shouldOpenRepliesChat) openChat(repliesChatToOpen);\n      sendAttachments({\n        attachments: currentAttachments,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n    if (shouldOpenRepliesChat) openChat(repliesChatToOpen);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openChat({\n      id: chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList!);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = mainButtonState === MainButtonState.Edit\n    ? handleEditComplete\n    : mainButtonState === MainButtonState.Schedule ? handleSendScheduled\n      : handleSend;\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className=\"message-input-wrapper\">\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang('Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      replyingToId,\n      draft: selectDraft(global, chatId, threadId),\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { ChatTranslatedMessages } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerColorKey,\n  getSenderTitle,\n  isActionMessage,\n  isMessageTranslatable,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getPictogramDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useThumbnail from '../../hooks/useThumbnail';\nimport useMessageTranslation from '../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../middle/ActionMessage';\nimport Icon from './Icon';\nimport MediaSpoiler from './MediaSpoiler';\nimport MessageSummary from './MessageSummary';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  hasContextMenu?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  sender,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  noUserColors,\n  hasContextMenu,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : message?.forwardInfo?.hiddenUserName;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender?.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        sender && !noUserColors && `color-${getPeerColorKey(sender)}`,\n      )}\n      onClick={message && handleClick}\n      onMouseDown={message && handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      <div className=\"message-text\">\n        <p dir=\"auto\">\n          {!message ? (\n            customText || NBSP\n          ) : isActionMessage(message) ? (\n            <ActionMessage\n              message={message}\n              isEmbedded\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          ) : (\n            <MessageSummary\n              lang={lang}\n              message={message}\n              noEmoji={Boolean(mediaThumbnail)}\n              translatedText={translatedText}\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          )}\n        </p>\n        <div className=\"message-title\" dir=\"auto\">\n          {renderText(senderTitle || title || NBSP)}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n      {hasContextMenu && <Icon name=\"more\" className=\"embedded-more\" />}\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedMessage;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin, type StoryViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          withStory={withStory}\n          storyViewerOrigin={storyViewerOrigin}\n          storyViewerMode=\"single-peer\"\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import React from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  name: IconName;\n  className?: string;\n  style?: string;\n};\n\nconst Icon = ({\n  name,\n  className,\n  style,\n}: OwnProps) => {\n  return (\n    <i\n      className={buildClassName(`icon icon-${name}`, className)}\n      style={style}\n      aria-hidden\n    />\n  );\n};\n\nexport default Icon;\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"B0vKZtyx_PUcanptgC5I\",\"input\":\"ODZGlpe7i3BMlnIuPGUg\",\"moreMenu\":\"hDpRcaj2QNUxsuLouJu_\",\"title\":\"dB1NL4LBBWlUHShfCUpw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './InviteLink.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  inviteLink: string;\n  isDisabled?: boolean;\n  className?: string;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  inviteLink,\n  isDisabled,\n  className,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const copyLink = useLastCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyPrimaryClicked = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink(inviteLink);\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: inviteLink });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={inviteLink}\n          readOnly\n          onClick={handleCopyPrimaryClicked}\n        />\n        <DropdownMenu\n          className={styles.moreMenu}\n          trigger={PrimaryLinkMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyPrimaryClicked} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n          {onRevoke && (\n            <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n      <Button\n        size=\"smaller\"\n        disabled={isDisabled}\n        onClick={handleShare}\n      >\n        {lang('FolderLinkScreen.LinkActionShare')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\",\"-7s\":\"UYRulRheGjTql4xAbURj\",\"7S\":\"UYRulRheGjTql4xAbURj\",\"-14s\":\"luaiQWxNoz8gYcb2XqSG\",\"14S\":\"luaiQWxNoz8gYcb2XqSG\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  isSavedMessages,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qhFxTh5sx1oGuGccrzTb\",\"withBadge\":\"fltQkzCy9DRS9QWsAAH5\",\"badgeContainer\":\"ZGxYvTYQkAjpjvgBHMdH\",\"slide-in\":\"Ybb5P4BAFmSaffktaa81\",\"slideIn\":\"Ybb5P4BAFmSaffktaa81\",\"floating-badge-wrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"floatingBadgeWrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"rotate-in\":\"zyC6DJuexMszfxuDeBMR\",\"rotateIn\":\"zyC6DJuexMszfxuDeBMR\",\"floating-badge\":\"N8o73q2OT6d_kUTyUcg5\",\"floatingBadge\":\"N8o73q2OT6d_kUTyUcg5\",\"floating-badge-triangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floatingBadgeTriangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floating-badge-icon\":\"_qQItdFB5DScaFdSJR2a\",\"floatingBadgeIcon\":\"_qQItdFB5DScaFdSJR2a\",\"floating-badge-value\":\"h46zskGqCT1b3onjQB26\",\"floatingBadgeValue\":\"h46zskGqCT1b3onjQB26\",\"left\":\"OP8qshGP9fzy9bbMvWn2\",\"right\":\"EjQP1rE5iExOnGWJyYIe\",\"progress\":\"ASLJoYhAmOvHasjzMKYg\",\"fullProgress\":\"tmwWY_SiGqqKrC8oUUDW\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon icon-${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) return;\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPeerColorKey,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst noneToVoid: NoneToVoidFunction = () => void 0;\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick = noneToVoid,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getPeerColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const currentLevel = level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageKey,\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CBuciapCXTFHGIT8QJjp\",\"particle\":\"zSAQoiw2P8dHog4GGC6Y\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UoQ7Ahl_08BYJER7dkXg\",\"animated-icon\":\"m6I0yrKxFYZrVajqEjYY\",\"animatedIcon\":\"m6I0yrKxFYZrVajqEjYY\",\"effect\":\"DUYRztiKh76RsdbcJpu8\",\"animating\":\"_sWZKdctR4GWBAZk5LvT\",\"withEffectOnly\":\"bcQvAAQmccIErVUj7YDo\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { availableReactions, genericEmojiEffects } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('DoneChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('DoneChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype FolderType = 'all' | 'archived' | 'folder';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: FolderType;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  folderType?: FolderType;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, folderType, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  const isInbox = folderType === 'all';\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{isInbox ? lang('InboxIsEmpty') : lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    folderType,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"root\":\"auVVCT950ajs6Uf4jI_w\",\"title\":\"RrIwnolHiQkojIfDEmg3\",\"info\":\"W7svz8CjmnPmDhwiz6cJ\",\"buttons\":\"lV9Uc02uJwQff0VQsKTj\",\"button\":\"D0dko7sVnw0KDtqjY0bH\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : (viewportIds && !viewportIds.length) || isAllFolder ? ( // TODO: improve tempfix for allFolder\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiFormattedText, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { Thread } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {Boolean(lastMessage.replyToStoryId) && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { getMessageHtmlId, isChatChannel } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: number;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(message.chatId, message.replyToMessageId, targetMessage);\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti();\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    !isGift && !isSuggestedAvatar && 'in-one-row',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && <span className=\"action-message-content\">{renderContent()}</span>}\n      {isGift && renderGift()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar\n          message={message}\n          renderContent={renderContent}\n        />\n      )}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, replyToMessageId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = replyToMessageId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n    const premiumGiftSticker = global.premiumGifts?.stickers?.[0];\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (e.altKey) { // for onSendSchedule Alt+Enter hotkey\n      return;\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  canSendReaction, getReactionUniqueKey, isSameReaction, sortReactions,\n} from '../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n  className?: string;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n  className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent-bordered\"\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir=\"auto\"\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => animateScroll(\n        messagesContainer,\n        elementRef.current!,\n        isToBottom ? 'end' : 'centerOrTop',\n        FOCUS_MARGIN,\n        focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n        focusDirection,\n        undefined,\n        isResizingContainer,\n        true,\n      );\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiMessageStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport './StatisticsOverview.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'views', title: 'Stats.Message.Views', isPlain: true },\n    {\n      name: 'forwards', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n  [\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiMessageStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName('StatisticsOverview__value', isChangeNegative && 'negative')}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = type === 'boost' ? BOOST_OVERVIEW : type === 'message' ? MESSAGE_OVERVIEW : type === 'group'\n    ? GROUP_OVERVIEW : CHANNEL_OVERVIEW;\n\n  return (\n    <div className={buildClassName('StatisticsOverview', className)}>\n      <div className=\"StatisticsOverview__header\">\n        {title && (\n          <div className=\"StatisticsOverview__title\">\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className=\"StatisticsOverview__caption\">\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className=\"StatisticsOverview__table\">\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    {cell.withAbsoluteValue && (\n                      <span className=\"StatisticsOverview__table-value\">\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={`StatisticsOverview__table-${cell.withAbsoluteValue ? 'secondary-' : ''}value`}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className=\"StatisticsOverview__table-cell\">\n                  <b className=\"StatisticsOverview__table-value\">\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { pause } from '../../../util/schedulers';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    const preloadHashes = async (mediaHashes: { hash: string; format: ApiMediaFormat }[]) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format }) => {\n        mediaLoader.fetch(hash, format).then((result) => {\n          if (format === ApiMediaFormat.Progressive) {\n            preloadProgressive(result);\n          }\n        });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n\n  return ids.slice(currentIndex - aroundAmount, currentIndex + aroundAmount);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: { hash: string; format: ApiMediaFormat }[] = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: story.content.video ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    // Alt video with different codec\n    if (story.content.altVideo) {\n      mediaHashes.push({ hash: getStoryMediaHash(story, 'full', true)!, format: ApiMediaFormat.Progressive });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n\n  setTimeout(() => {\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"oWM0Zdb5uhUcOVtc99aS\",\"mediaArea\":\"qF5NAjzN826sfFvUwCi1\",\"preview\":\"dDrvIyufIoAgicpd5jBf\",\"shiny\":\"mHQ5t7g14fbpeDSyTLcd\",\"wave\":\"PlA2GEm5aGvfxsFwsAwE\",\"suggestedReaction\":\"K8z7QedYZHumSrLQCrZq\",\"dark\":\"cKzIdSabAL8MJ9G60u77\",\"background\":\"QxSGHD_yTaeyLhKS2qqz\",\"flipped\":\"CiCfsJ1VaeHZ624tudjv\",\"reaction\":\"Oi4FupikW1BQIPXxj9a7\",\"withCount\":\"dCSRvNsQTjKPeBul8iIX\",\"reactionCount\":\"WAKY7bjrmisH3k1XFQMZ\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, reactions } = story;\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      <ReactionAnimatedEmoji\n        className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n        reaction={reaction}\n        containerId={containerId}\n        size={customEmojiSize}\n        effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n        shouldPause={isPreview}\n        shouldLoop={!isPreview}\n      />\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    if (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue') {\n      openMapModal({ geoPoint: mediaArea.geo });\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isActive && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat);\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { onBeforeUnload } from '../util/schedulers';\nimport useLastCallback from './useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('MarkNotDone'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('MarkDone'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      !isSelf && actionMute,\n      actionPin,\n      actionAddToFolder,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nfunction useTimeout(callback: () => void, delay?: number, dependencies: readonly any[] = []) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [delay, savedCallback, ...dependencies]);\n}\n\nexport default useTimeout;\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from '../global/helpers';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    requestMeasure(() => element.focus());\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"peer\":\"N26JMlalq5jDriKQ7nFD\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\",\"avatarHidden\":\"aPEbisewADPmseTVcQxO\",\"ghost\":\"bVo8M4JDvB9c6gUvnHTE\",\"ghostAnimateName\":\"DuJzmNpO8VBweCzETZQJ\",\"ghostRevealName\":\"ghy_xXQVvFUwJrNg9uhA\",\"ghostLast\":\"_mqUJoir6gIYUJWb0zFw\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","peers","root","avatar","runDebounced","debounce","cb","_ref4","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","MAX_ASPECT_RATIO","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","Date","now","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","getAttachmentType","attachment","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseMessageInput","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","innerHTML","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","name","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","bot","isInSideMenu","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","find","isMenuOpen","openMenu","closeMenu","menuPosition","setMenuPosition","handleContextMenu","rect","currentTarget","right","bottom","handleClick","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","botId","isEnabled","MenuItem","customIcon","AttachBotIcon","onContextMenu","shortName","Menu","isOpen","positionX","autoClose","withPortal","onClose","onCloseAnimationEnd","destructive","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","handleDocumentSelect","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","disabled","AttachBotItem","BotCommandMenu","BotCommandTooltip","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","replyingToId","selectReplyingToId","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","sender","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","onClear","setReplyingToId","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","leftIcon","customText","strippedMessage","strippedText","EmbeddedMessage","hasContextMenu","faded","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","draft","selectDraft","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","stealthMode","stories","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openChat","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","action","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","localOnly","handleSendAttachments","handleSend","shouldOpenRepliesChat","ULU_APP_CONSTANTS","SHOULD_OPEN_REPLIES_CHAT_ON_REPLY","ULU_APP_UTILS","doesChatSupportThreads","repliesChatToOpen","isMainThread","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleDownload","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","forwardSender","isProtected","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","observeIntersectionForPlaying","mediaBlobUrl","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","getMessageIsSpoiler","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","getPeerColorKey","getPictogramDimensions","srcUrl","MediaSpoiler","isVisible","renderPictogram","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","Icon","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","onRevoke","openChatWithDraft","copyLink","handleCopyPrimaryClicked","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","outgoingStatus","MessageOutgoingStatus","getMessageVideo","hasSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","withAnimation","clientY","shiftX","shiftY","Keys","Transition","activeKey","DEFAULT_TEXT","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noEmojiStatus","adminMember","onEmojiStatusClick","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","RippleEffect","connectionState","mediaViewer","currentTopicId","userFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","canPlayVideo","openPremiumModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","isVideo","renderPhoto","canCopyTitle","ProfilePhoto","noneToVoid","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","currentLevel","hasNextLevel","levelProgress","remainingBoosts","renderMessageText","highlight","emojiSize","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","renderTextWithEntities","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","isLottie","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","effect","CustomEmojiEffect","ChatFolderModal","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","isInbox","AnimatedIconFromSticker","fluid","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","containerRef","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","container","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","useEnsureMessage","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","senderName","getMessageSenderName","replyToStoryId","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","isChatGroup","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","then","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","premiumGiftSticker","premiumGifts","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isSuggestedAvatar","shouldShowConfettiRef","targetUsers","isContextMenuShown","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","months","nonInteractive","ActionMessageSuggestedAvatar","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isDiscussionThread","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","stickerSetInfo","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","count","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","REACTION_SIZE","cn","createClassNameBuilder","noAppearAnimation","chosen","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","enabledReactions","currentReactions","maxUniqueReactions","reactions","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","ReactionSelectorReaction","getReactionUniqueKey","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","previewMediaHash","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","drawImage","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","Progressive","head","preload","autoplay","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","openMapModal","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","geoPoint","geo","handleMediaAreaClick","MediaAreaSuggestedReaction","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","trackType","handlers","onInit","shouldPlay","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","lastCallback","onBeforeUnload","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","savedCallback","ConnectorClass","channel","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","fillColor","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}