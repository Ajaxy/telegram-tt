{"version":3,"file":"2786.8822cfc420377e0acc77.js","mappings":"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","sources":["webpack://telegram-t/./node_modules/@cryptography/aes/dist/es/aes.js","webpack://telegram-t/./node_modules/big-integer/BigInteger.js","webpack://telegram-t/./node_modules/os-browserify/browser.js","webpack://telegram-t/./node_modules/async-mutex/index.mjs"],"sourcesContent":["var S = new Uint8Array(256);\nvar Si = new Uint8Array(256);\nvar T1 = new Uint32Array(256);\nvar T2 = new Uint32Array(256);\nvar T3 = new Uint32Array(256);\nvar T4 = new Uint32Array(256);\nvar T5 = new Uint32Array(256);\nvar T6 = new Uint32Array(256);\nvar T7 = new Uint32Array(256);\nvar T8 = new Uint32Array(256);\nfunction computeTables() {\n    var d = new Uint8Array(256);\n    var t = new Uint8Array(256);\n    var x2;\n    var x4;\n    var x8;\n    var s;\n    var tEnc;\n    var tDec;\n    var x = 0;\n    var xInv = 0;\n    // Compute double and third tables\n    for (var i = 0; i < 256; i++) {\n        d[i] = i << 1 ^ (i >> 7) * 283;\n        t[d[i] ^ i] = i;\n    }\n    for (; !S[x]; x ^= x2 || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        S[x] = s;\n        Si[s] = x;\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n        T1[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T2[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T3[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T4[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T5[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T6[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T7[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T8[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        xInv = t[xInv] || 1;\n    }\n}\n\n/**\n * Gets a uint32 from string in big-endian order order\n */\nfunction s2i(str, pos) {\n    return (str.charCodeAt(pos) << 24\n        ^ str.charCodeAt(pos + 1) << 16\n        ^ str.charCodeAt(pos + 2) << 8\n        ^ str.charCodeAt(pos + 3));\n}\n\n/* eslint-disable import/prefer-default-export */\n/**\n * Helper function for transforming string key to Uint32Array\n */\nfunction getWords(key) {\n    if (key instanceof Uint32Array) {\n        return key;\n    }\n    if (typeof key === 'string') {\n        if (key.length % 4 !== 0)\n            for (var i = key.length % 4; i <= 4; i++)\n                key += '\\0x00';\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4)\n            buf[i / 4] = s2i(key, i);\n        return buf;\n    }\n    if (key instanceof Uint8Array) {\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4) {\n            buf[i / 4] = (key[i] << 24\n                ^ key[i + 1] << 16\n                ^ key[i + 2] << 8\n                ^ key[i + 3]);\n        }\n        return buf;\n    }\n    throw new Error('Unable to create 32-bit words');\n}\nfunction xor(left, right, to) {\n    if (to === void 0) { to = left; }\n    for (var i = 0; i < left.length; i++)\n        to[i] = left[i] ^ right[i];\n}\n\ncomputeTables();\n/**\n * Low-level AES Cipher\n */\nvar AES = /** @class */ (function () {\n    function AES(_key) {\n        var key = getWords(_key);\n        if (key.length !== 4 && key.length !== 6 && key.length !== 8) {\n            throw new Error('Invalid key size');\n        }\n        this.encKey = new Uint32Array(4 * key.length + 28);\n        this.decKey = new Uint32Array(4 * key.length + 28);\n        this.encKey.set(key);\n        var rcon = 1;\n        var i = key.length;\n        var tmp;\n        // schedule encryption keys\n        for (; i < 4 * key.length + 28; i++) {\n            tmp = this.encKey[i - 1];\n            // apply sbox\n            if (i % key.length === 0 || (key.length === 8 && i % key.length === 4)) {\n                tmp = S[tmp >>> 24] << 24 ^ S[(tmp >> 16) & 255] << 16 ^ S[(tmp >> 8) & 255] << 8 ^ S[tmp & 255];\n                // shift rows and add rcon\n                if (i % key.length === 0) {\n                    tmp = tmp << 8 ^ tmp >>> 24 ^ (rcon << 24);\n                    rcon = rcon << 1 ^ (rcon >> 7) * 283;\n                }\n            }\n            this.encKey[i] = this.encKey[i - key.length] ^ tmp;\n        }\n        // schedule decryption keys\n        for (var j = 0; i; j++, i--) {\n            tmp = this.encKey[j & 3 ? i : i - 4];\n            if (i <= 4 || j < 4) {\n                this.decKey[j] = tmp;\n            }\n            else {\n                this.decKey[j] = (T5[S[tmp >>> 24]]\n                    ^ T6[S[(tmp >> 16) & 255]]\n                    ^ T7[S[(tmp >> 8) & 255]]\n                    ^ T8[S[tmp & 255]]);\n            }\n        }\n    }\n    AES.prototype.encrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.encKey[0];\n        var b = message[1] ^ this.encKey[1];\n        var c = message[2] ^ this.encKey[2];\n        var d = message[3] ^ this.encKey[3];\n        var rounds = this.encKey.length / 4 - 2;\n        var k = 4;\n        var a2;\n        var b2;\n        var c2;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T1[a >>> 24] ^ T2[(b >> 16) & 255] ^ T3[(c >> 8) & 255] ^ T4[d & 255] ^ this.encKey[k];\n            b2 = T1[b >>> 24] ^ T2[(c >> 16) & 255] ^ T3[(d >> 8) & 255] ^ T4[a & 255] ^ this.encKey[k + 1];\n            c2 = T1[c >>> 24] ^ T2[(d >> 16) & 255] ^ T3[(a >> 8) & 255] ^ T4[b & 255] ^ this.encKey[k + 2];\n            d = T1[d >>> 24] ^ T2[(a >> 16) & 255] ^ T3[(b >> 8) & 255] ^ T4[c & 255] ^ this.encKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n            // console.log(a, b, c, d);\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[i] = (S[a >>> 24] << 24\n                ^ S[(b >> 16) & 255] << 16\n                ^ S[(c >> 8) & 255] << 8\n                ^ S[d & 255]\n                ^ this.encKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    AES.prototype.decrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.decKey[0];\n        var b = message[3] ^ this.decKey[1];\n        var c = message[2] ^ this.decKey[2];\n        var d = message[1] ^ this.decKey[3];\n        var rounds = this.decKey.length / 4 - 2;\n        var a2;\n        var b2;\n        var c2;\n        var k = 4;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T5[a >>> 24] ^ T6[(b >> 16) & 255] ^ T7[(c >> 8) & 255] ^ T8[d & 255] ^ this.decKey[k];\n            b2 = T5[b >>> 24] ^ T6[(c >> 16) & 255] ^ T7[(d >> 8) & 255] ^ T8[a & 255] ^ this.decKey[k + 1];\n            c2 = T5[c >>> 24] ^ T6[(d >> 16) & 255] ^ T7[(a >> 8) & 255] ^ T8[b & 255] ^ this.decKey[k + 2];\n            d = T5[d >>> 24] ^ T6[(a >> 16) & 255] ^ T7[(b >> 8) & 255] ^ T8[c & 255] ^ this.decKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[3 & -i] = (Si[a >>> 24] << 24\n                ^ Si[(b >> 16) & 255] << 16\n                ^ Si[(c >> 8) & 255] << 8\n                ^ Si[d & 255]\n                ^ this.decKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    return AES;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE = /** @class */ (function () {\n    function AES_IGE(key, iv, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.key = getWords(key);\n        this.iv = getWords(iv);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var prevX = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevY = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = text.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.encrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                cipherText[j] = y[k];\n        }\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        var cipherText = getWords(message);\n        var text = buf || new Uint32Array(cipherText.length);\n        var prevY = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevX = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = cipherText.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.decrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                text[j] = y[k];\n        }\n        return text;\n    };\n    return AES_IGE;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE$1 = /** @class */ (function () {\n    function AES_IGE(key, counter, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.offset = 0;\n        this.key = getWords(key);\n        this.counter = getWords(counter);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n        if (this.counter.length !== 4) {\n            throw new Error('AES-CTR mode counter must be 16 bytes length');\n        }\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var offset = this.offset;\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = this.cipher.encrypt(this.counter);\n            for (var j = i, k = offset; j < text.length && k < this.blockSize; j++, k++)\n                cipherText[j] = x[k] ^ text[j];\n            if (text.length - i >= this.blockSize)\n                this.incrementCounter();\n            if (offset) {\n                i -= offset;\n                offset = 0;\n            }\n        }\n        this.offset = (this.offset + (text.length % 4)) % 4;\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        return this.encrypt(message, buf);\n    };\n    AES_IGE.prototype.incrementCounter = function () {\n        // increment counter\n        for (var carry = this.counter.length - 1; carry >= 0; carry--) {\n            if (++this.counter[carry] < 0xFFFFFFFF)\n                break; // If overflowing, it'll be 0 and we'll have to continue propagating the carry\n        }\n    };\n    return AES_IGE;\n}());\n\nexport default AES;\nexport { AES_IGE$1 as CTR, AES_IGE as IGE };\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = function(v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value << v.value)\r\n    }\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = function (v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value >> v.value)\r\n    }\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            const task = { resolve, reject, weight, priority };\n            const i = findIndexFromEnd(this._queue, (other) => priority <= other.priority);\n            if (i === -1 && weight <= this._value) {\n                // Needs immediate dispatch, skip the queue\n                this._dispatchItem(task);\n            }\n            else {\n                this._queue.splice(i + 1, 0, task);\n            }\n        });\n    }\n    runExclusive(callback_1) {\n        return __awaiter$2(this, arguments, void 0, function* (callback, weight = 1, priority = 0) {\n            const [value, release] = yield this.acquire(weight, priority);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        if (this._couldLockImmediately(weight, priority)) {\n            return Promise.resolve();\n        }\n        else {\n            return new Promise((resolve) => {\n                if (!this._weightedWaiters[weight - 1])\n                    this._weightedWaiters[weight - 1] = [];\n                insertSorted(this._weightedWaiters[weight - 1], { resolve, priority });\n            });\n        }\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatchQueue();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatchQueue();\n    }\n    cancel() {\n        this._queue.forEach((entry) => entry.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatchQueue() {\n        this._drainUnlockWaiters();\n        while (this._queue.length > 0 && this._queue[0].weight <= this._value) {\n            this._dispatchItem(this._queue.shift());\n            this._drainUnlockWaiters();\n        }\n    }\n    _dispatchItem(item) {\n        const previousValue = this._value;\n        this._value -= item.weight;\n        item.resolve([previousValue, this._newReleaser(item.weight)]);\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        if (this._queue.length === 0) {\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                waiters.forEach((waiter) => waiter.resolve());\n                this._weightedWaiters[weight - 1] = [];\n            }\n        }\n        else {\n            const queuedPriority = this._queue[0].priority;\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                const i = waiters.findIndex((waiter) => waiter.priority <= queuedPriority);\n                (i === -1 ? waiters : waiters.splice(0, i))\n                    .forEach((waiter => waiter.resolve()));\n            }\n        }\n    }\n    _couldLockImmediately(weight, priority) {\n        return (this._queue.length === 0 || this._queue[0].priority < priority) &&\n            weight <= this._value;\n    }\n}\nfunction insertSorted(a, v) {\n    const i = findIndexFromEnd(a, (other) => v.priority <= other.priority);\n    a.splice(i + 1, 0, v);\n}\nfunction findIndexFromEnd(a, predicate) {\n    for (let i = a.length - 1; i >= 0; i--) {\n        if (predicate(a[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, arguments, void 0, function* (priority = 0) {\n            const [, releaser] = yield this._semaphore.acquire(1, priority);\n            return releaser;\n        });\n    }\n    runExclusive(callback, priority = 0) {\n        return this._semaphore.runExclusive(() => callback(), 1, priority);\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock(priority = 0) {\n        return this._semaphore.waitForUnlock(1, priority);\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield (isSemaphore(sync)\n                        ? sync.acquire(weight, priority)\n                        : sync.acquire(priority));\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight, priority) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight, priority);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                const handle = setTimeout(() => reject(timeoutError), timeout);\n                (isSemaphore(sync)\n                    ? sync.waitForUnlock(weight, priority)\n                    : sync.waitForUnlock(priority)).then(() => {\n                    clearTimeout(handle);\n                    resolve();\n                });\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\nfunction isSemaphore(sync) {\n    return sync.getValue !== undefined;\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n"],"names":["S","Uint8Array","Si","T1","Uint32Array","T2","T3","T4","T5","T6","T7","T8","getWords","key","length","i","buf","pos","str","charCodeAt","Error","xor","left","right","to","x2","x4","s","tEnc","tDec","d","t","x","xInv","computeTables","AES","_key","this","encKey","decKey","set","tmp","rcon","j","prototype","encrypt","_message","a2","b2","c2","message","out","a","b","c","rounds","k","decrypt","AES_IGE","iv","blockSize","cipher","text","cipherText","prevX","subarray","prevY","yXOR","y","counter","offset","incrementCounter","carry","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","value","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","n","Math","floor","arrayToSmall","arr","trim","compareAbs","createArray","Array","truncate","ceil","add","sum","l_a","l_b","r","base","push","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","multiplySmall","shiftLeft","concat","multiplyKaratsuba","max","slice","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","bigInt","modPow","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","undefined","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","p","e","min","gcd","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","toJSON","parseInt","minusOne","lcm","isInstance","usedRNG","random","low","range","restricted","top","fromArray","module","hasOwnProperty","exports","endianness","hostname","location","loadavg","uptime","freemem","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","E_CANCELED","Semaphore","constructor","_value","_cancelError","_queue","_weightedWaiters","acquire","weight","priority","Promise","resolve","reject","task","findIndexFromEnd","other","_dispatchItem","splice","runExclusive","callback_1","thisArg","_arguments","arguments","generator","callback","P","fulfilled","step","rejected","done","then","waitForUnlock","_couldLockImmediately","insertSorted","isLocked","getValue","setValue","_dispatchQueue","cancel","forEach","entry","_drainUnlockWaiters","item","previousValue","_newReleaser","called","waiters","waiter","queuedPriority","findIndex","predicate","Mutex","cancelError","_semaphore","releaser"],"sourceRoot":""}