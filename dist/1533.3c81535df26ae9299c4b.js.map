{"version":3,"file":"1533.3c81535df26ae9299c4b.js","mappings":"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lB,gBACAqhB,2BACA6D,yBAA0B1H,GAAc0H,yBACxCC,gBAAiB3H,GAAc2H,gBAC/B1tB,mBACA8pB,qBACAC,0BACA4D,eAAgBp6B,EAAUo6B,iBAtLZzxC,CAplEwB0xC,EAC1CxoC,OACA8kC,gBACA2D,gBACAxF,oBACA+B,yBACA0D,UACAtxB,WACAkZ,iBACAr4B,SACA0hB,YACA6K,WACA6d,sBACAxoB,mBACAuB,SACAnkB,QACA6pC,gBACAkC,gBACAV,2BACA1J,wBACA2J,yBACA9B,iBACA5I,kBACAqN,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAc,4BACAtR,gBACAoN,cACAC,oBACAzL,0BACAgN,aACAC,iBACAlE,wBACA+D,0BACAkD,oBACApD,uBACAM,oBACAG,uBACA5+B,mBACAC,iBACAu6B,eACA0F,gBACAnB,wBACAjF,yBACAC,4BACAI,qBACAC,iBACA4E,gBACAE,cACAE,sBACAE,eACA5E,cACAD,YACAa,gBACAX,kBACAE,uBACA4E,iBACA7W,cACAgX,sBACA3J,sBACAlN,SACAsS,YACArB,+BACAwH,4BACAC,mBACA37B,WACA1W,aACAouC,sBACAC,gBACA4C,iBACAE,yBACAvX,0BACAyS,qBACAiF,eACAD,uBACAG,sBACAC,gBACA/E,uBACA5F,kBACAH,aACAgL,2BACA5X,qBACAqT,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAb,mBACAiF,qCACAjlB,gBACAqhB,2BACA8D,mBACA1tB,mBACA8pB,qBACAC,0BACA4D,kBACAO,cACAC,WACAC,UACAC,iBAEA,MAAM,YACJC,GAAW,WACXC,GAAU,WACVC,GAAU,cACVC,GAAa,eACbC,GAAc,kBACdC,GAAiB,mBACjBC,GAAkB,qBAClBC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpB/hB,GAAgB,oCAChBgiB,GAAmC,wBACnCC,GAAuB,cACvBC,GAAa,oBACbC,GAAmB,kBACnBC,GAAiB,YACjBC,GAAW,y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iB,EACtG43D,eAA0C,iBAAnBA,GAA8BA,QAAiB53D,EACtEmiJ,eAAgBF,GAAYE,QAAiBniJ,EAC7CqiJ,iBAAkBJ,GAAYI,QAAmBriJ,EACjDsiJ,oBAAqBL,GAAYK,QAAsBtiJ,EACvDwiJ,aAAcP,GAAYO,QAAexiJ,EACzCyiJ,mBAAoBR,GAAYQ,QAAqBziJ,EACrD0iJ,qBAAsBT,GAAYS,QAAuB1iJ,EACzDokJ,gBACAqC,KAAMjnJ,EAAOknJ,mBAAmB36H,MAChC24H,sBACAC,kBACAK,iBACA34G,UACAsd,QACAk7F,gBACA3sF,yBACA87E,mBACA7qG,iBACA9lB,mBACA6d,eACAgkH,oBACAv8G,YAhPcppC,CA5+CuBonJ,EACzCj8I,UACAk8I,+BACAxuF,gCACAC,gCACAi3B,QACA73B,YACAs/C,aACA+oC,iBACA+G,aACAnT,YACAoT,kBACAC,cACA/G,iBACA5+H,YACA4lI,iBACAC,0BACAlH,yBACA1rC,kBACA0xC,mBACAmB,gBACAtuH,SACA4nH,mBACA1gH,UACA4gH,iBACAC,gBACAC,aACAG,eACAM,mBACAC,gBACAG,sBACAE,6BACAC,oBACAE,cACAD,kBACAE,eACA/2H,kBACA4sC,kBACA0rF,qBACA+C,qBACApuF,eACAmtF,mBACAnD,aACAE,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACA9iH,gBACAc,kBACA4rF,iBACAE,uBACAz+E,aACA0yG,WACAne,YACA2gB,aACApxD,iBACAuxD,uBACAmB,sBACA+B,iBACA5tD,kBACA14E,cACA0lI,mBACAljI,YACAqhI,mBACAp2G,sBACAu4G,mBACAne,2BACAnlH,mBACAkjI,gBACA5gI,YACAozC,iBACA0zE,oBACA+Z,oBACAC,sBACA38C,yBACAyqC,qBACAkQ,qBACAyD,wBACAtG,qBACAgD,gBACAD,gBACApxC,oBACA0xC,0BACA8B,4BACAjC,gCACAE,oCACAmC,uBACA7F,gBACA/P,eACAlO,yBACAp5B,wBACAk7C,gBACAqC,QACA/B,sBACAC,kBACAt4G,UACAsd,QACAk7F,gBACA3sF,yBAC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","sources":["webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.tsx","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.module.scss?c6aa","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/ChatTags.module.scss?bf8a","webpack://telegram-t/./src/components/left/main/ChatTags.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useLoadLinkPreview.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ToDoListModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.module.scss?90e3","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/media/useMessageMediaHash.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/animations/useVtn.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/common/helpers/preloadDocumentMedia.ts","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useScrollNotch.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/components/right/statistics/helpers/isGraph.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/common/profile/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/profile/ProfilePinnedGifts.module.scss?70d3","webpack://telegram-t/./src/components/common/profile/ProfilePinnedGifts.tsx","webpack://telegram-t/./src/components/common/profile/ProfileInfo.module.scss?af06","webpack://telegram-t/./src/components/common/profile/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/TodoList.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): Complete<StateProps> => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import { type ElementRef, useEffect, useRef, useSignal } from '@teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport stopEvent from '../../util/stopEvent';\nimport useLastCallback from '../useLastCallback';\n\ntype State = 'overscroll' | 'animating' | 'normal';\n\ntype ActiveScrollContext = {\n  lastDeltas: number[];\n  lastAverageDelta: number;\n  isStartedAtTop: boolean;\n  resetStartTopAt?: number;\n  timeout: number | undefined;\n};\n\nconst LAST_DELTA_COUNT = 7;\nconst ACTIVE_SCROLL_RESET_TIMEOUT = 100;\nconst NEW_INPUT_DELTA_THRESHOLD = 7;\nconst OVERSCROLL_CONTAINER_CLASS = 'no-overscroll';\nconst NO_TOUCH_CONTAINER_CLASS = 'no-touch';\nconst TRANSITION_DURATION = 350;\nconst DRAG_TRIGGER_DISTANCE = 75;\n\nconst initialActiveScrollContext: ActiveScrollContext = {\n  lastDeltas: new Array(LAST_DELTA_COUNT).fill(0),\n  lastAverageDelta: 0,\n  isStartedAtTop: false,\n  resetStartTopAt: undefined,\n  timeout: undefined,\n};\n\nexport default function useTopOverscroll(\n  containerRef: ElementRef<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  const [getState, setState] = useSignal<State>('normal');\n  const activeScrollRef = useRef<ActiveScrollContext>({ ...initialActiveScrollContext });\n  const transitionTimeoutRef = useRef<number | undefined>();\n  const touchStartYRef = useRef<number | undefined>();\n\n  const triggerOverscroll = useLastCallback(() => {\n    clearTimeout(transitionTimeoutRef.current);\n    setState('overscroll');\n    onOverscroll?.();\n  });\n\n  const triggerReset = useLastCallback(() => {\n    setState('animating');\n    transitionTimeoutRef.current = window.setTimeout(() => {\n      setState('normal');\n    }, TRANSITION_DURATION);\n    onReset?.();\n  });\n\n  const scheduleResetActiveScroll = useLastCallback((timeout: number) => {\n    clearTimeout(activeScrollRef.current.timeout);\n    activeScrollRef.current.timeout = window.setTimeout(() => {\n      activeScrollRef.current = { ...initialActiveScrollContext };\n    }, timeout);\n  });\n\n  const handleWheel = useLastCallback((e: WheelEvent) => {\n    const container = containerRef.current;\n    if (!container || e.defaultPrevented) {\n      return;\n    }\n\n    const { deltaY } = e;\n    const { scrollTop } = container;\n    const state = getState();\n\n    const activeScroll = activeScrollRef.current;\n    const lastAverageDelta = activeScroll.lastAverageDelta;\n\n    const isStarting = activeScroll.lastDeltas.at(-1) === 0\n      || (activeScroll.resetStartTopAt && Date.now() >= activeScroll.resetStartTopAt);\n    if (scrollTop === 0 && isStarting) {\n      activeScroll.isStartedAtTop = true;\n      activeScroll.resetStartTopAt = undefined;\n    }\n\n    const lastDeltas = activeScrollRef.current.lastDeltas.slice(); // Copy\n    lastDeltas.push(deltaY);\n    if (lastDeltas.length > LAST_DELTA_COUNT) {\n      lastDeltas.shift();\n    }\n    activeScrollRef.current.lastDeltas = lastDeltas;\n    const currentAverageDelta = lastDeltas.reduce((a, b) => a + b, 0) / lastDeltas.length;\n    activeScrollRef.current.lastAverageDelta = currentAverageDelta;\n\n    const isNewInput = Math.abs(currentAverageDelta) - Math.abs(lastAverageDelta) > NEW_INPUT_DELTA_THRESHOLD;\n\n    scheduleResetActiveScroll(ACTIVE_SCROLL_RESET_TIMEOUT);\n\n    // If we're at the top and scrolling up\n    if (scrollTop === 0 && deltaY < 0 && state !== 'overscroll') {\n      if (!activeScroll.resetStartTopAt) {\n        // Schedule delta reset, so we would respond to new input with `isStartedAtTop` flag set\n        activeScroll.resetStartTopAt = Date.now() + ACTIVE_SCROLL_RESET_TIMEOUT;\n      }\n\n      // Only trigger overscroll on new input, ignore momentum events\n      if (isNewInput && activeScroll.isStartedAtTop) {\n        triggerOverscroll();\n      }\n      return;\n    }\n\n    // Ignore scroll events during collapse animation\n    if (state === 'animating' && deltaY > 0) {\n      stopEvent(e);\n      return;\n    }\n\n    // If we're overscrolled, any down wheel event should reset\n    if (state === 'overscroll' && deltaY > 0) {\n      triggerReset();\n      stopEvent(e);\n      return;\n    }\n  });\n\n  const handleTouchStart = useLastCallback((e: TouchEvent) => {\n    const container = containerRef.current;\n    if (!container || e.touches.length !== 1) return;\n\n    const { scrollTop } = container;\n    const state = getState();\n\n    // Register touch start position when at top or in overscroll state\n    if (scrollTop === 0 || state === 'overscroll') {\n      touchStartYRef.current = e.touches[0].clientY;\n    }\n  });\n\n  const handleTouchMove = useLastCallback((e: TouchEvent) => {\n    const container = containerRef.current;\n    const startY = touchStartYRef.current;\n    if (!container || startY === undefined || e.touches.length !== 1) return;\n\n    const { scrollTop } = container;\n    const state = getState();\n    const currentY = e.touches[0].clientY;\n    const deltaY = currentY - startY;\n\n    if (state === 'animating') {\n      return;\n    }\n\n    // If we're at the top and dragging down by more than trigger distance\n    if (scrollTop === 0 && deltaY > DRAG_TRIGGER_DISTANCE && state !== 'overscroll') {\n      triggerOverscroll();\n      touchStartYRef.current = undefined; // Reset to prevent multiple triggers\n      return;\n    }\n\n    // If we're overscrolled and dragging up by more than trigger distance, reset\n    if (state === 'overscroll' && deltaY < -DRAG_TRIGGER_DISTANCE) {\n      triggerReset();\n      touchStartYRef.current = undefined; // Reset to prevent multiple triggers\n      return;\n    }\n  });\n\n  const handleTouchEnd = useLastCallback(() => {\n    touchStartYRef.current = undefined;\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (isDisabled || !container) return;\n    requestMutation(() => {\n      container.classList.add(OVERSCROLL_CONTAINER_CLASS);\n    });\n\n    return () => {\n      requestMutation(() => {\n        container.classList.remove(OVERSCROLL_CONTAINER_CLASS);\n      });\n    };\n  }, [containerRef, isDisabled]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (isDisabled || !container) return;\n    requestMutation(() => {\n      container.classList.toggle(NO_TOUCH_CONTAINER_CLASS, getState() !== 'normal');\n    });\n\n    return () => {\n      requestMutation(() => {\n        container.classList.remove(NO_TOUCH_CONTAINER_CLASS);\n      });\n    };\n  }, [containerRef, isDisabled, getState]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (isDisabled || !container) {\n      return undefined;\n    }\n\n    container.addEventListener('wheel', handleWheel, { passive: getState() === 'normal' });\n    container.addEventListener('touchstart', handleTouchStart, { passive: true });\n    container.addEventListener('touchmove', handleTouchMove, { passive: true });\n    container.addEventListener('touchend', handleTouchEnd, { passive: true });\n    container.addEventListener('touchcancel', handleTouchEnd, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleWheel);\n      container.removeEventListener('touchstart', handleTouchStart);\n      container.removeEventListener('touchmove', handleTouchMove);\n      container.removeEventListener('touchend', handleTouchEnd);\n      container.removeEventListener('touchcancel', handleTouchEnd);\n\n      const activeScroll = activeScrollRef.current;\n      if (activeScroll?.timeout) clearTimeout(activeScroll.timeout);\n    };\n  }, [containerRef, handleWheel, handleTouchStart, handleTouchMove, handleTouchEnd, getState, isDisabled]);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { VERIFY_AGE_MIN_DEFAULT } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './SensitiveContentConfirmModal.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  shouldAlwaysShow: boolean;\n  onAlwaysShowChanged: (value: boolean) => void;\n  confirmHandler: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  verifyAgeMin: number;\n};\n\nconst SensitiveContentConfirmModal = ({\n  isOpen,\n  onClose,\n  shouldAlwaysShow,\n  onAlwaysShowChanged,\n  confirmHandler,\n  verifyAgeMin,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleSensitiveModal', { years: verifyAgeMin })}\n      confirmLabel={lang('ButtonSensitiveView')}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {lang('TextSensitiveModal')}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('ButtonSensitiveAlways', { years: verifyAgeMin })}\n        checked={shouldAlwaysShow}\n        onCheck={onAlwaysShowChanged}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const verifyAgeMin = appConfig.verifyAgeMin;\n\n  return {\n    verifyAgeMin: verifyAgeMin || VERIFY_AGE_MIN_DEFAULT,\n  };\n})(SensitiveContentConfirmModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"mYXi2mIC\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): Complete<StateProps> => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"cgAMX02q\",\"tag\":\"oIgI9O0L\",\"tagColorMore\":\"hZDqIz3W\"};","import { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getApiPeerColorClass } from '../../common/helpers/peerColor';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport styles from './ChatTags.module.scss';\n\nconst MAX_VISIBLE_TAGS = 3;\n\ntype OwnProps = {\n  orderedFolderIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n};\n\nconst ChatTags = ({\n  orderedFolderIds,\n  chatFoldersById,\n}: OwnProps) => {\n  if (!orderedFolderIds) {\n    return undefined;\n  }\n\n  const visibleFolderIds = orderedFolderIds.slice(0, MAX_VISIBLE_TAGS);\n  const remainingCount = orderedFolderIds.length - visibleFolderIds.length;\n\n  return (\n    <div className={styles.wrapper}>\n      {visibleFolderIds.map((folderId) => {\n        const folder = chatFoldersById?.[folderId];\n        return folder && (\n          <div\n            key={folder.id}\n            className={buildClassName(\n              'ChatTags',\n              styles.tag,\n              getApiPeerColorClass({ color: folder.color }),\n            )}\n          >\n            {renderTextWithEntities({\n              text: folder.title.text,\n              entities: folder.title.entities,\n              noCustomEmojiPlayback: folder.noTitleAnimations,\n              emojiSize: 12,\n            })}\n          </div>\n        );\n      })}\n      {remainingCount > 0 && (\n        <div className={`ChatTags ${styles.tag} ${styles.tagColorMore}`}>\n          +\n          {remainingCount}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ChatTags);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiChatFolder,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ALL_FOLDER_ID, UNMUTE_TIMESTAMP } from '../../../config';\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getChatFolderIds } from '../../../util/folderManager';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatTags from './ChatTags';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n  withTags?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n  chatFolderIds?: number[];\n  orderedFolderIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n  areTagsEnabled?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n  chatFolderIds,\n  orderedFolderIds,\n  chatFoldersById,\n  areTagsEnabled,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n    updateChatMutedState,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const tagFolderIds = useMemo(() => {\n    const chatFolderIdsSet = new Set(chatFolderIds);\n\n    return orderedFolderIds?.filter((id) => {\n      if (!chatFolderIdsSet.has(id)) return undefined;\n\n      const isActive = id === folderId;\n      const isAll = id === ALL_FOLDER_ID;\n\n      const folder = chatFoldersById?.[id];\n      const hasColor = folder?.color !== undefined && folder.color !== -1;\n\n      return !isActive && !isAll && hasColor;\n    });\n  }, [orderedFolderIds, folderId, chatFoldersById, chatFolderIds]);\n\n  const shouldRenderTags = areTagsEnabled && withTags && Boolean(tagFolderIds?.length);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n    noForumTitle: shouldRenderTags,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    updateChatMutedState({ chatId, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleUnmute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    areTagsEnabled && withTags && 'chat-item-with-tags',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n          withStory={!user?.isSelf && !isMonoforum}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className={buildClassName('info', areTagsEnabled && withTags && 'has-tags')}>\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n            withStatusTextColor={isSelected}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n        {shouldRenderTags && (\n          <ChatTags\n            orderedFolderIds={tagFolderIds}\n            chatFoldersById={chatFoldersById}\n          />\n        )}\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      } as Complete<StateProps>;\n    }\n\n    const chatFolderIds = getChatFolderIds(chatId);\n    const { areTagsEnabled } = global.chatFolders;\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastMessageOutgoingStatus: isOutgoing && lastMessage ? selectOutgoingStatus(global, lastMessage) : undefined,\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n      monoforumChannel,\n      chatFolderIds,\n      orderedFolderIds: global.chatFolders.orderedIds,\n      chatFoldersById: global.chatFolders.byId,\n      areTagsEnabled: areTagsEnabled && isPremium,\n    };\n  },\n)(Chat));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n        shouldKeepSuggestedPost: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n    const shouldUpdateSuggestedPost = draft?.suggestedPostInfo && !prevDraft?.suggestedPostInfo;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched && !shouldUpdateSuggestedPost) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n    if (shouldUpdateSuggestedPost) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm || switchWebview) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect, useRef } from '@teact';\nimport { getActions } from '../../../../global';\n\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport {\n  type ApiFormattedText,\n  type ApiMessageEntityTextUrl,\n  ApiMessageEntityTypes,\n} from '../../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../../config';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nexport default function useLoadLinkPreview({\n  getHtml,\n  chatId,\n  threadId,\n}: {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n}) {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canAttachToDoLists: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onTodoListCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canAttachToDoLists,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  onTodoListCreate,\n}: OwnProps) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n        {canAttachToDoLists && !editingMessage && (\n          <MenuItem icon=\"select\" onClick={onTodoListCreate}>{lang('TitleToDoList')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  threadId?: ThreadId;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, threadId, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n\n                onClick={() => clickBotInlineButton({\n                  chatId: message.chatId, messageId: message.id, threadId, button,\n                })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): Complete<StateProps> => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n\n    const message = chatId ? selectChatMessage(global, chatId, messageId) : undefined;\n    return {\n      message,\n    };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiInputSuggestedPostInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { selectIsMediaNsfw } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n  isMediaNsfw?: boolean;\n};\n\ntype OwnProps = {\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  onClear?: () => void;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  suggestedPostInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n  isMediaNsfw,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    resetDraftSuggestedPostInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n    openSuggestMessageModal,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n  const isShowingSuggestedPost = Boolean(suggestedPostInfo) && !shouldForceShowEditing;\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    if (isShowingSuggestedPost) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (isShowingSuggestedPost) {\n      resetDraftSuggestedPostInfo();\n      resetDraftReplyInfo();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    if (suggestedPostInfo) {\n      openSuggestMessageModal({ chatId });\n      return;\n    }\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isShowingSuggestedPost) {\n      return 'cash-circle';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply, isShowingSuggestedPost]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          suggestedPostInfo={suggestedPostInfo}\n          isMediaNsfw={isMediaNsfw}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          noCaptions={noCaptions}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): Complete<StateProps> => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const suggestedPostInfo = draft?.suggestedPostInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    const isMediaNsfw = message && selectIsMediaNsfw(global, message);\n\n    return {\n      replyInfo,\n      suggestedPostInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n      isMediaNsfw,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ToDoListModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ToDoListModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ToDoListModal = useModuleLoader(Bundles.Extra, 'ToDoListModal', !modal);\n\n  return ToDoListModal ? <ToDoListModal {...props} /> : undefined;\n};\n\nexport default ToDoListModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O3di3ULC\",\"no-page-transitions\":\"UDdgVrUQ\",\"noPageTransitions\":\"UDdgVrUQ\",\"select-mode-active\":\"Y5TInySi\",\"selectModeActive\":\"Y5TInySi\",\"middle-column-footer\":\"XlGyc4tC\",\"middleColumnFooter\":\"XlGyc4tC\",\"no-message-composer-animations\":\"eDMArdYq\",\"noMessageComposerAnimations\":\"eDMArdYq\",\"ComposerEmbeddedMessage\":\"z4RvByc2\",\"composerEmbeddedMessage\":\"z4RvByc2\",\"inner\":\"m3DBx9f5\",\"contextMenu\":\"zqTOc7LU\",\"clear\":\"yhxytYkd\",\"left-icon\":\"vFWsMwfP\",\"leftIcon\":\"vFWsMwfP\",\"preview\":\"otSxF62k\",\"previewText\":\"itmZe2qi\",\"previewImageContainer\":\"VvwZOug9\",\"previewImage\":\"b0A9Zfoa\",\"siteName\":\"ER149gdz\",\"siteDescription\":\"FSYSqC60\",\"interactive\":\"G5_7x_Hn\"};","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiWebPage,\n  ApiWebPageFull,\n  ApiWebPagePending,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId, WebPageMediaSize } from '../../../types';\n\nimport {\n  getMediaHash,\n  getWebPageAudio,\n  getWebPageDocument,\n  getWebPagePhoto,\n  getWebPageVideo,\n} from '../../../global/helpers';\nimport { selectNoWebPage, selectTabState, selectWebPage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './WebPagePreview.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPageFull | ApiWebPagePending;\n  noWebPage?: boolean;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst WebPagePreview = ({\n  chatId,\n  threadId,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  attachmentSettings,\n  isEditing,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useLang();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && !noWebPage && !isDisabled);\n  }, [isDisabled, noWebPage, webPagePreview]);\n  const { shouldRender } = useShowTransition({ isOpen: isShown, ref, withShouldRender: true });\n\n  const hasMediaSizeOptions = webPagePreview?.webpageType === 'full' && webPagePreview.hasLargeMedia;\n\n  const prevWebPageRef = useRef<ApiWebPage | undefined>(webPagePreview);\n\n  if (webPagePreview && webPagePreview !== prevWebPageRef.current) {\n    prevWebPageRef.current = webPagePreview;\n  }\n\n  const renderingWebPage = webPagePreview || prevWebPageRef.current;\n\n  const isFullWebPage = renderingWebPage?.webpageType === 'full';\n\n  const thumbnailUrl = useThumbnail(isFullWebPage ? { content: renderingWebPage } : undefined);\n  const previewMedia = getWebPagePhoto(renderingWebPage) || getWebPageVideo(renderingWebPage)\n    || getWebPageAudio(renderingWebPage) || getWebPageDocument(renderingWebPage);\n  const previewMediaHash = previewMedia && getMediaHash(previewMedia, 'pictogram');\n  const previewMediaUrl = useMedia(previewMediaHash);\n\n  const { shouldRender: shouldRenderPreviewMedia, ref: previewMediaRef } = useShowTransition<HTMLImageElement>({\n    isOpen: Boolean(previewMediaUrl),\n    withShouldRender: true,\n    noCloseTransition: true,\n  });\n\n  const hasPreviewMedia = Boolean(previewMediaUrl || shouldRenderPreviewMedia);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide, handleBeforeContextMenu,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('ContextMoveTextUp')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang('ContextMoveTextDown')}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ContextLinkLargerMedia')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang('ContextLinkSmallerMedia')}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ContextLinkRemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isEditing && styles.interactive,\n      )}\n      ref={ref}\n    >\n      <div className={styles.inner}>\n        <div className={styles.leftIcon} onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        {renderingWebPage && renderingWebPage.webpageType !== 'empty' && (\n          <PeerColorWrapper\n            noUserColors\n            className={styles.preview}\n            onContextMenu={handleContextMenu}\n            onMouseDown={handleBeforeContextMenu}\n            onClick={handlePreviewClick}\n          >\n            {hasPreviewMedia && (\n              <div className={styles.previewImageContainer}>\n                {thumbnailUrl && (\n                  <img src={thumbnailUrl} alt=\"\" className={styles.previewImage} />\n                )}\n                {shouldRenderPreviewMedia && (\n                  <img ref={previewMediaRef} src={previewMediaUrl} alt=\"\" className={styles.previewImage} />\n                )}\n              </div>\n            )}\n            <div className={styles.previewText}>\n              <span className={styles.siteName}>\n                {isFullWebPage\n                  ? (renderingWebPage.siteName || renderingWebPage.url)\n                  : lang('Loading')}\n              </span>\n              <span className={styles.siteDescription}>\n                {isFullWebPage\n                  ? (renderingWebPage.description || lang(getMediaTypeKey(renderingWebPage)))\n                  : renderingWebPage.url}\n              </span>\n            </div>\n          </PeerColorWrapper>\n        )}\n        <Button\n          className={styles.clear}\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('AccLinkRemovePreview')}\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nfunction getMediaTypeKey(webPage: ApiWebPageFull) {\n  if (webPage.photo) return 'AttachPhoto';\n  if (webPage.video) return 'AttachVideo';\n  if (webPage.audio) return 'AttachMusic';\n  if (webPage.document) return 'AttachDocument';\n  if (webPage.story) return 'AttachStory';\n  return 'LinkPreview';\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const tabState = selectTabState(global);\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      webPagePreview: webPagePreview?.webpageType === 'empty' ? undefined : webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo, useRef, useSignal, useState } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewMediaTodo,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type { GlobalState, TabState } from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  STARS_CURRENCY_CODE,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n  selectWebPage,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport { DEFAULT_MAX_MESSAGE_LENGTH } from '../../limits';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useLoadLinkPreview from '../middle/composer/hooks/useLoadLinkPreview';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport ToDoListModal from '../middle/composer/ToDoListModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    isReplying?: boolean;\n    hasSuggestedPost?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    todoListModal: TabState['todoListModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  isReplying,\n  hasSuggestedPost,\n  forwardedMessagesCount,\n  pollModal,\n  todoListModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    openTodoListModal,\n    closeTodoListModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n    updateDraftSuggestedPostInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks, canAttachToDoLists,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(\n      chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList,\n    ),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((\n    newHtml: string, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount && !shouldPrepend) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    if (shouldPrepend) {\n      const newFirstWord = newHtml.split(' ')[0];\n      const shouldReplace = getHtml().startsWith(newFirstWord);\n\n      setHtml(shouldReplace ? newHtml : `${newHtml}${getHtml()}`);\n    } else {\n      setHtml(`${getHtml()}${newHtml}`);\n    }\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId, shouldPrepend);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || (!hasSuggestedPost && isMonoforum),\n  });\n\n  useLoadLinkPreview({\n    chatId,\n    threadId,\n    getHtml,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n  const shouldShowSuggestedPostButton = isMonoforum && !editingMessage\n    && !isForwarding && !isReplying && !draft?.suggestedPostInfo;\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleTodoListCreate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForCreateToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n\n    openTodoListModal({ chatId });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft, undefined, true);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        },\n      );\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const handleToDoListSend = useLastCallback((todo: ApiNewMediaTodo) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { todo },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, todo, isSilent: isSilentPosting },\n      );\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n  const handleSuggestPostClick = useLastCallback(() => {\n    updateDraftSuggestedPostInfo({\n      price: { currency: STARS_CURRENCY_CODE, amount: 0, nanos: 0 },\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (isReplying && hasSuggestedPost) {\n        return lang('ComposerPlaceholderCaption');\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, isReplying, threadId, windowWidth, paidMessagesStars,\n    hasSuggestedPost,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = selectCustomEmoji(getGlobal(), reaction.documentId);\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({});\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n  const prevShouldRenderPaidBadge = usePrevious(shouldRenderPaidBadge);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <ToDoListModal\n        modal={todoListModal}\n        onClear={closeTodoListModal}\n        onSend={handleToDoListSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#000\"\n                filter=\"url(#composerAppendix)\"\n              />\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#FFF\"\n                className=\"corner\"\n              />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              isDisabled={!canAttachEmbedLinks || hasAttachments || !hasText}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"scheduled\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {shouldShowSuggestedPostButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleSuggestPostClick}\n                      >\n                        <Icon name=\"cash-circle\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canAttachToDoLists={canAttachToDoLists}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              onTodoListCreate={handleTodoListCreate}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              threadId={threadId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName(\n            'paidStarsBadge',\n            shouldRenderPaidBadge && 'visible',\n            prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hiding',\n            !prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hidden',\n          )}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): Complete<StateProps> => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const isReplying = Boolean(draft?.replyInfo);\n    const hasSuggestedPost = Boolean(draft?.suggestedPostInfo);\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      isReplying,\n      hasSuggestedPost,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      todoListModal: tabState.todoListModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectIsChatRestricted, selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        const isRestricted = selectIsChatRestricted(global, chat.id);\n        return isChatChannel(chat) && !isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const { cancelMediaDownload, updateContentSettings, openAgeVerificationModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const shouldShowSpoiler = isPaidPreview || video.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const { ref: previewRef } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean((hasThumb || previewBlobUrl) && !shouldHidePreview),\n  });\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        isNsfw={isMediaNsfw}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Video));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setColor'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'setColor':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          color: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks = new Set<NoneToVoidFunction>();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: String(zIndex),\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: String(zIndex),\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: String(zIndex),\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: String(zIndex),\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidthWithText(isMobile: boolean) {\n  return (isMobile ? 14 : 20) * REM;\n}\n\nexport function getMinMediaWidth(text: string = '', isMobile: boolean, hasCommentButton?: boolean) {\n  return text.length > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? getMinMediaWidthWithText(isMobile)\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText, isMobile);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { MediaContainer, SizeTarget } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { getMessageMediaHash } from '../../global/helpers/messageMedia';\nimport useSelector from '../data/useSelector';\n\nfunction selectWebPagesById(global: GlobalState) {\n  return global.messages.webPageById;\n}\n\nexport default function useMessageMediaHash(message: MediaContainer | undefined, target: SizeTarget) {\n  const webPagesById = useSelector(selectWebPagesById);\n  if (!message) return undefined;\n\n  const webPageId = message.content.webPage?.id;\n  const webPage = webPageId ? webPagesById[webPageId] : undefined;\n\n  return getMessageMediaHash(message, { webPage }, target);\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage,\n  getMessageTextWithFallback,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype StateProps = {\n  webPage?: ApiWebPage;\n};\n\nconst WebLink = ({\n  message, webPage, senderTitle, isProtected, observeIntersection, onMessageClick,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = webPage;\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageTextWithFallback(lang, message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (linkData?.webpageType !== 'full') {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(oldLang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n\n    return {\n      webPage,\n    };\n  },\n)(WebLink));\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): Complete<StateProps> => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import buildStyle from '../../util/buildStyle';\nimport useLastCallback from '../useLastCallback';\nimport useUniqueId from '../useUniqueId';\n\nconst VTN_PROPERTY_NAME = '--_vtn';\n\nCSS.registerProperty?.({\n  name: VTN_PROPERTY_NAME,\n  syntax: '*',\n  inherits: false,\n});\n\nexport function useVtn(uniqueId?: string) {\n  const fallbackId = useUniqueId();\n\n  // Pass `true` to use the same class name as the name parameter\n  const createVtnStyle = useLastCallback((name: string, vtClass?: string | boolean) => {\n    const vtClassString = vtClass === true ? name : (vtClass || undefined);\n    return buildStyle(\n      `${VTN_PROPERTY_NAME}: vtn-${name}-${uniqueId || fallbackId}`,\n      vtClassString && `view-transition-class: ${vtClassString}`,\n    );\n  });\n\n  return {\n    createVtnStyle,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">{lang('FileDropZoneTitle')}</div>\n        {!isGeneric && (\n          <div className=\"description\">\n            {isQuick ? lang('FileDropZoneQuick') : lang('FileDropZoneNoCompression')}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  editingMessage?: ApiMessage | undefined;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea = ({\n  isOpen, withQuick, editingMessage, onHide, onFileSelect,\n}: OwnProps) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { LOCAL_TGS_PREVIEW_URLS, LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n  withSticker?: boolean;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description, withSticker }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName(\n      'NothingFound',\n      transitionClassNames,\n      description && 'with-description',\n      withSticker && 'with-sticker')}\n    >\n      {withSticker && (\n        <AnimatedIconWithPreview\n          className=\"sticker\"\n          size={120}\n          tgsUrl={LOCAL_TGS_URLS.DuckNothingFound}\n          previewUrl={LOCAL_TGS_PREVIEW_URLS.DuckNothingFound}\n          nonInteractive\n          noLoop={false}\n        />\n      )}\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const value = useMemo(() => {\n    if (age) {\n      return lang(\n        `ProfileBirthday${isToday ? 'Today' : ''}ValueYear`,\n        { date: formattedDate, age },\n        { pluralValue: age },\n      );\n    }\n\n    return lang(`ProfileBirthday${isToday ? 'Today' : ''}Value`, { date: formattedDate });\n  }, [age, formattedDate, isToday, lang]);\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(value)}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH, MUTE_INDEFINITE_TIMESTAMP, UNMUTE_TIMESTAMP,\n} from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatRestricted,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n  className?: string;\n  style?: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n  className,\n  style,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleToggleNotifications = useLastCallback(() => {\n    const mutedUntil = isMuted ? UNMUTE_TIMESTAMP : MUTE_INDEFINITE_TIMESTAMP;\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        mutedUntil,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, mutedUntil });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const isRestricted = chatId ? selectIsChatRestricted(getGlobal(), chatId) : false;\n  if (isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatExtra', className)} style={style}>\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon={isMuted ? 'mute' : 'unmute'} narrow ripple onClick={handleToggleNotifications}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={lang(userId ? 'AriaToggleUserNotifications' : 'AriaToggleChatNotifications')}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): Complete<StateProps> => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { IS_TAURI } from '../util/browser/globalEnvironment';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_TAURI ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics, handleUnmute,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  isAccountFrozen,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  }, [language, lang]);\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    if (!chat || isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      } as Complete<StateProps>;\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","import type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","interface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): Complete<StateProps> => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n  withTags?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n          withTags={withTags}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectIsChatRestricted,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin } = chat || {};\n  const isRestricted = selectIsChatRestricted(getGlobal(), chatId!);\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            asMessageBubble={Boolean(monoforumChannel)}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  isMediaNsfw,\n  observeIntersection,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const prevMediaData = usePrevious(mediaData);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const { ref: fullMediaRef, shouldRender: shouldRenderFullMedia } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean(fullMediaData),\n    withShouldRender: true,\n  });\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const { updateContentSettings, openAgeVerificationModal } = getActions();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isPaidPreview || photo.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img\n          ref={fullMediaRef}\n          src={fullMediaData || prevMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">\n          {Math.round(transferProgress * 100)}\n          %\n        </span>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Photo));\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n  noForumTitle?: boolean;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n  noForumTitle,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {\n        !noForumTitle && (\n          <>\n            {lastActiveTopic && (\n              <div className={styles.titleRow}>\n                <div\n                  className={buildClassName(\n                    styles.mainColumn,\n                    lastActiveTopic.unreadCount && styles.unread,\n                  )}\n                  ref={mainColumnRef}\n                  onClick={handleOpenTopicClick}\n                  onMouseDown={handleOpenTopicMouseDown}\n                >\n                  <TopicIcon\n                    topic={lastActiveTopic}\n                    observeIntersection={observeIntersection}\n                  />\n                  <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n                  {!overwrittenWidth && isReversedCorner && (\n                    <div className={styles.afterWrapper}>\n                      <div className={styles.after} />\n                    </div>\n                  )}\n                </div>\n\n                <div className={styles.otherColumns}>\n                  {otherTopics.map((topic) => (\n                    <div\n                      className={buildClassName(\n                        styles.otherColumn, topic.unreadCount && styles.unread,\n                      )}\n                      key={topic.id}\n                    >\n                      <TopicIcon\n                        topic={topic}\n                        className={styles.otherColumnIcon}\n                        observeIntersection={observeIntersection}\n                      />\n                      <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <div className={styles.ellipsis} />\n              </div>\n            )}\n            {!lastActiveTopic && (\n              <div className={buildClassName(styles.titleRow, styles.loading)}>\n                {lang('Loading')}\n              </div>\n            )}\n          </>\n        )\n      }\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && !noForumTitle && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useMessageMediaHash from '../../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../../hooks/media/useThumbnail';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n  noForumTitle,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n  noForumTitle?: boolean;\n}) {\n  const lang = useLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const thumbDataUri = useThumbnail(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? thumbDataUri : undefined;\n  const mediaHash = useMessageMediaHash(mediaContent, 'micro');\n  const mediaBlobUrl = useMedia(mediaHasPreview ? mediaHash : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('ChatDraftPrefix')}</span>\n          <span className=\"last-message-summary\" dir=\"auto\">\n            {renderTextWithEntities({\n              text: draft.text?.text || '',\n              entities: draft.text?.entities,\n              asPreview: true,\n              withTranslucentThumbs: true,\n            })}\n          </span>\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(lang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        <span className=\"last-message-summary\" dir=\"auto\">\n          {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </span>\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n          noForumTitle={noForumTitle}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): Complete<StateProps> => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_STANDARD_QUALITY_IMG_SIZE = 1280; // px\nconst MAX_HIGH_QUALITY_IMG_SIZE = 2560;\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n  const shouldSendInHighQuality = options?.shouldSendInHighQuality;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const maxQuickImgSize = shouldSendInHighQuality ? MAX_HIGH_QUALITY_IMG_SIZE : MAX_STANDARD_QUALITY_IMG_SIZE;\n    const shouldShrink = Math.max(width, height) > maxQuickImgSize;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? maxQuickImgSize / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          ...options,\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width, height, duration };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blob,\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","import { fetchBlob } from './files';\n\ntype AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { parseBlob, selectCover } = await import('music-metadata');\n  const blob = await fetchBlob(url);\n  const metadata = await parseBlob(blob);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import { getGlobal, setGlobal } from '../../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../../api/types';\n\nimport {\n  getDocumentMediaHash, getMediaFormat, getMessageDocumentPhoto, getMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { updateChatMessage } from '../../../global/reducers';\nimport { selectChatMessage } from '../../../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { preloadImage, preloadVideo } from '../../../util/files';\nimport { fetch } from '../../../util/mediaLoader';\nimport LimitedMap from '../../../util/primitives/LimitedMap';\n\nconst preloadedHashes = new LimitedMap<string, void>(100);\n\nexport async function preloadDocumentMedia(mediaContainer: ApiMessage) {\n  const video = getMessageDocumentVideo(mediaContainer);\n  const photo = getMessageDocumentPhoto(mediaContainer);\n\n  const media = video || photo;\n\n  // Skip large photos that were not processed by the server\n  const shouldSkipPhoto = photo && photo.mediaSize && !photo.mediaSize.fromDocumentAttribute;\n  if (!media || media.previewBlobUrl || shouldSkipPhoto) {\n    return;\n  }\n\n  const hash = getDocumentMediaHash(media, 'full');\n  if (!hash || preloadedHashes.has(hash)) {\n    return;\n  }\n\n  preloadedHashes.set(hash, undefined);\n\n  const url = await fetch(hash, getMediaFormat(media, 'full'));\n  if (!url) {\n    return;\n  }\n\n  let dimensions: ApiDocument['mediaSize'] | undefined;\n\n  if (video && IS_PROGRESSIVE_SUPPORTED) {\n    const videoEl = await preloadVideo(url);\n    dimensions = { width: videoEl.videoWidth, height: videoEl.videoHeight, fromPreload: true };\n  }\n\n  if (photo) {\n    const img = await preloadImage(url);\n    dimensions = { width: img.naturalWidth, height: img.naturalHeight, fromPreload: true };\n  }\n\n  if (!dimensions || dimensions.width <= 0 || dimensions.height <= 0) {\n    return;\n  }\n\n  let global = getGlobal();\n  const message = selectChatMessage(global, mediaContainer.chatId, mediaContainer.id);\n  if (!message || !message.content.document) return;\n  global = updateChatMessage(global, mediaContainer.chatId, mediaContainer.id, {\n    content: {\n      ...message.content,\n      document: {\n        ...message.content.document,\n        mediaSize: dimensions,\n      },\n    },\n  });\n  setGlobal(global);\n}\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { isIpRevealingMedia } from '../../util/media/ipRevealingMedia';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport { preloadDocumentMedia } from './helpers/preloadDocumentMedia';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutFiles,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isFileIpDialogOpen, openFileIpDialog, closeFileIpDialog] = useFlag();\n  const [shouldNotWarnAboutFiles, setShouldNotWarnAboutFiles] = useState(false);\n\n  const { fileName, size, timestamp, mimeType } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const shouldForceDownload = document.innerMediaType === 'photo' && document.mediaSize\n    && !document.mediaSize.fromDocumentAttribute && !document.mediaSize.fromPreload;\n\n  const withMediaViewer = onMediaClick && document.innerMediaType && !shouldForceDownload;\n\n  useEffect(() => {\n    const fileEl = ref.current;\n    if (!withMediaViewer || !fileEl || !message) return;\n\n    const onHover = () => {\n      preloadDocumentMedia(message);\n    };\n\n    fileEl.addEventListener('mouseenter', onHover);\n\n    return () => {\n      fileEl.removeEventListener('mouseenter', onHover);\n    };\n  }, [withMediaViewer, message]);\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick();\n      return;\n    }\n\n    if (isIpRevealingMedia({ mimeType, extension }) && shouldWarnAboutFiles) {\n      openFileIpDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleFileIpConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutFiles: !shouldNotWarnAboutFiles });\n    closeFileIpDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isFileIpDialogOpen}\n        onClose={closeFileIpDialog}\n        confirmHandler={handleFileIpConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutFiles}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutFiles}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): Complete<StateProps> => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import type { ElementRef } from '@teact';\nimport { useEffect, useLayoutEffect } from '@teact';\nimport { addExtraClass, removeExtraClass, toggleExtraClass } from '@teact/teact-dom.ts';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom.ts';\nimport { throttle } from '../util/schedulers.ts';\n\nconst THROTTLE_DELAY = 100;\n\nconst useScrollNotch = ({\n  containerRef,\n  selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useLayoutEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n\n      requestMutation(() => {\n        toggleExtraClass(target, 'scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => {\n      addExtraClass(el, 'with-notch');\n      el.addEventListener('scroll', handleScroll, { passive: true });\n    });\n\n    return () => {\n      elements.forEach((el) => {\n        el.removeEventListener('scroll', handleScroll);\n        removeExtraClass(el, 'with-notch');\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n\n  useEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    elements.forEach((el) => {\n      const isScrolled = el.scrollTop > 0;\n      requestMutation(() => {\n        toggleExtraClass(el, 'scrolled', isScrolled);\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useScrollNotch;\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import type { ElementRef } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n  ApiWebPage,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport { selectMessageMediaDuration } from '../../global/selectors/media';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\ntype StateProps = {\n  mediaDuration?: number;\n  webPage?: ApiWebPage;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  webPage,\n  mediaDuration,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}: OwnProps & StateProps) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getWebPageAudio(webPage);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    mediaDuration!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n    const mediaDuration = selectMessageMediaDuration(global, message);\n\n    return {\n      webPage,\n      mediaDuration,\n    };\n  },\n)(Audio));\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: ElementRef<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const mediaData = mediaHash\n    ? (isStreaming ? mediaLoader.getProgressiveUrl(mediaHash)\n      : mediaLoader.getFromMemory(mediaHash)) : undefined;\n\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nconst DEFAULT_VALUE = 0;\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)?.[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(field ?? DEFAULT_VALUE)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                const part = field?.part ?? DEFAULT_VALUE;\n                const percentage = field?.percentage ?? DEFAULT_VALUE;\n\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field?.current ?? DEFAULT_VALUE)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { TypeStatisticsGraph } from '../../../../api/types';\n\nexport function isGraph(obj: unknown): obj is TypeStatisticsGraph {\n  // eslint-disable-next-line no-null/no-null\n  return typeof obj === 'object' && obj !== null && 'graphType' in obj;\n}\n","import type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  const ref = useRef<HTMLDivElement>();\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): Complete<StateProps> => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectCustomEmoji, selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = selectCustomEmoji(global, documentId);\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { SharedSettings } from '../../../global/types';\nimport type {\n  IAnchorPosition, MessageListType, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            spellCheck={IS_TAURI ? false : undefined}\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): Complete<StateProps> => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): Complete<StateProps> => {\n    if (!typingStatus.userId) {\n      return { typingUser: undefined };\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useMessageMediaHash from '../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../hooks/media/useThumbnail';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = useThumbnail(message);\n  const mediaHash = useMessageMediaHash(message, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const thumbDataUri = useThumbnail(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ hasMediaData: !noThumb, ref: thumbRef });\n\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport Spinner from '../../ui/Spinner';\nimport Icon from '../icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  className?: string;\n  style?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  className,\n  style,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              draggable={false}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n    className,\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined} style={style}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dspICZx5\",\"gift\":\"GtRefNqT\",\"fadeOut\":\"CviSFYWp\",\"fadeIn\":\"zARAyL86\"};","import { memo, useMemo, useRef } from '@teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSavedStarGift } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { clamp } from '../../../util/math';\nimport { getGiftAttributes } from '../helpers/gifts';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useVtn } from '../../../hooks/animations/useVtn';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport GiftEffectWrapper from '../gift/GiftEffectWrapper';\nimport StickerView from '../StickerView';\n\nimport styles from './ProfilePinnedGifts.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  className?: string;\n  gifts?: ApiSavedStarGift[];\n  isExpanded?: boolean;\n  withGlow?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 2 * REM;\nconst POSITIONS = [\n  { x: -0.2, y: -0.3 },\n  { x: 0.3, y: 0.1 },\n  { x: -0.4, y: -0.1 },\n  { x: 0.4, y: -0.1 },\n  { x: -0.25, y: 0.1 },\n  { x: 0.25, y: -0.25 },\n];\n\nconst CENTER = { x: 0.5, y: 0.5 };\n\nconst ProfilePinnedGifts = ({\n  peerId,\n  gifts,\n  isExpanded,\n  className,\n  withGlow,\n}: OwnProps) => {\n  const { createVtnStyle } = useVtn();\n\n  if (!gifts) return undefined;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {gifts.slice(0, POSITIONS.length).map((gift, index) => {\n        const position = !isExpanded ? POSITIONS[index] : getExpandedPosition(POSITIONS[index]);\n        const style = buildStyle(\n          `top: ${(CENTER.y + position.y) * 100}%`,\n          `left: ${(CENTER.x + position.x) * 100}%`,\n        );\n        return (\n          <PinnedGift\n            peerId={peerId}\n            className={styles.gift}\n            key={gift.gift.id}\n            gift={gift}\n            style={buildStyle(style, createVtnStyle(`profilePinnedGift${index}`, 'profilePinnedGift'))}\n            withGlow={withGlow}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nfunction getExpandedPosition(position: { x: number; y: number }) {\n  return {\n    x: clamp(position.x * 1.5, -0.45, 0.45),\n    y: clamp(position.y * 1.5, -0.45, 0.45),\n  };\n}\n\nconst PinnedGift = ({\n  gift, style, className, withGlow, peerId,\n}: {\n  gift: ApiSavedStarGift;\n  style?: string;\n  className?: string;\n  withGlow?: boolean;\n  peerId: string;\n}) => {\n  const { openGiftInfoModal } = getActions();\n\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const giftAttributes = useMemo(() => {\n    return getGiftAttributes(gift.gift);\n  }, [gift]);\n\n  const handleClick = useLastCallback(() => {\n    openGiftInfoModal({ peerId, gift });\n  });\n\n  if (!giftAttributes?.model || !giftAttributes.backdrop) return undefined;\n\n  return (\n    <GiftEffectWrapper\n      withSparkles\n      sparklesColor={giftAttributes.backdrop.textColor}\n      glowColor={withGlow ? giftAttributes.backdrop.edgeColor : undefined}\n      ref={stickerRef}\n      className={className}\n      style={style}\n      onClick={handleClick}\n    >\n      <StickerView\n        containerRef={stickerRef}\n        sticker={giftAttributes.model.sticker}\n        size={GIFT_STICKER_SIZE}\n        withTranslucentThumb\n        noPlay\n      />\n    </GiftEffectWrapper>\n  );\n};\n\nexport default memo(ProfilePinnedGifts);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Z_HM0Jqg\",\"plain\":\"YIhgPXW6\",\"minimized\":\"blI_IH7j\",\"userRatingNegativeWrapper\":\"vuUzgWI1\",\"userRatingWrapper\":\"P6tsZMON\",\"fallbackPhoto\":\"eZ2DGNou\",\"fallbackPhotoContents\":\"ldzIKEUp\",\"fallbackPhotoVisible\":\"uNvH08Qp\",\"fallbackPhotoAvatar\":\"a9OwsvOP\",\"photoWrapper\":\"UZ7NDj8N\",\"photoDashes\":\"e7iOf_3T\",\"photoDash\":\"eD0Is6TL\",\"photoDash_current\":\"MSdiAM06\",\"photoDashCurrent\":\"MSdiAM06\",\"navigation\":\"Yr9FHqbF\",\"navigation_prev\":\"Z1ZX2xot\",\"navigationPrev\":\"Z1ZX2xot\",\"navigation_next\":\"X0stLWTl\",\"navigationNext\":\"X0stLWTl\",\"info\":\"ZFBuRDGK\",\"status\":\"XxRtPe_4\",\"title\":\"atYgxkWV\",\"ratingIcon\":\"Yvu9iM5n\",\"ratingNegativeIcon\":\"JZBCjHv0\",\"ratingLevel\":\"eFsZljMG\",\"userStatus\":\"F4JyLH2c\",\"getStatus\":\"wCXGPPTY\",\"topicContainer\":\"dNcezQH8\",\"topicTitle\":\"hjk4U031\",\"topicIcon\":\"YwVcTLvK\",\"topicIconTitle\":\"_sQEevF7\",\"topicMessagesCounter\":\"GXxwbzqF\",\"radialPatternBackground\":\"BvunKb6r\",\"standaloneAvatar\":\"rLHO_VQT\",\"activeProfilePhoto\":\"yltXKQri\",\"pinnedGifts\":\"JX3wjADD\",\"fadeOut\":\"wh7RALk1\",\"profileExpandAvatar\":\"KtpaSfR5\",\"fadeIn\":\"qD_LMATM\",\"profileCollapseAvatar\":\"c1xe6OKs\"};","import { memo, useEffect, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiEmojiStatusType,\n  ApiPeerColorOption,\n  ApiPeerPhotos,\n  ApiPeerProfileColorSet,\n  ApiSavedGifts,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUserStatus,\n} from '../../../api/types/index';\nimport type { IconName } from '../../../types/icons/index';\nimport type { AnimationLevel, ThemeKey } from '../../../types/index';\nimport { MediaViewerOrigin } from '../../../types/index';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../../global/helpers/index';\nimport { getActions, withGlobal } from '../../../global/index';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectPeer,\n  selectPeerHasProfileBackground,\n  selectPeerPhotos,\n  selectPeerProfileColor,\n  selectPeerSavedGifts,\n  selectTabState,\n  selectTheme,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../../global/selectors/index';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { resolveTransitionName } from '../../../util/resolveTransitionName';\nimport renderText from '../helpers/renderText.tsx';\n\nimport { useVtn } from '../../../hooks/animations/useVtn';\nimport useIntervalForceUpdate from '../../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\nimport usePhotosPreload from '../hooks/usePhotosPreload';\n\nimport Transition from '../../ui/Transition.tsx';\nimport Avatar from '../Avatar.tsx';\nimport FullNameTitle from '../FullNameTitle.tsx';\nimport Icon from '../icons/Icon.tsx';\nimport TopicIcon from '../TopicIcon.tsx';\nimport ProfilePhoto from './ProfilePhoto';\nimport ProfilePinnedGifts from './ProfilePinnedGifts.tsx';\nimport RadialPatternBackground from './RadialPatternBackground.tsx';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\nconst MAX_LEVEL_ICON = 90;\n\ntype OwnProps = {\n  isExpanded?: boolean;\n  peerId: string;\n  isForSettings?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userFullInfo?: ApiUserFullInfo;\n  userStatus?: ApiUserStatus;\n  chat?: ApiChat;\n  mediaIndex?: number;\n  avatarOwnerId?: string;\n  topic?: ApiTopic;\n  messagesCount?: number;\n  animationLevel: AnimationLevel;\n  emojiStatus?: ApiEmojiStatusType;\n  emojiStatusSticker?: ApiSticker;\n  emojiStatusSlug?: string;\n  profilePhotos?: ApiPeerPhotos;\n  profileColorOption?: ApiPeerColorOption<ApiPeerProfileColorSet>;\n  theme: ThemeKey;\n  isPlain?: boolean;\n  savedGifts?: ApiSavedGifts;\n};\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\nconst PATTERN_COLOR = '#000000';\nconst PATTERN_SIZE_FACTOR = 0.75;\nconst PATTERN_OPACITY = 0.75;\n\nconst ProfileInfo = ({\n  isExpanded,\n  isForSettings,\n  canPlayVideo,\n  user,\n  userFullInfo,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  animationLevel,\n  emojiStatus,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n  profileColorOption,\n  theme,\n  isPlain,\n  savedGifts,\n}: OwnProps & StateProps) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n    openProfileRatingModal,\n    loadPeerSavedGifts,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const { createVtnStyle } = useVtn();\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  const collectibleEmojiStatus = emojiStatus?.type === 'collectible' ? emojiStatus : undefined;\n\n  const peer = user || chat;\n  const { customEmoji: backgroundEmoji } = useCustomEmoji(\n    collectibleEmojiStatus?.patternDocumentId || peer?.profileColor?.backgroundEmojiId,\n  );\n\n  const profileColorSet = useMemo(() => {\n    if (collectibleEmojiStatus) {\n      return {\n        bgColors: [collectibleEmojiStatus.centerColor, collectibleEmojiStatus.edgeColor],\n        storyColors: [collectibleEmojiStatus.textColor, collectibleEmojiStatus.textColor],\n      };\n    }\n\n    const colors = profileColorOption\n      && (theme === 'dark' ? profileColorOption.darkColors : profileColorOption.colors);\n    if (!colors) return undefined;\n\n    // Why are they reversed on the server?\n    return {\n      bgColors: [...colors.bgColors].reverse(),\n      storyColors: [...colors.storyColors].reverse(),\n    };\n  }, [profileColorOption, theme, collectibleEmojiStatus]);\n\n  const pinnedGifts = useMemo(() => {\n    return savedGifts?.gifts.filter((gift) => {\n      if (gift.gift.type === 'starGiftUnique') {\n        return gift.isPinned && gift.gift.slug !== collectibleEmojiStatus?.slug;\n      }\n\n      return gift.isPinned;\n    });\n  }, [savedGifts, collectibleEmojiStatus?.slug]);\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  useEffect(() => {\n    loadPeerSavedGifts({ peerId });\n  }, [peerId]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  // Reset photo index when collapsing\n  useEffect(() => {\n    if (!isExpanded) {\n      setCurrentPhotoIndex(0);\n    }\n  }, [isExpanded]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: isForSettings ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  const handleRatingClick = useLastCallback((level: number) => {\n    if (user) {\n      openProfileRatingModal({ userId: user.id, level });\n    }\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        className={buildClassName(isActive && styles.activeProfilePhoto)}\n        style={isActive ? createVtnStyle('avatar', true) : undefined}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderUserRating() {\n    if (!userFullInfo?.starsRating) return undefined;\n\n    const level = userFullInfo.starsRating.level;\n    const isNegative = level < 0;\n\n    const onRatingClick = () => handleRatingClick(level);\n\n    if (isNegative) {\n      return (\n        <span role=\"button\" tabIndex={0} className={styles.userRatingNegativeWrapper} onClick={onRatingClick}>\n          <Icon\n            name=\"rating-icons-negative\"\n            className={styles.ratingNegativeIcon}\n          />\n          <span className={styles.ratingLevel}>!</span>\n        </span>\n      );\n    }\n\n    const safeLevel = Math.max(level, 1);\n    const iconLevel = Math.min(safeLevel, MAX_LEVEL_ICON);\n    const iconName = (iconLevel < 10\n      ? `rating-icons-level${iconLevel}`\n      : `rating-icons-level${Math.floor(iconLevel / 10) * 10}`) as IconName;\n\n    return (\n      <span role=\"button\" tabIndex={0} className={styles.userRatingWrapper} onClick={onRatingClick}>\n        <Icon\n          name={iconName}\n          className={styles.ratingIcon}\n        />\n        <span className={styles.ratingLevel}>{level}</span>\n      </span>\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span\n          className={buildClassName(styles.status, 'status')}\n          dir=\"auto\"\n          style={createVtnStyle('status', true)}\n        >\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n          style={createVtnStyle('status', true)}\n        >\n          {renderUserRating()}\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span\n        className={buildClassName(styles.status, 'status')}\n        dir=\"auto\"\n        style={createVtnStyle('status', true)}\n      >\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        'ProfileInfo',\n        styles.root,\n        !isExpanded && styles.minimized,\n        isPlain && styles.plain,\n      )}\n      style={buildStyle(\n        profileColorSet && `--rating-outline-color: ${isExpanded ? 'transparent' : profileColorSet?.bgColors[1]}`,\n        profileColorSet && !isExpanded && `--rating-text-color: ${profileColorSet?.bgColors[1]}`,\n        createVtnStyle('profileInfo', true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {profileColorSet?.bgColors && (\n        <RadialPatternBackground\n          backgroundColors={profileColorSet.bgColors}\n          patternIcon={backgroundEmoji}\n          patternColor={collectibleEmojiStatus?.patternColor || PATTERN_COLOR}\n          className={styles.radialPatternBackground}\n          patternSize={PATTERN_SIZE_FACTOR}\n          patternOpacity={collectibleEmojiStatus ? 1 : PATTERN_OPACITY}\n        />\n      )}\n      {pinnedGifts && (\n        <ProfilePinnedGifts\n          peerId={peerId}\n          gifts={pinnedGifts}\n          isExpanded={isExpanded}\n          className={styles.pinnedGifts}\n          withGlow={!isPlain}\n        />\n      )}\n      {isExpanded && (\n        <div className={styles.photoWrapper} style={createVtnStyle('photoWrapper', true)}>\n          {renderPhotoTabs()}\n          {!isForSettings && profilePhotos?.personalPhoto && (\n            <div className={buildClassName(\n              styles.fallbackPhoto,\n              isFirst && styles.fallbackPhotoVisible,\n            )}\n            >\n              <div className={styles.fallbackPhotoContents}>\n                {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n              </div>\n            </div>\n          )}\n          {isForSettings && profilePhotos?.fallbackPhoto && (\n            <div className={buildClassName(\n              styles.fallbackPhoto,\n              (isFirst || isLast) && styles.fallbackPhotoVisible,\n            )}\n            >\n              <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n                {!isLast && (\n                  <Avatar\n                    photo={profilePhotos.fallbackPhoto}\n                    className={styles.fallbackPhotoAvatar}\n                    size=\"mini\"\n                  />\n                )}\n                {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n              </div>\n            </div>\n          )}\n          <Transition\n            activeKey={currentPhotoIndex}\n            name={resolveTransitionName('slide', animationLevel, !hasSlideAnimation, lang.isRtl)}\n          >\n            {renderPhoto}\n          </Transition>\n\n          {!isFirst && (\n            <button\n              type=\"button\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              className={buildClassName(styles.navigation, styles.navigation_prev)}\n              aria-label={oldLang('AccDescrPrevious')}\n              onClick={selectPreviousMedia}\n            />\n          )}\n          {!isLast && (\n            <button\n              type=\"button\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              className={buildClassName(styles.navigation, styles.navigation_next)}\n              aria-label={oldLang('Next')}\n              onClick={selectNextMedia}\n            />\n          )}\n        </div>\n      )}\n      {!isExpanded && (\n        <Avatar\n          withStory\n          storyColors={profileColorSet?.storyColors}\n          className={styles.standaloneAvatar}\n          key={peer?.id}\n          size=\"jumbo\"\n          peer={peer}\n          style={createVtnStyle('avatar', true)}\n          onClick={isForSettings ? handleProfilePhotoClick : undefined}\n        />\n      )}\n\n      <div\n        className={styles.info}\n        dir={lang.isRtl ? 'rtl' : 'auto'}\n        style={createVtnStyle('info', true)}\n      >\n        {(user || chat) && (\n          <FullNameTitle\n            className={styles.title}\n            style={createVtnStyle('title', true)}\n            peer={(user || chat)!}\n            withEmojiStatus\n            withStatusTextColor\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): Complete<StateProps> => {\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const userFullInfo = user ? selectUserFullInfo(global, peerId) : undefined;\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n    const { animationLevel } = selectSharedSettings(global);\n\n    const emojiStatus = peer?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? selectCustomEmoji(global, emojiStatus.documentId) : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    const profileColor = peer && selectPeerProfileColor(global, peer);\n    const theme = selectTheme(global);\n\n    const hasBackground = selectPeerHasProfileBackground(global, peerId);\n    const savedGifts = selectPeerSavedGifts(global, peerId);\n\n    return {\n      user,\n      userFullInfo,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      animationLevel,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      emojiStatus,\n      profilePhotos,\n      topic,\n      messagesCount: topic ? selectThreadMessagesCount(global, peerId, currentTopicId!) : undefined,\n      profileColorOption: profileColor,\n      theme,\n      isPlain: !hasBackground,\n      savedGifts,\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): Complete<StateProps> => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { UNMUTE_TIMESTAMP } from '../../../config';\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n    updateTopicMutedState,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    updateTopicMutedState({ chatId, topicId: topic.id, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n    handleUnmute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute, handleUnmute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    let removeTauriListener: VoidFunction | undefined;\n    const setupTauriListener = async () => {\n      const tauriWindow = await window.tauri?.getCurrentWindow();\n      removeTauriListener = await tauriWindow.onResized(() => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n    };\n\n    if (IS_TAURI) {\n      window.tauri?.getCurrentWindow().then((tauriWindow) => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n      setupTauriListener();\n    }\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeTauriListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage: boolean, isMobile: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, Boolean(album.isPaidMedia), isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_TAURI && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n  selectCustomEmoji,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = selectCustomEmoji(global, customEmojiId);\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): Complete<StateProps> => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  threadId,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): Complete<StateProps> => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n      case 'suggestedMessage':\n        if (button.buttonType === 'suggestChanges') {\n          return <Icon className=\"left-icon\" name=\"edit\" />;\n        }\n        if (button.buttonType === 'approve') {\n          return <Icon className=\"left-icon\" name=\"check\" />;\n        }\n        if (button.buttonType === 'decline') {\n          return <Icon className=\"left-icon\" name=\"close\" />;\n        }\n        break;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported' || (button.type === 'suggestedMessage' && button.disabled)}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              {renderIcon(button)}\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import type React from '../../../lib/teact/teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getMediaThumbUri, getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  onStopEffect?: VoidFunction;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Sticker: FC<OwnProps & StateProps> = ({\n  message,\n  shouldLoop,\n  shouldPlayEffect,\n  withEffect,\n  isMediaNsfw,\n  onStopEffect,\n  observeIntersection,\n  observeIntersectionForPlaying,\n  needsAgeVerification,\n}) => {\n  const { showNotification, openStickerSet, updateContentSettings, openAgeVerificationModal } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(sticker);\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Sticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import {\n  memo, useLayoutEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMediaTodo,\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport { getPeerFullTitle, getPeerTitle } from '../../../global/helpers/peers';\nimport { selectIsCurrentUserPremium, selectSender, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\n\nimport './TodoList.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  todoList: ApiMediaTodo;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst TodoList = ({\n  message,\n  todoList,\n  sender,\n  isCurrentUserPremium,\n  isSynced,\n}: OwnProps & StateProps) => {\n  const { toggleTodoCompleted, showNotification, requestConfetti } = getActions();\n  const { todo, completions } = todoList;\n  const { title, items, othersCanComplete } = todo;\n  const [completedTasks, setCompletedTasks] = useState<string[]>([]);\n  const completedTasksSet = useMemo(() => new Set(completedTasks), [completedTasks]);\n\n  const canToggle = !message.isScheduled && isCurrentUserPremium && isSynced;\n\n  useLayoutEffect(() => {\n    const completedIds = completions?.map((c) => c.itemId.toString()) || [];\n    setCompletedTasks(completedIds);\n  }, [completions]);\n\n  const lang = useLang();\n\n  const handleTaskLabelClick = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForToggleTask'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n  });\n\n  const handleTaskToggle = useLastCallback((newCompletedTasks: string[]) => {\n    const newCompletedId = newCompletedTasks.find((id) => !completedTasksSet.has(id));\n    const newIncompletedId = Array.from(completedTasksSet).find((id) => !newCompletedTasks.includes(id));\n\n    toggleTodoCompleted({\n      chatId: message.chatId,\n      messageId: message.id,\n      completedIds: newCompletedId ? [Number(newCompletedId)] : [],\n      incompletedIds: newIncompletedId ? [Number(newIncompletedId)] : [],\n    });\n\n    if (newCompletedTasks.length === items.length) {\n      requestConfetti({});\n    }\n  });\n  const isReadOnly = Boolean(message.forwardInfo) || (!othersCanComplete && !message.isOutgoing);\n  const isOutgoing = message.isOutgoing;\n\n  const tasks = useMemo(() => items.map((task) => {\n    const user = !othersCanComplete ? undefined : selectUser(getGlobal(),\n      completions?.find((c) => c.itemId === task.id)?.completedBy || '');\n    const subLabel = user ? getPeerFullTitle(lang, user) : undefined;\n    return {\n      label: renderTextWithEntities(task.title),\n      value: task.id.toString(),\n      user,\n      subLabel,\n    };\n  }), [items, othersCanComplete, completions, lang]);\n\n  const renderCheckBoxGroup = () => {\n    return (\n      <CheckboxGroup\n        options={tasks}\n        selected={completedTasks}\n        onChange={handleTaskToggle}\n        onClickLabel={!isCurrentUserPremium ? handleTaskLabelClick : undefined}\n        disabled={!canToggle}\n        isRound\n      />\n    );\n  };\n\n  const renderReadOnlyTodoList = () => {\n    return (\n      <div className=\"todo-list-items\">\n        {tasks.map((task) => (\n          <div\n            key={task.value}\n            className=\"todo-list-readonly-item\"\n          >\n            <div className=\"todo-readonly-item-checkbox\">\n              {completedTasksSet.has(task.value)\n                ? <Icon name=\"check\" />\n                : <div className=\"todo-item-bullet-point\" />}\n            </div>\n            <div\n              className={buildClassName(\n                'readonly-item-label',\n                completedTasksSet.has(task.value) && 'completed-label',\n              )}\n            >\n              {task.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderTodoListType = () => {\n    if (message.forwardInfo) {\n      return lang('TitleToDoList');\n    }\n\n    if (othersCanComplete) {\n      return lang('TitleGroupToDoList');\n    }\n\n    if (isOutgoing) {\n      return lang('TitleYourToDoList');\n    }\n\n    if (sender) {\n      return lang('TitleUserToDoList', { peer: getPeerTitle(lang, sender) }, { withNodes: true });\n    }\n\n    return lang('TitleToDoList');\n  };\n\n  return (\n    <div className=\"todo-list\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"todo-list-header\">\n        <div className=\"todo-list-title\">\n          {renderTextWithEntities(title)}\n        </div>\n        <div className=\"list-type\">\n          {renderTodoListType()}\n        </div>\n      </div>\n\n      <div className=\"todo-list-items\">\n        {isReadOnly ? renderReadOnlyTodoList() : renderCheckBoxGroup()}\n      </div>\n      <div className=\"completed-tasks-count\">\n        <AnimatedCounter text={\n          lang('DescriptionCompletedToDoTasks', {\n            number: completedTasks.length,\n            count: tasks.length,\n          })\n        }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const sender = selectSender(global, message);\n  return {\n    sender,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    isSynced: global.isSynced,\n  };\n},\n)(TodoList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import { memo, useRef } from '@teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport useFlag from '../../../hooks/useFlag.ts';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const [isHover, markHover, unmarkHover] = useFlag();\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={buildClassName('interactive-gift', styles.root)}\n      onClick={onClick}\n      onMouseEnter={!IS_TOUCH_ENV ? markHover : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? unmarkHover : undefined}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          shouldLoop={isHover}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageWebPage, ApiTypeStory, ApiWebPage, ApiWebPageFull } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey, type WebPageMediaSize } from '../../../types';\n\nimport { getPhotoFullDimensions } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  messageWebPage: ApiMessageWebPage;\n  webPage: ApiWebPage;\n  message?: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutFiles?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  messageWebPage,\n  webPage,\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutFiles,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const fullWebPage = webPage?.webpageType === 'full' ? webPage : undefined;\n\n  const { story: storyData, stickers } = fullWebPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (webPage?.webpageType !== 'full') return undefined;\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const { mediaSize } = messageWebPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    isSquarePhoto = getIsSmallPhoto(webPage, mediaSize);\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', 'WebPage-text_interactive')}\n            onClick={() => openUrl({ url, shouldSkipModal: messageWebPage.isSafe })}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {video && (\n          <Video\n            video={video}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {audio && (\n          <Audio\n            theme={theme}\n            message={message!}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getIsSmallPhoto(webPage: ApiWebPageFull, mediaSize?: WebPageMediaSize) {\n  if (!webPage?.photo) return false;\n  if (mediaSize === 'small') return true;\n  if (mediaSize === 'large') return false;\n\n  const { width, height } = getPhotoFullDimensions(webPage.photo) || {};\n  if (!width || !height) return false;\n\n  return width === height && !webPage.hasLargeMedia;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getMessageWebPage,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectFullWebPageFromMessage,\n  selectIsChatProtected,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport {\n  selectIsMediaNsfw,\n  selectMessageDownloadableMedia,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n} from '../../../global/selectors/media';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport { IS_ANDROID, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, getMinMediaWidthWithText } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport TodoList from './TodoList';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n  minFutureTime?: number;\n  isMediaNsfw?: boolean;\n  isReplyMediaNsfw?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\nconst MAX_REASON_LENGTH = 200;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutFiles,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  isMediaNsfw,\n  isReplyMediaNsfw,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n  minFutureTime,\n  webPage,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    clickSuggestedMessageButton,\n    rejectSuggestedPost,\n    openSuggestedPostApprovalModal,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const [isDeclineDialogOpen, openDeclineDialog, closeDeclineDialog] = useFlag();\n  const [declineReason, setDeclineReason] = useState('');\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_TAURI,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults, todo,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang: oldLang,\n    selectMessage,\n    message,\n    webPage,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled && shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || (\n      (photo || video || storyData || (location?.mediaType === 'geo')) && (!hasText || isInvertedMedia))\n    );\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(oldLang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < getMinMediaWidthWithText(isMobile)) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMobile, isMediaWithCommentButton), width);\n      }\n    } else if (albumLayout) {\n      const minWidth = getMinMediaWidth(text?.text, isMobile, isMediaWithCommentButton);\n      calculatedWidth = Math.max(minWidth, albumLayout.containerStyle.width);\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName(\n          'quick-reaction',\n          'no-selection',\n          isQuickReactionVisible && !hasActiveReactions && 'visible',\n        )}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && reactionsPosition !== 'inside')) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                isMediaNsfw={isReplyMediaNsfw}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            isMediaNsfw={isMediaNsfw}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {todo && (\n          <TodoList message={message} todoList={todo} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            threadId={threadId}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? oldLang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    const messageWebPage = getMessageWebPage(message);\n    if (!messageWebPage || !webPage) return undefined;\n    return (\n      <WebPage\n        messageWebPage={messageWebPage}\n        webPage={webPage}\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutFiles={shouldWarnAboutFiles}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            isMediaNsfw={isMediaNsfw}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            isMediaNsfw={isMediaNsfw}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {oldLang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  const handleSuggestedMessageButton = useLastCallback((payload: ActionPayloads['clickBotInlineButton']) => {\n    if (payload.button.type !== 'suggestedMessage') return;\n    if (payload.button.buttonType === 'approve') {\n      openSuggestedPostApprovalModal({\n        chatId,\n        messageId: message.id,\n      });\n      return;\n    }\n\n    if (payload.button.buttonType === 'decline') {\n      openDeclineDialog();\n      return;\n    }\n\n    clickSuggestedMessageButton({\n      ...payload,\n      button: payload.button,\n    });\n  });\n\n  const handleDeclineReasonChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setDeclineReason(e.target.value);\n  });\n\n  const handleDeclineConfirm = useLastCallback(() => {\n    rejectSuggestedPost({\n      chatId,\n      messageId: message.id,\n      rejectComment: declineReason.trim() || undefined,\n    });\n    closeDeclineDialog();\n    setDeclineReason('');\n  });\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(oldLang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(oldLang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{oldLang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{oldLang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || oldLang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n  const shouldRenderSuggestedPostButtons = message.suggestedPostInfo\n    && !message.isOutgoing && !message.suggestedPostInfo.isAccepted && !message.suggestedPostInfo.isRejected;\n\n  const isSuggestedPostExpired = useMemo(() => {\n    if (!message.suggestedPostInfo?.scheduleDate || !minFutureTime) return false;\n    const now = getServerTime();\n    return message.suggestedPostInfo.scheduleDate <= now + minFutureTime;\n  }, [message.suggestedPostInfo, minFutureTime]);\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={oldLang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('FocusMessage')}\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {shouldRenderSuggestedPostButtons && (\n          <InlineButtons\n            message={{\n              ...message,\n              inlineButtons: [\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'decline',\n                    text: lang('SuggestedPostDecline'),\n                  },\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'approve',\n                    text: lang('SuggestedPostApprove'),\n                    disabled: isSuggestedPostExpired,\n                  },\n                ],\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'suggestChanges',\n                    text: lang('SuggestedPostSuggestChanges'),\n                  },\n                ],\n              ],\n            }}\n            onClick={handleSuggestedMessageButton}\n          />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n      {isDeclineDialogOpen && (\n        <ConfirmDialog\n          isOpen={isDeclineDialogOpen}\n          onClose={closeDeclineDialog}\n          title={lang('SuggestedPostDecline')}\n          confirmLabel={lang('SuggestedPostDecline')}\n          confirmHandler={handleDeclineConfirm}\n          confirmIsDestructive\n        >\n          <div className=\"decline-dialog-question\">\n            {renderText(lang('DeclinePostDialogQuestion', {\n              sender: sender ? getPeerFullTitle(oldLang, sender) : '',\n            }, { withNodes: true, withMarkdown: true }))}\n          </div>\n          <InputText\n            placeholder={lang('DeclineReasonPlaceholder')}\n            value={declineReason}\n            onChange={handleDeclineReasonChange}\n            maxLength={MAX_REASON_LENGTH}\n          />\n        </ConfirmDialog>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): Complete<StateProps> => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const webPage = selectFullWebPageFromMessage(global, message);\n\n    const { shouldWarnAboutFiles } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || selectIsChatRestricted(global, replyMessageChat.id));\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const minFutureTime = global.appConfig.starsSuggestedPostFutureMin;\n\n    const isMediaNsfw = selectIsMediaNsfw(global, message);\n    const isReplyMediaNsfw = replyMessage && selectIsMediaNsfw(global, replyMessage);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutFiles,\n      outgoingStatus: isOutgoing ? selectOutgoingStatus(global, message, messageListType === 'scheduled') : undefined,\n      uploadProgress: typeof uploadProgress === 'number' ? uploadProgress : undefined,\n      focusDirection: isFocused ? focusDirection : undefined,\n      noFocusHighlight: isFocused ? noFocusHighlight : undefined,\n      isResizingContainer: isFocused ? isResizingContainer : undefined,\n      focusedQuote: isFocused ? focusedQuote : undefined,\n      focusedQuoteOffset: isFocused ? focusedQuoteOffset : undefined,\n      scrollTargetPosition: isFocused ? scrollTargetPosition : undefined,\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      minFutureTime,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n      isMediaNsfw,\n      isReplyMediaNsfw,\n      webPage,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser, ApiWebPage } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMainUsername, getMessagePhoto, getWebPagePhoto, getWebPageVideo } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  webPage,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  webPage?: ApiWebPage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, openChatWithDraft, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChatWithDraft({\n      chatId,\n      threadId,\n      text: {\n        text: `@${getMainUsername(botSender)} `,\n      },\n    });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || getWebPageVideo(webPage);\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getWebPagePhoto(webPage);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll, ApiWebPage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    webPage?: ApiWebPage;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage?.webpageType === 'full') {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiInputSuggestedPostInfo,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { TON_CURRENCY_CODE } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatScheduledDateTime } from '../../../util/dates/dateFormat';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../../util/localization/format';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport useMessageMediaHash from '../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  isMediaNsfw?: boolean;\n  noCaptions?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  suggestedPostInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  isMediaNsfw,\n  noCaptions,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = useMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia)) || isMediaNsfw;\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    const isFree = !(suggestedPostInfo?.price?.amount);\n    if (suggestedPostInfo) {\n      if (isFree && !suggestedPostInfo.scheduleDate) {\n        return lang('ComposerEmbeddedMessageSuggestedPostDescription');\n      }\n      const priceText = suggestedPostInfo.price\n        ? (suggestedPostInfo.price.currency === TON_CURRENCY_CODE\n          ? formatTonAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-ton-icon',\n            shouldConvertFromNanos: true,\n          })\n          : formatStarsAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-star-icon',\n          }))\n        : '';\n      const scheduleText = suggestedPostInfo.scheduleDate\n        ? formatScheduledDateTime(suggestedPostInfo.scheduleDate, lang, oldLang)\n        : '';\n      if (priceText && !scheduleText) {\n        return (\n          <span className=\"suggested-post-price-wrapper\">\n            {\n              lang('TitleSuggestedPostAmountForAnyTime',\n                { amount: priceText },\n                {\n                  withNodes: true,\n                  withMarkdown: true,\n                })\n            }\n          </span>\n        );\n      }\n      return (\n        <span className=\"suggested-post-price-wrapper\">\n          {priceText}\n          {scheduleText ? ` • ${scheduleText}` : ''}\n        </span>\n      );\n    }\n\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (noCaptions) {\n      return lang('EmbeddedMessageNoCaption');\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (suggestedPostInfo && replyInfo) {\n      return lang('TitleSuggestedChanges');\n    }\n\n    if (suggestedPostInfo) {\n      return lang('ComposerEmbeddedMessageSuggestedPostTitle');\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n        suggestedPostInfo && 'is-suggested-post',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n"],"names":["Keys","memo","MessageOutgoingStatus","status","_jsx","className","children","Transition","name","activeKey","Icon","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","ConnectorClass","requestStates","Map","requestStatesByCallback","pendingPayloads","pendingTransferables","constructor","onUpdate","channel","destroy","init","args","this","postMessageOnTickEnd","type","request","messageData","transferables","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","payloads","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","throttleWithTickEnd","postMessage","createConnector","worker","connector","handleMessage","removeEventListener","props","CustomSend","useModuleLoader","Bundles","Extra","LAST_DELTA_COUNT","ACTIVE_SCROLL_RESET_TIMEOUT","NEW_INPUT_DELTA_THRESHOLD","OVERSCROLL_CONTAINER_CLASS","NO_TOUCH_CONTAINER_CLASS","TRANSITION_DURATION","DRAG_TRIGGER_DISTANCE","initialActiveScrollContext","lastDeltas","Array","fill","lastAverageDelta","isStartedAtTop","resetStartTopAt","timeout","useTopOverscroll","containerRef","onOverscroll","onReset","isDisabled","getState","setState","useSignal","activeScrollRef","useRef","transitionTimeoutRef","touchStartYRef","triggerOverscroll","clearTimeout","triggerReset","window","setTimeout","scheduleResetActiveScroll","handleWheel","container","defaultPrevented","deltaY","scrollTop","state","activeScroll","isStarting","at","Date","now","slice","currentAverageDelta","reduce","a","b","isNewInput","Math","abs","stopEvent","handleTouchStart","touches","clientY","handleTouchMove","startY","handleTouchEnd","requestMutation","classList","add","remove","toggle","passive","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","currentUserId","useLang","filteredUsers","setFilteredUsers","useState","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","startsWith","usernameTag","usersById","getGlobal","users","byId","memberIds","acc","member","filter","filteredIds","filterPeersByQuery","ids","unique","query","values","pickTruthy","insertMention","peer","forceFocus","insertAtEnd","hasUsername","getPeerTitle","mainUsername","getMainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useOrderDiff","orderedIds","orderById","useMemo","i","prevOrderById","usePreviousDeprecated","prevChatId","orderDiffById","mapValues","order","getAnimationType","useChatAnimationType","OFFSET_X","REM","useOverlayPosition","anchorRef","overlayRef","isMirrored","isForMessageEffect","updatePosition","element","anchor","anchorRect","getBoundingClientRect","elementRect","windowWidth","innerWidth","anchorCenterY","top","height","anchorBottomY","bottom","y","style","left","right","messagesContainer","closest","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","isForumPanelOpen","shouldRenderForumPanelRef","isAnimationStartedRef","forceUpdate","useForceUpdate","useSyncEffect","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","verifyAgeMin","appConfig","VERIFY_AGE_MIN_DEFAULT","SensitiveContentConfirmModal","shouldAlwaysShow","onAlwaysShowChanged","_jsxs","years","Checkbox","label","checked","onCheck","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","styles","root","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","rect","x","scrollX","scrollY","width","innerHeight","seed","floor","filterId","SNAP_EFFECT_ID","component","ghost","viewBox","createFilter","min","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","from","setProperty","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","once","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","result","in","slope","intercept","attributeName","dur","in2","operator","scale","xChannelSelector","yChannelSelector","forceShowSelf","isSynced","userStatus","selectUserStatus","isSavedMessages","isSelf","self","areMessagesLoaded","selectChatMessages","PrivateChatInfo","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withStory","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","isSavedDialog","adminMember","ripple","storyViewerOrigin","onEmojiStatusClick","iconElement","rightElement","loadFullUser","openMediaViewer","loadMoreProfilePhotos","hasAvatarMediaViewer","peerId","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","hasMedia","stopPropagation","isAvatarView","mediaIndex","origin","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","customTitle","isOwner","buildClassName","dir","isRtl","Avatar","size","storyViewerMode","onClick","FullNameTitle","withEmojiStatus","DotAnimation","content","subtitleKey","TypingStatus","isSystemBot","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","ChatCallStatus","isSelected","isMobile","ChatTags","orderedFolderIds","chatFoldersById","visibleFolderIds","remainingCount","folderId","folder","getApiPeerColorClass","color","renderTextWithEntities","text","entities","noCustomEmojiPlayback","noTitleAnimations","emojiSize","isPreview","previewMessageId","selectChat","chatFolderIds","getChatFolderIds","areTagsEnabled","chatFolders","isPremium","selectIsCurrentUserPremium","lastMessageId","selectChatLastMessageId","lastMessage","selectChatMessage","selectChatLastMessage","isOutgoing","forwardInfo","savedDialogSender","fromId","selectPeer","messageSender","selectSender","lastMessageSender","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","isSelectedForum","isForum","selectTabState","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","topicsInfo","selectTopicsInfo","storyData","lastMessageStory","selectPeerStory","isAccountFrozen","selectIsCurrentUserFrozen","monoforumChannel","selectMonoforumChannel","isMuted","getIsChatMuted","selectNotifyDefaults","selectNotifyException","draft","selectDraft","selectIsForumPanelOpen","canScrollDown","canChangeFolder","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","selectCanAnimateInterface","listedTopicIds","topics","topicsById","Chat","orderDiff","animationType","isPinned","observeIntersection","offsetTop","onDragEnter","withTags","openChat","openSavedDialog","toggleChatInfo","focusLastMessage","focusMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","updateChatMutedState","useAppLayout","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","isMonoforum","useEnsureMessage","tagFolderIds","chatFolderIdsSet","isAll","ALL_FOLDER_ID","hasColor","shouldRenderTags","renderSubtitle","ref","useChatListEntry","statefulMediaContent","groupStatefulContent","story","noForumTitle","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","handleClick","noForumTopicPanel","value","forceOnHeavyAnimation","force","shouldReplaceHistory","handleDragEnter","preventDefault","handleDelete","handleMute","handleUnmute","mutedUntil","UNMUTE_TIMESTAMP","handleChatFolderChange","handleReport","messageIds","contextActions","useChatContextActions","isIntersecting","useIsIntersecting","isOnline","hasShownClass","isAvatarOnlineShown","useShowTransitionDeprecated","href","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","isUserId","ListItem","withPortalForMenu","asMessageBubble","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","isCallActive","isCallNotEmpty","monoforumBadgeClassName","withStatusTextColor","LastMessageMeta","outgoingStatus","draftDate","date","hasMiniApp","hasMainMiniApp","DeleteChatModal","onCloseAnimationEnd","MuteChatModal","ChatFolderModal","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","settings","byKey","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","storyId","loadPeerStoriesByIds","loadStoryThrottled","throttled","throttle","storyIds","resetInput","applyIosAutoCapitalizationFix","focus","IS_IOS","createElement","body","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","DOMParser","parseFromString","wrapNodeAnchor","node","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","handlePaste","async","clipboardData","input","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","err","DEBUG","console","textContents","querySelectorAll","getElementsByTagName","removeAttribute","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","isWordDocument","hasText","shouldSetAttachments","newAttachments","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","pluralValue","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","RE_LINK","RE_LINK_TEMPLATE","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","default","start","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","waveform","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","Uint8Array","isDestroyed","tick","getByteFrequencyData","volume","cb","requestMeasure","subscribeToAnalyzer","stop","onstop","blob","Blob","duration","round","onerror","delayStop","max","pause","AttachmentModal","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canAttachToDoLists","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","theme","shouldCollectDebugLogs","canEditMedia","editingMessage","paidMessagesStars","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","onTodoListCreate","updateAttachmentSettings","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","validateFiles","handleQuickSelect","shouldCompress","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","oldLang","ResponsiveHoverButton","onActivate","ariaLabel","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","_Fragment","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","button","renderKeyboardButtonText","noCompact","j","Button","BotMenuButton","textRef","textEl","scrollWidth","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","isForwarding","forwardedMessages","replyInfo","suggestedPostInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","forwardSenders","m","selectSenderFromForwardedMessage","forwardedMessage","selectForwardedSender","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","isContextMenuDisabled","isReplyToDiscussion","isMediaNsfw","selectIsMediaNsfw","forwardedMessagesCount","isCurrentUserPremium","isInChangingRecipientMode","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","resetDraftSuggestedPostInfo","updateDraftReplyInfo","setEditingId","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","openSuggestMessageModal","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShowingSuggestedPost","senders","isShown","shouldRender","transitionClassNames","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","renderingSender","useCurrentOrPrev","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","modal","ToDoListModal","tabState","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","webPagePreviewId","selectWebPage","webpageType","WebPagePreview","isEditing","toggleMessageWebPage","isInvertedMedia","isSmallerMedia","webPageMediaSize","useShowTransition","withShouldRender","hasMediaSizeOptions","hasLargeMedia","prevWebPageRef","renderingWebPage","isFullWebPage","thumbnailUrl","useThumbnail","previewMedia","getWebPagePhoto","getWebPageVideo","getWebPageAudio","getWebPageDocument","previewMediaHash","getMediaHash","previewMediaUrl","useMedia","shouldRenderPreviewMedia","previewMediaRef","noCloseTransition","hasPreviewMedia","handleClearWebpagePreview","handleBeforeContextMenu","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","PeerColorWrapper","noUserColors","onMouseDown","src","siteName","url","description","webPage","photo","video","audio","MainButtonState","chatBot","selectBot","isChatWithBot","isChatWithUser","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","sendAsId","sendAsPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","isReplying","hasSuggestedPost","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","isAppConfigLoaded","insertingPeerIdMention","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","todoListModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","selectTheme","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","Composer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","openTodoListModal","closeTodoListModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateInsertingPeerIdMention","updateDraftSuggestedPostInfo","counterRef","storyReactionRef","isMounted","setIsMounted","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","windowSize","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatWithSendAs","isChatSuperGroup","isChatPublic","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","setShouldPaidMessageAutoApprove","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","shouldPrepend","selection","getSelection","messageInput","rangeCount","getRangeAt","insertHtmlInSelection","dispatchEvent","Event","bubbles","newFirstWord","shouldReplace","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","shouldSendInHighQuality","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","handleUpdateAttachmentsQuality","filename","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","shouldKeepSuggestedPost","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","shouldUpdateSuggestedPost","EDITABLE_INPUT_CSS_SELECTOR","customEmojiIds","entity","documentId","useLayoutEffect","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","loadWebPagePreview","clearWebPagePreview","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","link","useLoadLinkPreview","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","shouldShowSuggestedPostButton","showCustomEmojiPremiumNotification","notificationNumber","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","formatMediaDuration","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","voice","handleSendWithConfirmation","handleTodoListCreate","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","handleToDoListSend","todo","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleSuggestPostClick","price","currency","STARS_CURRENCY_CODE","nanos","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","adminRights","anonymous","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","fullClassName","handleToggleReaction","reaction","emoticon","selectCustomEmoji","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","prevShouldRenderPaidBadge","usePrevious","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","filterUnits","dy","stdDeviation","d","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","Spinner","slideClassName","direction","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","ReactionAnimatedEmoji","withEffectOnly","getReactionKey","allowDisabledClick","noFastClick","nonInteractive","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","messagePriceInStars","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","loadStoriesMaxIds","peerIds","usePeerStoriesPolling","peers","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","isRestricted","selectIsChatRestricted","usePrevDuringAnimation","prev","timeoutRef","isCurrentPresent","isPrevPresent","wasTopicOpened","requestMainWebView","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","isEveryUnreadMuted","hasUnreadMark","isSignal","isUnread","handleOpenApp","extractCurrentThemeParams","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","needsAgeVerification","needAgeVideoVerification","Video","isOwn","isInWebPage","noAvatars","canAutoLoad","canAutoPlay","uploadProgress","forcedWidth","dimensions","asForwarded","isDownloading","isProtected","lastPlaybackTimestamp","clickArg","observeIntersectionForLoading","observeIntersectionForPlaying","onCancelUpload","cancelMediaDownload","updateContentSettings","openAgeVerificationModal","videoRef","isNsfwModalOpen","openNsfwModal","closeNsfwModal","shouldAlwaysShowNsfw","setShouldAlwaysShowNsfw","isPaidPreview","mediaType","localBlobUrl","blobUrl","shouldShowSpoiler","isSpoilerShown","showSpoiler","hideSpoiler","handleNsfwConfirm","isSensitiveEnabled","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","fullMediaHash","getVideoMediaHash","isFullMediaPreloaded","mediaLoader","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","fullMediaData","isPlayerReady","markPlayerReady","thumbDataUri","getMediaThumbUri","hasThumb","withBlurredBackground","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","hasMediaData","noThumb","thumbRef","useBlurredMediaThumbRef","blurredBackgroundRef","downloadProgress","isUploading","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRenderSpinner","noMountTransition","playButtonRef","playProgress","setPlayProgress","handleTimeUpdate","currentTarget","currentTime","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","isAllowed","media","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","OptimizedVideo","canPlay","defaultMuted","muted","loop","playsInline","disablePictureInPicture","draggable","onTimeUpdate","onReady","MediaSpoiler","isVisible","withAnimation","isNsfw","ProgressSpinner","progress","isGif","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","withPortal","onLoad","onSearchOpen","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","ANIMATION_DURATION","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","animateOpening","isArchived","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","reverse","index","isLast","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","String","opacity","transform","ghostRevealName","createDelayedCallback","contains","ANIMATION_END_DELAY","animateClosing","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","canvas","getContext","drawImage","ms","clear","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","getMinMediaWidthWithText","getMinMediaWidth","hasCommentButton","calculateMediaDimensions","messageText","isPhoto","isVideo","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","selectWebPagesById","messages","webPageById","useMessageMediaHash","webPagesById","useSelector","webPageId","getMessageMediaHash","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","selectWebPageFromMessage","WebLink","senderTitle","onMessageClick","linkData","getFirstLinkInMessage","domain","formattedDescription","getMessageTextWithFallback","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","Link","SafeLink","formatPastTimeShort","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","TopicIcon","letterClassName","noLoopLimit","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","onStart","onEnd","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","end","cancel","useUnmountCleanup","onMouseUp","onTouchStart","onTouchEnd","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","orderedPeerIds","archived","active","byPeerId","isRibbonShown","isArchivedRibbonShown","chatsById","chats","peerStories","canShow","toggleStoryRibbon","PREVIEW_AVATAR_COUNT","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","useStoryPreloader","beginHeavyAnimation","avatar","withStorySolid","forceFriendStorySolid","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","getCustomAppendixBg","requestMediaWorker","MAX_WORKERS","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","inputSelector","getRange","setRange","onSelectionChange","Element","VTN_PROPERTY_NAME","useVtn","uniqueId","fallbackId","useUniqueId","createVtnStyle","vtClass","vtClassString","buildStyle","CSS","registerProperty","syntax","inherits","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","handleDragLeave","relatedTarget","toTarget","onDrop","onDragLeave","rx","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","matches","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","reducer","initialState","reducerRef","dispatch","NothingFound","withSticker","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","DuckNothingFound","previewUrl","LOCAL_TGS_PREVIEW_URLS","noLoop","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","last","DAYS","_","BusinessHours","businessHours","transitionRef","isExpanded","expand","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","role","tabIndex","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","byEmoji","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","ApiMediaFormat","BlobUrl","effectHash","column","canGiftPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","StickerView","forceAlways","shouldLoop","birthdate","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","isBotCanManageEmojiStatus","ChatExtra","updateTopicMutedState","loadPeerStories","openMapModal","requestCollectibleInfo","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","copyTextToClipboard","geoPoint","handleToggleNotifications","MUTE_INDEFINITE_TIMESTAMP","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","shouldMarkBotTrusted","appTermsInfo","terms","membersCount","ChatAnimationTypes","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","idx","dataTransferItems","traverseFileTreePromise","entry","item","itemFile","getAsFile","isDirectory","createReader","readEntries","entriesPromises","kind","webkitGetAsEntry","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionOpenInNewTab","IS_TAURI","togglePinned","actionPin","actionDelete","compact","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isChatGroup","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","confirmPaymentMessage","formatStarsAsText","totalAmount","withMarkdown","HeaderMenuContainer","isSuperGroup","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","isAnonymousForwardsChat","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","isCreator","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","channelMonoforumId","linkedMonoforumId","detectedChatLanguage","detectedLanguage","HeaderActions","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","setViewForumAsMessages","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","IS_APP","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","buttonText","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","requestForcedReflow","currentHeight","handleResize","useThrottledCallback","useResizeObserver","applyAnimationState","list","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","transition","isPanelOpen","path","DEFAULT_HANDLERS","play","seekbackward","seekforward","previoustrack","nexttrack","seekTo","registerMediaSession","metadata","mediaSession","updateMetadata","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","getChatTitle","unread","actionMinimize","isMinimized","actionExpand","actionHide","isHidden","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","openSettingsScreen","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","isText","RESERVED_HOTKEYS","canDisplayArchive","isMainList","openNextChat","openLeftColumnContent","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isAllFolder","isSaved","resolvedFolderId","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","targetIndexDelta","handleKeyDown","IS_MAC_OS","isArchiveInList","contentKey","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","clientX","handleShowStoryRibbon","handleHideStoryRibbon","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onLoadMore","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","TOPIC_ICON_SIZE","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","selectTopic","selectThreadMessagesCount","GroupChatInfo","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","Photo","isInSelectMode","shouldAffectAppendix","getPhotoMediaHash","prevMediaData","fullMediaRef","shouldRenderFullMedia","withThumb","downloadButtonRef","shouldRenderDownloadButton","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","appendixBg","dimensionsStyle","fileSelector","accept","noMultiple","onchange","click","extension","timestamp","thumbnailDataUri","previewData","smaller","isSelectable","actionIcon","onDateClick","elementRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","formatMediaDateTime","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","mediaThumbnail","mediaHash","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","asPreview","withTranslucentThumbs","senderName","getMessageSenderName","renderSummary","Opacity","Move","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","AudioOrigin","Inline","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","safePlay","stopCurrentAudio","register","trackType","track","Audio","handleEvent","eventName","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","time","fastSeek","setVolume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","isPrivateChat","getPrivateChatUserId","isBot","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","chatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","stroke","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","interval","MAX_STANDARD_QUALITY_IMG_SIZE","MAX_HIGH_QUALITY_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","options","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","maxQuickImgSize","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","performer","coverUrl","parseBlob","selectCover","fetchBlob","common","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","senderId","preloadedHashes","LimitedMap","Document","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutFiles","onMediaClick","downloadMedia","setSharedSettingOption","isFileIpDialogOpen","openFileIpDialog","closeFileIpDialog","shouldNotWarnAboutFiles","setShouldNotWarnAboutFiles","fileName","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","isLoaded","hasPreview","getDocumentHasPreview","shouldForceDownload","innerMediaType","mediaSize","fromDocumentAttribute","fromPreload","fileEl","onHover","mediaContainer","getMessageDocumentVideo","getMessageDocumentPhoto","shouldSkipPhoto","fetch","IS_PROGRESSIVE_SUPPORTED","videoEl","naturalWidth","naturalHeight","updateChatMessage","setGlobal","preloadDocumentMedia","handleDownload","originMessage","isIpRevealingMedia","handleFileIpConfirm","handleDateClick","isDocumentVideo","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","r","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","formatTemperature","temperatureC","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","MediaAreaOverlay","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","openUrl","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","lastCallback","onBeforeUnload","useScrollNotch","selector","deps","handleScroll","isScrolled","toggleExtraClass","addExtraClass","removeExtraClass","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","GroupCallTopPane","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","renderingFetchedParticipants","isRendering","AvatarList","resolver","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","PENDING_TRANSLATIONS","useMessageTranslation","chatTranslations","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translatedText","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderAudio","isPlaying","bufferedRanges","seekerRef","showProgress","showSeekline","renderSeekline","renderVoice","waveformCanvasRef","isMediaUnread","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","onClickTranscribe","onHideTranscription","ry","OneTimeModal","mediaDuration","selectMessageMediaDuration","canDownload","canTranscribe","autoPlay","onPlay","onPause","onReadMedia","transcribeAudio","openOneTimeMediaModal","contentAudio","mediaSource","isVoice","isSeeking","isActivated","setIsActivated","coverHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","isMessageLocal","reversePlayProgress","isOwnMessage","isReverse","withAvatar","spikes","peak","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","fillStyle","progressFillStyle","ctx","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","renderSecondLine","captureEvents","onCapture","onRelease","onDrag","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","loader","makeProgressiveLoader","next","done","readyState","endOfStream","appendBuffer","display","unloadVideo","checkIfStreamingSupported","buffer","ManagedMediaSource","MediaSource","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","delay","isHtmlAllowed","isStreaming","Progressive","selectIsSynced","setLoadProgress","startedAtRef","handleProgress","spentTime","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderOverviewItemValue","change","percentage","isChangeNegative","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","isGraph","obj","openChatWithInfo","openStoryViewer","toggleStoriesHidden","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","openPremiumModal","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","scroller","scrollHeight","newHeight","isOverflown","transitionDuration","log","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","spellCheck","onChange","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","anchorPosition","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","hasSpoiler","getMessageHtmlId","decoding","shouldUseDraft","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","RoundVideo","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","strokeDashOffset","stopPlaying","capturePlaying","togglePlaying","isPriority","onEnded","cx","cy","replaceWithTeact","STARS_ICON_PLACEHOLDER","ProfilePhoto","canPlayVideo","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","specialIcon","userFullName","getUserFullName","getFirstLetters","GIFT_STICKER_SIZE","POSITIONS","PinnedGift","gift","withGlow","openGiftInfoModal","stickerRef","giftAttributes","getGiftAttributes","model","backdrop","GiftEffectWrapper","withSparkles","sparklesColor","glowColor","edgeColor","ProfilePinnedGifts","gifts","clamp","getExpandedPosition","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","animationLevel","emojiStatus","emojiStatusSticker","emojiStatusSlug","profileColor","selectPeerProfileColor","hasBackground","selectPeerHasProfileBackground","savedGifts","selectPeerSavedGifts","profileColorOption","ProfileInfo","isForSettings","isForMonoforum","openStickerSet","openPrivacySettingsNoticeModal","openProfileRatingModal","loadPeerSavedGifts","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","currentPhotoIndex","setCurrentPhotoIndex","collectibleEmojiStatus","backgroundEmoji","useCustomEmoji","patternDocumentId","backgroundEmojiId","profileColorSet","bgColors","centerColor","storyColors","colors","darkColors","pinnedGifts","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","handleRatingClick","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","RadialPatternBackground","backgroundColors","patternIcon","patternColor","patternSize","patternOpacity","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","renderPhotoTabs","personalPhoto","fallbackPhoto","resolveTransitionName","canCopyTitle","isSystemBotChat","renderUserRating","isReadDateRestrictedByMe","renderStatus","starsRating","onRatingClick","safeLevel","iconLevel","iconName","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","ForumPanel","onOpenAnimationStart","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","waitForTransitionEnd","onTransitionEnd","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","renderTopics","GENERAL_TOPIC_ID","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeTauriListener","tauri","getCurrentWindow","tauriWindow","onResized","setupTauriListener","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","getSingularPaidMedia","extendedMedia","singularMedia","accumulate","initValue","accumulator","calculateContainerSize","layout","sides","calculateAlbumLayout","ratios","isSingleMessage","allMedia","paidMedia","getMessageContent","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","w","h0","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","CHAT_STATS","throttledMakeChatDecision","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","renderPictogram","srcUrl","getPictogramDimensions","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","getStoryMediaHash","pictogramUrl","handleFastClick","peerColor","shouldReset","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","VideoWithSelect","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","selectCanAutoPlayMedia","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleAddContact","emojiIconClassName","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","getMessageText","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","renderIcon","RE_TME_LINK","buttonType","Invoice","invoice","getMessageInvoice","isTest","photoUrl","getWebDocumentHash","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","isConnected","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","MOVE_THRESHOLD","PinSvg","Location","countdownRef","location","getMessageLocation","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","formatCountdownShort","renderPin","pinClassName","heading","venueType","iconSrc","mapPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","forwardsCount","repliesTitle","isImported","containerClassName","isVideoProcessingPending","MessagePhoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","isClickable","isBought","starsAmount","getPercentage","total","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","getPollTypeString","summary","isPublic","closed","quiz","getReadableVotersCount","Poll","onSendVote","loadMessage","openPollResults","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","CheckboxGroup","selected","loadingOptions","isRound","RadioGroup","loadingOption","Sticker","withEffect","onStopEffect","effectRef","hasEffect","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","openModal","isMemojiSticker","getStickerDimensions","fullMediaClassName","AnimatedSticker","imageHash","imgBlobUrl","isSinglePeer","isSingleStory","connectionState","BaseStory","selectPeerStories","targetUser","thumbUrl","TodoList","todoList","toggleTodoCompleted","completions","othersCanComplete","completedTasks","setCompletedTasks","completedTasksSet","canToggle","completedIds","itemId","handleTaskLabelClick","handleTaskToggle","newCompletedTasks","newCompletedId","newIncompletedId","incompletedIds","isReadOnly","tasks","task","completedBy","subLabel","getPeerFullTitle","onClickLabel","WebPageUniqueGift","pattern","isHover","markHover","unmarkHover","WebPage","messageWebPage","onDocumentClick","onContainerClick","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","fullWebPage","hasCustomColor","isWithTextColor","documents","linkTimestamp","handleOpenTelegramLink","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","getPhotoFullDimensions","getIsSmallPhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","isSafe","caption","isRectangular","noForcedUpperCase","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","selectFullWebPageFromMessage","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","selectMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","requestedChatTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","selectMessageLastPlaybackTimestamp","minFutureTime","starsSuggestedPostFutureMin","isReplyMediaNsfw","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","clickSuggestedMessageButton","rejectSuggestedPost","openSuggestedPostApprovalModal","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isDeclineDialogOpen","openDeclineDialog","closeDeclineDialog","declineReason","setDeclineReason","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","detectLanguage","useTextLanguage","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","Reactions","metaChildren","noRecentReactors","renderInvertedMediaContent","textContentClass","footerClass","hasContentAfterText","isMetaInText","renderWebPage","renderInvertibleMediaContent","getMessageWebPage","shouldRenderSenderName","renderForwardTitle","handleSuggestedMessageButton","handleDeclineReasonChange","handleDeclineConfirm","rejectComment","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","shouldRenderSuggestedPostButtons","isAccepted","isRejected","isSuggestedPostExpired","scheduleDate","onCopy","onDoubleClick","onMouseMove","shouldReadMedia","EmbeddedMessage","forwardSender","Story","StoryMention","MessageAppendix","isOutside","targetHref","InputText","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","priceText","TON_CURRENCY_CODE","formatTonAsIcon","shouldConvertFromNanos","scheduleText","formatScheduledDateTime","getMediaContentTypeDescription","renderMediaContentType","renderTextContent","isReplyToQuote","renderSender","isFullVideo","shouldRenderVideo","freezeWhenClosed","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","head","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","preloadIds","findIdsAroundCurrentId","currentStoryId","altVideos","getPreloadMediaHashes","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","startPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName"],"sourceRoot":""}