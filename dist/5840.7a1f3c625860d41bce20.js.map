{"version":3,"file":"5840.7a1f3c625860d41bce20.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport {\n  DEBUG, EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseMessageInput, { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseMessageInput';\nimport buildAttachment from '../helpers/buildAttachment';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nfunction preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) return;\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseMessageInput(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: number } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        draft: parseMessageInput(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft));\n\n    const customEmojiIds = draft.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: number,\n  type: MessageListType,\n  draft?: ApiFormattedText,\n  editingDraft?: ApiFormattedText,\n  replyingToId?: number,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseMessageInput(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseMessageInput(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseMessageInput(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/i;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_MAC_OS, IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  useEffect(() => {\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code === 'KeyU') {\n        e.preventDefault();\n        handleQuickSelect();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideoHotkey'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectReplyingToId,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport EmbeddedMessage from '../../common/EmbeddedMessage';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyingToId?: number;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyingToId,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  onClear,\n}) => {\n  const {\n    setReplyingToId,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyingToId || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [forwardedMessagesCount],\n    forwardedMessagesCount ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(canAnimate && isShown, undefined, !shouldAnimate, undefined, !shouldAnimate);\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      setReplyingToId({ messageId: undefined });\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n\n  const leftIcon = useMemo(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      return 'icon-reply';\n    }\n    if (editingId) {\n      return 'icon-edit';\n    }\n    if (isForwarding) {\n      return 'icon-forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, replyingToId, shouldForceShowEditing]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className=\"ComposerEmbeddedMessage_inner\">\n        <div className=\"embedded-left-icon\">\n          <i className={buildClassName('icon', leftIcon)} />\n        </div>\n        <EmbeddedMessage\n          className=\"inside-input\"\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={editingId ? lang('EditMessage') : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          hasContextMenu={isForwarding && !isContextMenuDisabled}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    let message: ApiMessage | undefined;\n    if (replyingToId && !shouldForceShowEditing) {\n      message = selectChatMessage(global, chatId, replyingToId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyingToId && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && !forwardInfo?.hiddenUserName) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    return {\n      replyingToId,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseMessageInput(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type { IAnchorPosition, InlineBotSettings, ISettings } from '../../types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  ULU_APP as ULU_APP_CONSTANTS,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isMainThread,\n  isUserId,\n  ULU_APP as ULU_APP_UTILS,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectReplyingToId,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseMessageInput from '../../util/parseMessageInput';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: number;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  onDropHide?: NoneToVoidFunction;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    replyingToId?: number;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  replyingToId,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openChat,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n    replyingToId,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const shouldOpenRepliesChat = (\n      replyingToId\n      && ULU_APP_CONSTANTS.SHOULD_OPEN_REPLIES_CHAT_ON_REPLY\n      && ULU_APP_UTILS.doesChatSupportThreads(chat)\n    );\n    const repliesChatToOpen = {\n      id: chatId,\n      threadId: isMainThread(threadId) ? replyingToId : threadId,\n    };\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (currentAttachments.length) {\n      if (shouldOpenRepliesChat) openChat(repliesChatToOpen);\n      sendAttachments({\n        attachments: currentAttachments,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n    if (shouldOpenRepliesChat) openChat(repliesChatToOpen);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(requestedDraftText);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openChat({\n      id: chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList!);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = mainButtonState === MainButtonState.Edit\n    ? handleEditComplete\n    : mainButtonState === MainButtonState.Schedule ? handleSendScheduled\n      : handleSend;\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className=\"message-input-wrapper\">\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang('Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      replyingToId,\n      draft: selectDraft(global, chatId, threadId),\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { ChatTranslatedMessages } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerColorKey,\n  getSenderTitle,\n  isActionMessage,\n  isMessageTranslatable,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getPictogramDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useThumbnail from '../../hooks/useThumbnail';\nimport useMessageTranslation from '../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../middle/ActionMessage';\nimport MediaSpoiler from './MediaSpoiler';\nimport MessageSummary from './MessageSummary';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  hasContextMenu?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  sender,\n  title,\n  customText,\n  isProtected,\n  noUserColors,\n  hasContextMenu,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : message?.forwardInfo?.hiddenUserName;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        sender && !noUserColors && `color-${getPeerColorKey(sender)}`,\n      )}\n      onClick={message && handleClick}\n      onMouseDown={message && handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      <div className=\"message-text\">\n        <p dir=\"auto\">\n          {!message ? (\n            customText || NBSP\n          ) : isActionMessage(message) ? (\n            <ActionMessage\n              message={message}\n              isEmbedded\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          ) : (\n            <MessageSummary\n              lang={lang}\n              message={message}\n              noEmoji={Boolean(mediaThumbnail)}\n              translatedText={translatedText}\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          )}\n        </p>\n        <div className=\"message-title\" dir=\"auto\">{renderText(senderTitle || title || NBSP)}</div>\n      </div>\n      {hasContextMenu && <i className=\"embedded-more icon icon-more\" />}\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedMessage;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin, type StoryViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          withStory={withStory}\n          storyViewerOrigin={storyViewerOrigin}\n          storyViewerMode=\"single-peer\"\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\",\"-7s\":\"UYRulRheGjTql4xAbURj\",\"7S\":\"UYRulRheGjTql4xAbURj\",\"-14s\":\"luaiQWxNoz8gYcb2XqSG\",\"14S\":\"luaiQWxNoz8gYcb2XqSG\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  isSavedMessages,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  onEmojiStatusClick,\n  storyViewerOrigin,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon icon-${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) return;\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPeerColorKey,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst noneToVoid: NoneToVoidFunction = () => void 0;\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick = noneToVoid,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getPeerColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageKey,\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CBuciapCXTFHGIT8QJjp\",\"particle\":\"zSAQoiw2P8dHog4GGC6Y\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UoQ7Ahl_08BYJER7dkXg\",\"effect\":\"DUYRztiKh76RsdbcJpu8\",\"animated-icon\":\"m6I0yrKxFYZrVajqEjYY\",\"animatedIcon\":\"m6I0yrKxFYZrVajqEjYY\",\"animating\":\"_sWZKdctR4GWBAZk5LvT\",\"withEffectOnly\":\"bcQvAAQmccIErVUj7YDo\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { availableReactions, genericEmojiEffects } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('DoneChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('DoneChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"root\":\"auVVCT950ajs6Uf4jI_w\",\"title\":\"RrIwnolHiQkojIfDEmg3\",\"info\":\"W7svz8CjmnPmDhwiz6cJ\",\"buttons\":\"lV9Uc02uJwQff0VQsKTj\",\"button\":\"D0dko7sVnw0KDtqjY0bH\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiFormattedText, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { Thread } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {Boolean(lastMessage.replyToStoryId) && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { getMessageHtmlId, isChatChannel } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: number;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(message.chatId, message.replyToMessageId, targetMessage);\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti();\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    !isGift && !isSuggestedAvatar && 'in-one-row',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && <span className=\"action-message-content\">{renderContent()}</span>}\n      {isGift && renderGift()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar\n          message={message}\n          renderContent={renderContent}\n        />\n      )}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, replyToMessageId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = replyToMessageId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n    const premiumGiftSticker = global.premiumGifts?.stickers?.[0];\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: number;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (e.altKey) { // for onSendSchedule Alt+Enter hotkey\n      return;\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  canSendReaction, getReactionUniqueKey, isSameReaction, sortReactions,\n} from '../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n  className?: string;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n  className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent-bordered\"\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir=\"auto\"\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => animateScroll(\n        messagesContainer,\n        elementRef.current!,\n        isToBottom ? 'end' : 'centerOrTop',\n        FOCUS_MARGIN,\n        focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n        focusDirection,\n        undefined,\n        isResizingContainer,\n        true,\n      );\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { pause } from '../../../util/schedulers';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    const preloadHashes = async (mediaHashes: { hash: string; format: ApiMediaFormat }[]) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format }) => {\n        mediaLoader.fetch(hash, format).then((result) => {\n          if (format === ApiMediaFormat.Progressive) {\n            preloadProgressive(result);\n          }\n        });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n\n  return ids.slice(currentIndex - aroundAmount, currentIndex + aroundAmount);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: { hash: string; format: ApiMediaFormat }[] = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: story.content.video ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    // Alt video with different codec\n    if (story.content.altVideo) {\n      mediaHashes.push({ hash: getStoryMediaHash(story, 'full', true)!, format: ApiMediaFormat.Progressive });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n\n  setTimeout(() => {\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"oWM0Zdb5uhUcOVtc99aS\",\"mediaArea\":\"qF5NAjzN826sfFvUwCi1\",\"preview\":\"dDrvIyufIoAgicpd5jBf\",\"shiny\":\"mHQ5t7g14fbpeDSyTLcd\",\"wave\":\"PlA2GEm5aGvfxsFwsAwE\",\"suggestedReaction\":\"K8z7QedYZHumSrLQCrZq\",\"dark\":\"cKzIdSabAL8MJ9G60u77\",\"background\":\"QxSGHD_yTaeyLhKS2qqz\",\"flipped\":\"CiCfsJ1VaeHZ624tudjv\",\"reaction\":\"Oi4FupikW1BQIPXxj9a7\",\"withCount\":\"dCSRvNsQTjKPeBul8iIX\",\"reactionCount\":\"WAKY7bjrmisH3k1XFQMZ\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 2;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, reactions } = story;\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      <ReactionAnimatedEmoji\n        className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n        reaction={reaction}\n        containerId={containerId}\n        size={customEmojiSize}\n        effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n        shouldPause={isPreview}\n        shouldLoop={!isPreview}\n      />\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst MOBILE_MEDIA_BOTTOM_MARGIN = 4 * REM;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n      });\n      return;\n    }\n\n    const adaptedHeight = windowSize.height - MOBILE_MEDIA_BOTTOM_MARGIN;\n\n    const screenAspectRatio = windowSize.width / adaptedHeight;\n\n    const width = screenAspectRatio > STORY_ASPECT_RATIO ? adaptedHeight * STORY_ASPECT_RATIO : windowSize.width;\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    if (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue') {\n      openMapModal({ geoPoint: mediaArea.geo });\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isActive && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat);\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { onBeforeUnload } from '../util/schedulers';\nimport useLastCallback from './useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('MarkNotDone'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('MarkDone'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      !isSelf && actionMute,\n      actionPin,\n      actionAddToFolder,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from '../global/helpers';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\nimport { IS_IOS } from './windowEnvironment';\nimport windowSize from './windowSize';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  const currentWindowSize = windowSize.get();\n  let initialTouchCenter = {\n    x: currentWindowSize.width / 2,\n    y: currentWindowSize.height / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    const newWindowSize = windowSize.get();\n    initialTouchCenter = {\n      x: newWindowSize.width / 2,\n      y: newWindowSize.height / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= windowSize.get().width - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    isZooming = true;\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1 || isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    requestMeasure(() => element.focus());\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"peer\":\"N26JMlalq5jDriKQ7nFD\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\",\"avatarHidden\":\"aPEbisewADPmseTVcQxO\",\"ghost\":\"bVo8M4JDvB9c6gUvnHTE\",\"ghostAnimateName\":\"DuJzmNpO8VBweCzETZQJ\",\"ghostRevealName\":\"ghy_xXQVvFUwJrNg9uhA\",\"ghostLast\":\"_mqUJoir6gIYUJWb0zFw\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","peers","root","avatar","runDebounced","debounce","cb","_ref4","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","MAX_ASPECT_RATIO","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","Date","now","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","getAttachmentType","attachment","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseMessageInput","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","innerHTML","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","name","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","handleDocumentSelect","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","disabled","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotCommandTooltip","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","replyingToId","selectReplyingToId","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","sender","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","onClear","setReplyingToId","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","leftIcon","customText","strippedMessage","strippedText","onContextMenu","EmbeddedMessage","hasContextMenu","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","draft","selectDraft","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","stealthMode","stories","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openChat","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","action","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","localOnly","handleSendAttachments","handleSend","shouldOpenRepliesChat","ULU_APP_CONSTANTS","SHOULD_OPEN_REPLIES_CHAT_ON_REPLY","ULU_APP_UTILS","doesChatSupportThreads","repliesChatToOpen","isMainThread","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","isProtected","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","observeIntersectionForPlaying","mediaBlobUrl","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","getMessageIsSpoiler","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","handleMouseDown","useFastClick","getPeerColorKey","getPictogramDimensions","srcUrl","MediaSpoiler","isVisible","renderPictogram","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","MessageOutgoingStatus","getMessageVideo","hasSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","Transition","activeKey","DEFAULT_TEXT","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noEmojiStatus","adminMember","onEmojiStatusClick","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","RippleEffect","connectionState","mediaViewer","currentTopicId","userFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","canPlayVideo","openPremiumModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","isVideo","renderPhoto","canCopyTitle","ProfilePhoto","noneToVoid","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","renderTextWithEntities","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","isLottie","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","effect","CustomEmojiEffect","ChatFolderModal","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","containerRef","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","container","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","useEnsureMessage","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","senderName","getMessageSenderName","replyToStoryId","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","isChatGroup","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","then","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","premiumGiftSticker","premiumGifts","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isSuggestedAvatar","shouldShowConfettiRef","targetUsers","isContextMenuShown","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","months","nonInteractive","ActionMessageSuggestedAvatar","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isDiscussionThread","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","onTrigger","DropdownMenu","trigger","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","stickerSetInfo","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","count","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","REACTION_SIZE","cn","createClassNameBuilder","noAppearAnimation","chosen","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","enabledReactions","currentReactions","maxUniqueReactions","reactions","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","ReactionSelectorReaction","getReactionUniqueKey","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","previewMediaHash","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","drawImage","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","Progressive","head","preload","autoplay","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","MOBILE_MEDIA_BOTTOM_MARGIN","prepareStyle","rotation","coordinates","openMapModal","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","adaptedHeight","mediaAreas","geoPoint","geo","handleMediaAreaClick","MediaAreaSuggestedReaction","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","trackType","handlers","onInit","shouldPlay","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","lastCallback","onBeforeUnload","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","savedCallback","ConnectorClass","channel","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","MOVED_THRESHOLD","SWIPE_THRESHOLD","RELEASE_WHEEL_ZOOM_DELAY","RELEASE_WHEEL_DRAG_DELAY","getDistance","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","newSum","oldAverage","newAverage","captureEvent","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","currentWindowSize","initialSwipeAxis","initialTouchCenter","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","touches","withCursor","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","newWindowSize","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","delta","zoom","onWheelZoom","isUserEvent","sign","dx","onWheelDrag","isNotPassive","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","fillColor","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}