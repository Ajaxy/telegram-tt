{"version":3,"file":"6483.47d9d02064f55255ca05.js","mappings":"sFA0IAA,EAAOC,QAnIP,SAAcC,GACZ,MAAMC,EAAgB,sDAChBC,EAAS,cACTC,EAAwB,qEACxBC,EAAU,CACdC,UAAW,UACXC,MAAO,oBAEHC,EAAS,CACbF,UAAW,SACXG,SAAU,CACR,CACEF,MAAOH,EACPM,UAAW,GAEb,CAAEH,MAAO,0BACT,CAAEA,MAAO,0BACT,CAAEA,MAAO,sCACT,CACEA,MAAO,YAAcH,EAAwB,KAAOA,EACpDO,IAAK,SAILC,EAASX,EAAKY,QAAQZ,EAAKa,kBAAmB,CAAEC,QAAS,OACzDC,EAAUf,EAAKe,QACnB,IAAK,IACL,CAAEN,UAAW,IAETO,EAAW,CACfV,MAAO,MACPI,IAAK,OAEDO,EAAU,CACdZ,UAAW,SACXC,MAAO,OAASL,GAEZiB,EAAQ,CACZZ,MAAOL,EACPQ,UAAW,GAEPU,EAAM,CAAEb,MAAOJ,GAYfkB,EAAS,CACbC,SAAU,CACRd,EACAI,EACAK,EACAC,EAhBgB,CAClBX,MAAO,MACPI,IAAK,MACLW,SAAU,CACR,OACAjB,EACAO,EACAJ,EACAW,IAUAA,GAEFV,SAAU,CACR,CACEF,MAAO,UACPI,IAAK,OAEP,CACEJ,MAAO,YACPI,IAAK,MACLY,SAAU,CAAEC,KAAM,UAEpB,CAAEjB,MAAO,IAAOJ,KAGdsB,EAAc,CAAEhB,SAAU,CAC9B,CAAEF,MAAO,IAAOL,GAChB,CAAEK,MAAO,KAAQL,EAAgB,MAAQA,EAAgB,QAErDwB,EAAO,CACXnB,MAAO,UACPI,IAAK,OAEDgB,EAAO,CACXC,gBAAgB,EAChBlB,UAAW,GA6Bb,OA3BAgB,EAAKJ,SAAW,CACd,CACEhB,UAAW,OACXG,SAAU,CACR,CACEF,MAAOL,EACPQ,UAAW,GAEb,CAAEH,MAAOJ,KAGbwB,GAEFA,EAAKL,SAAW,CACdD,EACAI,EACAC,EACArB,EACAG,EACAI,EACAI,EACAC,EACAC,EACAE,EACAD,GAGK,CACLK,KAAM,OACNT,QAAS,KACTO,SAAU,CACRd,EACAP,EAAK4B,UACLxB,EACAO,EACAI,EACAK,EACAI,EACAC,EACAP,GAGN,C","sources":["webpack://telegram-t/./node_modules/highlight.js/lib/languages/lisp.js"],"sourcesContent":["/*\nLanguage: Lisp\nDescription: Generic lisp syntax\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nCategory: lisp\n*/\n\nfunction lisp(hljs) {\n  const LISP_IDENT_RE = '[a-zA-Z_\\\\-+\\\\*\\\\/<=>&#][a-zA-Z0-9_\\\\-+*\\\\/<=>&#!]*';\n  const MEC_RE = '\\\\|[^]*?\\\\|';\n  const LISP_SIMPLE_NUMBER_RE = '(-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|-)?\\\\d+)?';\n  const LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      {\n        begin: LISP_SIMPLE_NUMBER_RE,\n        relevance: 0\n      },\n      { begin: '#(b|B)[0-1]+(/[0-1]+)?' },\n      { begin: '#(o|O)[0-7]+(/[0-7]+)?' },\n      { begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?' },\n      {\n        begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE,\n        end: '\\\\)'\n      }\n    ]\n  };\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\n  const COMMENT = hljs.COMMENT(\n    ';', '$',\n    { relevance: 0 }\n  );\n  const VARIABLE = {\n    begin: '\\\\*',\n    end: '\\\\*'\n  };\n  const KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  const IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  const MEC = { begin: MEC_RE };\n  const QUOTED_LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: [\n      'self',\n      LITERAL,\n      STRING,\n      NUMBER,\n      IDENT\n    ]\n  };\n  const QUOTED = {\n    contains: [\n      NUMBER,\n      STRING,\n      VARIABLE,\n      KEYWORD,\n      QUOTED_LIST,\n      IDENT\n    ],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(',\n        end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ',\n        end: '\\\\)',\n        keywords: { name: 'quote' }\n      },\n      { begin: '\\'' + MEC_RE }\n    ]\n  };\n  const QUOTED_ATOM = { variants: [\n    { begin: '\\'' + LISP_IDENT_RE },\n    { begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*' }\n  ] };\n  const LIST = {\n    begin: '\\\\(\\\\s*',\n    end: '\\\\)'\n  };\n  const BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'name',\n      variants: [\n        {\n          begin: LISP_IDENT_RE,\n          relevance: 0,\n        },\n        { begin: MEC_RE }\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [\n    QUOTED,\n    QUOTED_ATOM,\n    LIST,\n    LITERAL,\n    NUMBER,\n    STRING,\n    COMMENT,\n    VARIABLE,\n    KEYWORD,\n    MEC,\n    IDENT\n  ];\n\n  return {\n    name: 'Lisp',\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      hljs.SHEBANG(),\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n}\n\nmodule.exports = lisp;\n"],"names":["module","exports","hljs","LISP_IDENT_RE","MEC_RE","LISP_SIMPLE_NUMBER_RE","LITERAL","className","begin","NUMBER","variants","relevance","end","STRING","inherit","QUOTE_STRING_MODE","illegal","COMMENT","VARIABLE","KEYWORD","IDENT","MEC","QUOTED","contains","keywords","name","QUOTED_ATOM","LIST","BODY","endsWithParent","SHEBANG"],"sourceRoot":""}