{"version":3,"file":"1302.2aed2a336c44faf444b1.js","mappings":"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gBAC/B7D,mBACAE,qBACD,GAlLel3B,EA/8DwB86B,EAC1Cld,OACAyZ,gBACA0D,gBACAzF,oBACAiC,yBACAyD,UACA5zB,WACA4a,iBACA9hB,UACA6gB,YACAyQ,WACA4C,sBACAnS,mBACA8G,SACA5oB,QACA+xB,gBACA+C,gBACAZ,2BACA3J,wBACA4J,yBACA1C,iBACAjI,kBACA8N,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAc,4BACA/R,gBACA4B,0BACAyN,aACAjF,wBACA+E,0BACAiD,oBACAnD,uBACAK,oBACAG,uBACAE,mBACA3N,iBACAsI,eACA0G,gBACAlB,wBACArG,yBACAC,4BACAO,qBACAC,iBACA6F,gBACAE,cACAE,sBACAE,eACAvF,cACAC,cACAN,YACAmB,gBACAZ,kBACAE,uBACAsF,iBACA9X,cACAiY,sBACAzK,sBACAnqB,SACA4vB,YACAhC,+BACA0I,4BACAC,mBACAC,WACAh6B,aACA+1B,sBACAC,gBACA4C,iBACAE,yBACAxY,0BACAoT,qBACAuF,eACAD,uBACAG,sBACAC,gBACAjF,uBACAtG,kBACAJ,aACA6L,2BACAxY,qBACAiU,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAf,mBACA6F,cACAC,WACAC,UACAC,aACAb,qCACAjE,gBACAI,2BACA+D,mBACA7D,mBACAE,yBAEA,MAAM,YACJuE,GAAW,WACXC,GAAU,WACVC,GAAU,cACVC,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpB3kB,GAAgB,oCAChB4kB,GAAmC,wBACnCC,GAAuB,cACvBC,GAAa,oBACbC,GAAmB,kBACnBC,GAAiB,YACjBC,GAAW,yBACXnN,GAAwB,kBACxBoN,GAAiB,kBACjBC,GAAiB,qBACjBC,GAAoB,wBACpBC,KACEv7B,EAAAA,EAAAA,MAEEwjB,IAAUtjB,EAAAA,EAAAA,KACVD,IAAOwjB,EAAAA,EAAAA,KAGP+X,IAAW91B,EAAA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AAQ,kBAC5D6kH,eACAtkB,eACAmqB,kBAAmBnP,IAAmBoP,gBACjCvG,GAAewG,gBAAkBrP,IAAmBlL,iBACpD+T,GAAeyG,mBAAqBtP,IAAmBpL,gBAC5D9uD,wBACI8kB,GAAc,CAAEhe,gBAAgBqf,EAAAA,EAAAA,KAAqBxnE,EAAQ4E,EAA6B,cAApBod,OAC5C,iBAAnBld,IAA+B,CAAEA,sBACxCyhH,IAAa,CACfE,kBACAE,oBACAC,uBACAE,gBACAC,sBACAC,yBAEFyB,gBACAqC,KAAM9qH,EAAO+qH,mBAAmBr4F,MAChCs2F,sBACAC,kBACA/yF,UACA2e,QACAs0E,gBACAE,yBACAtN,mBACAnqF,iBACAmF,mBACD,GAxOeh3B,EAz3CuBirH,EACzCpmH,UACAqmH,+BACA12D,gCACA5B,gCACAsvC,QACAh9F,YACA8E,aACAs6G,iBACA6G,aACAzP,YACA0P,kBACAC,cACA7G,iBACAzlD,YACAusD,gBACAC,yBACAhH,yBACAj/G,kBACA+kH,mBACAmB,gBACA5mH,SACAmgH,mBACA37F,UACA67F,iBACAC,gBACAC,aACAG,eACAK,mBACAC,gBACAG,sBACAE,6BACAC,oBACAG,cACAF,kBACAG,eACAl+D,kBACArjD,kBACA8iH,qBACA8C,qBACAnhE,eACAigE,mBACAjD,aACAE,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACAh+F,gBACAc,kBACAijC,iBACAE,uBACAr1B,aACAmtF,WACArc,YACA6e,aACA53C,iBACA+3C,uBACAkB,sBACA+B,iBACAliB,kBACAljG,cACAukH,mBACA5oG,YACAinG,mBACA7wF,sBACA8yF,mBACAhc,2BACAhsF,mBACA4nG,gBACA9hD,YACA1iE,iBACAktG,oBACAuX,oBACAC,sBACA5oE,yBACAq6D,qBACAyM,qBACAwD,wBACArG,qBACAgD,gBACAD,gBACA7zD,oBACAk0D,0BACA8B,4BACAhC,gCACA/zD,oCACAm2D,uBACA5F,gBACAtkB,eACAmI,yBACArnD,sBACAonE,gBACAqC,QACA9B,sBACAC,kBACA/yF,UACA2e,QACAs0E,gBACAE,yBACAoC,4BACA1P,oBACAnqF,kBACAmF,uBAEA,MAAM,uBACJ20E,GAAsB,qBACtBhlF,GAAoB,uBACpBglG,GAAsB,sBACtBC,GAAqB,iBACrBxjD,GAAgB,iBAChByjD,KACErqH,EAAAA,EAAAA,MAGEyB,IAAMiE,EAAAA,EAAAA,IAAuB,MAE7B4kH,IAAkB5kH,EAAAA,EAAAA,IAAuB,MAEzCuhG,IAAmBvhG,EAAAA,EAAAA,IAAuB,MAE1CzF,IAAOC,EAAAA,EAAAA,MAEN6D,GAAuBwmH,KAA0BvkH,EAAAA,EAAAA,KAAS,IAC1DwkH,GAAwBC,KAA6BzkH,EAAAA,EAAAA,KAAS,IAC9D0kH,GAA0BC,KAA+B3kH,EAAAA,EAAAA,KAAS,IAClEwuB,GAAkBo2F,GAAeC,KAAc/pG,EAAAA,EAAAA,MAChD,SAAElb,GAAQ,cAAE+gF,KAAkB9gF,EAAAA,EAAAA,OAEpCizE,EAAAA,EAAAA,IAAewxC,GAAiBZ,GAEhC,MAAM,kBACJj/F,GAAiB,kBACjBC,GAAiB,kBACjBogG,GAAiB,wBACjBh8E,GACAnkB,kBAAmB4B,GAAa,uBAChC3B,GAAsB,sBACtBC,KACEC,EAAAA,EAAAA,GACFrpB,GACCklF,IAAiBmgB,IAAmBtxE,IACpCy3E,EAAAA,GACD3gB,EAAAA,GACA6a,KAGFhmG,EAAAA,EAAAA,KAAU,KACJspB,IACF0/F,IACF,GACC,CAAC1/F,GAAmB0/F,KAEvB,MAAMY,GAAwBnB,GAAmB,GAC1Ct/F,GAAS0gG,KAAalqG,EAAAA,EAAAA,GAAQiqG,KACrC5pH,EAAAA,EAAAA,KAAU,KACJ4pH,IAIJhsG,WAAWisG,GAAWpB,EAAkBqB,EAAAA,IAAyB,GAChE,CAACrB,EAAiBoB,GAAWD,MAEhCG,EAAAA,EAAAA,GAAkB,CAChBzpH,OACAG,OAAQ0oB,IAAWu/F,EACnBsB,kBAAmBJ,KAA0BlB,EAC7CjqH,WAAW,IAGb,MACEP,GAAIkP,GAAS,OAAE7P,GAAM,YAAEwpB,GAAW,SAAE+6F,GAAQ,qBAAEh/G,GAAoB,UAAEgsG,IAClE5sG,GAEJ66F,EAAAA,EAAAA,KAAkB,KAChB,GAAI76F,EAAQkjE,SAAU,CACpB,MAAMlnE,EAAKqhG,EAAQA,EAAM2K,YAAYhsG,GAAKkP,GAC1C27G,KAA2B,CAAEkB,0BAA2B,CAAC/rH,IAC3D,KAGF,MAAMyrC,IAAU5iC,EAAAA,EAAAA,IAAe7E,GACzB+E,IAAQC,EAAAA,EAAAA,IAAahF,GACrB4c,GAAkC,cAApBQ,IAAmCpd,EAAQ4c,YACzDorG,IAAkBC,EAAAA,EAAAA,IAAiBjoH,KAAa8gH,IAEhD,UAAErjB,KAAcC,EAAAA,EAAAA,IAAkB19F,IAChCmsB,MAAO+7F,GAAgBpmH,MAAOqmH,IAAmB5rB,EAAqBkB,KAExE,MACJtxE,GAAQ+7F,GAAc,MAAEpmH,GAAQqmH,GAAc,MAAExmH,GAAK,MACrDE,GAAK,SAAE+M,GAAQ,QAAE8gC,GAAO,QAAEq8D,GAAO,QACjCz/E,GAAO,QAAE0lF,GAAO,SAAEmC,GAAQ,OAC1BrtF,GAAM,KAAE6mF,GAAI,UAAEjoF,GAAS,SAAEuoF,GAAQ,gBACjCS,KACEhR,EAAAA,EAAAA,IAAkB19F,GAEhBooH,IAAmB1H,EAAAA,EAAAA,GAAoB1gH,GACvCqoH,IAAiBxH,EAAAA,EAAAA,GAAkB7gH,GAEnCsoH,GAAyBrsH,SAASyE,KAA0BE,IAAwB4kH,KAEpF+C,GAAgBtsH,QAAQosH,IACxBG,GAAYvsH,QAAQ06G,KAA0C,WAApBv5F,GAC1C+tF,IAAiBmd,KAA0BG,EAAAA,EAAAA,IAAsBzoH,GACjE0oH,GAAmBvd,KAAkBxgC,IAAiB+3C,IACtDiG,GAAexF,IAAiB1xF,aAAcm3F,EAAAA,EAAAA,GAAkBzF,GAAgB1xF,WAChFo3F,GACJhkG,MACKC,IAAkBlI,MACnBmrC,KACAljC,GAAYikG,sBACZ7gE,KACAq4D,IACDrkH,QAAQypB,KAAcA,GAAUqjG,WAC/BC,GAAsB/sH,QAAQ4nH,MAAkBgF,IAAelJ,EAC/DsJ,GAAiBvjG,IAAWqjG,UAC5B74D,GAAoC,UAArBpuD,IAAOknG,WAAyBlnG,GAAMm7G,QACrDiM,GAAUjtH,QAAQohG,KAEnBA,EAAMQ,aAAeJ,GAAWjB,cAAc39F,OAAS,GACrDw+F,EAAME,SAAS1+F,OAAS,KACvBw+F,EAAME,SAASj4E,MAAM6jG,GAA4C,IAApC1rH,OAAO+nB,KAAK2jG,EAAIznH,SAAS7C,SACxDuqH,GAA4BpG,KAAsB0D,EAClD2C,GAA2BrG,KAAsBtD,GACjD/b,QAA2C5nG,IAAtBsrB,GACrBiiG,KACF3lB,IAAsBF,IAAkBz/E,IACtCqlG,IACAJ,KACEv5E,IAAWg5E,KAAqBG,IAElCU,GAAa32F,KAAchW,IAAe5c,EAAQwpH,sBACpD5E,GACE6E,GAAWxtH,QAAQ+oH,IACnBngG,KACEA,GAAYG,eAAiBF,IAAkBijC,IAAiBE,KACjEpjC,GAAY6kG,eAGbC,GAAe1tH,QAAQ2wG,IAAWv2F,MAElCuzG,GAA0Bf,IAAe1d,GACzC0e,GAAevG,IAAgB0E,IAAmBO,IAAiBqB,GAEnEpmB,IAAgBz/F,EAAAA,EAAAA,IAAgB,CAACuG,EAAkD8M,KACnF+a,IACJ20E,GAAuB,CACrB57F,aACAkM,eACI9M,GAAGw3E,UAAY,CAAEklB,WAAW,MAC5BkiB,IAAW,CAAEY,gBAAiBzsB,EAAOE,SAAS3/F,KAAI,EAAG5B,QAASA,MAClE,IAGE0lE,GAAgB0+C,GAAgB77F,QAASxoB,EAIzCguH,GAF2BllG,KAC3BC,IAAkBijC,IAAiBE,KAAwByZ,IACnB2+C,GAAe3+C,GAEvDsoD,GAAmBnB,GAAcxI,GAAe97F,GAChDirC,GAAezqD,KAAUomG,GAEzB8e,GAAcplG,IAAea,GAAa26F,GAAe3+C,GACzDv+D,IAASC,EAAAA,EAAAA,IAAcpD,IAEvB,gBACJ8wD,GAAe,YACfvS,GAAW,kBACXj3B,GAAiB,kBACjB+9E,GAAiB,yBACjBE,GAAwB,gBACxBhB,GAAe,wBACfiB,GAAuB,iBACvB7nF,GAAgB,SAChBwmF,GAAQ,uBACRH,GAAsB,8BACtB4B,IACErC,GACFC,GACAplG,GACA8M,GACAjP,QAAQwnG,IACRxnG,QAAQynG,IACRznG,QAAQ0oD,IACRz7B,GACAuiB,GACApwC,GACAsoG,GACAC,GACAylB,GACAvlB,KAGI,kBACJomB,GAAiB,kBACjBC,GAAiB,iBACjBC,GAAgB,iBAChBC,GAAgB,oBAChBC,GAAmB,gBACnBC,GAAe,sBACfC,GAAqB,sBACrBC,GAAqB,sBACrBC,GAAqB,gBACrBC,GAAe,uBACfC,GAAsB,iBACtBC,GAAgB,gBAChBC,GAAe,mBACf1iB,GAAkB,eAClB2iB,GAAc,mBACdC,GAAkB,cAClBC,GAAa,YACbC,GAAW,qBACXC,GAAoB,6BACpBC,GAA4B,qBAC5BC,GAAoB,iBACpBC,ICtnBW,UAA0B,KACvC1uH,EAAI,cACJ4mG,EAAa,QACbxjG,EAAO,OACP3E,EAAM,SACN6gB,EAAQ,kBACR8mG,EAAiB,YACjB6F,EAAW,YACXjsG,EAAW,MACXygF,EAAK,WACL4sB,EAAU,UACV3J,EAAS,aACTiD,EAAY,kBACZgI,EAAiB,MACjBx7F,EAAK,eACLuxF,EAAc,cACdv5D,EAAa,gBACblR,EAAe,sBACf4tE,IAsBA,MAAM,SACJphD,EAAQ,iBAAExwD,EAAgB,aAAEyT,EAAY,gBAAEs7B,EAAe,gBAAE4pE,EAAe,iBAC1EC,EAAgB,kBAAE1jB,EAAiB,aAAE2jB,EAAY,gBAAEC,EAAe,sBAClExrC,EAAqB,WAAEjpD,EAAU,gBAAE0kE,EAAe,wBAAEgwB,IAClDjvH,EAAAA,EAAAA,OAGFX,GAAIkP,EAAS,YAAE2Z,EAAW,UAAEzN,EAAW1V,SAAS,UAAE+7F,EAAS,MAAE37F,EAAK,QAAEwqB,IAClEtsB,GAEE,aACJykB,EAAY,cAAEJ,EAAa,aAAEwnG,EAAY,QAAEz7D,EAAO,UAAElrC,EAAS,YAAEogF,IAC7Dob,EAAAA,EAAAA,GAAoB1gH,IAAY,CAAC,EAE/BkqH,GAAoBnmH,EAAAA,EAAAA,IAAgB,KACnCkmH,EAMDpB,GAAehkG,GAAainG,cAC9BxlG,EAAa,CAAEjrB,OAAQ4uH,EAAWjuH,GAAIkP,UAAW2Z,EAAYinG,gBAE7DzoD,EAAS,CAAErnE,GAAIiuH,EAAWjuH,KAR1B6W,EAAiB,CAAE7S,QAASpD,EAAK,eASnC,IAGIutH,GAAoBpmH,EAAAA,EAAAA,IAAgB,KACnCu8G,GAILj9C,EAAS,CAAErnE,GAAIskH,EAAUtkH,IAAK,IAG1BouH,GAAmBrmH,EAAAA,EAAAA,IAAgB,KAClC0gB,IAAgB68F,EAOjBv5D,GAAiB1jC,GAAiBwnG,EACpC30F,EAAW,CACTw0E,YAAY,EACZD,gBAAiBpnF,EACjBknF,gBAAiBsgB,EACjBE,eAAgBtnG,IAKpB6B,EAAa,CACXjrB,OAAQgpB,GAAiBhpB,EACzB6gB,SAAU6rC,EAAgB8jE,EAAe3vG,EACzChR,UAAWuZ,EACXunG,eAAgB3nG,OAAgBtoB,EAAYmP,EAC5C8c,mBAAoB3D,KAChB+rC,GAAW,CAAE6xD,MAAO/8F,GAAW7O,KAAMivF,iBAtBzCzyF,EAAiB,CACf7S,QAAmBpD,EAAVwzD,EAAe,eAAuB,iBAsBjD,IAGEk6D,GAAsBvmH,EAAAA,EAAAA,IAAgB,KAC1C69C,EAAgB,CACdvmD,SACA6gB,WACAhR,YACA/K,OAAQyc,EAAc0lC,EAAAA,GAAkB2pE,gBAAkB3pE,EAAAA,GAAkB32C,QAC5E,IAGEugH,IAAkCnoH,EAAAA,EAAAA,IAAiBooH,IACvD,GAAI1uB,IAAcA,EAAUyb,SAAU,OAClCiT,GACFP,EAAwB,CAAEvwH,SAAQ6gB,WAAUkwG,sBAAuBlhH,IAGrE,MAAMqjC,EAAajiB,GAAShB,MAAOkjB,EAAAA,EAAAA,IAAiBliB,EAAQhB,KAEtD+gG,EAAevqH,GAASwqB,GAASxqB,MACjCwqH,EAAmB/9E,GAAc,cAAeA,EAAaA,EAAW0O,eAAYlhD,EAE1F6lD,EAAgB,CACdvmD,SACA6gB,WACAhR,YACA/K,OAAQyc,EAAc0lC,EAAAA,GAAkB2pE,gBAAkB3pE,EAAAA,GAAkB32C,OAC5EsxC,UAAWwnE,GAAyB4H,GAAcpvE,WAAaqvE,EAC/DH,sBACA,IAEE1B,IAAwB1mH,EAAAA,EAAAA,IAAgB,KAE5CmoH,IAD4BtvG,IAAgB6gF,EACO,IAE/CitB,IAAwB3mH,EAAAA,EAAAA,IAAgB,KAC5C,MAAMyhD,EAAQxlD,EAAQ0B,SAASI,OAAO0jD,MAEtC0mE,IAD4B1mE,IAAU5oC,IAAgB6gF,EACH,IAG/C4sB,IAAmBtmH,EAAAA,EAAAA,IAAgB,OACzBsa,EAAAA,EAAAA,IAAgBre,KAAYse,EAAAA,EAAAA,IAAuBte,KAE/DyqH,KAGFC,IAAuB,IAGnBH,IAAkBxmH,EAAAA,EAAAA,IAAgB,KACtCynH,EAAgB,CAAEnwH,SAAQ6P,aAAY,IAGlCs/G,IAAwBzmH,EAAAA,EAAAA,IAAgB,CAACwoH,EAAwBC,KACjE/uB,IAAcA,EAAUyb,WAE5B0S,EAAwB,CAAEvwH,SAAQ6gB,WAAUkwG,sBAAuBlhH,IACnE02C,EAAgB,CACdvmD,SACA6gB,WACAhR,UAAWqhH,EACXlqE,WAAYmqE,EACZrsH,OAAQyc,EAAc0lC,EAAAA,GAAkBmqE,eAAiBnqE,EAAAA,GAAkBslD,MAC3EukB,oBAAqB1uB,IACrB,IAGEqtB,IAAkB/mH,EAAAA,EAAAA,IAAgB,KACtC0nH,EAAiB,CAAEroG,WAAY,CAAClY,IAAa,IAGzCk9F,IAAqBrkG,EAAAA,EAAAA,IAAgB,KACzCgkG,EAAkB,CAAE1sG,SAAQ6P,aAAY,IAGpC6/G,IAAiBhnH,EAAAA,EAAAA,IAAiB6iF,IACtC8kC,EAAa,CAAErwH,SAAQ6P,YAAW07E,WAAU,IAGxCokC,IAAqBjnH,EAAAA,EAAAA,IAAgB,KACzC4nH,EAAgB,CAAEzoG,WAAY7nB,EAAQ+b,aAAY,IAG9C6zG,IAAgBlnH,EAAAA,EAAAA,IAAgB,KACpC,GAAIs5F,GAASA,EAAME,SAAU,CAC3B,MAAMn6E,EAAai6E,EAAME,SAAS3/F,KAAI,EAAG5B,QAASA,IAClD2vH,EAAgB,CAAEzoG,WAAY7nB,EAAQ+nB,cACxC,MACEuoG,EAAgB,CAAEzoG,WAAY7nB,EAAQ+nB,WAAY,CAAClY,IACrD,IAGIggH,IAAcnnH,EAAAA,EAAAA,IAAgB,KAClCuiB,EAAa,CACXjrB,SAAQ6gB,SAAUqU,EAAAA,GAAgBrlB,aAClC,IAGEigH,IAAuBpnH,EAAAA,EAAAA,IAAgB,KAC3C,MAAM2oH,EAAkB71E,GAAmBhyB,EAAa8nG,iBAAoB9nG,EAAa3B,WAErF8/F,EACF18F,EAAa,CACXjrB,OAAQqxH,EAAgBt1G,YAAWw1G,cAAevxH,EAAQ6P,UAAW2Z,EAAa6kG,gBAKlFrlG,GAAiBwnG,EACf9jE,EACF7wB,EAAW,CACTw0E,YAAY,EACZD,gBAAiBpnF,EACjBknF,gBAAiBsgB,EACjBE,eAAgBlnG,EAAa6kG,gBAG/BpjG,EAAa,CACXjrB,OAAQgpB,EACRnI,SAAU2vG,EACV3gH,UAAW2Z,EAAa6kG,gBAI5BpjG,EAAa,CACXjrB,OAAQqxH,EAAgBxhH,UAAW2Z,EAAa6kG,eAEpD,IAGImD,IAAsB9oH,EAAAA,EAAAA,IAAiBuG,IAC3CA,EAAEM,kBAEF44F,EAAcl5F,EAAG8M,EAAU,IAGvBwzG,IAAyB7mH,EAAAA,EAAAA,IAAiBuG,IAC9CA,EAAEM,kBAEFu1E,EAAsB,CAAE9kF,SAAQ6P,UAAYqgH,OAAgCxvH,EAAZmP,GAAwB,IAGpF2/G,IAAmB9mH,EAAAA,EAAAA,IAAgB,KACvCmzB,EAAW,CACT77B,OAAQ2E,EAAQ3E,OAChB6gB,SAAUlc,EAAQhE,IAClB,IAGEqvH,IAAuBtnH,EAAAA,EAAAA,IAAgB,KACtCw/G,GACLj9F,EAAa,CACXjrB,OAAQgpB,GAAiBhpB,EACzB6gB,SAAUqnG,EAAavnH,GACvBkP,aACA,IAGEogH,IAAmBvnH,EAAAA,EAAAA,IAAgB,KAClCgsB,GACL6rE,EAAgB,CACdhwD,OAAQ7b,EAAM6b,OACdjf,QAASoD,EAAM/zB,GACfqgG,eAAe,GACf,IAGJ,MAAO,CACL6tB,oBACAC,oBACAC,mBACAE,sBACAD,oBACAE,mBACAC,yBACAC,yBACAC,yBACAC,gBAAiBkC,GACjBjC,0BACAC,oBACAC,mBACA1iB,sBACA2iB,kBACAC,sBACAC,iBACAC,eACAC,wBACAC,6BAA8ByB,GAC9BxB,wBACAC,oBAEJ,CDiVMwB,CAAiB,CACnBlwH,QACA4mG,iBACAxjG,UACA3E,UACA6gB,YACA8mG,qBACA6F,eACAjsG,eACAygF,QACA0sB,cACAE,cACA3J,aACAiD,gBACAgI,kBAAmBtvH,QAAQyzD,IAC3B3/B,MAAOyxF,IAAc,YAAaA,GAAaA,QAAazlH,EAC5DulH,kBACAv5D,iBACAlR,gBAAiB/xB,GACjB2/F,2BAGIsI,IAAoBhpH,EAAAA,EAAAA,IAAiBuG,IACzCA,EAAEM,kBAEF28G,IAAe,KAGjBzpH,EAAAA,EAAAA,KAAU,KACH6oH,IAID2B,IAA0B9C,IAC5BjiD,IACF,GACC,CAACA,GAAkBojD,GAAcnB,GAAiB8C,MAErDxqH,EAAAA,EAAAA,KAAU,KACR,MAAM6yC,EAAUvyC,GAAIyJ,QACdmlH,EAAuBhtH,EAAQmX,WAAakmF,GAAOE,SAASj4E,MAAM6jG,IAASA,EAAI8D,aACjFjtH,EAAQitH,YAAct8E,IAAYq8E,KAChCtyC,EAAAA,GAAAA,GAAY/pC,GACdy2E,IAA0B,GAE1BE,IAA4B,GAEhC,GAEC,CAACtnH,EAAQitH,aAEZ,MAAMC,GAAc7vB,GAAO8vB,yBAAsBpxH,EAAashG,GAAO+vB,gBAAkBptH,EACjFqtH,GAAiBH,KAAeI,EAAAA,EAAAA,IAAeJ,IAC/C12G,GAAU62G,IAAkB1D,GAE5BxR,IAAqBx5G,EAAAA,EAAAA,GACzB,4BACAghH,GAAkB,iBAClBh7D,IAAe,gBACfA,KAAgB0oE,GAAiB,eAAiB,kBAClD5G,GAAiB,gBACjBC,GAA0B,0BAC1BhH,IAAyB,yBACzBiH,IAAgB,eAChB5hH,IAAS,MACT9I,QAAQ+D,EAAQ83G,aAAe,YAC/B93G,EAAQ03G,UAAY,aACpBsQ,IAAmB,YACnB5gG,IAAqB,gBACrBu6F,KAAcI,IAAoB,UAClC/9F,IAAgB,gBAChBqjG,IAA4B,cAC5BF,IAA0B,gBAC1BnE,IAAqB,uBACrBkG,IAAW,WACXlpH,EAAQutH,kBAAoB,qBAC5BhtH,IAAc,cACdkjG,IAAkB,uBAClBgd,KAAgBt7G,GAAc,gBAC9BlJ,QAAQ+D,EAAQguG,gBAAkB,qBAClC7J,IAAY,YACZqiB,GAAe,iBACd5C,IAAsBzyF,KAAqB,oBAC5C83F,IAAkB,oBACjBK,IAAuB,oBAGpBjzG,GAAO62G,KAAexvB,EAAAA,EAAAA,IAAkBwvB,IAAa72G,KACrDwU,GAAkB5uB,QAAQ+D,EAAQ6qB,kBAElC,aAAEpG,GAAY,cAAEJ,GAAa,QAAE+rC,IAAYg4D,IAAoB,CAAC,GAC9Dx8E,OAAQ+0E,GAAkBh0F,QAASi0F,IAAiByH,IAAkB,CAAC,GAE/EvqH,EAAAA,EAAAA,KAAU,MACH4xC,IAAS+tE,WAAansF,MACzBs1F,IAAsB/+G,SAAWqD,IAAa07G,GAAqB/+G,SAChE4/B,KACH8/E,IACF,GACC,CAACj2F,GAAQmW,GAASm/E,GAAsB17G,GAAWwkC,IAAS+tE,YAE/D,MAAM/9B,GEtuBO,SAAyBrpE,EAAemM,EAAsBgrG,GAC3E,MAAOz/F,EAAU0/F,IAAe9qH,EAAAA,EAAAA,MAYhC,OAVA7E,EAAAA,EAAAA,KAAU,KACJ0kB,GAAegrG,IAAeA,MAE9Bn3G,EtCiBDpD,eAA8BoD,EAAcq3G,EAnBzB,IAsBxB,OAFKvrB,SAAcC,EAAuBurB,cACrBxrB,EAAQyrB,QAAQ,CAAElhH,KAAM,iBAAkBmiC,KAAM,CAACx4B,EAAMq3G,IAE9E,CsCpBMG,CAAex3G,GAAMs1E,KAAK8hC,GAE1BA,OAAY1xH,GACd,GACC,CAACymB,EAAYnM,EAAMm3G,IAEfz/F,CACT,CFwtB2B+/F,CACvBz3G,IAAMA,OACJstG,IAA0B8B,IAC5B3hB,KnCttBW,SACb9jG,EAAqB0/E,EAA2Bl9D,EAAsBgrG,IAEtE1vH,EAAAA,EAAAA,KAAU,KACR,GAAI0kB,GAAegrG,IAAeA,IAAe,OAEjD,MAAMtqB,EAAiBjnG,QAAQ+D,EAAQ0B,QAAQ2U,MAAMA,KAAKxX,SAO9D,SAAgCxD,EAAgBW,EAAYknG,EAAyBxjB,GACnF,MAAMmjB,EAAYJ,EAAWxpE,IAAI59B,IAAW,IAAI0yH,EAAAA,EAxB3B,KA0BfC,EAAmBnrB,EAAU5pE,IAAIj9B,GACnCgyH,GAAoBA,EAAiBtuC,mBAAqBA,GACzDsuC,EAAiB9qB,iBAAmBA,IAKzCL,EAAUhX,IAAI7vF,EAAI,CAChBA,KACAknG,iBACAxjB,qBAGF+iB,EAAW5W,IAAIxwF,EAAQwnG,GAEvBH,EAA0BrnG,GAC5B,CAzBI4yH,CAAuBjuH,EAAQ3E,OAAQ2E,EAAQhE,GAAIknG,EAAgBxjB,EAAiB,GACnF,CAAC1/E,EAAS0/E,EAAkBl9D,EAAYgrG,GAC7C,CmC+sBEU,CAAsBluH,EAAS0/E,IAAmB+lC,GAA0B3hB,IAE5E,MAAMvzC,IAAkBC,EAAAA,EAAAA,IAAsBxwD,GAAU0vD,KAChD61D,UAAW4I,GAAoB,eAAE19D,KAAmBC,EAAAA,EAAAA,GAC1DjB,GAAkBp0D,GAAQk1D,GAAkBrlD,QAAYnP,EAAW0nH,IAG/D2K,IAAyBt1F,EAAAA,EAAAA,GAAsB23B,GAAgBx0D,QAAQs0D,KAEvE89D,GAAwB59D,IAAkB29D,GAE1C9V,GAA6B,cAAjBxxF,IAAQ/N,KAAuB+N,QAAS/qB,EAEpDuyH,IAA4B3X,IAAsBgP,IAAiB/yF,IAAa6U,MAChF4hF,IACmB,WAApBjsG,KACCkpG,EACAiI,GAAoB5X,IAAmBoP,iBACvCsD,IAAgD,WAApBjsG,KAC5BkpG,EACAkI,IAA2BlrC,KAAkBg1B,KAAc7U,IAAkB2hB,KAC7EiE,KAA6BJ,KAAmB9lH,KAAWgvB,GAE3Ds8F,IAAuBnG,IAA0BK,KACjDxd,KAAmBh/E,IAASrqB,IAAS4jB,IAAsC,QAAxByuF,IAAUnL,aAA0BxyF,IAEvFxK,GGpwBD,SACLhM,EACAq9F,GACA,KACEptD,EAAI,aACJ45E,EAAY,cACZ1e,EAAa,cACbsb,EAAa,YACboC,EAAW,UACXL,EAAS,gBACTtI,EAAe,kBACfwO,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAe,aACfjG,EAAY,gBACZkG,EAAe,uBACfvG,EAAsB,eACtBwG,EAAc,oBACdL,GAiBE,CAAC,GAEL,MAAM,UAAEhxB,IAAcC,EAAAA,EAAAA,IAAkB19F,IAChCmsB,MAAO+7F,EAAgBpmH,MAAOqmH,GAAmB5rB,EAAqBkB,GAExE/7F,GAAUg8F,EAAAA,EAAAA,IAAkB19F,IAC5B,MACJmsB,EAAQ+7F,EAAc,MAAEpmH,EAAQqmH,EAAc,MAC9CxmH,EAAK,MAAEE,EAAK,SAAE+M,EAAQ,QAAE0d,EAAO,QAAEy/E,EAAO,SAAEoI,EAAQ,QAAEnC,EAAO,UAAEtsF,EAAS,SACtEuoF,EAAQ,gBAAES,GACRhtG,EACE2U,EAAOgnF,GAAO8vB,yBAAsBpxH,GAAY2hG,EAAAA,EAAAA,IAAkBL,GAAO+vB,gBAAkBptH,GAASqW,KACpGszG,EAAe1tH,QAAQ+D,EAAQ4sG,WAAWv2F,MAE1C65C,EAAoC,UAArBpuD,GAAOknG,WAAyBlnG,EAAMm7G,QACrDpyF,EAAkB7qB,EAAQ6qB,gBAC1BkkG,EAAoB5iG,GAAUrqB,IAAUouD,GAAiBmtC,GAAS/wE,EAElE0iG,EAAa,CAACC,EAAAA,KACdC,EAAUxpG,GAAayG,GAASrqB,GAASqyG,GAAYnC,GAASxV,eAAiBiB,EAC/EjnF,EAAUH,GAAgC,UAAxB89F,GAAUnL,WAAyB6lB,GAAmBlF,EACxEwF,EAAoBD,IAAY14G,EAChC44G,EAAoBnzH,QAAQ+D,EAAQguG,eACpCqhB,EAAWpzH,QAAQ+D,EAAQ4/G,UAE3B0P,EACAzkG,GAAmBkkG,KACjBpG,GAAiB8F,MACjB9E,MACAr9F,IAAW9V,GAGVA,EA+IT,OA5IIs4G,GACFE,EAAWjjH,KAAK+iH,IAGbI,GAAWlvH,EAAQuvH,gBACtBP,EAAWjjH,KAAK,cACZ/L,EAAQuvH,gBAAkBC,EAAAA,KAC5BR,EAAWjjH,KAAM,cAAa/L,EAAQuvH,mBAE/B/4G,EACTw4G,EAAWjjH,KAAK,QAEhBijH,EAAWjjH,KAAK,WAGbtO,OAAO+nB,KAAK9jB,GAAS7C,QACxBmwH,EAAWjjH,KAAK,eAGd6iH,GACFI,EAAWjjH,KAAK,qBAGdo/F,IACF6jB,EAAWjjH,KAAK,gBAEZmkD,GACF8+D,EAAWjjH,KAAK,SAGd2iH,GACFM,EAAWjjH,KAAK,wBAGhBmjH,IAAY5G,EACd0G,EAAWjjH,KAAK,SACPjK,EACTktH,EAAWjjH,KAAK,SACPpK,EACTqtH,EAAWjjH,KAAK,SACPlK,GACTmtH,EAAWjjH,KAAK,SACZu8G,GACF0G,EAAWjjH,KAAK,6BAET6C,EACTogH,EAAWjjH,KAAK,YACPggG,EACTijB,EAAWjjH,KAAK,WACPkkC,EACT++E,EAAWjjH,KAAK,QACPkiG,GAAYS,EACrBsgB,EAAWjjH,KAAK,YACPugB,IACT0iG,EAAWjjH,KAAK,aAEZugB,EAAQH,OAASG,EAAQxqB,QAC3BktH,EAAWjjH,KAAK,SAGdugB,EAAQ1d,UACVogH,EAAWjjH,KAAK,YAGdugB,EAAQmjG,MACVT,EAAWjjH,KAAK,SAIhBimG,IAAYA,EAAQxV,eACtBwyB,EAAWjjH,KAAK,WAGdimG,GAAWA,EAAQ7lF,OACrB6iG,EAAWjjH,KAAK,aAGd2Z,GACFspG,EAAWjjH,KAAK,SAGd88G,GACFmG,EAAWjjH,KAAK,gBAGd89G,GACFmF,EAAWjjH,KAAK,iBAGdy8G,GACFwG,EAAWjjH,KAAK,eAGd48G,GACFqG,EAAWjjH,KAAK,iBAGd0iH,GACFO,EAAWjjH,KAAK,yBAGdsjH,GACFL,EAAWjjH,KAAK,cAGdm0G,GACF8O,EAAWjjH,KAAK,qBAGbo/F,IACH6jB,EAAWjjH,KAAK,cAEZmjH,GAAW1G,GACbwG,EAAWjjH,KAAK,mBAGd89G,GAAgBhB,GAAewG,IAAaF,GAC3CjP,GAAmByJ,GAAgBrB,IACtC0G,EAAWjjH,KAAK,wBAGd49G,GACFqF,EAAWjjH,KAAK,mBAGd06G,GAAkB2I,IAAsBjjG,GAAUgjG,IAAqBR,GACzEK,EAAWjjH,KAAK,iBAIhBgjH,GAAqBlkG,GACvBmkG,EAAWjjH,KAAK,qBAGdujH,EACFN,EAAWjjH,KAAK,cAEhBijH,EAAWjjH,KAAK,aAGXijH,EAAWzvG,KAAK,IACzB,CHijB2BmwG,CAAsB1vH,EAASq9F,EAAO,CAC7DptD,QACA45E,gBACA1e,iBACAsb,gBACAoC,eACAL,UAAWA,KAAclC,EACzBpG,mBACAwO,kBAAmBlG,IAAa7R,GAAkB76E,cAAgB,EAClE6yF,iBAAkBJ,GAClBK,gBAAiBrF,IAAcE,GAC/Bd,gBACAkG,gBAAyC,YAAxB1a,IAAUnL,aAA4BsL,EAAAA,EAAAA,IAAiBt0G,GACxEsoH,0BACAwG,gBAAgBnmG,EAAAA,EAAAA,GAAkBqhG,GAAkBx6D,IAAc,GAClEi/D,yBAGIkB,GAAe3jH,GAAiBkU,SAAS,gBACzCyxC,IAAY84C,EAAAA,EAAAA,IAAmBzqG,EAAQuvH,gBAEvCK,GAA0B5iG,QAE5BjxB,EADCmtH,IAAW/R,GAAmB9Z,EAAME,SAAS1+F,OAASs4G,GAAmBA,GAG9E,IAAI0Y,GAaAC,GAXFD,GADEvX,IAEO+Q,GADM,QAGN7yG,IAAY8V,IAAYqlC,IAAc9mC,GAEtCA,KAAoB8mC,KAAcg4D,IAAgBr9F,IAC5C,UAEA,aAJA,UAQbq8F,GACE8F,GACFqB,GAAoB,UACXjH,IACTgH,GAAe,aACfC,GAAoB,UAEpBA,GAAoB,SAGtBA,GAAoB,OAGtB,MAAMC,GAA+C5kB,GAAgB,UAAY,cAEjFnmC,EAAAA,EAAAA,GACE3gD,IAAiBhpB,GACjBopB,GACAs8F,GACA/gH,EAAQhE,GACR8kH,IAAmB1wD,IAAWkxD,KAGhC1oC,EAAAA,EAAAA,GACE+nC,IAAoBtlH,GACpBulH,GACAY,KAGFwO,EAAAA,EAAAA,GAAgB,CACd9wE,WAAY9gD,GACZ/C,UACAsmH,aACAE,kBACAE,oBACAC,uBACAwE,cACAp2D,QAASn0D,QAAQimH,IACjBE,0BAGF,MAAM6N,GAAsB5L,IAAiB6L,EAAAA,EAAAA,IAAiBtzH,GAAMynH,SAAkBtoH,EAEhFo0H,IAAqBnwH,EAAQq6E,SAC7Bo8B,GAAYwZ,IAAwBE,IAAqBnwH,EAAQowH,kBAChEvH,IAAe/jG,KAAmBD,IAAaurG,sBACjDr0H,GAELs0H,EAAAA,EAAAA,GAAyBjyH,GAAKuoH,KAE9B7oH,EAAAA,EAAAA,KAAU,KACR,MAAMwyH,EAAerJ,GAAgBp/G,QACrC,IAAKyoH,KAAiBC,EAAAA,EAAAA,GAAoBD,GAAe,OAErDlN,IACF2D,GAAsB,CAAE3jG,WAAY,CAAClY,MAGvC,IAAIslH,EAA6B,GAC7BxwH,EAAQutH,mBACViD,EAAmB,CAACtlH,KAGlBmyF,IACFmzB,EAAmBnzB,EAAME,SAAS1/F,QAAQsrH,GAAQA,EAAIoE,mBAAkB3vH,KAAKurH,GAAQA,EAAIntH,MAGvFw0H,EAAiB3xH,QACnBmoH,GAAiB,CAAE3rH,UAAQ+nB,WAAYotG,GACzC,GACC,CAACpN,GAAmB/lB,EAAOhiG,GAAQ6P,GAAW67G,GAAuB/mH,EAAQutH,mBAEhF,MAAMzlB,IAAc5qG,EAAAA,EAAAA,KAAQ,IACnBgsH,GACH9rB,EAAqBr4F,GAAO9I,QAAQoE,GAAYg9F,EAAQ96F,SACxDxG,GACH,CAACmtH,GAASnkH,GAAO1E,EAAWg9F,EAAO96F,KAEhCkuH,GAAe5H,KAAgB1d,GAAgB,GAAK,EAEpDulB,IAAmBxzH,EAAAA,EAAAA,KAAQ,KAC/B,IAAIyzH,EACAC,EAGAC,EAFAC,GAAiB,EACjBjxH,EAAQ,GAGZ,IAAKqpH,KAAY/8F,IAASrqB,IAASkwG,IAASxV,eAAgB,CAC1D,IAAIv0F,EACJ,GAAIkkB,IAASrqB,GAAO,CAClB,MAAMG,EAASkqB,IAASrqB,GACpBG,IAAUiuD,KACZjoD,GAAQ01F,EAAAA,EAAAA,IAAyB,CAC/B17F,QACA8C,SACA8jH,eACAxoH,YACAkC,cACC0F,MAEP,MAAO,GAAI+pG,IAASxV,eAClBwV,GAAQxV,cAAcv0F,OAAS+pG,GAAQxV,cAAct0F,OACpD,CACD,MAAQD,MAAO8oH,EAAc7oH,OAAQ8oH,GAAkBhf,GAAQxV,cAC/Dv0F,GAAQgpH,EAAAA,EAAAA,IAAmC,CACzChpH,MAAO8oH,EACP7oH,OAAQ8oH,EACRE,eAAgBnsH,GAChB8jH,eACAxoH,YACAkC,cACC0F,KACL,CAEIA,IACEA,EAAQkpH,EAAAA,KACVP,EAAe3oH,GAEjB0oH,EAAkBjrH,KAAKgD,KAAI0oH,EAAAA,EAAAA,IAAiB/6G,IAAMA,KAAMi4G,IAA2BrmH,IAC9E4gH,IAAe7W,IAASxV,eAAiBm0B,EAAkB1oH,EArmBrC,KAsmBzB6oH,GAAiB,GAGvB,MAAWhpB,KACT6oB,EAAkBjrH,KAAKgD,KACrB0oH,EAAAA,EAAAA,IAAiB/6G,IAAMA,KAAMi4G,IAA2BxmB,GAAY5F,eAAej6F,OAEjF0oH,EAAkB7oB,GAAY5F,eAAej6F,MA7mBpB,KA8mB3B6oH,GAAiB,IAIrB,GAAIH,EACF9wH,EAAS,UAAS8wH,MAClBE,EAAoBF,EAAkBtR,QACjC,GAAI3vE,KAAYm6E,GAAc,CACnC,MAAM,MAAE5hH,IAAUw2G,EAAAA,EAAAA,IAAqB/uE,GAASntC,IAChD1C,EAAS,UAASoI,EAAQwoH,OAC1BI,EAAoB5oH,EAAQo3G,EAC9B,CAEA,MAAO,CACLuR,eAAcE,iBAAgBjxH,QAAOgxH,oBACtC,GACA,CACD/oB,GAAa+gB,GAAa4H,GAAc5G,GAAc7X,IAASxV,cAAe0sB,GAASoF,GACvF/rH,GAAUwC,GAAO1E,EAAW8rB,GAAOujB,GAASr5B,IAAMA,KAAMvU,GAAOouD,MAG3D,aACJ0gE,GAAY,eAAEE,GAAc,MAAEjxH,GAAK,kBAAEgxH,IACnCH,GAEJ,SAASW,GAAkBC,GACzB,GAAKpE,GACL,OACEzuH,EAAAA,GAAAC,cAAC6yH,GAAAA,EAAW,CACVC,eAAgBtE,GAChBz8D,eAAgBgzD,GAA+B4K,QAAwBtyH,EACvEu1H,eAAgBA,EAChBpP,aAAcA,GACdC,mBAAoBA,GACpBxwD,UAAWA,GACX4wD,UAAWA,GACX59D,YAAaA,GACbgL,8BAA+BA,EAC/B5B,8BAA+BA,EAC/BorB,sBAAuBgyB,GACvB1H,eAAgBA,GAChBguB,WAAY9H,GACZpF,aAAcA,GACdroG,SAAUA,IAGhB,CAEA,MAAM06F,IAA4B75G,EAAAA,EAAAA,KAAY,KAC5C,GAAKqoH,GAEL,OACE3mH,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,iBAAkBqlG,KAA2B4f,IAAsB,WAC7FhlH,QAAS4mG,GACTpnG,IAAKwlG,IAELnlG,EAAAA,GAAAC,cAACgzH,GAAAA,EAAmB,CAClBt+E,SAAUgyE,GACVrmH,KAAMqgH,GACN9sF,mBAAoBA,GACpB6pB,oBAAqB4R,IAEnB,GAEP,CACD61D,GAAoBtxF,GAAoB8yF,GAAiB5f,GAAyBxB,GAClFj2C,IAGF,SAAS4jE,KACP,MAAMC,EACJnzH,EAAAA,GAAAC,cAAC83G,GAAW,CACVx2G,QAASA,EACTkjE,SAAUA,GACV6zC,aAAcjyF,KAAmB/f,GACjC8xG,UAAWA,EACXF,kBAAmBA,GACnBpzD,eAAgBA,GAChBkzD,UAAWA,GACXC,mBAA0C,WAAtBoZ,GACpBlZ,0BACE4X,IAAqD,YAA1BuB,GAAsCnZ,QAA4B76G,EAE/Fu2B,mBAAoBA,GACpBwkF,aAAc76G,QAAQwnH,GAA+B4K,QAAwBtyH,GAC7Ey4C,YAAaljB,IAAQ+hB,SACrBz0C,QAAS+rH,GACT1T,cAAe8V,GACf/V,mBAAoB4T,GACpB1T,aAAc2T,GACd1T,iBAAkByY,KAItB,MAA0B,WAAtBE,GACK8B,EAIPnzH,EAAAA,GAAAC,cAACmzH,GAAAA,EAAS,CACR7xH,QAASmjH,GACTjnG,SAAUA,GACV41G,aAAcF,EACdz1E,oBAAqB4R,EACrBgkE,iBAAkBn/F,GAClBszF,KAAMA,GACNrgG,qBAAsBq0C,EACtB/nC,gBAAiBA,IAGvB,CA4TA,SAAS6/F,KACP,OAAO1lG,IACL7tB,EAAAA,GAAAC,cAAC6tB,GAAAA,EAAO,CACNvsB,QAASA,EACT2vD,8BAA+BA,EAC/B5B,8BAA+BA,EAC/B1tD,UAAWA,EACXg8C,YAAaqxD,GACb7E,YAAaoc,GACb4D,YAAaA,GACbroH,cAAeA,GACfmkD,YAAaA,GACb5kD,MAAOA,GACPgwB,MAAOkwF,GACPtkB,YAAaA,GACb8oB,sBAAuBA,GACvBwN,kBAAmBjI,IAAkBp9G,OAAOqlH,kBAC5Cx1E,mBAAoBA,GACpBH,sBAAuBA,GACvB41E,YAAa3H,GACb7tE,aAAc2tE,GACd8H,gBAAiB7H,GACjB8H,sBAAuBhqB,IAG7B,CAEA,SAASiqB,GAA6BxqB,GACpC,MAAMnmG,EACJjD,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGq7G,IAAWv5D,GACVlxD,EAAAA,GAAAC,cAACkpG,GAAK,CACJvK,MAAOA,EACPyK,YAAaA,GACb3rD,oBAAqBwT,EACrB5qD,MAAOA,GACP4/C,YAAaA,GACbkjD,kBAAmBA,EACnBnrD,aAAc8tE,MAGhBtB,IAAW/8F,IACX1tB,EAAAA,GAAAC,cAAC0oG,GAAAA,EAAK,CACJkrB,YAAaj8G,IAAMA,KACnB8V,MAAOA,GACPpnB,MAAOA,GACPo3C,oBAAqBwT,EACrBtvD,UAAWA,EACXg8C,YAAaqxD,GACbxtG,eAAgBA,GAChB6oG,qBAAsBlB,EACtBrnG,cAAeA,GACfmkD,YAAaA,GACbkkE,YAAaA,GACb9oH,MAAOA,GACPgyG,YAAa6e,GACbhyH,QAAS6rH,GACTrpH,eAAgBgnG,MAGlB8gB,IAAWpnH,KAAUouD,IACrBzxD,EAAAA,GAAAC,cAAC4oG,GAAAA,EAAK,CACJxlG,MAAOA,GACPiD,MAAOA,GACP4qD,8BAA+BA,EAC/B5B,8BAA+BA,EAC/BgkD,YAAa6e,GACbvwH,UAAWA,EACXg8C,YAAaqxD,GACb7E,YAAaoc,GACb/kH,eAAgBA,GAChBM,cAAeA,GACfmkD,YAAaA,GACbkkE,YAAaA,GACbpE,sBAAuBA,GACvB7lH,QAAS8rH,GACTtpH,eAAgBgnG,MAMxB,OAAI3K,GAEAh/F,EAAAA,GAAAC,cAACq6G,GAAgB,CAAC19G,OAAQA,GAAQ6P,UAAWA,GAAWuyF,UAAWA,GAAWl8B,WAAYx8D,IACvFrD,GAKAA,CACT,CAEA,SAAS6wH,KAEP,QAASpnB,KAAkByU,MACxBH,MAFWtzF,IAASrqB,IAASqyG,IAAY1W,KAEZ6lB,KAAkBuF,IAAejJ,IAAYM,MACvEkJ,MAA+BpB,IAAmB7c,GAC1D,CAEA,SAASqnB,KACP,OACE/zH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,2BACbssH,IACCpqH,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAMmY,IAAaI,eAAiB,UAAY,iBAEvD4jG,IACCpqH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,iBACbK,GAAK,kBAKhB,CAEA,SAAS61H,GAAiBC,GAAuC,EAAOC,GAAsC,GAC5G,IAAI1yH,GAEAgqH,IAAgB9e,IAAiByU,GAE1B/6F,IAAaI,eACtBhlB,EAAc4kB,GAAYI,eACjBS,IAAa26F,KACtBpgH,GAAciwH,EAAAA,EAAAA,IAAiBtzH,GAAMyjH,KAJrCpgH,GAAciwH,EAAAA,EAAAA,IAAiBtzH,GAAMqtH,IAMvC,MAAM2I,EAAoB3I,IAAc,gBAAiBA,IAAcA,GAAWx/D,YAC5EooE,EAAkB5I,IAAc,cAAeA,IAAcA,GAAW/vD,UAExE44D,EAA4BjK,IAAeoB,GAC3C8I,EAAuBzS,IAAWljD,WAAWv+D,OACnD,OACEJ,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBAAgB2P,IAAI,OAC/BjM,GAAe4oH,GACfpqH,EAAAA,GAAAC,cAAA,QACEnC,WAAWoC,EAAAA,EAAAA,GACT,+BACAkmB,IAAaI,eAAiB,gBAAkB,mBAnBtD+tG,GAsBI9mH,IAAI,QAEFwmH,GAAgCF,KAClC/zH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,sBACbmpB,IAAajnB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,eACxBomH,GACCr0H,EAAAA,GAAAC,cAACq4C,GAAAA,EAAM,CACLx6C,UAAU,iBACVoyB,KAAMs7F,GACNlrH,KAAK,UAGTN,EAAAA,GAAAC,cAAA,QACEnC,UAAU,eACVqC,QAASsrH,IAERjqH,GAAckM,EAAAA,EAAAA,GAAWlM,GAAgB4oH,GArrC7C,SAqrCkE9sH,IAE/D8sH,IAAe+J,GACfn0H,EAAAA,GAAAC,cAACkX,GAAAA,EAAW,CACVyyB,WAAYuqF,EAAkBvqF,WAC9B9rC,UAAU,eACVyxD,UAAWilE,EAAAA,IACXtjE,8BAA+BA,EAC/B5B,8BAA+BA,KAGjC86D,KAAgB+J,GAAqBC,GAAmBp0H,EAAAA,GAAAC,cAACioE,GAAAA,EAAQ,MAClEsjD,IAAYiJ,UAAYz0H,EAAAA,GAAAC,cAACy0H,GAAAA,EAAQ,CAACD,SAAUjJ,GAAWiJ,aAGzD5S,QAEDvkH,EAtsCC,IAusCJukH,IAAWljD,WAAWv+D,QACrBJ,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,eACdkC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,OAAOK,GAAK,WAC5B6B,EAAAA,GAAAC,cAAA,QACEnC,UAAU,eACVqC,QAASurH,KAERh+G,EAAAA,EAAAA,GAAY,IAAGm0G,GAAUljD,UAAU,GAAGtlD,cAI7CrZ,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBACbo2H,GAA+BI,OAUhBh3H,EAVwC8oB,IAAaikG,oBACpErqH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,QAAQtP,GAAK,mBAC7CoD,EAAQowH,iBAAmBrQ,KAAY8I,GACzCpqH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,QAAQlM,EAAQowH,kBAChD7P,IAAsBsI,IAAgBjJ,QAMtC7jH,EALF0C,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,QAC/Bq0G,GAAkBr5D,aAAetqD,GAChC2jH,GAAkBp5D,QAAU,uBAAyB,yBAI1D6hE,IACCvqH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,gBAAgB,kBAC9BkC,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAMm3G,GAAe,EAAI,SAAW,UACzCA,GAAe,EAAIA,QAAe9nH,GAK7C,CAEA,MAAMq3H,GAAgBrT,IAAW8I,GAAc7oH,EAAQowH,qBAAkBr0H,EAEzE,OACE0C,EAAAA,GAAAC,cAAA,OACEN,IAAKA,GACLpC,IAAImpD,EAAAA,EAAAA,IAAiBnlD,EAAQhE,IAC7BO,UAAW47G,GACX,kBAAiBjtG,GACjBmoH,OAAQ1uE,GAAcU,EAAAA,OAAYtpD,EAClC28C,YAAaoY,GACblyD,QAAS2/C,GACTr1B,cAAe5B,GACfgsG,cAAejuB,GACfrkF,aAAcqoG,GAA2BzjB,QAAgC7pG,EACzEw3H,YAAa/E,GAA0BjqB,QAAkBxoG,EACzDmlB,aAAestG,IAA2BnF,GAA4B1rG,QAAmB5hB,GAEzF0C,EAAAA,GAAAC,cAAA,OACEN,IAAK6oH,GACL1qH,UAAU,gBACV,kBAAiB2O,GACjB,uBAAsBmyF,EAAQA,EAAME,SAASF,EAAME,SAAS1+F,OAAS,GAAG7C,QAAKD,EAC7E,qBAAoBshG,EAAQA,EAAM2K,YAAYhsG,QAAKD,EACnD,0BAAyBiE,EAAQutH,uBAAoBxxH,EACrD,2BAA0BqnH,SAAqBrnH,EAC/C,iBAAgBmnE,SAAYnnE,EAC5B,gCAAiDA,IAAvBiE,EAAQ83G,cAElCkL,IACAvkH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,uCACZgE,IAAc9B,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,YAG7BgzG,IACCjhH,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GACT,mDAAoDmmH,IAAmB,eAEzElmH,QAASwsH,IAERtG,IACCrmH,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,YAIjBjO,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,0BACxBqN,GAAiBkU,SAAS,SAAW,kBACrClU,GAAiBkU,SAAS,aAAe,4BAE3CzhB,EAAAA,GAAAC,cAAA,OACEnC,UAAWyP,GACXnM,MAAOA,GACPqM,IAAI,QAEH28G,KAAgBO,IACf3qH,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACG0kH,MAA4BE,KAC5BW,IAAiB30H,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,QAAQknH,KAlkBxE,WACE,MAAM72H,GAAYoC,EAAAA,EAAAA,GAChB,gBACAkqH,IAAe,oBACfe,IAA2B,yBAC3BC,IAAgB,iBAChBiH,IAAkB,oBAEdjpB,EAAoB4e,KACnBjwG,IAAYqU,KAAoB8+F,KAAiBhB,MAAmB4F,GACrEiF,GAAmB70H,EAAAA,EAAAA,GACvB,eACA,WACiB,YAAjBkxH,IAA8B,YAC9BtsE,IAAkB,sBAEdkwE,GAAmBtwH,KAAW4B,IAAS+f,GAE7C,OACErmB,EAAAA,GAAAC,cAAA,OAAKnC,UAAWA,EAAW+2H,cAAe/tB,GAA0Br5F,IAAI,SACpE28G,IAAe0J,MAA4BE,KAC5C5I,IACCprH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,qBACZ+mH,IACC7kH,EAAAA,GAAAC,cAAC2nG,GAAS,CACR9zD,MAAOgxE,GACP3kH,QAASysH,GACT9uH,UAAU,kBAGbqtH,IACCnrH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,kCACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBACZi2H,MAEFC,IAAiB,GAAM,IAG3BzK,IACCvpH,EAAAA,GAAAC,cAAC4wD,GAAAA,EAAe,CACdtvD,QAAS+gH,GACT38F,UAAWgkG,GACX54D,aAAcA,GACd7K,YAAaA,GACbpgC,OAAQ28F,GACR58F,WAAY+8F,GACZ9xD,cAAe6xD,GACf3xD,iBAAkBA,GAClBC,iCAAkCA,GAClCC,8BAA+BA,EAC/B5B,8BAA+BA,EAC/BnvD,QAASwrH,KAGZ7B,IACC9pH,EAAAA,GAAAC,cAAConG,GAAa,CACZ/1E,MAAOyxF,GACPj9F,OAAQk9F,GACRjyD,aAAcA,GACd7K,YAAaA,GACbgL,8BAA+BA,EAC/B/wD,QAAS0sH,MAKhB57E,IAAWigB,GAAiC5B,GAC3CtvD,EAAAA,GAAAC,cAAC2+G,GAAO,CACNr9G,QAASA,EACTm8C,oBAAqBwT,EACrB5B,8BAA+BA,EAC/B6M,WAAYsqD,GACZ/zF,iBAAkBA,GAClBmsF,WAAYuI,GACZtI,aAAciK,KAGjBkB,IAAoBhG,IACnBjkH,EAAAA,GAAAC,cAAC8rG,GAAmB,CAClBJ,cAAesY,GACfhpE,YAAamsE,IAAuB74F,KAAmBsE,GACvDvsB,MAAOA,GACPo3C,oBAAqBwT,EACrBm7C,iBAAkBrjE,GAClBv8B,UAAWA,GACX7P,OAAQA,GACR+tG,wBAAyBA,KAG5Bsf,IAAoB/9C,IACnBlsE,EAAAA,GAAAC,cAACmsG,GAAa,CACZ5sE,MAAO0sC,GACPjxB,YAAamsE,IAAuB74F,KAAmBsE,GACvDvsB,MAAOA,GACPo3C,oBAAqBwT,EACrBm7C,iBAAkBrjE,GAClBv8B,UAAWA,GACX7P,OAAQA,GACR+tG,wBAAyBA,KAG5Byc,IAAuBv0F,KAAWmW,IACjChpC,EAAAA,GAAAC,cAAC06C,GAAAA,EAAa,CACZC,WAAYloB,GACZjmB,UAAWlL,EAAQhE,GACnB0hH,YAAa19G,EAAQuhE,WACrBjwC,OAAQA,GACRq+B,8BAA+BA,EAC/B5B,8BAA+BA,EAC/BzU,OAAQkuE,KAGXlP,IACC75G,EAAAA,GAAAC,cAAC25G,GAAgB,CACfr4G,QAASA,EACTs4G,UAAWA,GACXj9G,OAAQA,MAGV6tH,IAAWh5D,KAAiBo4D,IAC5B7pH,EAAAA,GAAAC,cAACg1H,GAAAA,EAAU,CACT1zH,QAASA,EACTm8C,oBAAqBwT,EACrBtT,YAAaqxD,GACbltG,cAAeA,GACfW,YAAasyH,EAAkB3I,QAAkB/uH,EACjDiF,oBAAqBkmH,GACrBtmH,qBAAsBA,GACtBD,cAAe1E,QAAQupH,IACvB1kH,cAAesjH,KAAuBjhH,GACtCzC,sBAAuBA,GACvBD,eAAgBA,MAGlBkB,IAASE,IAASymH,KAClB7pH,EAAAA,GAAAC,cAACoB,GAAAA,GAAK,CACJC,MAAOA,GACPC,QAASA,EACTG,OAAQmD,EAAAA,GAAYqI,OACpBzL,eAAgBA,GAChBI,aAAc0iH,GACdziH,WAAYA,GACZF,UAAWA,EACXY,OAAQspH,GACRppH,YAAaU,IAAS4xH,EAAkB3I,QAAkB/uH,EAC1DqF,eAAgBgnG,GAChB5nG,cAAeA,GACfC,eAAgBA,GAChBC,sBAAuBA,GACvBC,cAAe1E,QAAQupH,IACvB5kH,qBAAsBA,GACtBC,aAAc8jD,GACd3jD,oBAAqBkmH,GACrBpmH,cAAesjH,KAAuBjhH,KAGzCyL,IACCnQ,EAAAA,GAAAC,cAACw9C,GAAAA,EAAQ,CACPttC,SAAUA,GACV5O,QAASA,EACTm8C,oBAAqBwT,EACrBtT,YAAaqxD,GACbpxD,sBAAuBA,GACvBp8C,eAAgBA,GAChBI,aAAc0iH,GACdziH,WAAYA,GACZm8C,aAAc4tE,GACdlpH,eAAgBgnG,GAChB5nG,cAAeA,GACfi8C,mBAAoBA,KAGvB/2B,KAAcujG,IACbxqH,EAAAA,GAAAC,cAACi1H,GAAK,CACJ3zH,QAASA,EACT2kD,YAAaA,KAGhBskE,IAAkBxqH,EAAAA,GAAAC,cAACk1H,GAAY,CAAC5zH,QAASA,IACzC+rG,IACCttG,EAAAA,GAAAC,cAACwtG,GAAO,CAACH,QAASA,GAASv8C,aAAczqD,KAE1CkrC,IACCxxC,EAAAA,GAAAC,cAAC87G,GAAI,CAACx6G,QAASA,EAASiwC,KAAMA,GAAMwqE,WAAYsQ,MAEhD9c,IAAYS,KACZjwG,EAAAA,GAAAC,cAAC4vG,GAAQ,CAACtuG,QAASA,IAEpB2tG,IACClvG,EAAAA,GAAAC,cAAC+uG,GAAI,CACHztG,QAASA,EACT0tG,iBAAkBA,KAGrBsE,IAASxV,eACR/9F,EAAAA,GAAAC,cAACu0G,GAAmB,CAClBjzG,QAASA,EACT27F,YAAaA,KAIhB2sB,IACC7pH,EAAAA,GAAAC,cAAA,KACEnC,WAAWoC,EAAAA,EAAAA,GACT,iBACC+B,IAAyBE,IAAwB,uBAEpDsL,IAAI,QAEFtL,GAAuBhE,GAAK,qBAC5B6D,IAAkB+kH,GAAkB/mH,EAAAA,GAAAC,cAACugD,GAAAA,EAAY,CAACv9C,QAAS8jH,KAAsBA,IAKtF36F,IAgDP,SAAoCg9E,GAClC,MAAM2rB,GAAmB70H,EAAAA,EAAAA,GACvB,eACA,YAEIk1H,GAAcl1H,EAAAA,EAAAA,GAClB,eACA,WACiB,YAAjBkxH,IAA8B,YAC9BtsE,IAAkB,sBAIduwE,EADoB5K,KAAaA,IAAW/8F,KAAY+8F,IAAWpnH,KAAUouD,KAChCw4D,IAAoBiB,GACjEoK,EAAgC,YAAjBlE,GAErB,OACEpxH,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGmkH,KACAx7G,KAAYkyG,IACXjqH,EAAAA,GAAAC,cAAA,OAAKnC,UAAWi3H,EAAkBtnH,IAAI,QACnCmlH,KACAlD,IACC1vH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,yBACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACZ80H,IAAkB,MAIvByC,GAAuBC,GAAgBpC,MAI5CmC,GACCr1H,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGwkH,GAA6BxqB,IAC5B6gB,IACAjqH,EAAAA,GAAAC,cAAA,OAAKnC,UAAWs3H,EAAa3nH,IAAI,QAC9By9G,IACClrH,EAAAA,GAAAC,cAACiuG,GAAS,CAACC,UAAWA,GAAWC,iBAAkBpJ,KAEpDswB,GAAgBpC,OAQ/B,CAjG0BqC,CAA2BnsB,IAE7Ch9E,IACApsB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGwkH,GAA6BxqB,GAC7BrxF,KAAYkyG,IACXjqH,EAAAA,GAAAC,cAAA,OAAKnC,UAAWi3H,EAAkBtnH,IAAI,QACnCmlH,KACAlD,IACC1vH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,yBACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACZ80H,IAAkB,KAIxB1H,IACClrH,EAAAA,GAAAC,cAACiuG,GAAS,CAACC,UAAWA,GAAWC,iBAAkBpJ,KAEnC,YAAjBosB,IAA8B8B,MAGlCK,MAIJhgB,KAAYA,GAAQxV,eACnB/9F,EAAAA,GAAAC,cAACozG,GAAO,CACN9xG,QAASA,EACT+oG,qBAAsBlB,IAAsB8gB,GAC5CllB,eAAgBA,GAChBljG,WAAYA,GACZR,MAAOA,GACPgyG,YAAa6e,KAGhBzc,IACC11G,EAAAA,GAAAC,cAACu1G,GAAQ,CACPj0G,QAASA,EACTyjG,eAAgBA,GAChBljG,WAAYA,GACZR,MAAOA,GACP4uB,KAAMpK,KAKhB,CAgUSikD,IACC6gD,IAA6C,eAAjBwG,KAAkC5G,IAAkB0I,KACjFrI,IACC7qH,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GACd,yBACAmnH,IAAqB,iCAGpByI,IAAqBpjB,IACpB1sG,EAAAA,GAAAC,cAACwsG,GAAa,CACZhrD,WAAYy2D,GACZl2F,SAAU6lG,EACVlyF,UAAW0xF,GACX3a,eAAa,EACbC,gBAAc,IAGjBme,IACC9qH,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL1C,UAAU,wBACVqQ,MAAM,oBACN1N,OAAK,EACLH,KAAK,OACL8N,UAAWjQ,GAAK,2BAChBgC,QAAS8gH,GAAwBsL,GAAqBC,IAEtDxsH,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,kBAGd+8G,IACChrH,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL1C,UAAU,wBACVqQ,MAAM,oBACN1N,OAAK,EACLH,KAAK,OACL8N,UAAU,gBACVjO,QAASomH,GAAekG,GAAcC,IAEtC1sH,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,kBAKlB6hH,MAAuBjF,IAAuBne,KAC7C1sG,EAAAA,GAAAC,cAACwsG,GAAa,CACZhrD,WAAYy2D,GACZl2F,SAAU6lG,EACVlyF,UAAW0xF,KAGd6J,IAAgBlxH,EAAAA,GAAAC,cAACu1H,GAAAA,EAAe,CAAClvH,MAAOA,KACxCypH,IAAqD,eAA1BuB,IAA0CnZ,MAEvE52G,EAAQguG,eACPvvG,EAAAA,GAAAC,cAACizG,GAAa,CAAC3xG,QAASA,EAASpB,QAASkjB,KAErB,YAAtBguG,KAAoC7G,IACnCxqH,EAAAA,GAAAC,cAACmzH,GAAAA,EAAS,CACR7xH,QAASmjH,GACTjnG,SAAUA,GACVg4G,WAAS,EACTruG,qBAAsBq0C,EACtBmkC,SAAUwyB,GACV10E,oBAAqB4R,EACrBgkE,iBAAkBn/F,GAClBszF,KAAMA,GACN/zF,gBAAiBA,MAItB9K,IACC5oB,EAAAA,GAAAC,cAAC+tG,GAAoB,CACnBluG,OAAQ6oB,GACR/W,OAAQgX,GACR8sG,WAAY1M,IAAmB1hH,QAAQ,WAAc0hH,GAAwCr3G,UAAOrU,EACpGiE,QAASA,EACTq9F,MAAOA,EACPjgF,gBAAiBA,GACjB0D,QAASyG,GACTxG,oBAAqByG,GACrBmvF,kBAAmBA,GACnBE,UAAWA,EACXn3B,iBAAkBA,KAGlB,I,kDI/pDV,QAxBA,UAAyB,MAAE36E,IACzB,MAAM4+E,EAAO5+E,EACT,0FACA,6FACJ,OACEtG,EAAAA,GAAAC,cAAA,OAAKuJ,MAAM,IAAIC,OAAO,KAAK3L,UAAU,gBACnCkC,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,UAAQiK,EAAE,OAAOC,EAAE,SAASX,MAAM,OAAOC,OAAO,SAASsuC,YAAY,oBAAoBx6C,GAAG,mBAC1FyC,EAAAA,GAAAC,cAAA,YAAU+3C,GAAG,IAAIC,GAAG,cAAc1vC,OAAO,uBACzCvI,EAAAA,GAAAC,cAAA,kBAAgBi4C,aAAa,IAAID,GAAG,qBAAqB1vC,OAAO,qBAChEvI,EAAAA,GAAAC,cAAA,iBACEhB,OAAO,4EACPg5C,GAAG,uBAITj4C,EAAAA,GAAAC,cAAA,KAAGkH,KAAK,OAAO,YAAU,WACvBnH,EAAAA,GAAAC,cAAA,QAAMk4C,EAAG+sC,EAAM/9E,KAAK,OAAO/H,OAAO,0BAClCY,EAAAA,GAAAC,cAAA,QAAMk4C,EAAG+sC,EAAM/9E,KAAMb,EAAQ,UAAY,MAAOxI,UAAU,YAIlE,C,wIC3BA,MC+GA,GAAerB,EAAAA,EAAAA,KAnFOk+C,EACpBluC,YACAwyG,aACApsF,SACA+nB,aACAsW,gCACA5B,gCACAzU,aAGA,MAAM+kE,GAAYh8G,EAAAA,EAAAA,IAAuB,MAEnCjE,GAAMiE,EAAAA,EAAAA,IAAuB,MAC7Bu7G,GAAUvgE,EAAAA,EAAAA,IAAkBghE,EAAW1uD,GACvChG,GAAUtM,EAAAA,EAAAA,IAAkBghE,EAAWtwD,IAEtCzpD,EAAW8vH,EAAcC,IAAe52G,EAAAA,EAAAA,MACxC62G,EAA0BC,EAAuBC,IAAuB/2G,EAAAA,EAAAA,KAEzEq8C,EAwDR,SAAuBxoC,GACrB,OAAIA,EAAOmjG,kBACD,UAASnjG,EAAOmjG,oBAGlB,UAASnjG,EAAOojG,wBAC1B,CA9DqBC,CAAcrjG,GAC3BsjG,GAAa5xH,EAAAA,EAAAA,GAAS82D,GAAa8jD,GAEnCiX,GAAc9wH,EAAAA,EAAAA,IAAgB,KAClCswH,IACA/6E,KAAU,IAGN+tC,GAAiB+2B,EAAAA,EAAAA,GAAmB,CACxCC,YACAC,WAAYlgH,EACZs/G,aACAl7F,YAAale,EACbwwH,oBAAoB,EACpB94H,GAAIs1B,EAAOt1B,MAGb8B,EAAAA,EAAAA,KAAU,KACJw2H,GAA0BjtC,IAC9BmtC,GAAqB,GACpB,CAACntC,EAAgBmtC,EAAqBF,KAEzCx2H,EAAAA,EAAAA,KAAU,KACJ6rD,GAAWtQ,GAAcu7E,IAC3BR,IACAG,IACF,GACC,CAAC5qE,EAASirE,EAAYv7E,EAAYguC,IAErC,MAAM0tC,GAAkBp2H,EAAAA,EAAAA,GD5E2C,WC8EjE++G,GD9EqF,YCiFvF,OACEj/G,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GDlFK,WCkFyB++G,GDlFC,YCkFmCt/G,IAAKigH,GACpF/5G,GACC7F,EAAAA,GAAAC,cAAC0nF,EAAAA,EAAM,KACL3nF,EAAAA,GAAAC,cAACkgH,EAAAA,EAAe,CACdxgH,IAAKA,EACLm6C,IAAM,UAASrtC,GAAaomB,EAAOt1B,KACnCO,UAAWw4H,EACX9nH,OAAQ2nH,EACR71H,KAhEQ,IAiERkoF,MAAI,EACJkE,eAAa,EACb/9E,QAAM,EACNutD,aAAW,EACXkkD,QAASgW,KAIX,G,kQCzCV,MA0MA,EA1McztB,EACZprG,KACAmwB,QACAmmG,cACAvtH,QACAo3C,sBACA97C,YACAg8C,cACAonD,iBACAljG,aACAL,iBACA6xG,cACAhzG,OAAO,SACPm+F,aACA2rB,cACA97G,iBACAg8F,uBACAvoG,gBACAmkD,cACA5kD,QACAi1H,cACAruB,WACApqG,YACAqC,UACAwC,qBAGA,MAAMhD,GAAMiE,EAAAA,EAAAA,IAAuB,MAC7B4yH,EAAoC,yBAApB9oG,EAAM68E,UAEtB/qD,EAAgBg3E,OAAgCl5H,EAAhBowB,EAAMglC,QAEtC/T,GAAiBC,EAAAA,EAAAA,IAAkBj/C,EAAK+9C,IAExC,SAAE55C,IAAaC,EAAAA,EAAAA,OACdg7C,EAAeC,IAAoB96C,EAAAA,EAAAA,IAAS05C,GAC7Cz5C,EAAa46C,GAAiBJ,IAAmB63E,GACjD,UACJxxH,EAAS,aAAEE,IACTE,EAAAA,EAAAA,GAA0BoxH,OAAiDl5H,GAAjC0sD,EAAAA,EAAAA,IAAkBt8B,EAAOptB,IAAoB6D,GACrFmmD,GAAgB9K,GAAgBx6C,EAEhC6uG,GAAwBr2G,QAAQ81G,IAC/B5yD,KAAax8C,EAAAA,EAAAA,KAAUomD,IACxB3J,GAAUnjD,QAAQ8sD,IAClB1J,IAAWkzD,EAAAA,EAAAA,GAAwBpmF,EAAOizB,KAChD81E,EAAAA,EAAAA,IAAoB91E,GAAS,CAAEhhD,IAAKihD,KACpC,MAAM68C,IAAuBqW,EAAAA,EAAAA,GAAwBpmF,GAAQmmF,IACvDv0D,IAAeC,EAAAA,EAAAA,IAAiB7xB,IAE/B84B,GAAgBkwE,GAAajwE,KAAeznC,EAAAA,EAAAA,GAAQw3G,GAAiB9oG,EAAMiT,YAElFthC,EAAAA,EAAAA,KAAU,KACJm3H,GAAiB9oG,EAAMiT,UACzB+1F,KAEAjwE,IACF,GACC,CAAC+vE,EAAe9oG,IAEnB,MACExoB,aAAcC,KACZC,EAAAA,EAAAA,GACDoxH,OAAuDl5H,GAAvC0sD,EAAAA,EAAAA,IAAkBt8B,EAAO,aACzC3rB,EACAy0H,OAAoDl5H,GAApC2H,EAAAA,EAAAA,IAAeyoB,EAAO,cAGnC,YACJ3iB,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACFzJ,IAAmBM,EAAgBoD,GAAmBD,GACtDf,IAAemmD,QACIhtD,IAAnBmE,GAEIk1H,IAA2D,KAAzCt8F,EAAAA,EAAAA,GAAsB0kB,IAG5Cp/C,IAAKi3H,GACLh3H,aAAcuL,KACZi+G,EAAAA,EAAAA,GAAkB,CACpBtpH,OAAQkL,GACRq+G,kBAAmBsN,GACnB74H,UAAW,OACX+4H,kBAAkB,KAGlBl3H,IAAKm3H,GACLl3H,aAAcm3H,KACZ3N,EAAAA,EAAAA,GAAkB,CACpBtpH,QAASwqD,KAAkBvL,EAC3B83E,kBAAkB,IAGd/2E,IAAcx6C,EAAAA,EAAAA,IAAiBuG,IAC/Bd,GACFpI,IAAiBulG,GAId59C,GAKD9D,GACFC,KAIFtmD,IAAU+nG,EAAWr8F,GATnBmzC,GAAkBg4E,IAAeA,GASZ,KAGzBztF,EAAAA,EAAAA,IAA4B,EAAEwqE,MAC5B,IAAKzJ,EAIH,YAHIyJ,GACFp0G,EAAIyJ,QAASwL,QAAwBq/F,EAAAA,KAA2B59F,gBAAgB+9F,EAAAA,MAKpF,MAAMJ,EAAYr0G,EAAIyJ,QAASwL,QAAwBq/F,EAAAA,KACvD,GAAI3pD,GAAe,CACjB,MAAM79C,EAAY4/B,OAAO2nE,EAAUp/F,QAAwB,YAAa4B,QAAQ/J,YAChFynG,EAAAA,EAAAA,GAAoB5pD,GAAe9sD,QAAQ8I,GAAQmG,EAAW3K,EAAYR,GAAO4rF,MAAMinB,KACrFlxE,EAAAA,EAAAA,KAAgB,KACd+wE,EAAU5yG,MAAM+iB,YAAY,gBAAiBgwF,GAC7CH,EAAUl9F,aAAas9F,EAAAA,IAA2B,GAAG,GACrD,GAEN,MACEJ,EAAU5jG,UAAUC,IAAI,qBAC1B,GACC,CAACi6F,EAAsBhgD,GAAehkD,EAAO0+F,EAAgBljG,EAAYR,IAE5E,MAAM,MAAEkI,GAAK,OAAEC,GAAM,QAAEwtH,IAAYx4B,IAAcS,EAAAA,EAAAA,IAAyB,CACxE17F,MAAOkqB,EACPpnB,QACA8jH,cACAxoH,YACAkC,WACA+vH,cACA0C,gBAGIW,IAAqBh3H,EAAAA,EAAAA,GACzB,eACC6K,KAAgBuD,GAAkB,cACnC2oH,IAAW,eACVztH,KAAUC,IAAmB,cAATnJ,IAAyB,eAC9CmJ,GAAS0tH,EAAAA,IAAoB,iBAC7Br5H,GAGIs5H,GAAkB34B,EAAc,WAAUj1F,eAAkBi1F,EAAWv0F,aAAau0F,EAAWt0F,OAAS,GACxG/I,GAAiB,WAATd,EAAqB,WAAUmJ,QAAY2tH,UAAoB95H,EAE7E,OACE0C,EAAAA,GAAAC,cAAA,OACE1C,GAAIA,EACJoC,IAAKA,EACL7B,UAAWo5H,GACX91H,MAAOA,GACPjB,QAAS4K,QAAczN,EAAYwiD,IAElC+zD,IACC7zG,EAAAA,GAAAC,cAAA,UAAQN,IAAK89F,GAAsB3/F,UAAU,yBAE9CwsD,IACCtqD,EAAAA,GAAAC,cAAA,OACEqhD,IAAKgJ,GACLxsD,WAAWoC,EAAAA,EAAAA,GAAe,aAAc2zG,IAAyB,mBACjE78F,IAAI,GACJ5V,MAAOkyG,EAAe,UAASA,WAAkBh2G,EACjDkS,WAAY02C,IAGfxF,IACC1gD,EAAAA,GAAAC,cAAA,UAAQN,IAAKihD,GAAU9iD,UAAU,cAElCooD,GAAelmD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAC/BqN,KAAwB4rH,IACvB/2H,EAAAA,GAAAC,cAAA,OAAKN,IAAKi3H,GAAY94H,UAAU,iBAC9BkC,EAAAA,GAAAC,cAAC2O,EAAAA,EAAe,CAACvF,SAAU4B,GAAkB9K,QAAS4K,GAAc+0C,QAAcxiD,KAGrFy5H,IAA8B/2H,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACrO,IAAKm3H,GAAmB7oH,KAAK,aAClEjO,EAAAA,GAAAC,cAAC4mD,EAAAA,EAAY,CACXC,UAAWN,GACX6wE,eAAa,EACb/3E,aAAcA,GACd91C,MAAOA,GACPC,OAAQA,GACR3L,UAAU,kBAEXkN,IACChL,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,6BAA6BmJ,KAAKxG,MAAyB,IAAnBwK,IAAwB,KAE9E,C,mSCvMV,MAAMqsH,EAAkBC,EAAAA,GAA4B,EAE9CC,EAA+D,GAArCF,EADR,GACiDrwH,KAAKkuG,GAG9E,IAAIsiB,EAEJ,MAiTA,EAjTiCxC,EAC/B1zH,UACAzD,YACA8/C,cACA77C,gBACAL,SACAg8C,sBACA7C,SACAn4C,cACAP,uBACAD,gBACAG,gBACAE,sBACAN,wBACAD,qBAGA,MAAMrC,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7B8zH,GAAY9zH,EAAAA,EAAAA,IAAyB,MAErC+zH,GAAY/zH,EAAAA,EAAAA,IAAyB,OAErC,oBAAEf,EAAmB,sBAAEG,EAAqB,gBAAED,IAAoB7E,EAAAA,EAAAA,MAElEygD,GAAiBC,EAAAA,EAAAA,IAAkBj/C,EAAK+9C,GAExCr6C,EAAQ9B,EAAQ0B,QAAQI,MACxBC,EAAgB/B,EAAQ+B,eAEvBy7C,EAAeC,IAAoB96C,EAAAA,EAAAA,IAAS05C,GAC7Cz5C,EAAa3G,QAAQuhD,GAAiBJ,IACtC,UAAE35C,EAAS,aAAEE,IAAiBE,EAAAA,EAAAA,IAClCwyH,EAAAA,EAAAA,IAAkBv0H,EAAO,WACxBc,GACDc,EAAAA,EAAAA,IAAe5B,EAAO,YAGhB6B,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCwyH,EAAAA,EAAAA,IAAkBv0H,EAAO,aACxBtB,EACDyC,EAAAA,GAAeC,UAGVozH,GAAeC,KAAmB94G,EAAAA,EAAAA,KACnCta,IAASC,EAAAA,EAAAA,IAAcpD,GACvBqD,GAA8B,iBAAXlD,EACnBq2H,GAAsBrzH,KAAWE,GAEjC+7C,IADWnjD,SAAQ2oD,EAAAA,EAAAA,IAA4B5kD,KACxBs2H,IAAiBE,GACxCn3E,IAAWkzD,EAAAA,EAAAA,GAAwBzwG,EAAOs9C,KAChD81E,EAAAA,EAAAA,IAAoB91E,GAAS,CAAEhhD,IAAKihD,KACpC,MAAMtB,IAAe6G,EAAAA,EAAAA,IAA4B5kD,GAC3CyJ,GAAkB+zC,IAAkB84E,IAAkB91H,EACtD40H,IAA2D,KAAzCt8F,EAAAA,EAAAA,GAAsB0kB,IAG5Cp/C,IAAKi3H,GACLh3H,aAAcuL,KACZi+G,EAAAA,EAAAA,GAAkB,CACpBtpH,OAAQkL,GACRq+G,kBAAmBsN,GACnBE,kBAAkB,KAGb7yH,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,IAExC8zH,GAAaC,KAAen+F,EAAAA,EAAAA,IAAU,GACvCo+F,IAAuBC,EAAAA,EAAAA,IAAmBH,GAxExB,KA0ExB34H,EAAAA,EAAAA,KAAU,KACR,IAAK2E,GACH,OAGF,MAAMo0H,EAAWV,EAAUtuH,QAC3B6uH,GAAYG,EAASttE,YAAcstE,EAASpyH,SAAS,GACpD,CAACiyH,GAAaj0H,GAAak0H,MAE9BhvH,EAAAA,EAAAA,KAAgB,KACd,IAAKlF,KAAgB2zH,EAAUvuH,QAC7B,OAGF,MAAM4tG,EAAmBwgB,EAAyBU,KAAyBV,EAC3EG,EAAUvuH,QAAQ0N,aAAa,oBAAqBkgG,EAAiBrpE,WAAW,GAC/E,CAAC3pC,GAAak0H,KAEjB,MAAMt9E,GAAap9C,QAAQwH,GAAa25C,GAElCi3E,IAActwH,EAAAA,EAAAA,IAAgB,KAC7BoyH,EAAUtuH,UAIfnF,IAAe,GACfg0H,GAAY,IACZvvC,EAAAA,EAAAA,GAASgvC,EAAUtuH,SAAQ,IAGvBivH,IAAiB/yH,EAAAA,EAAAA,IAAgB,KACrCmyH,MACAA,EAAe7B,EAAW,IAGtB0C,IAAgBhzH,EAAAA,EAAAA,IAAgB,KACpC,MAAM8yH,EAAWV,EAAUtuH,QACvBpF,GACEo0H,EAAS3vC,SACXC,EAAAA,EAAAA,GAAS0vC,IACTG,EAAAA,EAAAA,OAEAH,EAASl7G,SAGXm7G,KAEAD,EAASl7G,QACTk7G,EAASttE,YAAc,GACvB49B,EAAAA,EAAAA,GAAS0vC,IACTG,EAAAA,EAAAA,MACAt0H,IAAe,GACjB,KAGF5E,EAAAA,EAAAA,KAAU,KACHuF,IAGL0zH,IAAe,GACd,CAAC1zH,KAEJ,MAAMk7C,IAAcx6C,EAAAA,EAAAA,IAAiB0tE,IACnC,IAAIA,EAAMr+D,OAAOC,QAAQ,sBAIzB,GAAK5P,EAAL,CAMA,IAAIjD,EAKJ,OAAI2C,KAAWE,IACb5B,EAAsB,CAAEzB,iBACxBmB,YAIF41H,KAVEz1H,EAAoB,CAAEW,MAAOH,GAH/B,MAHE27C,GAAkBg4E,IAAeA,GAgBpB,KAGjB33H,EAAAA,EAAAA,KAAU,KACJqD,GAAeY,GAAiBU,IAClCtB,GACF,GACC,CAACsB,GAAaV,EAAeZ,IAEhC,MAAM81H,IAAmBlzH,EAAAA,EAAAA,IAAiBuG,IACxC,MAAMusH,EAAWvsH,EAAEylE,cACnB2mD,GAAYG,EAASttE,YAAcstE,EAASpyH,SAAS,IAGjDwG,IAAmBlH,EAAAA,EAAAA,IAAgB,KACvCvC,EAAgB,CAAEnG,OAAQ2E,EAAQ3E,OAAQ6P,UAAWlL,EAAQhE,IAAK,IAoB9DiO,IAAoBlG,EAAAA,EAAAA,IAAgB,MACnCpD,GAAiBC,IAAyBI,EAC7CA,GAAqBN,GACXD,GACVwK,IACF,IAGF,OACExM,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,WAAWoC,EAAAA,EAAAA,GAAe,aAAc,cAAe0E,IAAoB,kBAAmB9G,GAC9FqC,QAAS2/C,IAER96C,GACChF,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBACZi6H,IACC/3H,EAAAA,GAAAC,cAAC4mD,EAAAA,EAAY,CACXC,WAAS,EACTxH,aAAcA,GACd91C,MAAO+tH,EAAAA,GACP9tH,OAAQ8tH,EAAAA,GACRz5H,UAAU,kBAGdkC,EAAAA,GAAAC,cAACgrD,EAAAA,EAAc,CACbC,QAAStQ,GACTj7C,IAAK+3H,EACLp2E,IAAKt8C,EACLlH,UAAU,aACV0L,MAAO+tH,EAAAA,GACP9tH,OAAQ8tH,EAAAA,GACRj1H,UAAWy1H,GACX3sE,yBAAuB,EACvBD,OAAQnnD,GACRy0H,cAAY,EACZptE,MAAOrnD,GACPsnD,aAAW,EACXotE,YAAU,EACVtY,QAASp8G,GAAc62C,GAAU+6E,QAAct4H,EAC/Cq7H,aAAc30H,GAAcw0H,QAAmBl7H,EAC/CiuD,QAASusE,OAIbC,IACA/3H,EAAAA,GAAAC,cAAA,UACEN,IAAKihD,GACL9iD,UAAU,YACVsD,MAAQ,UAASm2H,EAAAA,iBAAwCA,EAAAA,SAG7Dv3H,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YACZkG,IACChE,EAAAA,GAAAC,cAAA,OAAKuJ,MAAO+tH,EAAAA,GAA2B9tH,OAAQ8tH,EAAAA,IAC7Cv3H,EAAAA,GAAAC,cAAA,UACEN,IAAKg4H,EACLriB,GAAIgiB,EACJ/hB,GAAI+hB,EACJ3qC,EAAG2qC,EA9PO,EA+PVx5H,UAAU,kBACV85E,UAAY,eAAc0/C,MAAoBA,KAC9C,mBAAkBE,EAClB,oBAAmBA,MAK1BrsH,IACCnL,EAAAA,GAAAC,cAAA,OAAKN,IAAKi3H,GAAY94H,UAAU,iBAC9BkC,EAAAA,GAAAC,cAAC2O,EAAAA,EAAe,CAACvF,SAAUtH,EAAgBoD,GAAmBD,KAGjE6yH,KAAwB5sH,IAxFzBnL,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACbkC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL2N,MAAM,OACN1N,OAAK,EACLH,KAAK,UACLxC,UAAU,OACVwQ,gBAAc,GAEdtO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,UAEbjO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,gBA+EXjJ,IAAc+5C,GACd/+C,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,cAEXrJ,IACA5E,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GACT,yBAA0BoD,GAAiB,WAG5CU,IAAc6J,EAAAA,EAAAA,IAAoB6pH,EAAUtuH,QAAS0hD,cAAej9C,EAAAA,EAAAA,IAAoBxK,EAAM2C,YAC5FhC,IAAe0zH,EAAUtuH,QAASq/E,SAAWzoF,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,WAG9D5L,GACCrC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLL,QAASqL,GACT1N,UAAU,qBAEToE,GAAiBC,EAAuBnC,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,SAAYjO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,eAC1EjM,GACChC,EAAAA,GAAAC,cAAA,OAAKwP,QAAQ,YAAY3R,UAAU,eACjCkC,EAAAA,GAAAC,cAAA,QACEnC,UAAU,eACVqJ,KAAK,cACLqC,MAAM,KACNC,OAAO,KACP,eAAa,IACb,kBAAgB,QAChBiG,GAAG,IACHC,GAAG,IACHC,OAAO,QACP,oBAAkB,IAClB,mBAAiB,YAMvB,C,+HC/UV,MA4DA,GAAenT,EAAAA,EAAAA,KA5D4Bm8H,EACzC94H,SACA+4H,cACAC,YACAlnH,SACA0/E,aACAynC,kBACA12G,UACAC,sBACA02G,kBACAC,kBACAC,gBACAC,wBAGA,MAAMC,GAAUx1H,EAAAA,EAAAA,IAAuB,MACjCzF,GAAOC,EAAAA,EAAAA,KAEPwrB,GAAoBtkB,EAAAA,EAAAA,IAAgB,IAAMgsF,EAAWloF,UACrD4oF,GAAY1sF,EAAAA,EAAAA,IAAgB,KAAM,CAAG6gF,YAAY,MACjDr8D,GAAiBxkB,EAAAA,EAAAA,IAAgB,IAAM8zH,EAAQhwH,UAC/CygB,GAAiBvkB,EAAAA,EAAAA,IAAgB,IAAM6K,SAASG,OAEhD+oH,EAAoBR,IAAgBE,GAAmBD,EAE7D,OACE94H,EAAAA,GAAAC,cAACgiB,EAAAA,EAAI,CACHtiB,IAAKy5H,EACLt5H,OAAQA,EACR8R,OAAQA,EACRu0E,YAAU,EACVroF,UAAU,wBACVk0F,UAAWA,EACXpoE,kBAAmBA,EACnBE,eAAgBA,EAChBD,eAAgBA,EAChBxH,QAASA,EACTC,oBAAqBA,GAEpBu2G,GAAeK,GACdl5H,EAAAA,GAAAC,cAAC2iB,EAAAA,EAAQ,CAACC,KAAK,UAAU1iB,QAAS+4H,GAAgB/6H,EAAK,6BAEvD46H,GACA/4H,EAAAA,GAAAC,cAAC2iB,EAAAA,EAAQ,CAACC,KAAK,OAAO1iB,QAAS64H,GAC5B76H,EAAK26H,EAAY,yBAA2B,yBAGhDA,GAAaK,GACZn5H,EAAAA,GAAAC,cAAC2iB,EAAAA,EAAQ,CAACC,KAAK,YAAY1iB,QAASg5H,GACjCh7H,EAAK,aAGTk7H,GAAqBr5H,EAAAA,GAAAC,cAAC6qB,EAAAA,EAAa,MACpC9qB,EAAAA,GAAAC,cAAC2iB,EAAAA,EAAQ,CAACC,KAAK,eAAe1iB,QAAS84H,GACpC96H,EAAK,WAEH,ICqBX,GAAe1B,EAAAA,EAAAA,KAnF4C68H,EACzDx5H,SACAy5H,WACAV,cACAW,iBACAV,YACAlnH,SACA0/E,aACAynC,kBACAU,cACAp3G,UACAC,0BAEA,MAAM,kBACJo3G,EAAiB,WACjBrhG,EAAU,gBACVshG,EAAe,cACfC,IACE17H,EAAAA,EAAAA,OAEE,IAAEyB,IAAQypH,EAAAA,EAAAA,GAAkB,CAChCtpH,SACAwiB,wBAGIu3G,GAAkBv0H,EAAAA,EAAAA,IAAgB,KACtCm0H,MACAp3G,GAAS,IAGLy3G,GAAqBx0H,EAAAA,EAAAA,IAAgB,KACzCo0H,EAAkB,CAChBH,WACAC,iBACAV,YACAD,gBAEFgB,GAAiB,IAGbE,GAAsBz0H,EAAAA,EAAAA,IAAgB,KAC1Cs0H,IACAC,GAAiB,IAGbG,GAAoB10H,EAAAA,EAAAA,IAAgB,KACxC+yB,EAAW,CACTzxB,KAAM,CACJrF,QAAS,CAACs3H,EAAaW,GAAgBp6H,OAAO5B,SAASsjB,KAAK,SAGhE+4G,GAAiB,IAGbI,GAA+B30H,EAAAA,EAAAA,IAAgB,KACnDq0H,EAAgB,CAAEJ,aAClBM,GAAiB,IAGnB,GAAKjoH,EAIL,OACE5R,EAAAA,GAAAC,cAAA,OAAKN,IAAKA,EAAK7B,UAAU,wBACvBkC,EAAAA,GAAAC,cAAC24H,EAAoB,CACnB94H,OAAQA,EACR8R,OAAQA,EACR0/E,WAAYA,EACZwnC,UAAWA,EACXD,YAAaA,EACbE,gBAAiBA,EACjB12G,QAASA,EACTC,oBAAqBD,EACrB22G,gBAAiBc,EACjBb,gBAAiBc,EACjBb,cAAec,EACfb,kBAAmBc,IAEjB,G,mSC/CV,MAoQA,EApQcpxB,EACZtrG,KACA8F,QACAiD,QACAiwH,cACArlE,gCACA5B,gCACA1tD,YACAg8C,cACAwsD,cACA3oG,iBACA6xG,cACA7U,aACA2rB,cACAroH,gBACAmkD,cACApoD,YACAkoH,wBACA9d,WACA/nG,UACAwC,qBAEA,MAAM,oBAAEE,IAAwB3E,EAAAA,EAAAA,MAE1ByB,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7BulD,GAAWvlD,EAAAA,EAAAA,IAAyB,MAEpC4yH,EAAoC,yBAApBnzH,EAAMknG,UAEtB/qD,EAAgBg3E,OAAgCl5H,EAAhB+F,EAAMqvD,SAErClM,EAAgBkwE,EAAajwE,IAAeznC,EAAAA,EAAAA,GAAQw3G,GAAiBnzH,EAAMs9B,YAElFthC,EAAAA,EAAAA,KAAU,KACJm3H,GAAiBnzH,EAAMs9B,UACzB+1F,IAEAjwE,GACF,GACC,CAAC+vE,EAAenzH,IAEnB,MAAM62H,GAA2Bt7E,EAAAA,EAAAA,IAAkBj/C,EAAKuxD,GAClDipE,GACJv7E,EAAAA,EAAAA,IAAkBj/C,EAAK2vD,IACpB4qE,EAECE,GAAoBx2H,EAAAA,EAAAA,IAAOs2H,GAC7BC,IAA6BC,EAAkBhxH,UACjDgxH,EAAkBhxH,SAAU,GAG9B,MAAM,SAAEtF,KAAaC,EAAAA,EAAAA,OACdg7C,GAAeC,KAAoB96C,EAAAA,EAAAA,IAAS05C,GAC7Cz5C,GAAa3G,QAAQuhD,IAAiBm7E,IAA6B1D,IAClE6D,GAAeC,KAAoBp2H,EAAAA,EAAAA,IAAS1G,QAAQ4sG,IAAgB5jD,IAErEy5D,GAAiBuW,OAAqDl5H,GAArCs6H,EAAAA,EAAAA,IAAkBv0H,EAAO,WACzDk3H,KAAwBr2H,EAAAA,EAAAA,IAAS1G,QAAQyiH,IAAiB5yD,EAAAA,GAA0B4yD,OACrF,UAAEj7G,GAAS,aAAEE,KAAiBE,EAAAA,EAAAA,GAClC66G,IACC97G,GACAqyH,OAAkDl5H,GAAlC2H,EAAAA,EAAAA,IAAe5B,EAAO,WAEnCinD,GAAgB9K,GAAgBx6C,IAC/B6yH,GAAeC,KAAmB94G,EAAAA,EAAAA,KAEnCsgC,IAAeC,EAAAA,EAAAA,IAAiBl8C,GAChCm3H,GAAWh9H,QAAQ8hD,IACnBu0D,GAAwBr2G,QAAQ81G,GAEhCmnB,GAAWnwE,IAAiB8vE,EAAkBhxH,QAE9CsxH,IAAgBC,EAAAA,EAAAA,GAAoBxxE,GAAU,GAAOsxE,IAErDG,GAAoBpE,OAAsDl5H,GAAtCs6H,EAAAA,EAAAA,IAAkBv0H,EAAO,YAC5Dw3H,KAAsB32H,EAAAA,EAAAA,IAAS1G,QAAQo9H,IAAoBvtE,EAAAA,GAA0ButE,MACtFE,GAAiBZ,EACjBz6E,IAAiBl7C,EAAAA,EAAAA,GAASq2H,IAAmBE,IAC7CC,GAAoBlD,KAAkB6C,GACtCM,IAAavE,EAAAA,EAAAA,IAAsC+D,IAAY/6E,MAAoBs7E,IAEnFp6E,GAAUnjD,SAASg9H,IAAY/6E,IAAkBo4E,IACjDj3E,IAAWkzD,EAAAA,EAAAA,GAAwBzwG,EAAOs9C,KAChD81E,EAAAA,EAAAA,IAAoB91E,GAAS,CAAEhhD,IAAKihD,KACpC,MAAM68C,IAAuBqW,EAAAA,EAAAA,GAAwBzwG,GAAQwwG,KAErD3uG,aAAcC,KAAqBC,EAAAA,EAAAA,GACxCoxH,OAAuDl5H,GAAvCs6H,EAAAA,EAAAA,IAAkBv0H,EAAO,aACzCtB,EACAy0H,OAAoDl5H,GAApC2H,EAAAA,EAAAA,IAAe5B,EAAO,cAGnC,YAAE0H,GAAW,eAAEC,GAAc,iBAAEC,KAAqBC,EAAAA,EAAAA,IACxDzJ,IAAmBM,EAAgBoD,GAAmBD,IACrDf,KAAe0zH,KAAkB0C,IAAyBx4H,OACxCzE,IAAnBmE,GAGIk1H,IAA2D,KAAzCt8F,EAAAA,EAAAA,GAAsB0kB,KAE5Cp/C,IAAKi3H,GACLh3H,aAAcuL,KACZi+G,EAAAA,EAAAA,GAAkB,CACpBtpH,OAAQkL,KAAmB0vH,GAC3BrR,kBAAmBsN,GACnBE,kBAAkB,KAGlBl3H,IAAKs7H,KACH7R,EAAAA,EAAAA,GAAkB,CACpBtpH,OAAQtC,SAASuhD,IAAiBuL,MAAmB+vE,KAAkBlvH,OAGlEpK,GAAcm6H,KAAmBh3H,EAAAA,EAAAA,IAAiB,GACnDs0H,IAAmBlzH,EAAAA,EAAAA,IAAiBuG,IACxCqvH,GAAgBj0H,KAAKgD,IAAI,EAAG4B,EAAEylE,cAAcxmB,YAAc,GAAG,IAGzD9kD,IAAYqmC,OAAO8uF,SAAShyE,EAAS//C,SAASpD,YAAc00H,GAC9DvxE,EAAS//C,SAASpD,SAAW3C,EAAM2C,WAAa,GAE9C,MACJwD,GAAK,OAAEC,IACLg1F,IACF+3B,GACI4E,EAAAA,EAAAA,IAAmC/3H,EAAO7F,QAAQ8I,GAAQ8jH,EAAamM,EAAa30H,EAAWkC,KAC/Fu3H,EAAAA,EAAAA,IAAyBh4H,EAAO7F,QAAQ8I,GAAQ8jH,EAAamM,EAAa30H,EAAWkC,KAGrFg8C,IAAcx6C,EAAAA,EAAAA,IAAgB,CAACuG,EAA8CyvH,KACjF,GAAIvwH,GACFpI,IAAiBulG,QAInB,GAAKsuB,IAAiBz0H,EAKtB,GAAKuoD,GAAL,CASA,GAJIA,KAAkB+vE,IACpBC,IAAiB,IAGf9zE,EAKJ,OAAI80E,GAAiBn3H,KAAe0zH,KAAkB0C,IACpDv7E,IAAiB,QACjBnzC,EAAEM,wBAIJhM,IAAU+nG,EAAWr8F,GAVnB46C,GAPF,MAFEzH,IAAkBg4E,IAAeA,SALjCn0H,EAAoB,CAAEW,MAAOH,GAwBR,IAGnBk4H,IAAuBj2H,EAAAA,EAAAA,IAC1BuG,IACCi0C,GAAYj0C,GAAG,EAAK,IAIlBqrH,IAAqBh3H,EAAAA,EAAAA,GACzB,oBACC6K,IAAe,cAChBtB,GAAS0tH,EAAAA,IAAoB,iBAC7Br5H,GAIIsD,GAAS,WAAUqI,QADDg1F,EAAc,WAAUj1F,eAAkBi1F,EAAWv0F,aAAau0F,EAAWt0F,OAAS,KAG9G,OACEnK,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACLpC,GAAIA,EACJO,UAAWo5H,GACX91H,MAAOA,GACPjB,QAAS4K,QAAczN,EAAauO,GAAMi0C,GAAYj0C,IAErDgoG,IACC7zG,EAAAA,GAAAC,cAAA,UAAQN,IAAK89F,GAAsB3/F,UAAU,yBAE9C28H,IACCz6H,EAAAA,GAAAC,cAACgrD,EAAAA,EAAc,CACbtrD,IAAKwpD,EACL7H,IAAKgJ,GACLxsD,WAAWoC,EAAAA,EAAAA,GAAe,aAAc2zG,IAAyB,mBACjE3oD,QAASmvE,IAAiBF,IAA6BO,GACvDjC,cAAY,EACZttE,OAAK,EACLE,MAAI,EACJC,aAAW,EACXF,yBAAuB,EACvB57C,WAAY02C,EACZyyE,aAAcH,GACdjtE,QAASusE,GACT12H,MAAOkyG,EAAe,UAASA,WAAkBh2G,IAGrD0C,EAAAA,GAAAC,cAAA,OACEN,IAAKq7H,GACL15E,IAAK7B,GACL3hD,WAAWoC,EAAAA,EAAAA,GAAe,YAAa2zG,IAAyB,mBAChE78F,IAAI,GACJ5V,MAAOkyG,EAAe,UAASA,YAAmBh2G,EAClDkS,WAAY02C,IAEbs0E,KAAaK,IACZ76H,EAAAA,GAAAC,cAAA,UAAQN,IAAKihD,GAAU9iD,UAAU,cAElCooD,GAAelmD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAChCkC,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACrO,IAAKs7H,GAAehtH,KAAK,eAC/BjO,EAAAA,GAAAC,cAAC4mD,EAAAA,EAAY,CACXC,UAAWN,EACX6wE,eAAa,EACb/3E,aAAcA,GACd91C,MAAOA,GACPC,OAAQA,GACR3L,UAAU,kBAEXqN,IACCnL,EAAAA,GAAAC,cAAA,OAAKN,IAAKi3H,GAAY94H,UAAU,iBAC9BkC,EAAAA,GAAAC,cAAC2O,EAAAA,EAAe,CACdvF,SAAU4B,GACV9K,QAASo7H,OAIbx8E,KAAkBuL,IAClBtqD,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,cAEZjD,IAAoB0vH,KAAiB34H,EAKpC/B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,2BACX04H,GAAiBnzH,EAAM0jD,MAAQ,OAAQl5C,EAAAA,EAAAA,IAAoB5G,KAAKgD,IAAIjE,GAAWjF,GAAc,IAC9F25H,IAAiB16H,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,iBAAiBnQ,UAAU,qBAN1DkC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,6BACZiN,IAAehJ,EAAkB,GAAEkF,KAAKxG,MAAyB,IAAnBwK,OAA6B,OAQhFzN,QAAQwoH,IACPhmH,EAAAA,GAAAC,cAAA,OACEnC,UAAU,8BACVsD,MAAQ,gBAAe6F,KAAKgB,MAAO+9G,EAAwBhgH,GAAY,UAGvE,C,0VCxTV,MC6DA,GAAevJ,EAAAA,EAAAA,KAxCW++H,EACxBxK,OACA9/D,gCACA5B,gCACAnvD,cAGA,MAAMs7H,GAAa73H,EAAAA,EAAAA,IAAuB,OACpC,SACJ83H,EAAQ,MAAEC,EAAK,QAAEC,IACfC,EAAAA,EAAAA,IAAkB7K,GAEhB8K,EAAmB,CAACJ,EAAUK,YAAaL,EAAUM,WAE3D,OACEh8H,EAAAA,GAAAC,cAAA,OACEnC,UDrCiB,WCsCjBqC,QAASA,GAETH,EAAAA,GAAAC,cAAA,OAAKnC,UDxC2C,YCyC9CkC,EAAAA,GAAAC,cAACg8H,EAAAA,EAAuB,CACtBn+H,UD1CoE,WC2CpEg+H,iBAAkBA,EAClBI,aAAcR,EAAUQ,aACxBC,YAAaP,EAAS3qF,WAG1BjxC,EAAAA,GAAAC,cAAA,OAAKN,IAAK87H,EAAY39H,UDhD8E,YCiDlGkC,EAAAA,GAAAC,cAAC+7D,EAAAA,EAAW,CACVC,aAAcw/D,EACdxqF,QAAS0qF,EAAO1qF,QAChB3wC,KAjCqB,IAkCrBgvD,8BAA+BA,EAC/B4B,8BAA+BA,KAG/B,IC2RV,GAAez0D,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KACjBC,IACQ,CACLi6B,uBAAuBC,EAAAA,EAAAA,KAA4Bl6B,MAHrCD,EA5QuBoxB,EACzCvsB,UACAK,YACAg8C,cACAwsD,cACAr8E,YACAq8F,cACAroH,iBAAgB,EAChBmkD,cACAg3C,cACA5rE,QACAhwB,QACAkyH,oBACAx1E,qBACAH,wBACAmoE,wBACAl6F,YACAolC,gCACA5B,gCACArR,eACAy1E,kBACA1lG,mBACAylG,cACAE,4BAEA,MAAM,QAAEyI,EAAO,iBAAEC,IAAqBn+H,EAAAA,EAAAA,MAChC2vB,GAAUmiC,EAAAA,EAAAA,IAAkBzuD,IAC5B,SAAEuC,IAAaC,EAAAA,EAAAA,MAEfu4H,GAAc14H,EAAAA,EAAAA,IAAuB,MAErC8d,IAAUtjB,EAAAA,EAAAA,KACVD,IAAOwjB,EAAAA,EAAAA,KAEPiqG,IAAmBtmH,EAAAA,EAAAA,IAAgB,KACvC24C,GAAe,IAGXs+E,IAAuBj3H,EAAAA,EAAAA,IAAiBuG,IAC5CmiB,IAAmBniB,EAAE,IAGjB2wH,IAAyBl3H,EAAAA,EAAAA,IAAgB,KACxCuoB,GAELwuG,EAAiB,CACfxvG,IAAKgB,EAAQhB,KACb,KAGIyE,MAAOrK,GAAS,SAAE6N,IAAajH,GAAW,CAAC,GAEnDssD,EAAAA,EAAAA,GAAelzD,IAAWkmB,OAAQlmB,IAAW1pB,GAAI+zB,GAEjD,MAAMmrG,GAAiB3nG,IAAU4nG,iBAAmB5nG,IAAU6nG,YAAY,IAAItwC,mBACxExB,IAAcC,EAAAA,EAAAA,GAAwBwxC,OAAah/H,GAAYm/H,IAE/DG,IAAgBn+H,EAAAA,EAAAA,KAAQ,KAC5B,MAAMqxC,EAAajiB,GAAShB,MAAOkjB,EAAAA,EAAAA,IAAiBliB,GAAShB,KAC7D,GAAKijB,GAAgB,cAAeA,EACpC,OAAOA,EAAW0O,SAAS,GAC1B,CAAC3wB,GAAShB,MAEb,IAAKgB,EACH,OAGF,MAAM,SACJsiC,GAAQ,IACRtjC,GAAG,WACH0jC,GAAU,MACV5jD,GAAK,YACLu6C,GAAW,MACXx5B,GAAK,MACLrqB,GAAK,MACLH,GAAK,KACLoX,GAAI,SACJnK,GAAQ,UACR0sH,IACEhvG,EACEivG,GAlHmB,mBAkHTxiH,GACVyiH,GAlHkB,iBAkHTziH,GAIT0iH,GAAsBjvG,GAHLuD,GAAS,cAAeA,OAGkDh0B,EC3J5F,SAAiCgd,GACtC,OAAQA,GACN,IAAK,2BACL,IAAK,6BACL,IAAK,wBACH,MAAO,wBACT,IAAK,mBACH,MAAO,oBACT,IAAK,eACH,MAAO,gBACT,IAAK,qBACH,MAAO,sBACT,IAAK,sBACH,MAAO,6BACT,IAAK,qBACL,IAAK,gBACH,MAAO,kBACT,IAAK,mBACH,MAAO,oBACT,IAAK,gBACH,MAAO,iBACT,IAAK,kBACH,MAAO,mBACT,IAAK,oBACH,MAAO,eACT,IAAK,iBACH,MAAO,kBACT,IAAK,yBACL,IAAK,uBACH,MAAO,kBACT,IAAK,sBACH,MAAO,uBACT,IAAK,oBACH,MAAO,qBACT,IAAK,eACH,MAAO,uBACT,QACE,OAEN,CDoH6D2iH,CADxCnoG,IAAUooG,QAAU,oBAAsB5iH,IAEvD6iH,GAAmBH,IAAsB7+H,GAAK6+H,IAE9CxsE,IAAuBC,EAAAA,EAAAA,GAASvJ,GA3HhB,KA4HhBk2E,GAAY5/H,QAAQgzD,IAAwB7jD,IAASwjD,IAC3D,IAAIktE,GAAgB7/H,QAAQs3B,IAC5B,GAAIsoG,IAAavvG,GAASH,QAAUG,EAAQxqB,QAAUwqB,EAAQ1d,SAAU,CACtE,MAAM,MAAE3G,EAAK,OAAEC,IAAWy1F,EAAAA,EAAAA,IAAyB,CACjD17F,MAAOqqB,EAAQH,MACfpnB,MAAO/E,EAAQuhE,WACfyzD,aAAa,EACbnM,cACAxoH,YACAkC,aAEFu5H,IAAiB7zH,IAAUC,GAAwB,UAAdozH,KAAwC,UAAdA,EACjE,CACA,MAAMS,IAAsB5vG,IAASrqB,KAAU46C,IAAiBo/E,GAE1Dv/H,IAAYoC,EAAAA,EAAAA,GAChB,UACA6tB,GAAa,cACZjC,GAAaiC,GAAa,cAC3BsvG,IAAiB,qBAChB3vG,KAAUrqB,KAAU0qB,GAAa,gBAClC1qB,IAAS,cACR+5H,IAAa,aACdjtH,IAAY,gBACZgtH,IAAoB,oBACpBJ,IAAU,aAkBZ,OACE/8H,EAAAA,GAAAC,cAACsyD,EAAAA,EAAgB,CACfz0D,UAAWA,GACX,gBAAeqyD,IAAYI,IAAY,GACvC9iD,IAAKiU,GAAQ7d,MAAQ,MAAQ,OAC7B1D,QAASo8H,IAETv8H,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GACd,mBACA48H,IAAW,WACXC,IAAU,YAGTvJ,GACCxzH,EAAAA,GAAAC,cAACs9H,EAAAA,EAAmB,CAClBC,gBAAiBhK,EACjB11H,UAAU,8BAGbg/H,IACC98H,EAAAA,GAAAC,cAACqgH,EAAAA,EAAS,CAAChvF,MAAOA,EAAO40B,YAAaA,EAAag3C,YAAaA,EAAat7B,WAAS,IAEvFm7D,KAAWhvG,GACV/tB,EAAAA,GAAAC,cAACu7H,EAAiB,CAChBxK,KAAMnjG,EAAQmjG,KACd9/D,8BAA+BA,EAC/B5B,8BAA+BA,EAC/BnvD,QAASq8H,KAGZY,IACCp9H,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,gBAAiB6tB,GAAa,4BACxD5tB,QAAU4tB,OAA4DzwB,EAAhD,IAAM8+H,EAAQ,CAAEvvG,OAAK4wG,iBAAiB,KAE5Dz9H,EAAAA,GAAAC,cAAC0wD,EAAAA,EAAQ,CAAC7yD,UAAU,YAAY+uB,IAAKA,GAAKjV,KAAMu4C,IAAYI,OACzDxiC,GAAagvG,KAAWpwH,IACzB3M,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,eAAc4P,EAAAA,EAAAA,GAAWf,KAEvC6jD,KAAyBusE,IACxB/8H,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,qBAAoB4P,EAAAA,EAAAA,GAAW8iD,GAAsB,CAAC,QAAS,SAIjF9iC,KAAUqvG,KAAW15H,KAAU8M,IAC9BnQ,EAAAA,GAAAC,cAAC0oG,EAAAA,EAAK,CACJj7E,MAAOA,GACPpnB,MAAO/E,EAAQuhE,WACfyzD,aAAW,EACX74E,oBAAqBwT,EACrBtvD,UAAWA,EACXg8C,YAAaA,EACbt9C,KAAM+8H,GAAgB,YAAc,SACpCjT,YAAaA,EACb97G,gBAAiBgvH,GACjBv7H,cAAeA,EACfmkD,YAAaA,EACb5kD,MAAOA,EACPnB,QAASm9H,GAAqB1R,QAAmBtuH,EACjDqF,eAAgBgxH,KAGlB5lG,GAAa1qB,IACbrD,EAAAA,GAAAC,cAAC4oG,EAAAA,EAAK,CACJxlG,MAAOA,GACPiD,MAAO/E,EAAQuhE,WACfyzD,aAAW,EACXrlE,8BAA+BA,EAC/BtvD,UAAWA,EACXg8C,YAAaA,EACbwsD,YAAaA,EACbggB,YAAaA,EACbroH,cAAeA,EACfmkD,YAAaA,EACb8/D,sBAAuBA,GAAyB4W,GAChDz8H,QAASm9H,GAAqB1R,QAAmBtuH,EACjDqF,eAAgBgxH,KAGlB5lG,GAAa7qB,IACblD,EAAAA,GAAAC,cAACoB,EAAAA,GAAK,CACJC,MAAOA,EACPC,QAASA,EACTG,OAAQmD,EAAAA,GAAYqI,OACpBtL,UAAWA,EACXG,cAAeA,EACfS,OAAQixH,EACR9wH,eAAgBgxH,KAGlB5lG,GAAa5d,IACbnQ,EAAAA,GAAAC,cAACw9C,EAAAA,EAAQ,CACPttC,SAAUA,GACV5O,QAASA,EACTm8C,oBAAqBwT,EACrBrT,sBAAuBA,EACvBI,aAAcy1E,EACd/wH,eAAgBgxH,EAChB5xH,cAAeA,EACfi8C,mBAAoBA,KAGtBjwB,GAAa+G,IACb90B,EAAAA,GAAAC,cAAA,OACEN,IAAK28H,EACLx+H,WAAWoC,EAAAA,EAAAA,GACT,cAAe,eAAgB40B,GAASooG,SAAW,sBAAuB,sBAG3EpoG,GAAS6nG,UAAUx9H,KAAK8xC,GACvBjxC,EAAAA,GAAAC,cAAA,OAAK65C,IAAK7I,EAAQ1zC,GAAIO,UAAU,oBAC9BkC,EAAAA,GAAAC,cAAC+7D,EAAAA,EAAW,CACVC,aAAcqgE,EACdrrF,QAASA,EACTkrB,YAAU,EACV77D,KAAMw0B,GAASooG,QAtRd,GADE,GAwRHryC,YAAaA,GACbv7B,8BAA+BA,EAC/B4B,8BAA+BA,QAMxCnjC,GAAawiC,KAAe6sE,IAC3Bp9H,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACbkC,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,aAAayyD,IAC1BvwD,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,oBAAoB4jB,GAAQ,6BAI9Cy7G,KAlJsBO,GAkJgBP,GAhJvCn9H,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL1C,UAAU,wBACVwC,KAAK,OACL6N,MAAM,cACNwvH,eAAa,EACbC,mBAAiB,EACjBz9H,QAASq8H,IAERkB,MAVP,IAA2BA,EAmJN,I,kDE7UvB,MAAMG,EAA2B,CAC/BC,KAAM,CACJC,SAAU,mBACVC,SAAU,iBAEZC,MAAO,CACLF,SAAU,mBACVC,SAAU,qBAIC,SAAS9pB,EACtB5yD,EAAah7C,EAAgB/I,EAAYuE,EAAsBR,GAE/D,OAAIQ,EACKoW,QAAQwE,QAAQmhH,EAAyBv8H,GAAS,SAASgF,EAAQ,WAAa,cAGlF43H,EAAAA,EAAAA,IAAmB,CACxBjwH,KAAM,6CACNmiC,KAAM,CAACkR,EAAKh7C,IACXW,KAAKxG,MAAMlD,GAAM4gI,EAAAA,GACtB,C,8ECjBA,MAAMC,EAAwB,GACxBC,EAA8B,GACvB3L,EAA4B,GAAKlxE,EAAAA,EACxC88E,EAAkBF,EAAwB58E,EAAAA,EACnC21E,EAAmB,EAAI31E,EAAAA,EAE7B,SAASmxE,EAAiB/6G,EAAes4G,GAC9C,OAAQt4G,GAAMxX,QAAU,GAAKi+H,GAA+BnO,EACxDwC,EACA4L,CACN,CAEO,SAASp/B,GAAyB,MACvC17F,EAAK,YACLqwH,EAAW,MACXvtH,EAAK,YACLiwH,EAAW,YACXnM,EAAW,UACXxoH,EAAS,SACTkC,IAUA,MAAMy6H,EAA8B,UAApB/6H,EAAM+mG,UAChB5gD,EAA8B,UAApBnmD,EAAM+mG,UAChBi0B,EAAiBD,GAAWhI,EAC5BkI,EAAiB90E,GAAW4sE,GAC5B,MAAE/sH,EAAK,OAAEC,GAAW80H,GACtBG,EAAAA,EAAAA,IAA+Bl7H,EAAO8C,EAAO8jH,EAAaoU,EAAgB58H,EAAWkC,GACrF6lD,GAAU0xE,EAAAA,EAAAA,IAAyB73H,EAAO8C,EAAO8jH,EAAaqU,EAAgB78H,EAAWkC,IACvFs3H,EAAAA,EAAAA,IAAmC53H,EAAO8C,EAAO8jH,EAAamM,EAAa30H,EAAWkC,GAEtF66H,EAAgBhM,EAAiBkB,GAEvC,IAAI+K,EAAgB,EAChBp1H,EAAQm1H,GAAiBA,EAAgBn1H,EAAQ40H,IACnDQ,EAAgBD,EAAgBn1H,GAE9BC,EAASm1H,EAAgBzH,GAAoBA,EAAmB1tH,EAASm1H,EAAgBR,IAC3FQ,EAAgBzH,EAAmB1tH,GAGrC,MAAMo1H,EAAa53H,KAAKxG,MAAM+I,EAAQo1H,GAChCE,EAAc73H,KAAKxG,MAAMgJ,EAASm1H,GAExC,MAAO,CACLp1H,MAAOq1H,EACPp1H,OAAQq1H,EACR7H,QAAS4H,EAAaF,GAAiBG,EAAc3H,EAEzD,C,oHCzDA,MAAM4H,EAAe,GAErB,IAAIC,GAAmB,ECAR,SAASlrB,EACtBtwG,EACAugB,GAIA,ODJa,SACbk7G,EACAl7G,GAAa,GAGb,MAAMpd,GAAY/C,EAAAA,EAAAA,IAA0B,MACtCs7H,GAAczgI,EAAAA,EAAAA,KAAQ,KAAM0gI,EAAAA,EAAAA,GAAchB,EAAAA,KAAea,IAAkB,IAC3EI,GAAex7H,EAAAA,EAAAA,MAEfy7H,GAAY/5H,EAAAA,EAAAA,IAAgBkP,MAAOrL,EAA2Bm2H,KAClE,MAAMC,QAAc1sC,EAAAA,EAAAA,IAAaysC,GAC5BC,IAILt8F,EAAAA,EAAAA,KAAgB,KACd95B,EAAOK,MAAQ+1H,EAAM/1H,MACrBL,EAAOM,OAAS81H,EAAM91H,OAEtB21H,EAAah2H,QAAUD,EAAOq2H,6BAE9B,MAAMp1H,EAASnD,KAAKw4H,KAAKx4H,KAAKC,IAAIq4H,EAAM/1H,MAAO+1H,EAAM91H,QAAUs1H,IAE/Db,EAAAA,EAAAA,IAAmB,CACjBjwH,KAAM,6BACNmiC,KAAM,CAACgvF,EAAah2H,QAASk2H,EAAKl1H,GAClCs1H,cAAe,CAACN,EAAah2H,UAC5B81H,EAAY,GACf,IAYJ,OATAh2H,EAAAA,EAAAA,KAAgB,KACd,IAAK+1H,GAAal7G,GAAcq7G,EAAah2H,QAAS,OAEtD,MAAMD,EAASxC,EAAUyC,QACpBD,GAELk2H,EAAUl2H,EAAQ81H,EAAU,GAC3B,CAACI,EAAWt7G,EAAYk7G,IAEpBt4H,CACT,CCrCSg5H,CAFSn8H,EAAyB,iBAAVA,EAAqBA,GAAQ+7C,EAAAA,EAAAA,IAAiB/7C,QAASlG,EAE/CymB,EACzC,C,wECVA,MAEM67G,EAAuB,IAAI10C,IAElB,SAASj5B,EACtBjB,EACAp0D,EACA6P,EACAozH,GAEA,MAAMC,EAAqBD,GAAyBpzH,EAChDukD,GAAkB+uE,WAAWF,KAAyBpzH,QAAanP,GAEjE,UAAEwpH,EAAS,KAAElvG,GAASkoH,GAAsB,CAAC,EAUnD,OARAzgI,EAAAA,EAAAA,KAAU,KACHzC,GAAW6P,IAEXmL,QAAsBta,IAAdwpH,GAA2B+Y,GA0C5C,SACEjjI,EACA6P,EACAk2E,GAEA,MAAMq9C,EAAuBJ,EAAqBplG,IAAImoD,IAAmB,IAAIuI,IACvEvmE,EAAaq7G,EAAqBxlG,IAAI59B,IAAW,GAEnD+nB,EAAWlD,SAAShV,KAKxBkY,EAAWrX,KAAKb,GAChBuzH,EAAqB5yC,IAAIxwF,EAAQ+nB,GACjCi7G,EAAqBxyC,IAAIzK,EAAgBq9C,IAEzC9hI,EAAAA,EAAAA,MAAa+hI,+BAA+B,CAAErjI,SAAQ+nB,aAAYg+D,oBARhEu9C,GAWJ,CA7DMC,CAAsBvjI,EAAQ6P,EAAWozH,EAC3C,GACC,CAACjjI,EAAQgb,EAAMkvG,EAAWr6G,EAAWozH,IAEnCjjI,GAAW6P,EAOT,CACLq6G,YACA90D,eAAgBp6C,GART,CACLkvG,WAAW,EACX90D,oBAAgB10D,EAQtB,CAEA,MAAM4iI,GAA0Bh8B,EAAAA,EAAAA,KAEhC,WACE,MAAM,kBAAEk8B,IAAsBliI,EAAAA,EAAAA,MAC9B,IAAImiI,GAAiB,EACrBT,EAAqB/1H,SAAQ,CAAC9K,EAAO4jF,KACnC5jF,EAAM8K,SAAQ,CAAC8a,EAAY/nB,KACzB,MAAM0jI,EAAwB37G,EAAWzlB,MAAM,EA3CnB,IA6CxBohI,EAAsBlgI,OAASukB,EAAWvkB,SAC5CigI,GAAiB,GAGnBD,EAAkB,CAAExjI,SAAQ+nB,WAAY27G,EAAuB39C,mBAiCrE,SACE/lF,EACA+nB,EACAg+D,GAEA,MAAMq9C,EAAuBJ,EAAqBplG,IAAImoD,GACtD,IAAKq9C,GAAsB1/H,KAEzB,YADAs/H,EAAqBv0C,OAAO1I,GAI9B,MAAM49C,EAAgBP,EAAqBxlG,IAAI59B,GAC/C,IAAK2jI,GAAengI,OAElB,YADA4/H,EAAqB30C,OAAOzuF,GAI9B,MAAM4jI,EAAgBD,EAAcnhI,QAAQ7B,IAAQonB,EAAWlD,SAASlkB,KAExE,IAAKijI,GAAepgI,OAKlB,OAJA4/H,EAAqB30C,OAAOzuF,QACvBojI,EAAqB1/H,MACxBs/H,EAAqBv0C,OAAO1I,IAKhCq9C,EAAqB5yC,IAAIxwF,EAAQ4jI,EACnC,CA3DMC,CAA0B7jI,EAAQ0jI,EAAuB39C,EAAe,GACxE,IAGA09C,GACFH,GAEJ,GAzDuB,I,mFCAvB,MAAMQ,EAAWl/E,EAAAA,EAEF,SAASm+D,GAAmB,UACzCC,EAAS,WACTC,EAAU,WACVZ,EAAU,mBACVoX,EAAkB,WAClBtyG,EAAU,GACVxmB,IASA,MAAMqrF,GAAiBtjF,EAAAA,EAAAA,IAAgB,KACrC,MAAM4sC,EAAU2tE,EAAWz2G,QACrBwI,EAASguG,EAAUx2G,QACzB,IAAK8oC,IAAYtgC,EACf,OAGF,MAAM+uH,EAAa/uH,EAAO7F,wBACpB60H,EAAc1uF,EAAQnmC,wBACtBuuB,EAAc35B,OAAO07E,YAE3Bp5C,EAAAA,EAAAA,KAAgB,KACd,MAAM49F,EAAgBF,EAAW1uF,IAAM0uF,EAAWl3H,OAAS,EACrDq3H,EAAgBH,EAAWx+C,OAC3Bh4E,EAAIksH,EAAqByK,EAAgBD,EAC/C3uF,EAAQ9wC,MAAM6wC,IAAS9nC,EAAIy2H,EAAYn3H,OAAS,EAA3B,KAEjBw1G,EACF/sE,EAAQ9wC,MAAM0K,KAAU60H,EAAW70H,KAAO40H,EAApB,KAEtBxuF,EAAQ9wC,MAAM8gF,MAAW5nD,EAAcqmG,EAAWz+C,MAAQw+C,EAAnC,IACzB,GACA,IAqBJ,OAlBArhI,EAAAA,EAAAA,KAAU,KACJ0kB,GACJ6kE,GAAgB,GACf,CAAC7kE,EAAYxmB,KAEhB8B,EAAAA,EAAAA,KAAU,KACR,GAAI0kB,EAAY,OAEhB,MAAMg9G,EAAoBnhB,EAAUx2G,QAASwL,QAAwB,gBACrE,OAAKmsH,GAELA,EAAkB1sH,iBAAiB,SAAUu0E,EAAgB,CAAExV,SAAS,IAEjE,KACL2tD,EAAkBxsH,oBAAoB,SAAUq0E,EAAe,QALjE,CAMC,GACA,CAAC7kE,EAAY67F,IAETh3B,CACT,C,iHC5CA,MAiCA,GAAensF,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUsgD,aACT,MAAMpgD,GAAOmkI,EAAAA,EAAAA,KAAkBrkI,GACzB++C,EAAOuB,IAAUntB,EAAAA,EAAAA,KAAWnzB,EAAQsgD,GAG1C,MAAO,CACLpgD,OACAm/C,YAJkBN,GAAOO,EAAAA,EAAAA,IAAuBP,QAAQp+C,EAKzD,GATeZ,EAjCiCukI,EACnDnhI,SACAjD,OACAogD,SACAjB,cACA35B,cAEA,MAAM,iBAAE6+G,IAAqBhjI,EAAAA,EAAAA,MAEvBC,GAAOC,EAAAA,EAAAA,KAEP+iI,GAAyB7iI,EAAAA,EAAAA,KAAY,KACzC4iI,EAAiB,CAAEtkI,OAAQC,EAAMU,GAAI0/C,OAAQA,IAC7C56B,GAAS,GACR,CAACxlB,EAAMqkI,EAAkB7+G,EAAS46B,IAErC,GAAKpgD,GAASogD,EAId,OACEj9C,EAAAA,GAAAC,cAACkgD,EAAAA,EAAa,CACZrgD,OAAQA,EACRuiB,QAASA,EACT1V,MAAOxO,EAAK,uBACZijI,WAAW1zH,EAAAA,EAAAA,GAAWvP,EAAK,8BAA+B69C,IAC1DyL,aAActpD,EAAK,kBACnBo9C,eAAgB4lF,EAChB7qD,sBAAoB,GACpB,I,wECjDS,SAASu2B,EAAmCw0B,EAAiBC,GAC1E,MAAMv9G,OAAuBzmB,IAAVgkI,EACbjqD,GAAkBzzE,EAAAA,EAAAA,IAAOmgB,GACzBw9G,GAAa39H,EAAAA,EAAAA,MACbgzD,GAAcC,EAAAA,EAAAA,KAkCpB,OAhCA5pC,EAAAA,EAAAA,IAAc,KACRlJ,IAIJszD,EAAgBjuE,SAAU,EAEtBm4H,EAAWn4H,UACb2+E,aAAaw5C,EAAWn4H,SACxBm4H,EAAWn4H,aAAU9L,GACvB,GAEC+jI,IAEHhiI,EAAAA,EAAAA,KAAU,KACR,GAAI0kB,GAAcszD,EAAgBjuE,QAChC,OAGF,MAAMolF,EAAOA,KACXnX,EAAgBjuE,SAAU,EAC1BwtD,GAAa,EAGX0qE,EAAS,EACXC,EAAWn4H,QAAUzI,OAAOsc,WAAWuxE,EAAM8yC,GAE7C9yC,GACF,GAEC6yC,GAEIhqD,EAAgBjuE,OACzB,C,oHC3CA,QAA6H,WAA7H,EAAuJ,WAAvJ,EAA+K,WC4BzKo4H,EAAqC,CACzC,CACE,CAAEvzH,KAAM,YAAatB,MAAO,mCAC5B,CAAEsB,KAAM,uBAAwBtB,MAAO,6CAA8C80H,cAAc,IAErG,CACE,CAAExzH,KAAM,eAAgBtB,MAAO,sCAC/B,CAAEsB,KAAM,gBAAiBtB,MAAO,wCAElC,CACE,CAAEsB,KAAM,gBAAiBtB,MAAO,uCAChC,CAAEsB,KAAM,iBAAkBtB,MAAO,yCAEnC,CACE,CAAEsB,KAAM,mBAAoBtB,MAAO,0CACnC,CAAEsB,KAAM,oBAAqBtB,MAAO,6CAIlC+0H,EAAmC,CACvC,CACE,CAAEzzH,KAAM,UAAWtB,MAAO,sBAC1B,CAAEsB,KAAM,WAAYtB,MAAO,wBAE7B,CACE,CAAEsB,KAAM,UAAWtB,MAAO,sBAC1B,CAAEsB,KAAM,UAAWtB,MAAO,wBAIxBg1H,EAAqC,CACzC,CACE,CAAE1zH,KAAM,aAActB,MAAO,sBAAuBi1H,SAAS,GAC7D,CAAE3zH,KAAM,iBAAkBtB,MAAO,6BAA8Bi1H,SAAS,IAE1E,CACE,CAAE3zH,KAAM,iBAAkBtB,MAAO,mCAAoCi1H,SAAS,GAC9E,CACE3zH,KAAM,gBAAiBtB,MAAO,8BAA+Bi1H,SAAS,EAAMC,eAAe,KAK3FC,EAAmC,CACvC,CACE,CAAE7zH,KAAM,aAActB,MAAO,+BAAgCi1H,SAAS,GACtE,CAAE3zH,KAAM,iBAAkBtB,MAAO,eAAgBi1H,SAAS,IAE5D,CACE,CAAE3zH,KAAM,iBAAkBtB,MAAO,mCAAoCi1H,SAAS,GAC9E,CAAE3zH,KAAM,gBAAiBtB,MAAO,gBAAiBi1H,SAAS,KAIxDG,EAAmC,CACvC,CACE,CAAE9zH,KAAM,QAAStB,MAAO,qBAAsBi1H,SAAS,GACvD,CACE3zH,KAAM,qBACNtB,MAAO,kCACP80H,cAAc,EACdI,eAAe,EACfG,mBAAmB,IAGvB,CACE,CAAE/zH,KAAM,SAAUtB,MAAO,8BAA+Bi1H,SAAS,GACjE,CAAE3zH,KAAM,kBAAmBtB,MAAO,+BAAgCi1H,SAAS,KAyK/E,GAAenlI,EAAAA,EAAAA,KArJ0BwlI,EACvCt1H,QACA2N,OACA4nH,aACAC,YACArkI,YACAsjD,eAEA,MAAM1/B,GAAUtjB,EAAAA,EAAAA,KACVD,GAAOwjB,EAAAA,EAAAA,KAwBPygH,EAAoBA,CAAC9uG,EAAiB+uG,EAAiBzqH,KAC3D,MAAO0qH,EAAgBC,GAAkBjvG,EAAQunF,QAAQ,GAAG//C,MAAM,MAC3D0nE,EAAgBC,IAAmBnvG,EAAU+uG,GAASxnB,QAAQ,GAAG//C,MAAM,KAC9E,OACE96D,EAAAA,GAAAC,cAAA,WACED,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAAClQ,UDzJqT,WCyJ1RmQ,KAAK,YACtCjO,EAAAA,GAAAC,cAAA,KAAGnC,UAAWiwD,GACXu0E,EAAetiI,EAAAA,GAAAC,cAAA,QAAMnC,UD3JkP,YC2JnN,IAAEykI,IAExD,IACDviI,EAAAA,GAAAC,cAAA,QAAMnC,UAAWiwD,GAAqB,MAChCy0E,EAAexiI,EAAAA,GAAAC,cAAA,QAAMnC,UD/J2Q,YC+JzO,IAAE2kI,IAE/DziI,EAAAA,GAAAC,cAAA,MAAInC,UAAWiwD,GAAsBrsC,EAAQ9J,IACzC,GAIJ,OAAEm+F,GAAYmsB,GACd,SAAEQ,EAAQ,QAAEL,GAAaH,EAEzBS,EA+ER,SAAyBroH,GACvB,OAAQA,GACN,IAAK,QACH,OAAOonH,EACT,IAAK,UACH,OAAOC,EACT,IAAK,QACH,OAAOI,EACT,IAAK,QACH,OAAOD,EAET,QACE,OAAON,EAEb,CA7FiBoB,CAAgBtoH,GAE/B,OACEta,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GD5KG,WC4KyBpC,IAC1CkC,EAAAA,GAAAC,cAAA,OAAKnC,UD7KgC,YC8KlC6O,GACC3M,EAAAA,GAAAC,cAAA,OAAKnC,UD/K+C,YCgLjD6O,GAIJopG,GACC/1G,EAAAA,GAAAC,cAAA,OAAKnC,UDrLoE,aCsLtE+kI,EAAAA,EAAAA,IAAenhH,EAA0B,IAAjBq0F,EAAO+sB,SAAgB,OAAID,EAAAA,EAAAA,IAAenhH,EAA0B,IAAjBq0F,EAAOgtB,WAKzF/iI,EAAAA,GAAAC,cAAA,SAAOnC,UD3LyF,YC4L7FqkI,EACCniI,EAAAA,GAAAC,cAAA,UACED,EAAAA,GAAAC,cAAA,MAAInC,UAAWiwD,GACZq0E,EAAkBM,GAAUM,kBAAoB,EAAGX,GAAW,EAAG,8BACjED,EAAkBM,GAAUO,gBAAkB,EAAGZ,GAAW,EAAG,2BAC/DD,EAAkBM,GAAUQ,gBAAkB,EAAGb,GAAW,EAAG,4BAGlEM,EAAOxjI,KAAKukB,GACd1jB,EAAAA,GAAAC,cAAA,UACGyjB,EAAIvkB,KAAKgkI,IACR,MAAMC,EAASlB,EAAmBiB,EAAKl1H,MAEvC,OAAIk1H,EAAKvB,QAEL5hI,EAAAA,GAAAC,cAAA,MAAInC,UAAWiwD,GACb/tD,EAAAA,GAAAC,cAAA,KAAGnC,UAAWiwD,GACV,GAAEo1E,EAAKtB,cAAgB,IAAM,MAAKwB,EAAAA,EAAAA,IAAcD,MAEpDpjI,EAAAA,GAAAC,cAAA,MAAInC,UAAWiwD,GAAsBrsC,EAAQyhH,EAAKx2H,SAKpDw2H,EAAK1B,aAELzhI,EAAAA,GAAAC,cAAA,MAAInC,UAAWiwD,GACZo1E,EAAKnB,mBACJhiI,EAAAA,GAAAC,cAAA,QAAMnC,UAAWiwD,GACb,GAAEo1E,EAAKtB,cAAgB,IAAM,MAAKwB,EAAAA,EAAAA,IAAcD,EAAME,SAG5DtjI,EAAAA,GAAAC,cAAA,QAAMnC,UAAWqlI,EAAKnB,kBD5NsK,WC4NrHj0E,GACpEq1E,EAAMG,WAAW,KAEpBvjI,EAAAA,GAAAC,cAAA,MAAInC,UAAWiwD,GAAsBrsC,EAAQyhH,EAAKx2H,SAMtD3M,EAAAA,GAAAC,cAAA,MAAInC,UAAWiwD,GACb/tD,EAAAA,GAAAC,cAAA,KAAGnC,UAAWiwD,IACX2b,EAAAA,EAAAA,IAAqBvrE,EAAMilI,EAAMh6H,UAEnC,IA3Geo6H,GAAGC,SAAQF,iBACzC,IAAKE,EACH,OAGF,MAAMC,EAAmBr3F,OAAOo3F,GAAU,EAE1C,OACEzjI,EAAAA,GAAAC,cAAA,QAAMnC,WAAWoC,EAAAA,EAAAA,GDtI4M,WCsI/KwjI,GDtIqM,aCuIhPA,EACI,KAAGh6D,EAAAA,EAAAA,IAAqBvrE,EAAM8I,KAAK+yE,IAAIypD,MACvC,KAAG/5D,EAAAA,EAAAA,IAAqBvrE,EAAMslI,KAClCF,GACCvjI,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACG,IAAI,IACHm0H,EAAW,MAGZ,EA0FMC,CAAwBJ,GACzBpjI,EAAAA,GAAAC,cAAA,MAAInC,UAAWiwD,GAAsBrsC,EAAQyhH,EAAKx2H,QAC/C,QAOdy0C,EACG,G,iOCtFV,SAAe3kD,EAAAA,EAAAA,KApIf,UAA2B,KAAEyzB,EAAI,WAAEu+C,IACjC,MAAM,SACJ7J,EAAQ,iBACR8R,EAAgB,gBAChBymB,EAAe,oBACfwmC,IACEzlI,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPuB,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7BkkD,EAAS,WAAY53B,GAAQA,EAAK43B,OAClC3zB,IAAa3F,EAAAA,EAAAA,IAAS0B,EAAK3yB,KAEjCqmI,EAAAA,EAAAA,GAAkB1zG,EAAK3yB,IAEvB,MAAM,kBACJorB,EAAiB,kBAAEC,EAAiB,wBACpCokB,EAAuB,kBAAEnkB,EAAiB,uBAC1CC,EAAsB,sBAAEC,IACtBC,EAAAA,EAAAA,GAAuBrpB,GAErBiqB,GAAoBtkB,EAAAA,EAAAA,IAAgB,IAAM3F,EAAIyJ,UAC9CygB,GAAiBvkB,EAAAA,EAAAA,IAAgB,IAAM6K,SAASG,OAChDwZ,GAAiBxkB,EAAAA,EAAAA,IAAgB,IAAM3F,EAAIyJ,QAAS2gB,cAAc,sCAClEioE,GAAY1sF,EAAAA,EAAAA,IAAgB,KAAM,CAAG6gF,YAAY,EAAM09C,SAAS,MAEhE/jF,GAAcx6C,EAAAA,EAAAA,IAAgB,KAC9BqjB,GAEJw0E,EAAgB,CAAEhwD,OAAQjd,EAAK3yB,GAAImE,OAAQsmE,EAAAA,GAAkB87D,aAAc,IAGvEzxE,GAAkB/sD,EAAAA,EAAAA,IAAiBuG,KACvCk4H,EAAAA,EAAAA,GAAoCl4H,GACpCmhC,EAAwBnhC,EAAE,IAGtBm4H,GAAqB1+H,EAAAA,EAAAA,IAAgB,KACzCoxE,EAAiB,CAAEn5E,GAAI2yB,EAAK3yB,GAAI2uC,sBAAsB,EAAM+3F,WAAY,WAAY,IAGhFC,GAAwB5+H,EAAAA,EAAAA,IAAgB,KAC5CoxE,EAAiB,CAAEn5E,GAAI2yB,EAAK3yB,GAAI2uC,sBAAsB,EAAM+3F,WAAY,kBAAmB,IAGvFn2B,GAAiBxoG,EAAAA,EAAAA,IAAgB,KACrCs/D,EAAS,CAAErnE,GAAI2yB,EAAK3yB,GAAI2uC,sBAAsB,GAAO,IAGjDi4F,GAAoB7+H,EAAAA,EAAAA,IAAgB,KACxCoxE,EAAiB,CAAEn5E,GAAI2yB,EAAK3yB,GAAI2uC,sBAAsB,GAAO,IAGzDk4F,GAAoB9+H,EAAAA,EAAAA,IAAgB,KACxCq+H,EAAoB,CAAEx2F,OAAQjd,EAAK3yB,GAAI+tE,UAAWmD,GAAa,IAGjE,OACEzuE,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACLqrD,KAAK,SACL,eAAc96B,EAAK3yB,GACnBu7D,SAAU,EACVh7D,UAAWiwD,EAAAA,EAAO79B,KAClB+pB,YAAaoY,EACblyD,QAAS2/C,EACTr1B,cAAe5B,GAEf7oB,EAAAA,GAAAC,cAACq4C,EAAAA,EAAM,CACLpoB,KAAMA,EACN2yB,WAAS,EACTC,kBAAmBklB,EAAAA,GAAkB87D,YACrC5/E,gBAAgB,SAElBlkD,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe6tD,EAAAA,EAAO9/C,KAAMiiB,EAAKm0G,kBAAoBt2E,EAAAA,EAAOu2E,sBACzEx8E,EAAS3pD,EAAK,YAAak9C,EAAAA,EAAAA,IAAal9C,EAAM+xB,SAE1B5yB,IAAtBsrB,GACC5oB,EAAAA,GAAAC,cAACgiB,EAAAA,EAAI,CACHniB,OAAQ6oB,EACR/W,OAAQgX,EACRgB,kBAAmBA,EACnBC,eAAgBA,EAChBC,eAAgBA,EAChBkoE,UAAWA,EACXl0F,WAAWoC,EAAAA,EAAAA,GAAe,0BAA2B6tD,EAAAA,EAAOw2E,aAC5DriH,WAAS,EACTikE,YAAU,EACV9jE,QAASyG,EACTxG,oBAAqByG,GAEpB++B,EACC9nD,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAC2iB,EAAAA,EAAQ,CAACziB,QAAS6jI,EAAoBnhH,KAAK,cACzC1kB,EAAK,mCAER6B,EAAAA,GAAAC,cAAC2iB,EAAAA,EAAQ,CAACziB,QAAS+jI,EAAuBrhH,KAAK,WAC5C1kB,EAAK,uCAIV6B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,MACI+kB,GACAn0B,EAAAA,GAAAC,cAAC2iB,EAAAA,EAAQ,CAACziB,QAAS2tG,EAAgBjrF,KAAK,WACrC1kB,EAAK,qBAGTg2B,EACCn0B,EAAAA,GAAAC,cAAC2iB,EAAAA,EAAQ,CAACziB,QAASgkI,EAAmBthH,KAAK,WACxC1kB,EAAK,gCAGR6B,EAAAA,GAAAC,cAAC2iB,EAAAA,EAAQ,CAACziB,QAASgkI,EAAmBthH,KAAK,QACxC1kB,EAAK,kCAGV6B,EAAAA,GAAAC,cAAC2iB,EAAAA,EAAQ,CACPziB,QAASikI,EACTvhH,KAAM4rD,EAAa,YAAc,WAEhCtwE,EAAKswE,EAAa,8BAAgC,gCAQnE,IClFA,GAAehyE,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAU8xE,iBACT,MAAQ+1D,gBAAgB,OAAEC,EAAM,SAAEC,IAAe/nI,EAAOq6B,QAIxD,MAAO,CACLwtG,eAAgB/1D,EAAai2D,EAAWD,EACxC/lI,UALgB/B,EAAOiC,MAAMC,KAM7BC,UALgBnC,EAAOoC,MAAMF,KAM9B,GAVenC,EAhDpB,UAAqB,WACnB+xE,EAAU,UACV3wE,EAAS,eACT0mI,EAAc,UACd9lI,EAAS,UACTI,EAAS,UACT6lI,IAEA,MAAMxmI,GAAOC,EAAAA,EAAAA,KACP6O,GAAgB/M,EAAAA,EAAAA,GACpB6tD,EAAAA,EAAOyd,MACNg5D,EAAepkI,QAAU2tD,EAAAA,EAAOyvD,OACjCmnB,GAAa52E,EAAAA,EAAO62E,QACpB9mI,EACA,gBAII6B,GAAMiE,EAAAA,EAAAA,IAAuB,MAInC,OAFAihI,EAAAA,EAAAA,GAAoBllI,GAAK+5E,EAAAA,EAAAA,OAGvB15E,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACLpC,GAAG,cACHO,UAAWmP,EACXQ,IAAKtP,EAAK0F,MAAQ,WAAQvG,GAEzBknI,EAAerlI,KAAKguC,IACnB,MAAMjd,EAAOxxB,EAAUyuC,IAAWruC,EAAUquC,GAE5C,GAAKjd,EAIL,OACElwB,EAAAA,GAAAC,cAAC6kI,EAAiB,CAChBhrF,IAAK3M,EACLjd,KAAMA,EACNu+C,WAAYA,GACZ,IAKZ,I,qJCgEA,SAAehyE,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,GAAU8xE,iBAClD,MAAQ+1D,gBAAgB,SAAEE,EAAQ,OAAED,GAAQ,SAAEM,GAAapoI,EAAOq6B,SAC1DnG,aAAa,cAAEm0G,EAAa,sBAAEC,KAA4B/nI,EAAAA,EAAAA,KAAeP,GAC3EinE,GAAmBC,EAAAA,EAAAA,KAAuBlnE,GAC1C06H,GAAgB5kG,EAAAA,EAAAA,KAA+B91B,EAAQ,yBAE7D,MAAO,CACL4qB,cAAe5qB,EAAO4qB,cACtBi9G,eAAgB/1D,EAAai2D,EAAWD,EACxCj8G,QAASimD,GAAcw2D,GAAyBD,EAChDphE,mBACAyzD,gBACA34H,UAAW/B,EAAOiC,MAAMC,KACxBC,UAAWnC,EAAOoC,MAAMF,KACxBqmI,YAAaH,EACd,GAfiBroI,EAnGpB,UAAsB,cACpB6qB,EAAa,eACbi9G,EAAc,UACd9lI,EAAS,UACTI,EAAS,QACTqmI,EAAO,QACP38G,EAAO,iBACPo7C,EAAgB,WAChB6K,EAAU,cACV4oD,EAAa,YACb6N,IAEA,MAAM,kBAAE72D,IAAsBnwE,EAAAA,EAAAA,MAExBC,GAAOC,EAAAA,EAAAA,KAEPmC,GAAQ9B,EAAAA,EAAAA,KAAQ,IACU,IAA1B+lI,EAAepkI,OACV,CAAC1B,EAAU8lI,EAAe,KAAO1lI,EAAU0lI,EAAe,KAG5DA,EACJrlI,KAAK5B,GAAOmB,EAAUnB,IAAOuB,EAAUvB,KACvC6B,QAAQ8wB,GAASA,GAAQA,EAAK3yB,KAAOgqB,IACrCroB,MAAM,EAAGkmI,EAAAA,KACTC,WACF,CAAC99G,EAAei9G,EAAgB9lI,EAAWI,IAExCwmI,GAAe7mI,EAAAA,EAAAA,KAAQ,IACtB8B,GAAOH,OACLG,EAAM8b,QAAO,CAACC,EAAK4T,KACxB,MAAM8G,EAAUkuG,EAAYh1G,EAAK3yB,IACjC,IAAKy5B,EAAS,OAAO1a,EAErB,MAAMipH,EAAgBvuG,EAAQitC,WAAWp9C,MAAMtpB,IAC7C,MAAM+zB,EAAQ0F,EAAQn4B,KAAKtB,GAC3B,IAAK+zB,KAAW,sBAAuBA,GAAQ,OAAO,EACtD,MAAMk0G,EAASxuG,EAAQupF,YAAcjvF,EAAM/zB,IAAMy5B,EAAQupF,WACzD,OAAOjvF,EAAMm0G,oBAAsBD,CAAM,IAI3C,OADAlpH,EAAI4T,EAAK3yB,IAAMgoI,EACRjpH,CAAG,GACT,CAAC,GAduB,CAAC,GAe3B,CAAC4oH,EAAa3kI,IAEXmlI,GAAiBjnI,EAAAA,EAAAA,KAAQ,IACtB+lI,EAAetlI,MAAM,EAjDV,IAkDjB,CAACslI,KAEJZ,EAAAA,EAAAA,GAAkB8B,GAElB,MAAM5+E,EAAYq+E,GAAW38G,GAEvB,IAAE7oB,EAAG,aAAEC,IAAiBwpH,EAAAA,EAAAA,GAAqC,CACjEtpH,OAAQgnD,EACRhpD,UAAW,OACX+4H,kBAAkB,IAcpB,IAXAx3H,EAAAA,EAAAA,KAAU,KACHg4H,IAAiBzzD,IAClB9c,IACF4wB,EAAAA,EAAAA,IAAoBuC,EAAAA,GAAqBgB,EAAAA,MACzC0qD,EAAAA,EAAAA,GAAel3D,MAEfiJ,EAAAA,EAAAA,IAAoBuC,EAAAA,GAAqBgB,EAAAA,MACzC2qD,EAAAA,EAAAA,IAAen3D,IACjB,GACC,CAACA,EAAY3nB,EAAWuwE,EAAezzD,IAErChkE,EAIL,OACEI,EAAAA,GAAAC,cAAA,UACEN,IAAKA,EACL2a,KAAK,SACL/c,GAAG,eACHO,UAAWiwD,EAAAA,EAAOyd,KAClB,aAAYrtE,EAAK,+BACjBgC,QAASA,IAAMkuE,EAAkB,CAAE7lD,SAAS,EAAMimD,eAClDhhE,IAAKtP,EAAK0F,MAAQ,WAAQvG,GAEzBiD,EAAMpB,KAAK+wB,GACVlwB,EAAAA,GAAAC,cAACq4C,EAAAA,EAAM,CACLwB,IAAK5pB,EAAK3yB,GACV2yB,KAAMA,EACN5vB,KAAK,OACLxC,UAAWiwD,EAAAA,EAAO83E,OAClBC,gBAAc,EACdC,sBAAuBT,EAAap1G,EAAK3yB,QAKnD,I,qIC9HO,MAAM08E,EAAqB,IAC5B+rD,EAAgB,IAAOxkF,EAAAA,EACvBykF,EAAiB,GACjBC,EAAgB,MAAS1kF,EAAAA,EACzB2kF,EAAgB,KAAQ3kF,EAAAA,EAExB4kF,EAAqC,IAAI3yH,IAExC,SAASmyH,EAAen3D,GAC7B43D,IAEA,MAAM,UACJpzD,EAAS,QAAEqzD,EAAO,eAAEC,EAAc,YAAEC,EAAW,cAAEC,GAC/CC,EAAgBj4D,GAEpB,KAAK63D,GAAYG,GAAkBD,GAAgBvzD,GAAcszD,GAC/D,OAGF,MAAQpkD,OAAQwkD,EAAczkD,MAAO0kD,GAAgBL,EAAex6H,wBAC9D86H,EAAQF,EAAeX,EAGvBc,EAAmBL,EAAc,GACjCM,EAAoBN,EAAcA,EAAcrmI,OAAS,GACzD4mI,EAASC,EAAUH,GAEzB9/H,MAAMwO,KAAKgxH,GAAanB,UAAUx7H,SAAQ,CAACqmB,EAAM6rC,GAAS37D,aACxD,MAAM7C,EAAK0pI,EAAU/2G,GACrB,IAAK3yB,EAAI,OACT,MAAM2vD,EAAS3vD,IAAOypI,EACtB,IAAIE,EAAeC,EAAeb,EAAS/oI,GACvCu/F,EAASmpC,EAAiBlqE,EAAQ,EAStC,GARKmrE,IAIHA,EAHenrE,IAAU37D,EAAS,EAGV2mI,EAAoBD,EAC5ChqC,EAASmpC,IAGNiB,EAAc,OAEnB,IAEEj1F,IAAKm1F,EACLt7H,KAAMu7H,EACN79H,MAAO89H,GACLJ,EAAan7H,wBAEjB,MACED,KAAMy7H,EACN/9H,MAAOg+H,GACLt3G,EAAKnkB,wBAET,GAAIw7H,EAASX,EACX,OAGFS,GAAYnB,EACZoB,GAAa,EAAIpB,EAEjB,MAAMuB,EAAiBJ,EAAWE,EAC5BG,EAAiBN,EAAUP,EAC3Bc,EAAYL,EAAYE,EAE9BJ,GAAWlB,EAEX,MAAM0B,EAAeL,EAASF,EAAW,EAAInB,EACvC2B,EAAehB,EAAQO,EAAUlB,EACjC4B,EAAUN,GAAWF,EAAY,EAAIpB,IAE3CjjG,EAAAA,EAAAA,KAAgB,KACd,IAAKikG,EAAc,OACnB,MAAMtqD,EAAQmrD,EAAY73G,GAE1B,IAAI83G,EAGAlrC,EAASmpC,GACX+B,EAASD,EAAYb,GACjBh6E,GACF86E,EAAO53H,UAAUC,IAAI43H,EAAAA,EAAcC,YAIrCtrD,EAAMxsE,UAAUC,IAAI43H,EAAAA,EAAcE,mBAGpCC,EAAAA,EAAAA,IAAYxrD,EAAO,CACjB3qC,IAAM,GAAE40F,MACR/6H,KAAO,GAAEy7H,MACTzqC,OAAS,GAAEA,IACX9hB,QAASgtD,EAAS,IAAM,GACxBpwD,UAAY,eAAc6vD,QAAqBC,iBAA8BC,OAG3EK,IACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB/1F,IAAM,GAAEm1F,MACRt7H,KAAO,GAAEu7H,MACTvqC,OAAS,GAAEA,MAIf7pB,EAAU1iE,YAAYqsE,GAClBorD,GACF/0D,EAAU1iE,YAAYy3H,GAExBd,EAAa92H,UAAUC,IAAI,aAC3B6f,EAAK9f,UAAUC,IAAI,cAEnB4yB,EAAAA,EAAAA,KAAgB,MACdmlG,EAAAA,EAAAA,IAAYxrD,EAAO,CACjB5B,QAAS,GACTpD,UAAW,KAGTowD,GACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClBhtD,QAAS,IACTpD,UAAY,eAAcgwD,QAAmBC,iBAA4BC,OAG3ElrD,EAAMxsE,UAAUC,IAAI43H,EAAAA,EAAcI,iBAGpC,MAAM9sH,EAAK+sH,GAAsB,MAC/BrlG,EAAAA,EAAAA,KAAgB,KACVgwC,EAAUwzB,SAAS7pB,IACrB3J,EAAUtgC,YAAYiqC,GAEpBorD,GAAU/0D,EAAUwzB,SAASuhC,IAC/B/0D,EAAUtgC,YAAYq1F,GAExBd,GAAc92H,UAAUwG,OAAO,aAC/BsZ,EAAK9f,UAAUwG,OAAO,aAEtBwvH,EAAU/6C,OAAO9vE,EAAG,GACpB,GACD0+D,EAAqBgB,EAAAA,KAExBmrD,EAAU/1H,IAAIkL,EAAG,GACjB,GACF,GAEN,CAEO,SAASoqH,EAAel3D,GAC7B43D,IAEA,MAAM,UACJpzD,EAAS,QACTqzD,EAAO,cACPG,EAAa,YACbD,EAAW,eACXD,GACEG,EAAgBj4D,GAEpB,KAAK63D,GAAYG,GAAkBD,GAAgBvzD,GAAcszD,GAC/D,OAEF,MAAQrkD,MAAO0kD,GAAgBL,EAAex6H,wBAGxC+6H,EAAmBL,EAAc,GACjCM,EAAoBN,EAAcA,EAAcrmI,OAAS,GACzD4mI,EAASC,EAAUH,GAEzB9/H,MAAMwO,KAAKgxH,GAAanB,UAAUx7H,SAAQ,CAACqmB,EAAM6rC,GAAS37D,aACxD,MAAM7C,EAAK0pI,EAAU/2G,GACrB,IAAK3yB,EAAI,OACT,MAAM2vD,EAAS3vD,IAAOypI,EACtB,IAAIE,EAAeC,EAAeb,EAAS/oI,GACvCu/F,EAASmpC,EAAiBlqE,EAAQ,EAStC,GARKmrE,IAIHA,EAHenrE,IAAU37D,EAAS,EAGV2mI,EAAoBD,EAC5ChqC,EAASmpC,IAGNiB,EAAc,OAEnB,MACEj1F,IAAKm1F,EACLt7H,KAAMu7H,EACN79H,MAAO89H,GACLp3G,EAAKnkB,wBAET,IACED,KAAMy7H,EACN/9H,MAAOg+H,EACPv1F,IAAK40F,GACHK,EAAan7H,wBAEjB,GAAIs7H,EAAWT,EACb,OAGFW,GAAUrB,EACVsB,GAAW,EAAItB,EAEf,MAAM0B,EAAeL,EAASF,EACxBQ,EAAehB,EAAQO,EAAUjB,EACjC2B,EAAUN,EAAUF,EAE1BT,GAASX,EAET,MAAMuB,EAAiBJ,EAAWE,EAAS,EAAIrB,EACzCwB,EAAiBN,EAAUP,EAAQX,EACnCyB,EAAYL,GAAaE,EAAU,EAAItB,IAE7CjjG,EAAAA,EAAAA,KAAgB,KACd,MAAM25C,EAAQmrD,EAAY73G,GAC1B,IAAI83G,EAEAlrC,EAASmpC,GACX+B,EAASD,EAAYb,GACjBh6E,GACF86E,EAAO53H,UAAUC,IAAI43H,EAAAA,EAAcC,YAGrCtrD,EAAMxsE,UAAUC,IAAI43H,EAAAA,EAAcE,iBAAkBF,EAAAA,EAAcI,kBAGpED,EAAAA,EAAAA,IAAYxrD,EAAO,CACjB3qC,IAAM,GAAEm1F,MACRt7H,KAAO,GAAEu7H,MACT79H,MAAQ,GAAE89H,MACVxqC,OAAS,GAAEA,MAGTkrC,IACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB/1F,IAAM,GAAE40F,MACR/6H,KAAO,GAAEy7H,MACTzqC,OAAS,GAAEA,IACX9hB,QAAS,IACTpD,UAAY,eAAc6vD,QAAqBC,iBAA8BC,OAIjFz3G,EAAK9f,UAAUC,IAAI,aACnB62H,EAAc92H,UAAUC,IAAI,aAE5B4iE,EAAU1iE,YAAYqsE,GAClBorD,GACF/0D,EAAU1iE,YAAYy3H,IAGxB/kG,EAAAA,EAAAA,KAAgB,MACdmlG,EAAAA,EAAAA,IAAYxrD,EAAO,CACjB5B,QAASgtD,EAAS,IAAM,GACxBpwD,UAAY,eAAcgwD,QAAmBC,iBAA4BC,OAGvEE,GACFI,EAAAA,EAAAA,IAAYJ,EAAS,CACnBhtD,QAAS,GACTpD,UAAW,KAGbgF,EAAMxsE,UAAUwG,OAAOqxH,EAAAA,EAAcI,iBAGvC,MAAM9sH,EAAK+sH,GAAsB,MAC/BrlG,EAAAA,EAAAA,KAAgB,KACVgwC,EAAUwzB,SAAS7pB,IACrB3J,EAAUtgC,YAAYiqC,GAEpBorD,GAAU/0D,EAAUwzB,SAASuhC,IAC/B/0D,EAAUtgC,YAAYq1F,GAExB93G,EAAK9f,UAAUwG,OAAO,aACtBswH,EAAc92H,UAAUwG,OAAO,YAAY,IAG7CwvH,EAAU/6C,OAAO9vE,EAAG,GACnB0+D,EAAqBgB,EAAAA,KAExBmrD,EAAU/1H,IAAIkL,EAAG,GACjB,GACF,GAEN,CAEA,SAASmrH,EAAgBj4D,GACvB,IAAIwE,EAAY9iE,SAASuuB,eAAe,cAIxC,GAHIu0C,GAAaxE,IACfwE,EAAYA,EAAUlpD,cAA2B,oBAE9CkpD,EAAW,MAAO,CAAC,EACxB,MAAMqzD,EAAUrzD,EAAUlpD,cAA2B,iBAC/Cw+G,EAASt1D,EAAUlpD,cAA2B,gBAC9Cw8G,EAAiBtzD,EAAUlpD,cAA2B,gBACtDy8G,EAAc+B,GAAQryH,iBAA+B,IAAGsyH,EAAAA,EAAat4G,QACrEu2G,EAAgBH,GAASpwH,iBAA8B,WAE7D,MAAO,CACL+8D,YACAqzD,UACAC,iBACAC,cACAC,gBAEJ,CAEA,SAASsB,EAAYU,GACnB,MAAM7rD,EAAQ6rD,EAAS52H,WAAU,GACjC+qE,EAAMxsE,UAAUC,IAAI43H,EAAAA,EAAcrrD,OAGlCA,EAAMxsE,UAAUwG,OAAO,aAEvBgmE,EAAMptE,WAAY,EAClBotE,EAAM8rD,cAAgB9hF,EAAAA,EAEtB,MAAM+hF,EAAeF,EAAS1+G,cAAc,UAC5C,GAAI4+G,EAAc,CAChB,MAAMx/H,EAASyzE,EAAM7yD,cAAc,UACnC5gB,GAAQQ,WAAW,OAAOi/H,UAAUD,EAAc,EAAG,EACvD,CAEA,OAAO/rD,CACT,CAEA,SAASqqD,EAAUl1H,GACjB,OAAOA,GAAI2E,aAAa,eAC1B,CAEA,SAASywH,EAAep1H,EAAiBxU,GACvC,OAAOwU,GAAIgY,cAA4B,kBAAiBxsB,MAC1D,CAEA,SAAS+qI,EAAsBO,EAA8BC,GAC3D,MAAMC,EAAU9rH,WAAW4rH,EAAUC,GAErC,MAAO,KACL/gD,aAAaghD,GACbF,GAAU,CAEd,CAEA,SAASxC,IACPD,EAAUv8H,SAAS0R,GAAOA,MAC1B6qH,EAAU4C,OACZ,C,2CCrWO,MAAMC,EAAqB,oCACrBC,EAAuB,+B,2KCgBpC,MAAMC,EAAgD,CAAC,EAMjDC,GAAalsH,EAAAA,EAAAA,IADS,KA2H5B,EApHA,SAA2BiwB,EAA4Bk8F,IACrDhqI,EAAAA,EAAAA,KAAU,KACR,QAAe/B,IAAX6vC,EAAsB,QA0BVnmC,MAAMsiI,QAAQn8F,GAAUA,EAAS,CAACA,IAE1CtjC,SAAStM,IACf,MAAM2wB,EAAUm7G,IAAiB1qI,EAAAA,EAAAA,MAAYq4B,QAAQ+tG,SAASxnI,IAAK0mE,aAAa,GAC3E/1C,GA5Be1Z,iBACd40H,EACNG,EAAY1/H,SAAQ,EAAGsxD,OAAM64B,SAAQw1C,eAC/BA,EAkGZh1H,eAA6B2mD,GAC3B,MAAMsuE,GAASC,EAAAA,EAAAA,IAAsBC,EAAAA,EAAAA,IAAkBxuE,IACvD,IAAIyuE,EAAa,EACjB,UAAW,MAAMC,KAASJ,EAExB,GADAG,GAAcC,EAAMC,WAChBF,GAvHoB,QAwHtB,KAGN,CA1GUG,CAAc5uE,GAGhB9N,EAAAA,GACE8N,EACA64B,GAEC9G,MAAM3kF,IACAA,IAEDyrF,IAAWxvF,EAAAA,GAAewlI,aAqE1C,SAA4Bn9G,GAC1B,MAAMo9G,EAAO95H,SAAS85H,KAChB5mI,EAAQ8M,SAASlQ,cAAc,SACrCoD,EAAM6mI,QAAU,OAChB7mI,EAAMi+C,IAAMz0B,EACZxpB,EAAM8nD,OAAQ,EACd9nD,EAAM8mI,UAAW,EACjB9mI,EAAM+mI,uBAAwB,EAC9B/mI,EAAMjC,MAAMgxE,QAAU,OACtB63D,EAAK15H,YAAYlN,GACjBA,EAAMilF,OACNrrE,YAAW,MACTotH,EAAAA,EAAAA,GAAYhnI,GACZ4mI,EAAKt3F,YAAYtvC,EAAM,GA9GU,IAgHrC,CAnFcinI,CAAmB/hI,GAEjByrF,IAAWxvF,EAAAA,GAAeC,UAC5BouF,EAAAA,EAAAA,IAAatqF,GACf,GACA,GACJ,EAQFgiI,CAYN,SAA+Bp9F,EAAgBjf,GAC7C,MAAMg3G,GAAc1kB,EAAAA,EAAAA,MAAkB7hH,EAAAA,EAAAA,MAAawuC,GACnD,IAAK+3F,IAAgBA,EAAYjhE,YAAY7jE,OAC3C,MAAO,GAGT,MAAMoqI,EAbR,SAAmC3gG,EAAU4gG,EAAcC,GACzD,MAAMv9E,EAAetjB,EAAI32B,QAAQu3H,GAC3BvpI,EAAQ+F,KAAKgD,IAAIkjD,EAWoDw9E,EAXvB,GAC9CxpI,EAAM8F,KAAKC,IAAIimD,EAUsDw9E,EAVzB9gG,EAAIzpC,QACtD,OAAOypC,EAAI3qC,MAAMgC,EAAOC,EAC1B,CAQqBypI,CAAuB1F,EAAYjhE,WAAY/1C,GAE5Dq7G,EAAgC,GA+BtC,OA9BAiB,EAAW3gI,SAASghI,IAClB,GAAI1B,EAAiBh8F,IAASt4B,IAAIg2H,GAChC,OAGF,MAAMv5G,EAAQ4zG,EAAYrmI,KAAKgsI,GAC/B,IAAKv5G,KAAW,YAAaA,GAC3B,OAGF,MAAMq4B,EAAUnsD,QAAQ8zB,EAAMruB,QAAQI,OAGtCkmI,EAAYj8H,KAAK,CACf6tD,MAAMoiC,EAAAA,EAAAA,IAAkBjsE,EAAO,QAC/B0iE,OAAQrqC,EAAUnlD,EAAAA,GAAewlI,YAAcxlI,EAAAA,GAAeC,QAC9D+kI,SAAU7/E,IAAWmhF,EAAAA,EAAAA,GAA0B7B,EAAAA,KAGjDM,EAAYj8H,KAAK,CAAE6tD,MAAMoiC,EAAAA,EAAAA,IAAkBjsE,GAAQ0iE,OAAQxvF,EAAAA,GAAeC,UACtE6sB,EAAMruB,QAAQ8nI,WAChBxB,EAAYj8H,KAAK,CACf6tD,MAAMoiC,EAAAA,EAAAA,IAAkBjsE,EAAO,QAAQ,GACvC0iE,OAAQxvF,EAAAA,GAAewlI,cAI3Bb,EAAiBh8F,IAAWg8F,EAAiBh8F,IAAW,IAAI15B,KAAOpD,IAAIw6H,EAAe,IAGjFtB,CACT,CApDoByB,CAAsBztI,EAAI2wB,GAAS,GACjD,GACD,CAACm7G,EAAel8F,GACrB,C,sLChEA,QAAiD,WC4GjD,GAAe1wC,EAAAA,EAAAA,KA7EoBwuI,EACjC35G,QACA45G,YACAnvE,QACAj+D,YACAsD,QACAwgE,gBAEA,MAAM,kBAAExoC,IAAsBl7B,EAAAA,EAAAA,MAGxByB,GAAMiE,EAAAA,EAAAA,IAAuB,OAC5BunI,EAAiBC,IAAsBlnI,EAAAA,EAAAA,IAAS,IAAMs9C,EAAAA,IAEvD,OAAErU,EAAM,GAAE5vC,EAAE,MAAE8tI,GAAU/5G,GACxB,UAAE0B,GAAcq4G,GAAS,CAAC,GAC1B,SAAE12F,EAAQ,OAAE22F,EAAM,UAAEC,GAAcL,EAElC/2G,IAAa3F,EAAAA,EAAAA,IAAS2e,GACtBgI,EAAe,IAAEC,EAAAA,EAAAA,IAAYjI,EAAQ5vC,MAAOw+D,KAAS6F,EAAY,UAAY,WAE7E4pE,GAAgB/sI,EAAAA,EAAAA,KAAQ,IAC5Bu0B,GAAWrG,MAAMggE,IAAM9wD,EAAAA,EAAAA,IAAe8wD,EAAEh4C,SAAUA,MAAY2S,OAC7D,CAAC3S,EAAU3hB,IACRy4G,GAAsB7pE,GAAapkE,QAAQguI,IAAkBr3G,EAE7Du3G,GAAwBpmI,EAAAA,EAAAA,IAAgB,KAC5C,IAAK3F,EAAIyJ,QAAS,OAClB,MAAMK,EAAS9J,EAAIyJ,QAAQuiI,aAC3BP,EAAmBnkI,KAAKxG,MAhCK,GAgCCgJ,GAAmC,KAGnEohC,EAAAA,EAAAA,IAAsB,EAAE+gG,MAClBpuI,QAAQguI,KAAmBhuI,QAAQouI,IACrCF,GACF,GACC,CAACF,KAEJv+D,EAAAA,EAAAA,GAAkBttE,EAAK+rI,GAEvB,MAAM5rF,GAAcx6C,EAAAA,EAAAA,IAAgB,KAClC8zB,EAAkB,CAChB+T,SACAjf,QAAS3wB,EACT43C,cACAR,YACA,IAGJ,OACE30C,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,WAAWoC,EAAAA,EAAAA,GAAeorI,EDnFiH,WAAlB,WCmF1DxtI,GAC/DsD,OAAO8pG,EAAAA,EAAAA,GAAW9pG,EAAQ,wBAAuB+pI,OACjDhrI,QAAS2/C,GAET9/C,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GDxF8J,WCwFpHqrI,GDxFyI,cC0F/L/tI,QAAQ2tI,IACPnrI,EAAAA,GAAAC,cAACi6C,EAAAA,EAAqB,CACpBp8C,WAAWoC,EAAAA,EAAAA,GD5FuM,WC4FvKurI,GD5F8L,YC6FzO92F,SAAUA,EACVQ,YAAaA,EACb70C,KAAM6qI,EACNU,WAnEqB,EAmETV,EACZW,YAAalqE,EACbzF,YAAayF,IAGhB6pE,GACCzrI,EAAAA,GAAAC,cAAA,QAAMnC,UDtGgQ,YCsG9N0tI,GAEtC,I,gDCtEV,MA2EA,GAAe/uI,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAQsrG,KAChD,MAAM,UAAEijC,GAAcjjC,EAEtB,MAAO,CAAE8jC,iBADeC,EAAAA,EAAAA,KAAsBrvI,EAAQuuI,EAAU1rG,OACtC,GAHR9iC,EAxEgCuvI,EAClDf,YACAptI,YACAsD,QACA2qI,kBACAnqE,gBAGA,MAAMjiE,GAAMiE,EAAAA,EAAAA,IAAuB,OAC5BunI,EAAiBC,IAAsBlnI,EAAAA,EAAAA,IAAS,IAEjD,aAAEgoI,EAAY,MAAE/9H,GAAU+8H,EAE1BiB,GAAkBC,EAAAA,EAAAA,IAAcj+H,GAChCg+E,GAAYkgD,EAAAA,EAAAA,IAAal+H,GAEzBm+H,GAAmBhnI,EAAAA,EAAAA,IAAiBinI,IACxC,IAAK5sI,EAAIyJ,QAAS,OAClB,MAAM2I,EAAKpS,EAAIyJ,QAETK,EAASsI,EAAG45H,aACZa,EAAoBvlI,KAAKxG,MAxBL,GAwBWgJ,GACrC2hI,EAAmBoB,GACnB,MAAMC,EAAUA,MACd5vC,EAAAA,EAAAA,IAAe9qF,EAAI,CACjB,sBAAwB,GAAEy6H,MAC1B,YAAgB/iI,EA5BC,GA4BH,OACd,EAGJ,GAAI8iI,EAAa,OAAOE,GAExBxpG,EAAAA,EAAAA,IAAgBwpG,EAEA,IASlB,OANAvjI,EAAAA,EAAAA,KAAgB,MACdilF,EAAAA,EAAAA,KAAoB,IAAMm+C,GAAiB,IAAM,GAChD,KAEHr/D,EAAAA,EAAAA,GAAkBttE,GAAK,IAAM2sI,MAG3BtsI,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,WAAWoC,EAAAA,EAAAA,GFnFkR,WEmFnPpC,GAC1CsD,OAAO8pG,EAAAA,EAAAA,GACL9pG,EACC,8BAA6B+qI,IAC7B,UAAShgD,MAGZnsF,EAAAA,GAAAC,cAAA,OAAKnC,UF1FkT,YE2FpTiuI,GACC/rI,EAAAA,GAAAC,cAACkX,EAAAA,EAAW,CACV2iC,IAAKiyF,EAAgBxuI,GACrBqsC,WAAYmiG,EAAgBxuI,GAC5B+C,KAAM6qI,EACNr/B,OAAQlqC,EACR8qE,sBAAoB,EACpBxwE,aAAW,IAGfl8D,EAAAA,GAAAC,cAAA,KAAGnC,UFrG2U,YGDpTouI,IACX1uI,QAA+B,UAAvBmvI,UAAUr9G,UAChB,GAAEroB,KAAKxG,MAAsB,EAAfyrI,EAAoB,EAAI,QAAW,GAAEjlI,KAAKxG,MAAMyrI,ODqG5EU,CAAkBV,KAGnB,KEhFJW,EAAqB,EAAI,GAGzBC,EAAiB,IAAIr5H,IAA0B,CAAC,cAAe,eA2HrE,SAASs5H,EAAa7B,EAAyB8B,GAC7C,MAAM,EACJ9iI,EAAC,EAAEC,EAAC,MAAEX,EAAK,OAAEC,EAAM,SAAEwjI,EAAQ,OAAE7iI,GAC7B8gI,EAAUgC,YAEd,IAAIC,EAAc,GAElB,GAAIH,GAAc5iI,GAAU4iI,EAAa,EAAG,CAC1C,MAAMI,EAAcJ,GAAcxjI,EArId,KAsId6jI,EAAeL,GAAcvjI,EAtIf,KAuIpB0jI,EAAiBlmI,KAAKC,IAAIkmI,EAAYC,IAAgBjjI,EAvIlC,KAuIL,IACjB,CAEA,OAAO8gG,EAAAA,EAAAA,GACJ,SAAQhhG,KACR,QAAOC,KACP,UAASX,KACT,WAAUC,KACV,qBAAoBwjI,8BACrBE,GAAgB,kBAAiBA,IAErC,CAEA,SAAe1wI,EAAAA,EAAAA,KAhJUohG,EACvBvsE,QAAOr0B,WAAUa,YAAWwvI,qBAE5B,MAAM,aACJhvE,EAAY,qBAAE9R,EAAoB,aAAE3kC,EAAY,iBAAE0lH,EAAgB,QAAEnR,IAClEl+H,EAAAA,EAAAA,MAGEyB,GAAMiE,EAAAA,EAAAA,IAAuB,OAC5BopI,EAAYQ,IAAiBtpI,EAAAA,EAAAA,IAAS,GAEvCq2B,GAAakzG,EAAAA,EAAAA,MAEnBpuI,EAAAA,EAAAA,KAAU,KACR,IAAKM,EAAIyJ,QAAS,OAClB,MAAM8oC,EAAUvyC,EAAIyJ,QAGpB,GAFAokI,EAAct7F,EAASw7F,aAEnBnzG,EAAW/wB,MAAQmkI,EAAAA,IAKrB,YAJA1qG,EAAAA,EAAAA,KAAgB,KACdiP,EAAQ9wC,MAAMijB,eAAe,iBAC7B6tB,EAAQ9wC,MAAMijB,eAAe,iBAAiB,IAKlD,MAAMupH,EAAoBrzG,EAAW/wB,MAAQ+wB,EAAW9wB,OAElDD,EAAQokI,EAAoBf,EAC9B36F,EAAQy5F,aAAekB,EAAqB36F,EAAQw7F,YAClDjkI,EAASmkI,EAAoBf,EAC/B36F,EAAQy5F,aAAez5F,EAAQw7F,YAAcb,GAEjD5pG,EAAAA,EAAAA,KAAgB,KACdiP,EAAQ9wC,MAAM+iB,YAAY,gBAAkB,GAAE3a,OAC9C0oC,EAAQ9wC,MAAM+iB,YAAY,iBAAmB,GAAE1a,MAAW,GAC1D,GACD,CAACxM,EAAUs9B,IAEd,MA0BMszG,EAAav8G,EAAMu8G,WAEzB,OACE7tI,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GJnGS,YImGuBjD,GJnGqB,YImGOa,GACvE6B,IAAKA,GAEJkuI,GAAY1uI,KAAI,CAAC+rI,EAAWnjI,KAC3B,OAAQmjI,EAAU5wH,MAChB,IAAK,WACL,IAAK,QACL,IAAK,cACL,IAAK,MACL,IAAK,aAAc,CACjB,MAAMwzH,EAAU7wI,IAAa6vI,EAAej4H,IAAIq2H,EAAU5wH,MAC1D,OACEta,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe6tD,EAAkB+/E,GJhH8B,YIiH1E1sI,MAAO2rI,EAAa7B,GACpB/qI,QAASA,IA7CO+qI,KAC5B,OAAQA,EAAU5wH,MAChB,IAAK,WACL,IAAK,QACHgkD,EAAa,CAAE4B,SAAUgrE,EAAU7rE,MACnC,MAEF,IAAK,cACHx3C,EAAa,CACXjrB,OAAQsuI,EAAUt6B,UAClBnkG,UAAWy+H,EAAUz+H,YAEvB8gI,IACA,MAEF,IAAK,MACHnR,EAAQ,CAAEvvG,IAAKq+G,EAAUr+G,MACzB,MAEF,IAAK,aACH2/B,EAAqB,CAAEL,KAAM++E,EAAU/+E,OAG3C,EAsB2B4hF,CAAqB7C,IAG1C,CACA,IAAK,oBACH,OACElrI,EAAAA,GAAAC,cAACgrI,EACC,CACAnxF,IAAM,GAAEoxF,EAAU5wH,QAAQvS,IAC1BupB,MAAOA,EACP45G,UAAWA,EACXnvE,MAAOh0D,EACP65D,WAAY3kE,EACZa,UAAWiwD,EACX3sD,MAAO2rI,EAAa7B,KAG1B,IAAK,UACH,OACElrI,EAAAA,GAAAC,cAACgsI,EACC,CACAnyF,IAAM,GAAEoxF,EAAU5wH,QAAQvS,IAC1BmjI,UAAWA,EACXptI,UAAWiwD,EACX3sD,MAAO2rI,EAAa7B,EAAW8B,GAC/BprE,WAAY3kE,GAAYqwI,IAI9B,QACE,OACJ,IAEE,G,+HC9IH,SAAStwI,EAA2CL,EAAWC,GACpE,MAAMgiF,GAAW/vD,EAAAA,EAAAA,IAAmBlyB,EAAQC,GAC5C,GAAKgiF,GAAaA,EAASovD,YAE3B,OAAOC,EAAgBtxI,EAAQiiF,EAASovD,YAC1C,CAEO,SAASC,EAAuCtxI,EAAWqxI,GAChE,OAAOrxI,EAAOS,WAAWyB,KAAKmvI,EAChC,CAEO,SAASE,EACdvxI,EAAWqxI,EAAqBG,GAEhC,OAAOF,EAAgBtxI,EAAQqxI,IAAczvI,aAAa4vI,EAC5D,CAEO,SAASC,EAAsDzxI,GACpE,MAAMC,EAASyxI,EAAsB1xI,IAASC,OAE9C,IAAKA,EAAQ,OAAO,EAEpB,MAAMC,GAAOC,EAAAA,EAAAA,IAAWH,EAAQC,GAChC,QAAKC,KAEGs/C,EAAAA,EAAAA,IAAiBt/C,IAASA,EAAKsgD,WAAc3/C,QAAQX,EAAKszB,aAAa4vD,YACjF,CAEO,SAASsuD,EAA6C1xI,GAC3D,MAAQS,YAAY,kBAAEC,IAAwBV,EAC9C,GAAKU,EAIL,OAAO4wI,EAAgBtxI,EAAQU,EACjC,CAEO,SAASixI,EAA2C3xI,GACzD,MAAM,UAAEk9G,EAAS,cAAEtyF,GAAkB5qB,EACrC,IAAKk9G,IAAcA,EAAUs0B,gBAAkBt0B,EAAU00B,QACvD,OAGF,MAAMhxI,EAAKs8G,EAAU00B,UAAYhnH,EAAgBsyF,EAAUs0B,cAAgBt0B,EAAU00B,QACrF,OAAOz+G,EAAAA,EAAAA,IAAWnzB,EAAQY,EAC5B,CAEO,SAASixI,EAAwD7xI,GACtE,MAAMI,EAAYsxI,EAAsB1xI,GAExC,IAAKI,IAAcA,EAAUH,OAC3B,OAAO,EAGT,MAAMC,GAAOC,EAAAA,EAAAA,IAAWH,EAAQI,EAAUH,QAC1C,IAAKC,EACH,OAAO,EAIT,GAD0BW,SAAQymD,EAAAA,EAAAA,IAAgBpnD,IAEhD,OAAO,EAGT,MAAMqgE,GAAaruC,EAAAA,EAAAA,IAAmBlyB,EAAQE,EAAKU,KAAK2/D,WACxD,OAAO1/D,QAAQ0/D,EACjB,C,qEClEO,SAAS7mC,EAA0C15B,EAAW8jC,GACnE,MAAM,UAAEglF,GAAc9oH,EACtB,IAAK8oH,EACH,OAAOgpB,EAAAA,IAAehuG,GAAO,GAG/B,MAAMg7B,GAAYp0C,EAAAA,EAAAA,IAA2B1qB,IACvC,OAAE+xI,GAAWjpB,EAGb78G,EAAQ8lI,EAAOjuG,KAASg7B,EAAY,EAAI,IAAMgzE,EAAAA,IAAehuG,GAAOg7B,EAAY,EAAI,GAC1F,MAAc,kBAAVh7B,EAAkC73B,EAAQ,EACvCA,CACT,CAEO,SAAS+lI,EAA0ChyI,EAAW8jC,GACnE,MAAM,UAAEglF,GAAc9oH,EACtB,IAAK8oH,EAAW,OAAOgpB,EAAAA,IAAehuG,GAAO,GAE7C,MAAM,OAAEiuG,GAAWjpB,EAEnB,OAAOipB,EAAOjuG,GAAO,EACvB,C,8FCrBA,MAAMmuG,EAAwB,IAEf,SAASjU,EACtBh7H,EAAwCkvI,EAAqC9qH,GAE7E,MAAM,iBAAE3P,IAAqBlW,EAAAA,EAAAA,MACvBC,GAAOC,EAAAA,EAAAA,MACNs8H,EAAeoU,IAAoB5qI,EAAAA,EAAAA,KAAS,GAE7C6qI,GAAoBzpI,EAAAA,EAAAA,IAAgB,KACxCwpI,GAAiB,GACbD,GAEJz6H,EAAiB,CACf7S,QAASytI,EAAAA,GAAY7wI,EAAK,4BAA8BA,EAAK,6BAC7D6H,SAAU4oI,GACV,IAGEK,GAAU3pI,EAAAA,EAAAA,IAAiB0tE,IAC/B,MAAMr+D,EAASq+D,EAAM1B,eACf,MAAEt7D,GAAUrB,EACbqB,IAGc,IAAfA,EAAMskD,MAA6B,IAAftkD,EAAMskD,MAC5By0E,IACF,IAGIG,GAAY5pI,EAAAA,EAAAA,IAAiB0tE,IACjC,MAAMr+D,EAASq+D,EAAM1B,cAEhB38D,EAAO2+E,aAAgB3+E,EAAO0+E,YACjC07C,GACF,IAoBF,OAjBA1vI,EAAAA,EAAAA,KAAU,KACR,GAAI0kB,EAAY,OAEhB,MAAM,QAAE3a,GAAYzJ,EACpB,OAAKyJ,GAILA,EAAQiL,iBAAiB,QAAS46H,GAClC7lI,EAAQiL,iBAAiB,UAAW66H,GAE7B,KACL9lI,EAAQmL,oBAAoB,QAAS06H,GACrC7lI,EAAQmL,oBAAoB,UAAW26H,EAAU,QATnD,CAUC,GACA,CAACnrH,EAAYpkB,IAET+6H,CACT,C,8FCtDA,MAAMyU,EAAmB,KACnBC,EAAyB,IAAIlkD,IACnC,IAAImkD,EAAgB,IAAI57H,IACxB,MAGM67H,GAAgBprC,EAAAA,EAAAA,KAAS,KAC7B,MAAMqrC,EAAQvoI,MAAMwO,KAAK65H,GACnBG,EAAcD,EAAMrwI,MAAM,EALR,KAMlBuwI,EAAaF,EAAMrwI,MAAMwwI,MAE/BxxI,EAAAA,EAAAA,MAAayxI,kBAAkB,CAC7BC,QAASJ,IAGXA,EAAY3lI,SAAStM,GAAO6xI,EAAuBhiD,IAAI7vF,EAAIwd,KAAKC,SAEhEq0H,EAAgB,IAAI57H,IAAIg8H,GAGpBJ,EAAc/uI,MAChBgvI,GACF,GAlBuB,KAqBV,SAASrgE,EAAsBplC,GAC5C,MAAMtpC,GAAQ9B,EAAAA,EAAAA,KAAQ,KACpB,MAAM9B,GAASgC,EAAAA,EAAAA,MACf,OAAOkrC,GAAK1qC,KAAK5B,IAAO4oB,EAAAA,EAAAA,KAAWxpB,EAAQY,KAAK6B,OAAO5B,QAAQ,GAC9D,CAACqsC,IAEEgmG,GAAkBpxI,EAAAA,EAAAA,KAAQ,KAC9B,MAAM9B,GAASgC,EAAAA,EAAAA,MACf,OAAO4B,GAAOnB,QAAQ8wB,IACpB,MAAM4/G,EAAkBV,EAAuB50G,IAAItK,EAAK3yB,KAAO,EAC/D,GAAIwd,KAAKC,MAAQ80H,EAAkBX,EACjC,OAAO,EAGT,IAAI3gH,EAAAA,EAAAA,IAAS0B,EAAK3yB,IAAK,CACrB,MAAMm+C,EAAOxrB,EACPoyB,GAASuF,EAAAA,EAAAA,KAAiBlrD,EAAQ++C,EAAKn+C,IACvCwyI,EAAoBztF,GAA0B,oBAAhBA,EAAOhoC,KAC3C,OAAQohC,EAAKs0F,YAAct0F,EAAKoM,UAAWjM,EAAAA,EAAAA,IAAUH,KAAUxrB,EAAK4rB,WAAai0F,CACnF,CAAO,CACL,MAAMlzI,EAAOqzB,EACb,OAAOvJ,EAAAA,EAAAA,IAAc9pB,KAAUA,EAAK0mD,YACtC,KACCpkD,KAAKu8C,GAASA,EAAKn+C,IAAG,GACxB,CAACgD,KAEJlB,EAAAA,EAAAA,KAAU,KACJwwI,GAAiBzvI,SACnByvI,EAAgBhmI,SAAStM,GAAO8xI,EAAch/H,IAAI9S,KAClD+xI,IACF,GACC,CAACO,GACN,C,2FC/CA,MAAMI,EAA2D,CAC/D,kBAAmB,OAAQ,WAAY,SAAU,WAAY,eAEzDC,EAA2D,CAC/D,kBAAmB,kBAAmB,eAAgB,eAGjD,SAASC,EAAkBzzC,EAAqB0zC,EAA+BC,GACpF,IAAIC,EAA4B,GAC5BC,EAA6C,GAEjD,GAAa,aAATH,EAAqB,CACvB,MAAM,gBACJI,KACGC,GACDJ,EACA3zC,EAAM+zC,gBAAkB,CAAC,GACzBC,EAAAA,EAAAA,IACAh0C,EAAMi0C,OACNV,GAGJK,EAAkBE,GAAmB,GACrCD,EAAqBvxI,OAAO+nB,KAAK0pH,GAC9BrxI,QAAQ06C,GAAQt8C,QAAQizI,EAAe32F,KAC5C,KAAO,CACL,MAAM,gBACJ82F,KACGC,GACDR,EACA3zC,EAAMm0C,gBAAkB,CAAC,GACzBH,EAAAA,EAAAA,IACAh0C,EAAMi0C,OACNT,GAGJI,EAAkBM,GAAmB,GACrCL,EAAqBvxI,OAAO+nB,KAAK8pH,GAC9BzxI,QAAQ06C,GAAQt8C,QAAQqzI,EAAe/2F,KAC5C,CAEA,MAAMn9C,GAASgC,EAAAA,EAAAA,MAGf,MAAO,CACL2xI,gBAH8BA,EAAgBlxI,QAAQ7B,IAAOT,EAAAA,EAAAA,KAAWH,EAAQY,KAIhFgzI,oBAEJ,CAEA,SAASO,EAAuBL,GAC9B,GAAIA,EAAgB,CAClB,MAAM,gBACJD,KACGO,GACDN,EAEJ,GACEzxI,OAAOC,OAAO8xI,GAAS3xI,OAAO5B,SAAS4C,OAAS,GAC5CowI,GAAiBpwI,OAErB,MAAO,GAGT,GAAI2wI,EAAQ1vH,KACV,MAAO,OACF,GAAI0vH,EAAQC,OACjB,MAAO,SACF,GAAID,EAAQE,SACjB,MAAO,WACF,GAAIF,EAAQG,SACjB,MAAO,WACF,GAAIH,EAAQI,YACjB,MAAO,cAEX,CAEA,MAAO,EACT,CAyBA,MAAMC,EAA8B,CAClChB,KAAM,SACNiB,WAAY,GACZV,OAAQ,CACNhkI,MAAO,CAAEiL,KAAM,IACf44H,gBAAiB,GACjBI,gBAAiB,KAIfU,EAA6DA,CACjE50C,EACAr0E,KAEA,OAAQA,EAAO/N,MACb,IAAK,WACH,MAAO,IACFoiF,EACHi0C,OAAQ,IACHj0C,EAAMi0C,OACThkI,MAAO,CAAEiL,KAAMyQ,EAAO4jB,UAExBvC,WAAW,GAEf,IAAK,cACH,MAAO,IACFgzD,EACHl4B,SAAUn8C,EAAO4jB,QACjBmkG,KAAM,QAEV,IAAK,qBACH,MAAO,IACF1zC,EACH+zC,gBAAgBC,EAAAA,EAAAA,IACdh0C,EAAMi0C,OACNV,IAGN,IAAK,qBACH,MAAO,IACFvzC,EACHm0C,gBAAgBH,EAAAA,EAAAA,IACdh0C,EAAMi0C,OACNT,IAGN,IAAK,oBACH,MAAO,IACFxzC,EACH+zC,eAAgBpoH,EAAO4jB,QACvBolG,WAAY,IAEhB,IAAK,oBACH,MAAO,IACF30C,EACHm0C,eAAgBxoH,EAAO4jB,QACvBolG,WAAY,IAEhB,IAAK,cACH,OAAI30C,EAAM+zC,eACD,IACF/zC,EACHi0C,OAAQ,KACHY,EAAAA,EAAAA,IAAK70C,EAAMi0C,OAAQV,GACtBtjI,MAAO+vF,EAAMi0C,OAAOhkI,MAAQ+vF,EAAMi0C,OAAOhkI,MAAQ,CAAEiL,KAAMk5H,EAAuBp0C,EAAM+zC,oBACnF/zC,EAAM+zC,gBAEXA,oBAAgBnzI,EAChB+zI,WAAY,GACZ3nG,WAAW,GAEJgzD,EAAMm0C,eACR,IACFn0C,EACHi0C,OAAQ,KACHY,EAAAA,EAAAA,IAAK70C,EAAMi0C,OAAQT,MACnBxzC,EAAMm0C,gBAEXA,oBAAgBvzI,EAChB+zI,WAAY,GACZ3nG,WAAW,GAGNgzD,EAEX,IAAK,aAAc,CACjB,MAAQn/F,GAAIinE,EAAQ,YAAEtd,KAAgBypF,GAAWtoH,EAAO4jB,QAExD,MAAO,CACLmkG,KAAM,OACN5rE,WACAmsE,SACAU,WAAY,GAEhB,CACA,IAAK,gBACH,MAAO,IACF30C,EACH20C,WAAYhpH,EAAO4jB,SAGvB,IAAK,eACH,MAAO,IACFywD,EACHhzD,UAAWrhB,EAAO4jB,SAGtB,IAAK,eACH,MAAO,IACFywD,EACH/mE,UAAWtN,EAAO4jB,SAGtB,IAAK,WACH,MAAO,IACFywD,EACH/mE,WAAW,EACX3f,MAAOqS,EAAO4jB,SAGlB,IAAK,gBACH,MAAO,IACFywD,EACHi0C,OAAQ,IACHj0C,EAAMi0C,OACTa,WAAYnpH,EAAO4jB,UAGzB,IAAK,QACH,OAAOmlG,EACT,QACE,OAAO10C,EACX,EAOF,EAJ0B+0C,KACjBC,EAAAA,EAAAA,GAAWJ,EAAgBF,E,6DC/PrB,SAAS5oF,EAAuBmpF,GAC7C,MAAM/6E,GAAcC,EAAAA,EAAAA,MAEpBzzB,EAAAA,EAAAA,GAAYwzB,EAAa+6E,GAAU,EACrC,C,kGCAO,SAAS5qG,EACd6qG,EACAC,EACAC,EACAC,GAAU,GAEV,OAAOtkD,EAAAA,EAAAA,IAAsBukD,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMC,EAAiBC,EAC5B,CAEO,SAAS5Z,EACd8Z,EACAnJ,EACAiJ,GAAU,GAEV,MAAMG,EAAoBnrG,GAAqB,IAAMkrG,KAAY,CAACA,GAAWnJ,EAAIiJ,GAEjF,OAAOhlH,EAAAA,EAAAA,GACLmlH,EAAmB,CAACA,EAAmBD,IAAW,EAEtD,CAEO,SAASzlH,EACdolH,EACAC,EACA/I,EACAiJ,GAAU,EACVI,GAAS,GAET,OAAOhhE,EAAAA,EAAAA,IAAsB6gE,IAC3BA,EAASJ,IAAW,GAEnBC,EAAM/I,EAAIiJ,EAASI,EACxB,CAEO,SAASC,EACdH,EACAnJ,EACAiJ,GAAU,EACVI,GAAS,GAET,MAAME,EAAoB7lH,GAAqB,IAAMylH,KAAY,CAACA,GAAWnJ,EAAIiJ,EAASI,GAE1F,OAAOplH,EAAAA,EAAAA,GACLslH,EAAmB,CAACA,EAAmBJ,IAAW,EAEtD,C,qJC6NA,QA7PuBhsI,CACrBqsI,EACAC,EACAxtI,EACAu8C,EACAkxF,EACA5+C,EACA6+C,EACA73F,GAAa,EACb83F,EACAC,EACAC,GAAa,EACbC,GAAoB,EACpBpwI,EACAmD,GAAU,EACVktI,GAAiB,KAGjB,MAAMC,GAAgBnvI,EAAAA,EAAAA,IAAoC,OAEnDiC,EAAWmtI,IAAgB9uI,EAAAA,EAAAA,KAAS,GAC3C,IAAI+uI,EAAgBptI,EAEpB,MAAO9E,EAAcm6H,IAAmBh3H,EAAAA,EAAAA,IAAiB,GAEnDqB,GAAoBD,EAAAA,EAAAA,IAAgB,KACxC0tI,GAAa,GACTL,GAAeA,GAAe,KAGpC1lH,EAAAA,EAAAA,IAAc,KACZ,IAAKqlH,EACH,OAEFS,EAAc3pI,SAAU8pI,EAAAA,EAAAA,IAASZ,EAASvtI,GAAW,CAACouI,EAAWtnI,KAC/D,IAAIinI,EAAJ,CAGA,OAAQK,GACN,IAAK,SAAU,CACb,MAAM,UACJC,EAAS,gBAAEC,EAAe,YAAEC,EAAW,MAAEC,GACvCR,EAAc3pI,QAClB4pI,GAAa,GACK,iBAAdjuI,IACFyuI,EAAAA,EAAAA,IAAqB5/C,EAiKjC,SAA2Bm/C,GACzB,IAAIU,EAAsC,CAAC,EAC3C,GAAIV,GAAiBA,EAAc3pI,QAAS,CAC1C,MAAM,KACJo/E,EAAI,MAAEtrE,EAAK,eAAEnX,EAAc,MAAEwtI,EAAK,iBAAEG,EAAgB,qBAAEC,EAAoB,QAAE1mF,EAAO,OAAEC,GACnF6lF,EAAc3pI,QAClBqqI,EAAgB,CACdjrD,KAAMA,KACJA,EAAK+qD,EAAMjyF,IAAI,EAEjBpkC,MAAOA,KACLA,GAAO,EAETT,KAAMA,KACJS,IACAnX,EAAe,IACf7H,EAAAA,EAAAA,MAAa01I,kBAAkB,EAEjCC,aAAe7gE,IACb,MAAM8gE,EAAW9gE,EAAM+gE,YAnOL,GAoOlBhuI,EAAekB,KAAKgD,IAAIspI,EAAMzoF,YAAcgpF,EAAU,GAAG,EAE3DE,YAAchhE,IACZ,MAAM8gE,EAAW9gE,EAAM+gE,YAvOL,GAwOlBhuI,EAAekB,KAAKC,IAAIqsI,EAAMzoF,YAAcgpF,EAAUP,EAAMvtI,UAAU,EAExEiuI,OAASjhE,IACHA,EAAMkhE,UACRnuI,EAAeitE,EAAMkhE,SACvB,GAIChnF,MACHumF,EAAcU,UAAY,KACxBT,GAAkB,GAGjBzmF,MACHwmF,EAAcW,cAAgB,KAC5BT,GAAsB,EAG5B,CACA,OAAOF,CACT,CA9M2CY,CAAkBtB,KAEnDuB,EAAAA,EAAAA,IAAiB,WACjB,MAAM,YAAEC,IAAgBr3I,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OACvCy0I,EAAUmB,EAAYn4H,QACtBk3H,EAAY91I,QAAQ+2I,EAAYz3E,UAChC,MAAM92D,EAAWutI,EAAMvtI,UAAYqmC,OAAO8uF,SAASoY,EAAMvtI,UAAYutI,EAAMvtI,SAAWusI,GACpE,UAAdxtI,GAAyBiB,EAAWwuI,EAAAA,MACtCnB,EAAgBkB,EAAYE,eAE9BC,EAAAA,EAAAA,IAAiB,CACf1uI,SAAUutI,EAAMvtI,UAAY,EAC5ByuI,aAAclB,EAAMkB,aACpBrnG,SAAUmmG,EAAMzoF,cAElB,KACF,CACA,IAAK,eAAgB,CACnB,MAAM,MAAEyoF,GAAUR,EAAc3pI,SAChCsrI,EAAAA,EAAAA,IAAiB,CACf1uI,SAAUutI,EAAMvtI,UAAY,EAC5ByuI,aAAclB,EAAMkB,aACpBrnG,SAAUmmG,EAAMzoF,cAElB,KACF,CACA,IAAK,UACHkoF,GAAa,IACbsB,EAAAA,EAAAA,IAAiB,UACjB7xI,MACA,MACF,IAAK,eAAgB,CACnB,MAAM,MAAE8wI,GAAUR,EAAc3pI,QAChC,GAAIxD,GAAiC,IAAtB2tI,EAAMzoF,YACnB,MAEF,MAAM9kD,EAAWutI,EAAMvtI,UAAYqmC,OAAO8uF,SAASoY,EAAMvtI,UAAYutI,EAAMvtI,SAAWusI,EACjFM,GAAmB3X,EAAgBqY,EAAMzoF,YAAc9kD,GAC5D,KACF,CACA,IAAK,WACHsuI,EAAAA,EAAAA,IAAiB,UAIrB9B,IAAWW,KAAatnI,EArDxB,CAqD0B,GACzB6mI,EAAantI,GAEhB,MAAM,MAAEguI,GAAUR,EAAc3pI,QAE3BvD,GAAc0tI,EAAM9qD,SACvBuqD,GAAa,GAGbC,GAAgB,GAGdR,IAAWK,GACbL,EAAOc,EACT,GACC,CAACjB,KAEJjzI,EAAAA,EAAAA,KAAU,KACJwG,GAAa+tF,IAAU+gD,EAAAA,EAAAA,IAAe/gD,EAAS,GAClD,CAACA,EAAU/tF,IAEd,MAAM,KACJ2iF,EAAI,MACJtrE,EAAK,eACLnX,EAAc,MACdwtI,EAAK,QACL5qD,EAAO,UACPyqD,EAAS,KACT32H,EAAI,QACJwwC,EAAO,OACPC,EAAM,iBACNwmF,EAAgB,qBAChBC,EAAoB,gBACpBN,EAAe,YACfC,GACEP,EAAc3pI,SAAW,CAAC,EAExBpD,GAAWvH,EAAAA,EAAAA,KAAQ,IAChB80I,GAAOvtI,UAAYqmC,OAAO8uF,SAASoY,EAAMvtI,UAAYutI,EAAMvtI,SAAWusI,GAC5E,CAACgB,GAAOvtI,SAAUusI,KAGrBlzI,EAAAA,EAAAA,KAAU,KACHk0I,IAGD3tI,GAAiC,IAAtB2tI,EAAMzoF,cAGjB9kD,IAAa4uI,EAAAA,EAAAA,GAAwBrB,IAAWV,GAClD3X,EAAgBqY,EAAMzoF,YAAc9kD,GACtC,GACC,CAACA,EAAUjF,EAAcwyI,EAAOV,EAAmBjtI,KAGtDvG,EAAAA,EAAAA,KAAU,IAAM,KACdspF,IAAUiqD,EAAW,GACpB,CAACjqD,EAASiqD,KAGb/nG,EAAAA,EAAAA,IAAsB,EAAEgqG,EAAgBC,MAClCD,IAAmBj6F,GAAc0G,IAAQwzF,GAKzCvB,GAAOjyF,KAAOiyF,GAAO9qD,QAIrB7tC,GAAc0G,IAAQz7C,GACxB2iF,IAAOlnC,EACT,GACC,CAAC1G,EAAY0G,EAAKz7C,EAAW2iF,EAAM+qD,GAAOjyF,IAAKiyF,GAAO9qD,OAAQ1jF,IAEjE,MAAMgwI,GAAgBzvI,EAAAA,EAAAA,IAAgB,KAChCg8C,GACFknC,IAAOlnC,EACT,IAGIx7C,GAAYR,EAAAA,EAAAA,IAAgB,KAC5BO,EACFqX,MAEA63H,GACF,IAGIC,GAAU1vI,EAAAA,EAAAA,IAAiBk0G,IAC/BzzG,IAAiByzG,GACbxzG,GAAYutI,GACdrY,EAAgBqY,EAAMzoF,YAAc9kD,EACtC,IAGF,MAAO,CACLH,UAAWotI,EACXlyI,eACA+E,YACAoX,QACAsrE,KAAMusD,EACNt4H,OACA1W,eAAgBivI,EAChB5B,YACA6B,WAAY1B,EACZvtI,WACA0tI,mBACAC,uBACA1mF,UACAC,SACAmmF,kBACAC,cACD,C,oHCnNH,MAkLA,EAlL8BhsE,EAC5BzqE,OACA6+C,OACA8oB,WACAC,WACA3H,UACAiH,kBACAvoB,gBACAj0B,gBACAq6C,YACA0C,SACA2C,eACAC,aACAC,yBACAC,gBAgBC8tE,GAAa,KACd,MAAM/2I,GAAOwjB,EAAAA,EAAAA,MAEP,OAAEmmC,GAAWpM,GAAQ,CAAC,EACtBy5F,EAAyBz5F,GAAMn+C,KAAOg1B,EAAAA,IAEtC6iH,GAAc32I,EAAAA,EAAAA,KAAQ,KAC1B,GAAK5B,EAEL,OAAI2+C,EACKr9C,EAAK,WAGVqwB,EAAAA,EAAAA,IAAS3xB,EAAKU,MAId83I,EAAAA,EAAAA,IAAiBx4I,GAHZsB,EAAK,eAOVwoB,EAAAA,EAAAA,IAAc9pB,GACTsB,EAAK,gBAGPA,EAAK,kBAAkB,GAC7B,CAACtB,EAAM2+C,EAAer9C,IAEzB,OAAOM,EAAAA,EAAAA,KAAQ,KACb,IAAK5B,GAAQ+kE,EACX,OAGF,MAAM,iBACJ0zE,EAAgB,wBAChBC,EAAuB,qBACvBr3E,EAAoB,mBACpBs3E,EAAkB,qBAClBC,EAAoB,eACpBC,EAAc,iBACd//D,IACEz3E,EAAAA,EAAAA,MAEE63E,EAAqBrO,EAAAA,IAAgC,CACzD/6D,MAAOw+F,EAAAA,GAAchtG,EAAK,2BAA6BA,EAAK,wBAC5D0kB,KAAM,kBACNsoD,QAASA,KAELwK,EADEn6B,EACe,CAAE5+C,OAAQ2qB,EAAgB9J,SAAU5gB,EAAKU,IAEzC,CAAEX,OAAQC,EAAKU,IAClC,GAIEo4I,EAAeA,KACfn6F,EACF+5F,EAAwB,CAAEh4I,GAAIV,EAAKU,KAEnC+3I,EAAiB,CAAE/3I,GAAIV,EAAKU,GAAIinE,SAAUA,GAC5C,EAGIyR,EAAYxR,EACd,CACA93D,MAAOxO,EAAK,wBACZ0kB,KAAM,QACNsoD,QAASwqE,GAET,CACAhpI,MAAOxO,EAAK,oBACZ0kB,KAAM,MACNsoD,QAASwqE,GAGPv/D,EAAe,CACnBzpE,MAAOyoI,EACPvyH,KAAM,SACNmjC,aAAa,EACbmlB,QAASlE,GAGX,GAAIzrB,EACF,OAAO+vB,EAAAA,EAAAA,IAAQ,CAACwK,EAAoBE,EAAWG,IAGjD,MAAMw/D,EAAoB7xE,EAAkB,CAC1Cp3D,MAAOxO,EAAK,8BACZ0kB,KAAM,SACNsoD,QAAShE,QACP7pE,EAEE44E,EAAapZ,EACf,CACAnwD,MAAOxO,EAAK,eACZ0kB,KAAM,SACNsoD,QAASA,IAAMjN,EAAqB,CAAEthE,OAAQC,EAAKU,GAAIu/D,SAAS,KAEhE,CACAnwD,MAAQ,GAAExO,EAAK,kBACf0kB,KAAM,OACNsoD,QAASjE,GAGb,GAAIguE,EACF,OAAO3pE,EAAAA,EAAAA,IAAQ,CAACwK,EAAoBE,EAAW2/D,EAAmB1/D,IAGpE,MAAM2/D,EACJh5I,EAAK+rE,aAAe/rE,EAAKosE,eAAiBjqE,OAAOC,OAAOqlE,GAAU,CAAC,GAAGz9C,MAAK,EAAG+hD,iBAAkBA,IAC9F,CACAj8D,MAAOxO,EAAK,6BACZ0kB,KAAM,YACNsoD,QAASA,IAAMsqE,EAAqB,CAAEl4I,GAAIV,EAAKU,WAC7CD,EACAw4I,EAAuBj5I,EAAK+rE,aAAe/rE,EAAKosE,eAAmBpsE,EAAK+0B,aAE1Et0B,EADA,CAAEqP,MAAOxO,EAAK,+BAAgC0kB,KAAM,SAAUsoD,QAASA,IAAMuqE,EAAe,CAAEn4I,GAAIV,EAAKU,MAGrGw4I,GAAgBC,EAAAA,EAAAA,IAAen5I,GACjC,CAAE8P,MAAOxO,EAAK,aAAc0kB,KAAM,YAAasoD,QAASA,IAAMqqE,EAAmB,CAAEj4I,GAAIV,EAAKU,MAC5F,CAAEoP,MAAOxO,EAAK,WAAY0kB,KAAM,UAAWsoD,QAASA,IAAMqqE,EAAmB,CAAEj4I,GAAIV,EAAKU,MAGtF04I,EADY7uE,IAAiB1rB,KAAS/0B,EAAAA,EAAAA,IAAc9pB,KAAS22D,EAAAA,EAAAA,IAAY32D,IAE3E,CAAE8P,MAAOxO,EAAK,oBAAqB0kB,KAAM,OAAQsoD,QAAS/D,QAC1D9pE,EAEE44I,OAA0B54I,IAAbknE,EAEnB,OAAO+G,EAAAA,EAAAA,IAAQ,CACbwK,EACA6/D,EACAC,EACAC,EACA7/D,GACCnuB,GAAUouB,GACVpuB,IAAWqtF,IAA2Be,GAAcH,EACrDE,EACA7/D,GACA,GACD,CACDv5E,EAAM6+C,EAAMqoB,EAAiB5lE,EAAMgpE,EAAwB1C,EAAUywE,EAAYp4E,EAASv1C,EAC1F0/C,EAAcC,EAAYE,EAAc5C,EAAU1c,EAAQqtF,EAAwB35F,EAAe45F,EACjGxzE,EAAW0C,GACX,C,wEC/JJ,QAtBA,SACEn3B,EACAjf,EACAoD,GAEA,MAAM,qBAAE8rE,IAAyBl/F,EAAAA,EAAAA,MAE3Bi4I,GAAqB13I,EAAAA,EAAAA,KAAQ,KACjC,MAAM23I,GAAYlyC,EAAAA,EAAAA,IAAS9G,EAVD,KAU8C,GACxE,MAAO,KACLg5C,EAAU,CAAEjpG,OAAQA,EAASuwD,SAAU,CAACxvE,IAAY,CACrD,GACA,CAACA,EAASif,KAEb9tC,EAAAA,EAAAA,KAAU,KAEJ8tC,GAAUjf,KADWoD,KAAW,YAAaA,MAAS,cAAeA,KAEvE6kH,GACF,GACC,CAACA,EAAoB7kH,EAAOpD,EAASif,GAC1C,C,mFCvBe,SAASkpG,EAAoBzyE,GAAmB,GAC7D,MAAM0yE,GAA4B1yI,EAAAA,EAAAA,IAAOggE,GACnC2yE,GAAwB3yI,EAAAA,EAAAA,KAAO,GAC/BgzD,GAAcC,EAAAA,EAAAA,MAEpB5pC,EAAAA,EAAAA,IAAc,KACR22C,IACF0yE,EAA0BltI,SAAU,EACtC,GACC,CAACw6D,IAEJ,MAAM4yE,GAA+BlxI,EAAAA,EAAAA,IAAgB,KACnDgxI,EAA0BltI,SAAU,EACpCmtI,EAAsBntI,SAAU,EAChCwtD,GAAa,IAGT6/E,GAAiCnxI,EAAAA,EAAAA,IAAgB,KACrDixI,EAAsBntI,SAAU,EAChCwtD,GAAa,IAGf,MAAO,CACL8/E,uBAAwBJ,EAA0BltI,QAClDutI,mBAAoBJ,EAAsBntI,QAC1CotI,+BACAC,iCAEJ,C,kDChCe,SAASv8G,EAAqB08G,GAC3C,MAAOC,EAAUC,IAAYh9G,EAAAA,EAAAA,MA+B7B,OA7BAz6B,EAAAA,EAAAA,KAAU,KACR,SAAS03I,IACP,MAAMx4G,EAAY59B,OAAO69B,eACzB,IAAKD,GAAWI,WAAY,OAE5B,MAAM0T,EAAQ9T,EAAUM,WAAW,GACnC,IAAKwT,EACH,OAIF,IADgBliC,SAAS4Z,cAAc6sH,GAErC,OAGF,MAAM,wBAAEphD,GAA4BnjD,GACpBmjD,aAAmCwhD,QAC/CxhD,EACAA,EAAwBG,eAChB/gF,QAAQgiI,IAClBE,EAASzkG,EAEb,CAIA,OAFAliC,SAASkE,iBAAiB,kBAAmB0iI,GAEtC,IAAM5mI,SAASoE,oBAAoB,kBAAmBwiI,EAAkB,GAC9E,CAACH,EAAeE,IAEZD,CACT,C,4DC9BA,MAAMI,EAAc,IAAIxjI,IAAI,CAAC,QAAS,WAAY,WAE5C++H,GAAW0E,EAAAA,EAAAA,KAGV,SAAShnE,EAAWinE,IACzB93I,EAAAA,EAAAA,KAAU,KACR,IAAK83I,EACH,OAGF,MAAMtiD,EAAU71F,OAAO61F,QAAQsiD,GAc/B,OAAO3E,EAAS4E,aAZhB,SAAuBvrI,IAgB3B,SAAyBA,GACvB,QAAIA,EAAE8I,kBAAkByB,eACd6gI,EAAYpiI,IAAIhJ,EAAE8I,OAAO2B,QAIrC,EArBW+gI,CAAgBxrI,IAIrBgpF,EAAQhrF,SAAQ,EAAEytI,EAAQnsE,OCmDzB,SAA0BmsE,GAC/B,OAAQtkE,GAlCV,SAAuBskE,EAAgBtkE,GACrC,MAAM,IACJh8D,EAAG,KAAEugI,EAAI,KAAEpkB,EAAI,IAAEqkB,EAAG,MAAE9hF,EAAK,IAAE5b,GAC3Bw9F,GACE,OACJ3mD,EAAM,QAAEngB,EAAO,QAAED,EAAO,SAAE8S,EAAUvpC,IAAK29F,GACvCzkE,EAEJ,GAAIh8D,IAAQ25E,EACV,OAAO,EAGT,GAAI6mD,GACF,IAAKhnE,IAAYD,EACf,OAAO,MAEJ,CACL,GAAIgnE,IAAS/mE,EACX,OAAO,EAET,GAAI2iD,IAAS5iD,EACX,OAAO,CAEX,CACA,OAAI7a,IAAU2tB,GAIP7lF,QAAQs8C,IACT29F,EAAW79H,gBAAkBkgC,EAAIlgC,eAChCo5D,EAAM1Y,KAAK3kD,QAAQ,MAAO,IAAIiE,gBAAkBkgC,EAAIlgC,eAC7D,CAGoB89H,CA1Db,SAAqBJ,GAC1B,MAAMvwH,EAAOuwH,EACV19H,cACAkhD,MAAM,KACN37D,KAAKmkI,GAASA,EAAKr7F,SAEhB0vG,EAA+B,CACnC3gI,IAAK+P,EAAKtF,SAAS,OACnB81H,KAAMxwH,EAAKtF,SAAS,QACpB0xG,KAAMpsG,EAAKtF,SAAS,QACpB+1H,IAAKzwH,EAAKtF,SAAS,OACnBi0C,MAAO3uC,EAAKtF,SAAS,UAGjBm2H,EAAe,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAItD,MAAO,IACFD,EACH79F,IAJc/yB,EAAK4F,MAAMmtB,IAAS89F,EAAan2H,SAASq4B,KAM5D,CAoCkC+9F,CAAYP,GAAStkE,EACvD,EDpDY8kE,CAAiBR,EAAjBQ,CAAyBjsI,IAC3Bs/D,EAAQt/D,EACV,GAEJ,GAE0C,GACzC,CAACsrI,GACN,CAxBAhnI,SAAS2H,gBAAgBzD,iBAAiB,UAAWm+H,EAASuF,a,wEED9D,MAAMC,EAAiB,IACjBC,EAAsB,IAEb,SAASC,EACtBx+G,EACA55B,EACAuiB,GAEA,MAAM,SAAEve,IAAaC,EAAAA,EAAAA,OAErB1E,EAAAA,EAAAA,KAAU,KACJS,EACGgE,GACHmZ,YAAW,MACTgmB,EAAAA,EAAAA,KAAgB,KACVvJ,EAAStwB,SAAS8zF,aACpBxjE,EAAStwB,QAAQ6G,OACnB,GACA,GACD+nI,IAGDt+G,EAAStwB,SAAS8zF,aACpBxjE,EAAStwB,QAAQklC,OAGfjsB,GACFpF,WAAWoF,EAAS41H,GAExB,GACC,CAACv+G,EAAU51B,EAAUhE,EAAQuiB,GAClC,C,kDCkBA,QApDA,UAAsB,QACpBliB,EAAO,QAAE44D,EAAO,MAAEk4B,EAAK,UAAEg+B,EAHD,MAUxB,MAAMkpB,GAAoBv0I,EAAAA,EAAAA,KAAO,GAC3Bw0I,GAAYx0I,EAAAA,EAAAA,KAAO,GACnBy0I,GAAUz0I,EAAAA,EAAAA,SAA2BtG,GAErC4D,GAAQ5C,EAAAA,EAAAA,KAAauN,IACzB,MAAMysI,EAAmB,WAAYzsI,GAAkB,IAAbA,EAAEQ,QAAkB,YAAaR,GAAKA,EAAE0sI,QAAQn4I,OAAS,GAC/Fg4I,EAAUhvI,SAAYkvI,IAI1BF,EAAUhvI,SAAU,EACpBivI,EAAQjvI,QAAUzI,OAAOsc,YAAW,KAClC87C,MACAo/E,EAAkB/uI,SAAU,CAAI,GAC/B6lH,GAAU,GACZ,CAACl2D,EAASk2D,IAEPupB,GAASl6I,EAAAA,EAAAA,KAAauN,IACrBusI,EAAUhvI,UAEX+uI,EAAkB/uI,QACpB6nF,MAEA9wF,IAAU0L,GAGZssI,EAAkB/uI,SAAU,EAC5BgvI,EAAUhvI,SAAU,EACpBzI,OAAOonF,aAAaswD,EAAQjvI,SAAQ,GACnC,CAAC6nF,EAAO9wF,IAMX,OAJAi8F,EAAAA,EAAAA,KAAkB,KAChBz7F,OAAOonF,aAAaswD,EAAQjvI,QAAQ,IAG/B,CACL6wC,YAAa/4C,EACbu3I,UAAWD,EACX/1H,aAAc+1H,EACdE,aAAcx3I,EACdy3I,WAAYH,EAEhB,C,wEChDA,MA+BA,EA7BwBI,EACtB38E,eAAc48E,YAIbhH,MACDxyI,EAAAA,EAAAA,KAAU,KACR,MAAMyqE,EAAW7N,GAAc7yD,SAAS8M,iBAAiB2iI,GACzD,IAAK/uE,GAAU1pE,OAAQ,OAEvB,MAAMoyE,GAAe0xB,EAAAA,EAAAA,KAAUlxB,IAC7B,MAAMr+D,EAASq+D,EAAMr+D,OACfiiE,EAAajiE,EAAO09D,UAAY,GACtCpvC,EAAAA,EAAAA,KAAgB,KACdtuB,EAAOvE,UAAUu+E,OAAO,WAAY/X,EAAW,GAC/C,GAjBe,KAwBnB,OAJA9M,EAASjgE,SAASkI,GAAOA,EAAGsC,iBAAiB,SAAUm+D,EAAc,CAAEY,SAAS,MAEhFtJ,EAASjgE,SAASkI,GAAOA,EAAGitB,cAAc,IAAIC,MAAM,SAAU,CAAEC,SAAS,OAElE,KACL4qC,EAASjgE,SAASkI,GAAOA,EAAGwC,oBAAoB,SAAUi+D,IAAc,CACzE,GAEA,CAACvW,EAAc48E,KAAahH,GAAM,C,0ICpBvC,MAAMiH,EAAqB,IACrBC,EAAoB,KACpBC,EAAoB,IAEX,SAAS5zI,EACtBgoD,EACAm/C,GAAS,EACT0sC,EAAcz0I,EAAAA,GAAeC,QAC7B68H,EACA4X,GAAgB,GAEhB,MAAMl0I,EAAYooD,EAAYC,EAAAA,GAA0BD,QAAa9vD,EAC/D67I,EAAcC,EAAAA,IAA4BH,IAAgBz0I,EAAAA,GAAewlI,YACzEpzE,GAAcC,EAAAA,EAAAA,KACdlP,GAAW0xF,EAAAA,EAAAA,GAAYC,EAAAA,KACvB/7I,GAAKg8I,EAAAA,EAAAA,MACJr0I,EAAcs0I,IAAmBt1I,EAAAA,EAAAA,IAASc,IAAcm0I,EAAc,EAAI,GAC3EM,GAAe71I,EAAAA,EAAAA,MAEf81I,GAAiBj7I,EAAAA,EAAAA,KAAQ,KACtBylG,EAAAA,EAAAA,KAAU76F,IACXowI,EAAarwI,WAAak4H,GAAUvmH,KAAKC,MAAQy+H,EAAarwI,QAAUk4H,IAC1EkY,EAAgBnwI,EAClB,GACC2vI,GAAmB,IACrB,CAAC1X,IAiDJ,OA/CAjiI,EAAAA,EAAAA,KAAU,MACHktG,GAAUn/C,IACRpoD,EAmBMm0I,GACTl8H,YAAW,KACTu8H,EAAgBV,EAAmB,GAClCC,IArBHS,EAAgB,GAEZC,EAAarwI,SACfikD,EAAAA,GAA2BqsF,GAG7BD,EAAarwI,QAAU2R,KAAKC,MAE5BqyC,EAAAA,GAAkBD,EAAW6rF,EAAaC,EAAeQ,EAAgBn8I,GAAI2vF,MAAK,KAChF,MAAMysD,EAAY5+H,KAAKC,MAAQy+H,EAAarwI,QAC5CqwI,EAAarwI,aAAU9L,GAElBgkI,GAASqY,GAAarY,EACzB1qE,IAEA35C,WAAW25C,EAAa0qE,EAAQqY,EAClC,KAON,GACC,CACDptC,EAAQn/C,EAAWpoD,EAAWi0I,EAAaE,EAAa7X,EAAOoY,EAAgBR,EAAe37I,EAAIoqD,KAGpGtoD,EAAAA,EAAAA,KAAU,KACJktG,GAAUktC,EAAarwI,UACzBikD,EAAAA,GAA2BqsF,GAC3BF,EAAgB,GAChBC,EAAarwI,aAAU9L,EACzB,GACC,CAACo8I,EAAgBntC,KAEpBltG,EAAAA,EAAAA,KAAU,IACD,KACD+tD,GACFC,EAAAA,GAA2BD,EAAW7vD,EACxC,GAED,CAACA,EAAI6vD,IAED,CAAEpoD,YAAWE,eACtB,C,wECpFA,MAAM00I,EAAqB,IAC3B,IAAIC,EAEW,SAASz6H,EACtBtf,EAAiBuiB,EAA6By3H,EAAmBF,EAAoB71H,GAAa,GAElG,MAAMg2H,GAAgBn2I,EAAAA,EAAAA,KAAO,GAEvBub,GAAkB7Z,EAAAA,EAAAA,IAAgB,KACtCy0I,EAAc3wI,SAAU,CAAI,IAqC9B,OAlCA/J,EAAAA,EAAAA,KAAU,KACJw6I,IACF9xD,aAAa8xD,GACbA,OAAev8I,IAGbwC,GAAW0iB,EAAAA,IAAiBuB,IAC9B81H,EAAel5I,OAAOsc,YAAW,KAC1B88H,EAAc3wI,SACjBiZ,GACF,GACoB,EAAnBy3H,GACL,GACC,CAAC/1H,EAAYjkB,EAAQg6I,EAAkBz3H,IAqBnC,EAnBkB/c,EAAAA,EAAAA,IAAgB,KACvCy0I,EAAc3wI,SAAU,CAAI,KAGL9D,EAAAA,EAAAA,IAAgB,KACvCy0I,EAAc3wI,SAAU,EAEpBywI,IACF9xD,aAAa8xD,GACbA,OAAev8I,GAGjBu8I,EAAel5I,OAAOsc,YAAW,KAC1B88H,EAAc3wI,SACjBiZ,GACF,GACCy3H,EAAiB,IAGsB36H,EAC9C,C,mFC9Ce,SAAS66H,EAA0B5wI,EAAYpD,GAC5D,MAAM8oG,GAAOz0E,EAAAA,EAAAA,GAAsBjxB,GAAS,GACtCm4H,GAAa39H,EAAAA,EAAAA,MACbgzD,GAAcC,EAAAA,EAAAA,KAEdojF,EAAmB7wI,QAEnB8wI,EAAgBprC,QAiBtB,OAfImrC,GAAoB1Y,EAAWn4H,UACjC2+E,aAAaw5C,EAAWn4H,SACxBm4H,EAAWn4H,aAAU9L,IAGvB2vB,EAAAA,EAAAA,IAAc,KAERjnB,IAAai0I,GAAoBC,IAAkB3Y,EAAWn4H,UAChEm4H,EAAWn4H,QAAUzI,OAAOsc,YAAW,KACrCskH,EAAWn4H,aAAU9L,EACrBs5D,GAAa,GACZ5wD,GACL,GACC,CAACA,EAAU4wD,EAAaqjF,EAAkBC,IAEpC3Y,EAAWn4H,SAAYpD,IAAYi0I,EAA6BnrC,EAAV1lG,CACjE,C,6DCvBe,SAASsoI,EACtByI,EACAC,GAEA,MAAMxjF,GAAcC,EAAAA,EAAAA,KACdwjF,GAAaz2I,EAAAA,EAAAA,IAAOu2I,GACpBz9C,GAAQ94F,EAAAA,EAAAA,IAAOw2I,GAEfE,GAAWh8I,EAAAA,EAAAA,KAAa+pB,IAC5Bq0E,EAAMtzF,QAAUixI,EAAWjxI,QAAQszF,EAAMtzF,QAASif,GAClDuuC,IACO8lC,EAAMtzF,UACZ,IAEH,MAAO,CACLszF,EAAMtzF,QACNkxI,EAEJ,C,mFCjBA,MASA,EAT6Bt/G,CAACp+B,EAAiB6gB,KACtChf,EAAAA,EAAAA,KAAQ,KACNylG,EAAAA,EAAAA,KAAU77E,IACVzrB,GAAW6gB,IAChBvf,EAAAA,EAAAA,MAAa68B,kBAAkB,CAAEn+B,SAAQ6gB,WAAU4K,UAAS,GAC3Dgb,EAAAA,MACF,CAACzmC,EAAQ6gB,G,4HCLd,MAAM88H,EAAqB,IAEpB,SAASC,EAAarxF,EAAuCt8B,EAAc4lE,GA+EhF,OA9EApzF,EAAAA,EAAAA,KAAU,KACR,IAAKwtB,IAAQs8B,EAAS//C,QAAS,OAC/B,MAAMqxI,EAAmBC,IACnBr3I,EAAQ8lD,EAAS//C,QAEvB,IAAKy5B,EAAAA,KAAc4vD,IAAagoD,GAAkBE,gBAAgBloD,GAChE,OAEF,MAAMhvF,EAAc,IAAIg3I,EAaxB,SAASG,IACP,IAAK/tH,IAAQ4lE,EAAU,OAEvB,MAAMooD,EAAep3I,EAAYq3I,gBAAgBroD,GAC3Cg3C,GAASC,EAAAA,EAAAA,GAAsB78G,GAiBrCguH,EAAaxmI,iBAAiB,aAf9B,WACEo1H,EAAOsR,OACJ7tD,MAAK,EACJtkF,QACAoyI,WAE+B,SAA3Bv3I,EAAYw3I,aACZD,EACFE,EAAYz3I,GAGd03I,EAAaN,EAAcjyI,GAAM,GAEvC,IAIA6gI,EAAOsR,OACJ7tD,MAAK,EACJtkF,QACAoyI,WAEIA,GAAmC,SAA3Bv3I,EAAYw3I,cAtC5Bh4G,EAAAA,EAAAA,KAAgB,KACd5/B,EAAMjC,MAAMgxE,QAAU,QACtBn1D,YAAW,MACTgmB,EAAAA,EAAAA,KAAgB,MACdmlG,EAAAA,EAAAA,IAAY/kI,EAAO,CAAE23E,QAAS,KAAM,GACpC,GACDu/D,EAAmB,IAkCpBY,EAAaN,EAAcjyI,GAAM,GAEvC,CAYA,OAVAnF,EAAY4Q,iBAAiB,aAAcumI,EAAc,CAAEv8D,MAAM,KAEjEp7C,EAAAA,EAAAA,KAAgB,MACdmlG,EAAAA,EAAAA,IAAY/kI,EAAO,CACjB+uE,QAAS,OACT4I,QAAS,MAEX33E,EAAMi+C,IAAMnnC,IAAIq4E,gBAAgB/uF,EAAY,IAGvC,MACLw/B,EAAAA,EAAAA,KAAgB,KACd,MAAMqe,EAAMj+C,EAAMi+C,KAClB+oF,EAAAA,EAAAA,GAAYhnI,GACZI,EAAY8Q,oBAAoB,aAAcqmI,GACf,SAA3Bn3I,EAAYw3I,YACdC,EAAYz3I,GAEd0W,IAAIi5E,gBAAgB9xC,EAAI,GACxB,CACH,GACA,CAACmxC,EAAU5lE,EAAKs8B,IAEZ2hF,EAA0Br4C,EACnC,CAEO,SAASq4C,EAA0Br4C,GACxC,SAAK5vD,EAAAA,KAAc4vD,IACZj1F,QAAQk9I,KAAkBC,gBAAgBloD,GACnD,CAEA,SAAS0oD,EAAaN,EAA4BO,GAChD,IACEP,EAAaM,aAAaC,EAC5B,CAAE,MAAOplI,GACHF,EAAAA,KAEFC,QAAQslI,KAAK,mCAAoCrlI,EAErD,CACF,CAEA,SAASklI,EAAYz3I,GACnB,IACEA,EAAYy3I,aACd,CAAE,MAAOllI,GACHF,EAAAA,KAEFC,QAAQslI,KAAK,gCAAiCrlI,EAElD,CACF,CAEA,SAAS0kI,IACP,MAAI,uBAAwB/5I,OAEnB26I,mBAEL,gBAAiB36I,OACZ46I,iBADT,CAIF,C,wEC7He,SAASpxG,EAAgB0+F,GACtC,MAAM2S,GAAel2I,EAAAA,EAAAA,GAAgBujI,IAErCxpI,EAAAA,EAAAA,KAAU,KAAMo8I,EAAAA,EAAAA,IAAeD,IAAe,CAACA,GACjD,C,2FCKA,MAAME,EAAOC,IAEE,SAASC,EAAcC,EAAgBC,EACpDC,GACA,MAAOC,EAAcC,IAAmB/3I,EAAAA,EAAAA,IAAS1G,QAAQk+I,GAAQvrI,SAASurI,KA+D1E,OA7CAxyI,EAAAA,EAAAA,KAAgB,KACd,MAAMgpC,EAAU2pG,EAAMzyI,QAChB8yI,EAAWA,KACf,MAAM53G,EAAY9mC,QAAQk+I,GAAQvrI,SAASurI,IAC3CO,EAAgB33G,GACZA,EACFy3G,KAAgB,GAEhBD,KAAe,GAGb5pG,aAAmBiqG,mBAAkBjqG,EAAQkqG,SAAW93G,EAAS,EAGjE+3G,EAAgBA,KACpBJ,GAAgB,GACZF,GAAeA,GAAc,EAAK,EAGlCO,EAAeA,KACnBL,GAAgB,GACZH,GAAcA,GAAa,EAAM,EAYvC,OATA3rI,SAASkE,iBAAiB,mBAAoB6nI,GAAU,GACxD/rI,SAASkE,iBAAiB,yBAA0B6nI,GAAU,GAC9D/rI,SAASkE,iBAAiB,sBAAuB6nI,GAAU,GAEvDhqG,IACFA,EAAQ79B,iBAAiB,wBAAyBgoI,GAAe,GACjEnqG,EAAQ79B,iBAAiB,sBAAuBioI,GAAc,IAGzD,KACLnsI,SAASoE,oBAAoB,mBAAoB2nI,GAAU,GAC3D/rI,SAASoE,oBAAoB,yBAA0B2nI,GAAU,GACjE/rI,SAASoE,oBAAoB,sBAAuB2nI,GAAU,GAC1DhqG,IACFA,EAAQ39B,oBAAoB,wBAAyB8nI,GAAe,GACpEnqG,EAAQ39B,oBAAoB,sBAAuB+nI,GAAc,GACnE,CACD,GAEA,IAEEZ,GAASxrI,EAAAA,GAIP,CAAC8rI,EAjEcO,KA+GjB,IAA+BrqG,EA9G7B2pG,EAAMzyI,UAAasyI,GAAQxrI,EAAAA,MAAW8rI,KA8GT9pG,EA3GZ2pG,EAAMzyI,SA4GlBozI,kBACVtqG,EAAQsqG,oBACCtqG,EAAQuqG,wBACjBvqG,EAAQuqG,0BACCvqG,EAAQwqG,sBACjBxqG,EAAQwqG,wBACCxqG,EAAQyqG,sBACjBzqG,EAAQyqG,uBAlHRV,GAAgB,GAAK,EAGAW,KAChBf,EAAMzyI,UAmHT+G,SAASysI,eACXzsI,SAASysI,iBACAzsI,SAAS0sI,oBAClB1sI,SAAS0sI,sBACA1sI,SAAS2sI,uBAClB3sI,SAAS2sI,yBACA3sI,SAAS4sI,sBAClB5sI,SAAS4sI,uBAtHTd,GAAgB,GAAM,GAiDf,EAAC,EAIZ,CAEO,MAAMe,EAAsBA,KACjC,MAAOhB,EAAcC,IAAmB/3I,EAAAA,EAAAA,KAAS,GAuBjD,OArBA7E,EAAAA,EAAAA,KAAU,KACR,MAAM68I,EAAWA,KACfD,EAAgBgB,IAAoB,EAGhCC,EAAyBv8I,OAAOw8I,UAAUC,GAAGC,EAAAA,EAAcC,kBAAmBrB,GAOpF,OANAt7I,OAAOw8I,UAAUnB,eAAe9uD,KAAK+uD,GAErC9rI,SAASkE,iBAAiB,mBAAoB6nI,GAAU,GACxD/rI,SAASkE,iBAAiB,yBAA0B6nI,GAAU,GAC9D/rI,SAASkE,iBAAiB,sBAAuB6nI,GAAU,GAEpD,KACLgB,MAEA/sI,SAASoE,oBAAoB,mBAAoB2nI,GAAU,GAC3D/rI,SAASoE,oBAAoB,yBAA0B2nI,GAAU,GACjE/rI,SAASoE,oBAAoB,sBAAuB2nI,GAAU,EAAM,CACrE,GACA,IAEIF,CAAY,EAGrB,SAASL,IACP,YAA0C,IAA/BxrI,SAASotI,kBACX,yBAC2C,IAAlCptI,SAASqtI,qBAClB,4BAC8C,IAArCrtI,SAASstI,wBAClB,0BAEF,EACT,CAEO,SAASR,IACd,MAAMS,EAAiB/B,IACvB,OAAOn+I,QAAQkgJ,GAAkBvtI,SAASutI,GAC5C,C,mCCjIO,IAAKL,EAAa,SAAbA,GAAa,OAAbA,EAAa,sCAAbA,EAAa,4BAAbA,EAAa,oCAAbA,EAAa,oBAAbA,CAAa,K,kcCuGzB,MAAMM,EASJ11D,WAAAA,CACStzE,EACC0kC,EACAukG,GACR,KAHOjpI,OAAAA,EAAc,KACb0kC,SAAAA,EAAsC,KACtCukG,QAAAA,EAAgBx1D,EAAA,qBAXF,IAAI8C,KAA2B9C,EAAA,+BAErB,IAAI8C,KAAsC9C,EAAA,uBAEjC,IAAEA,EAAA,4BAEE,IAAEA,EAAA,8BAkHjBy1D,EAAAA,EAAAA,KAAoB,KAClD,MAAM,QAAED,GAAYv1D,KACdy1D,EAAWz1D,KAAK01D,gBAChBre,EAAgBr3C,KAAK21D,qBAE3B31D,KAAK01D,gBAAkB,GACvB11D,KAAK21D,qBAAuB,GAE5B31D,KAAK1zE,OAAOspI,YAAY,CAAEL,UAASE,YAAYpe,EAAc,IAnH/D,CAGO/2C,OAAAA,GACP,CAEAjuE,IAAAA,IAAQ01B,GACNi4C,KAAK61D,qBAAqB,CACxB5jI,KAAM,OACN81B,QAEJ,CAEA++E,OAAAA,CAAQgvB,GACN,MAAM,cAAEC,EAAa,wBAAEC,GAA4Bh2D,MAC7C,cAAEq3C,KAAkB4e,GAAoBH,EAExC1xI,GAAYiwE,EAAAA,EAAAA,KACZzwC,EAA6B,CACjC3xB,KAAM,aACN7N,eACG6xI,GAGCC,EAAe,CAAE9xI,aAGjByiH,EAAwB,IAAIh3G,SAAQ,CAACwE,EAASC,KAClD3d,OAAOw/I,OAAOD,EAAc,CAAE7hI,UAASC,UAAS,IAGlD,GAAqD,mBAA1CsvB,EAAQmE,KAAKnE,EAAQmE,KAAKhwC,OAAS,GAAmB,CAC/D6rC,EAAQwyG,cAAe,EAEvB,MAAM5V,EAAW58F,EAAQmE,KAAKsuG,MAC9BH,EAAa1V,SAAWA,EACxBwV,EAAwBjxD,IAAIy7C,EAAU0V,EACxC,CAeA,OAbAH,EAAchxD,IAAI3gF,EAAW8xI,GAC7BrvB,EACGyvB,OAAM,KAAe,IACrBC,SAAQ,KACPR,EAAc/yD,OAAO5+E,GAEjB8xI,EAAa1V,UACfwV,EAAwBhzD,OAAOkzD,EAAa1V,SAC9C,IAGJxgD,KAAK61D,qBAAqBjyG,EAASyzF,GAE5BxQ,CACT,CAEA2vB,cAAAA,CAAeC,GACbA,EAAiBC,YAAa,EAE9B,MAAM,UAAEtyI,GAAc47E,KAAKg2D,wBAAwB7jH,IAAIskH,IAAqB,CAAC,EACxEryI,GAIL47E,KAAK61D,qBAAqB,CACxB5jI,KAAM,iBACN7N,aAEJ,CAEAuyI,SAAAA,CAAUp4I,GACR,MAAM,cAAEw3I,EAAa,QAAER,GAAYv1D,KAC/BzhF,EAAKg3I,UAAYA,GAIrBh3I,EAAKk3I,SAASj0I,SAASoiC,IAIrB,GAHqB,WAAjBA,EAAQ3xB,MAAqB+tE,KAAKhvC,UACpCgvC,KAAKhvC,SAASpN,EAAQd,QAEH,mBAAjBc,EAAQ3xB,KAA2B,CACrC,MAAMikI,EAAeH,EAAc5jH,IAAIyR,EAAQx/B,WAC3C8xI,IACEtyG,EAAQj2B,MACVuoI,EAAa5hI,OAAOsvB,EAAQj2B,OAE5BuoI,EAAa7hI,QAAQuvB,EAAQgzG,UAGnC,MAAO,GAAqB,mBAAjBhzG,EAAQ3xB,KAA2B,CAC5C,MAAMikI,EAAeH,EAAc5jH,IAAIyR,EAAQx/B,WAC/C8xI,GAAc1V,cAAc58F,EAAQizG,aACtC,MAAO,GAAqB,mBAAjBjzG,EAAQ3xB,KACjB,MAAM,IAAI0yE,MAAM/gD,EAAQj2B,OAAOzU,QACjC,GAEJ,CAEQ28I,oBAAAA,CAAqBjyG,EAAwByzF,GACnDr3C,KAAK01D,gBAAgBzwI,KAAK2+B,GAEtByzF,GACFr3C,KAAK21D,qBAAqB1wI,QAAQoyH,GAGpCr3C,KAAK82D,uBACP,EAcK,SAASr7C,EACdJ,EACArqD,EACAukG,GAEA,MAAMwB,EAAY,IAAIzB,EAAkBj6C,EAAQrqD,EAAUukG,GAE1D,SAASyB,GAAc,KAAEz4I,IACvBw4I,EAAUJ,UAAUp4I,EACtB,CAQA,OANA88F,EAAOrvF,iBAAiB,UAAWgrI,GAEnCD,EAAUz2D,QAAU,KAClB+a,EAAOnvF,oBAAoB,UAAW8qI,EAAc,EAG/CD,CACT,C,kJCrOA,MAAME,EAAS,IAAIp0D,IAEnB,IAGIq0D,EAHAC,EAAwB,GACxBC,EAAwB,GA0D5B,SAASC,EAASpN,EAAkBqN,GAClC,MAAMC,EAAeL,GAAkBD,EAAO9kH,IAAI+kH,GAC9CK,IACFA,EAAa18I,MAAMga,QACnB0iI,EAAa18I,MAAM4nD,YAAc,EAC7B80F,EAAajN,eAAeiN,EAAajN,iBAG/C,MAEMkN,EAAcC,EAAgBxN,GAFrBp1I,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAa41I,YAAY7yI,QAAUmD,EAAAA,GAAYqI,OAExByyI,GACrD,IAAKE,EACH,OAGF,IAAKP,EAAOzqI,IAAIgrI,GAId,YAFA3hJ,EAAAA,EAAAA,MAAa6uH,iBAAgBgzB,EAAAA,EAAAA,IAAgBC,EAAaH,GAAaI,aAKzE,MAAMC,EAAYZ,EAAO9kH,IAAIqlH,GAEzBK,EAAUxN,aACZwN,EAAUxN,cAGZ6M,EAAiBM,EAEbK,EAAUh9I,MAAMo+C,MAClBonC,EAAAA,EAAAA,GAASw3D,EAAUh9I,MAEvB,CAEO,SAASq1H,IACd,MAAMqnB,EAAeL,GAAkBD,EAAO9kH,IAAI+kH,GAC9CK,GACFA,EAAa18I,MAAMga,OAEvB,CAEO,SAASg2H,EACdZ,EACAvtI,EACAomE,EACAunE,EACAC,GAEA,IAAK2M,EAAOzqI,IAAIy9H,GAAU,CACxB,MAAM6N,EAxGV,SACE7N,EACAh4H,EACAo4H,EACAC,GAEA,MAAMzvI,EAAQ,IAAI7B,MAElB,SAAS++I,EAAYjN,GACnB,OAAQtnI,IACDyzI,EAAOzqI,IAAIy9H,MAIZsC,EAAAA,EAAAA,GAAwB1xI,IAI5Bo8I,EAAO9kH,IAAI83G,GAAUE,SAAS3oI,SAASshE,IACrCA,EAAQgoE,EAAWtnI,EAAE,IACrB,CAEN,CAoBA,OAlBA3I,EAAMmR,iBAAiB,aAAc+rI,EAAY,iBACjDl9I,EAAMmR,iBAAiB,OAAQ+rI,EAAY,WAC3Cl9I,EAAMmR,iBAAiB,QAAS+rI,EAAY,YAC5Cl9I,EAAMmR,iBAAiB,YAAa+rI,EAAY,gBAChDl9I,EAAMmR,iBAAiB,aAAc+rI,EAAY,iBACjDl9I,EAAMmR,iBAAiB,UAAW+rI,EAAY,cAC9Cl9I,EAAMmR,iBAAiB,SAAS,KACzBirI,EAAOzqI,IAAIy9H,MAIZsC,EAAAA,EAAAA,GAAwB1xI,IAI5Bw8I,EAASpN,GAAQ,IAGZ,CACLpvI,QACAoX,OACAi5H,MAAO,IAAI8M,MAAMn9I,EAAO,CACtBs3B,IAAKA,CAAC7lB,EAAQmlC,IAAgCnlC,EAAOmlC,KAEvD04F,SAAU,GACVE,cACAC,gBAEJ,CAoDkB2N,CAAYhO,EAASvtI,EAAW2tI,EAAaC,GAC3D2M,EAAOlyD,IAAIklD,EAAS6N,GAwIxB,SAAyBA,EAAc7N,GAClB,UAAf6N,EAAM7lI,MAAqBmlI,EAAWh+H,SAAS6wH,KACjDmN,EAAWnyI,KAAKglI,GAChBmN,EAAW3pF,KAAKyqF,IAGC,UAAfJ,EAAM7lI,MAAqBklI,EAAW/9H,SAAS6wH,KACjDkN,EAAWlyI,KAAKglI,GAChBkN,EAAW1pF,KAAKyqF,GAEpB,CAjJIC,CAAgBL,EAAO7N,EACzB,CACA,MAAM,MAAEpvI,EAAK,MAAEqwI,EAAK,SAAEf,GAAa8M,EAAO9kH,IAAI83G,GAI9C,OAFAE,EAASllI,KAAK69D,GAEP,CACLqd,IAAAA,CAAKlnC,GACH,IAAKp+C,EAAMulF,OAAQ,OACnB,MAAMm3D,EAAeL,GAAkBD,EAAO9kH,IAAI+kH,GAC9CK,GAAgBL,IAAmBjN,IACrCsN,EAAa18I,MAAMga,QACnB0iI,EAAa18I,MAAM4nD,YAAc,GAC7B8pF,EAAAA,EAAAA,GAAwBgL,EAAa18I,SACvC08I,EAAa18I,MAAMsT,QAAQiqI,sBAAwB,QAEjDb,EAAajN,eAAeiN,EAAajN,iBAG/C4M,EAAiBjN,EAEZpvI,EAAMo+C,MACTp+C,EAAMo+C,IAAMA,EACZp+C,EAAMgnI,QAAU,OAEZ5oF,EAAI7/B,SAAS,kBAAoBohB,EAAAA,YAC5B3/B,EAAMsT,QAAQiqI,uBACrBC,EAAAA,EAAAA,GAA4Bx9I,MAIhCwlF,EAAAA,EAAAA,GAASxlF,GA+Hf,SAAsBoX,EAAqBg4H,GACzC,IAAIp1I,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAagiJ,aAAaC,iBAAmBC,EAAAA,GAAoBC,MAAO,OAC3F,MAAM,OAAElkJ,IAAWmjJ,EAAAA,EAAAA,IAAgBC,EAAa1N,GAAS2N,YACnDc,GAAe79H,EAAAA,EAAAA,MAAyBvkB,EAAAA,EAAAA,QAAc/B,OACtDokJ,EAAezjJ,GACnBA,EAAGypC,WAAY,MAAKpqC,MAAcmkJ,GAAgBxjJ,EAAGypC,WAAY,MAAK+5G,KAG3D,UAATzmI,IACFmlI,EAAaA,EAAWrgJ,OAAO4hJ,IAGpB,UAAT1mI,IACFklI,EAAaA,EAAWpgJ,OAAO4hJ,GAEnC,CA7IMC,CAAal8I,EAAWutI,EAC1B,EAEAp1H,KAAAA,GACMqiI,IAAmBjN,GACrBpvI,EAAMga,OAEV,EAEAT,IAAAA,GACE,GAAI8iI,IAAmBjN,EAAS,CAE9B,MAAMwC,EAAU5xI,EAAMo+C,IACtBp+C,EAAMga,SAENiiB,EAAAA,EAAAA,KAAoB,KAClBj8B,EAAMo+C,IAAM,GACZp+C,EAAMo+C,IAAMwzF,CAAO,GAEvB,CACF,EAEA/uI,cAAAA,CAAeyzG,GACT+lC,IAAmBjN,IACjBpvI,EAAMg+I,SACRh+I,EAAMg+I,SAAS1nC,GAEft2G,EAAM4nD,YAAc0uD,EAG1B,EAEA45B,SAAAA,CAAUh3H,GACJmjI,IAAmBjN,IACrBpvI,EAAMkZ,OAASA,EACflZ,EAAMioD,OAAQ,EAElB,EAEAkoF,eAAAA,CAAgB8N,GACV5B,IAAmBjN,IACrBpvI,EAAMuxI,aAAe0M,EAEzB,EAEA7N,WAAAA,CAAYnoF,GAERjoD,EAAMioD,WADM7tD,IAAV6tD,GACajoD,EAAMioD,MAEPA,CAElB,EAEAooF,QAEAG,gBAAAA,GACEgM,EAASpN,EACX,EAEAplF,OAAMA,KACI4yF,EAAgBxN,GAASp1I,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAa41I,YAAY7yI,QAG3EurD,QAAOA,KACG6yF,EAAgBxN,GAASp1I,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAa41I,YAAY7yI,QAAQ,GAGnFiyI,oBAAAA,GACE+L,EAASpN,GAAS,EACpB,EAEA3pD,OAAAA,CAAQy4D,GAAwB,GAC9B,MAAMjB,EAAQb,EAAO9kH,IAAI83G,GACpB6N,IAILA,EAAM3N,SAAW2N,EAAM3N,SAASpzI,QAAQ4jG,GAAMA,IAAM73B,IAE/Cg1E,EAAM3N,SAASpyI,SAClB+/I,EAAMj9I,MAAMga,QACZoiI,EAAOj0D,OAAOinD,GAEV8O,GAgCZ,SAAyBjB,EAAc7N,GACrC,MAAM+O,EAAiBtvI,GAAgBA,IAAOugI,EAC3B,UAAf6N,EAAM7lI,OACRmlI,EAAaA,EAAWrgJ,OAAOiiJ,IAGd,UAAflB,EAAM7lI,OACRklI,EAAaA,EAAWpgJ,OAAOiiJ,GAEnC,CAxCUC,CAAgBnB,EAAO7N,GAGrBA,IAAYiN,IACdA,OAAiBjiJ,IAGvB,EAEJ,CAkDA,SAASwiJ,EAAgBrV,EAAoB/oI,EAASmD,EAAAA,GAAYqI,OAAQyyI,GACxE,MACMpQ,EAlDR,SAAuB4Q,GACrB,OAAQA,EAAM7lI,MACZ,IAAK,QAAS,OAAOmlI,EACrB,IAAK,QAAS,OAAOD,EACrB,QAAS,OAEb,CA4CgB+B,CADAjC,EAAO9kH,IAAIiwG,IAEzB,IAAK8E,EAAO,OAEZ,GAAI7tI,IAAWmD,EAAAA,GAAYsI,OAAQ,CACjC,MAAM4uD,EAAQwzE,EAAMr8H,QAAQu3H,GAC5B,GAAI1uE,EAAQ,EAAG,OAEf,OAAOwzE,EAAMxzE,GADK4jF,GAAkB,EAAI,GAE1C,CAEA,MAAM,OAAE/iJ,IAAWmjJ,EAAAA,EAAAA,IAAgBC,EAAavV,GAAWwV,YACrDuB,EAAYjS,EAAMnwI,QAAQ7B,GAAOA,EAAGypC,WAAY,MAAKpqC,OACrDm/D,EAAQylF,EAAUtuI,QAAQu3H,GAChC,GAAI1uE,EAAQ,EAAG,OACf,IAAIpiB,EAAYj4C,IAAWmD,EAAAA,GAAYqI,QAAU,EAAI,EAErD,OADIyyI,IAAgBhmG,IAAc,GAC3B6nG,EAAUzlF,EAAQpiB,EAC3B,CAEO,SAASzzC,EAAY3E,GAC1B,MAAMu4C,GAAM2nG,EAAAA,EAAAA,IAAoBlgJ,GAChC,GAAKu4C,EAGL,MAAQ,GAAEA,KAAOv4C,EAAQI,MAC3B,CAEA,SAASq+I,EAAa1N,GAGpB,MAAO,CACL2N,WAHiB3N,EAAQh9H,MAAM,qBAAsB,GAIrD3T,KAHW0qC,OAAOimG,EAAQx3E,MAAM,KAAK4jF,OAKzC,CAGA,SAAS6B,EAAkBmB,EAAeC,GACxC,IAAKD,IAAQC,EAAK,OAAO,EACzB,MAAQhgJ,KAAMigJ,EAAS3B,WAAY4B,GAAW7B,EAAa0B,IACnD//I,KAAMmgJ,EAAS7B,WAAY8B,GAAW/B,EAAa2B,GACrDvsF,EAAO0sF,EAAUF,EACvB,OAAgB,IAATxsF,EAAa2sF,EAAOC,cAAcH,GAAUzsF,CACrD,C,kBCtWe,SAAS+pE,EAAc/+H,EAAgB27D,GACpD,OAAOA,EAAQ90D,KAAKgB,MAAM8zD,EAAQ37D,GAAUA,CAC9C,C,kECMA,MAAM6hJ,EAAkB,GAClBC,EAAiB,IAEvB,IAAIC,EAAsC,GACtCC,GAAU,EAEC,SAASC,EAASx1H,EAAa0lE,GAC5C4vD,EAAiB70I,KAAK,CAAEuf,MAAK0lE,aACxB6vD,IACHA,GAAU,EACVnlI,YAAWzI,gBAOfA,iBACE,IAAI8yC,EAAQ,EACZ,IAAK,MAAMg7F,KAAmBH,EAC5BI,EAAYD,GACZh7F,IACIA,IAAU26F,UACN/kI,EAAAA,EAAAA,IAAMglI,GACZ56F,EAAQ,GAGZ66F,EAAmB,EACrB,CAjBYK,GACNJ,GAAU,CAAK,GACdF,GAEP,CAeA,SAASK,GAAY,IAAE11H,EAAG,SAAE0lE,IAC1B,MAAMvlE,EAAO7c,SAASlQ,cAAc,KACpC+sB,EAAKrb,KAAOkb,EACZG,EAAKrY,OAAS,SACdqY,EAAKy1H,IAAM,sBACXz1H,EAAKq1H,SAAW9vD,EAChB,IACEvlE,EAAK01H,OACP,CAAE,MAAO7sI,GAEPE,QAAQC,MAAMH,EAChB,CACF,C,kDChDe,SAASupB,EAAqB8S,EAAsB60B,EAAiB47E,GAClF,IAAK57E,GAAS70B,IAAY/hC,SAAS4E,cACjC,OAGF,MAAMwpB,EAAY59B,OAAO69B,eACnB6T,EAAQliC,SAASmiC,cACjBH,EAAYD,EAAQC,WAAaD,EAElC1vB,EAAAA,IAAiBmgI,GAA0BxwG,GAAcA,EAAUywG,WAKxEvwG,EAAMwwG,mBAAmBF,EAAuBzwG,EAAUC,GAE1DE,EAAMmkB,UAAS,GACfj4B,EAAUkU,kBACVlU,EAAUmU,SAASL,IARjBH,EAAQjiC,OASZ,C,+ECdO,MAAMkuH,EAAcl3H,KAAKC,IAAIylI,UAAUmW,qBAAuB,EAAG,GAExE,IAAIC,EAKW,SAASC,IACtB,OAAIC,EAAAA,IAAgB,IACfF,IACHA,EAAY,IAAI/7I,MAAMm3H,GAAah3H,UAAK7J,GAAW6B,KACjD,KACE,MAAMukG,EAAS,IAAIK,OAAO,IAAI5pF,IAAI,oBAElC,MAAO,CAAEupF,SAAQ07C,WADCt7C,EAAAA,EAAAA,GAAgCJ,OAAQpmG,EAAW,SACzC,KAK3BylJ,EACT,CAEO,SAAS7kB,EAAmBjyF,EAA8D8vB,GAC/F,OAAOinF,IAAqBjnF,GAAOqjF,UAAUjwB,QAAQljF,EACvD,C,+DC7BA,MAAMi3G,EAAY,CAChBC,OAAQ,+BACRC,KAAM,qCACNC,IAAK,gCACLC,MAAO,0BAIHC,EAAe,IAAIr4D,IAAIlsF,OAAO61F,QAAQ,CAC1C,mBAAoB,UACpB,eAAgB,UAChB,sBAAuB,UACvB,yBAA0B,UAC1B,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,mBAAoB,UACpB2uD,mBAAoB,UACpBC,SAAU,UACVC,UAAW,UACX1wE,MAAO,UACP2wE,KAAM,UACNC,KAAM,UACNC,UAAW,UACXC,eAAgB,UAChBC,MAAO,UACPC,OAAQ,UACRC,KAAM,aAGFC,EAAgB,CACpB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAGnF,SAASC,EAAcC,EAAkCpuC,EAAwCz5C,EAAO,IAC7G,MAAM,IAAEg6C,EAAG,KAAEW,GAASlB,EAChBquC,EAAcnB,EAAUkB,GAC9B,OAAQA,GACN,IAAK,SACH,MAAQ,GAAEC,WAAqB9tC,KAAOW,MAASX,KAAOW,KAAQ36C,KAChE,IAAK,OACH,MAAQ,GAAE8nF,QAAkB9tC,KAAOW,SAAY36C,cAAiBg6C,KAAOW,IACzE,IAAK,QACH,MAAQ,GAAEmtC,OAAiB9tC,KAAOW,IAEpC,QACE,MAAQ,GAAEmtC,WAAqB9tC,UAAYW,UAAa36C,IAE9D,CAEO,SAASi6C,EAAkBD,EAAah6C,GAE7C,OAAQ,aAAet1D,KAAKq9I,IAAI/tC,GAAOtvG,KAAKkuG,GAAK,MAAS,GAAK54C,CACjE,CAEO,SAASi7C,EAAgBl9F,GAC9B,OAAKA,EACG,0CAAyCA,WAD/B,EAEpB,CAGO,SAAS+8F,EAAc/8F,GAC5B,OAAKA,EACEipI,EAAa/oH,IAAIlgB,IACnBipI,EAAa/oH,IAAIlgB,EAAKwgD,MAAM,KAAK,KACjCopF,GAGiBK,EAHYjqI,EAI3BiqI,EAAIzpF,MAAM,IAAIz+C,QAAO,CAACmoI,EAAUC,KAElCD,GAAY,GAAKA,EAAYC,EAAQC,WAAW,GAAM,GAAI,GANrBR,EAAc9jJ,SAHtC,UAMpB,IAAwBmkJ,CAFxB,C,iFC5CA,MAAMI,EAAmB,CACvBn8D,UAAMlrF,EACN4f,WAAO5f,EACPu2I,kBAAcv2I,EACd02I,iBAAa12I,EACb82I,mBAAe92I,EACf62I,eAAW72I,EACXmf,UAAMnf,EACN22I,YAAQ32I,GAGH,SAASk2I,EAAqB5/C,EAA0B4+C,GAC7D,MAAM,aAAEoS,GAAiBjkJ,OAAOgsI,UAC5BiY,GACEhxD,GAAU+gD,EAAe/gD,GACzB4+C,GAAUqS,EAAwBrS,IAGtCz8H,QAAQslI,KAAK,iDAEjB,CAEO,SAAS1G,EAAe/gD,GAC7B,MAAM,aAAEgxD,GAAiBjkJ,OAAOgsI,UAC5BiY,IAEFA,EAAahxD,SAAWA,GAAY,KAExC,CAEO,SAASixD,EAAwBrS,GACtC,MAAM,aAAEoS,GAAiBjkJ,OAAOgsI,UAC5BiY,GACF5lJ,OAAO61F,QAAQ,IAAK8vD,KAAqBnS,IAAY3oI,SAAQ,EAAEiwC,EAAKqxB,MAClE,IAEEy5E,EAAaE,iBAAiBhrG,EAAKqxB,EACrC,CAAE,MAAOt1D,GACP,IAIR,CAEO,SAASkvI,IACd,MAAM,aAAEH,GAAiBjkJ,OAAOgsI,UAC5BiY,IAEFA,EAAahxD,SAAW,KACxBixD,EAAwBF,GACpBC,EAAaI,gBAAeJ,EAAaI,cAAgB,QAC7DJ,EAAalQ,qBAEjB,CAEO,SAASJ,EAAiB53C,EAAuC,QACtE,MAAM,aAAEkoD,GAAiBjkJ,OAAOgsI,UAC5BiY,GAAgBA,EAAaI,gBAC/BJ,EAAaI,cAAgBtoD,EAEjC,CAEO,SAASg4C,EAAiBh4C,GAC/B,IAAKA,QAA4Bp/F,IAAnBo/F,EAAMtvD,eAA6C9vC,IAAnBo/F,EAAM12F,SAAwB,OAC5E02F,EAAMtvD,SAAWnmC,KAAKC,IAAIw1F,EAAMtvD,SAAUsvD,EAAM12F,UAEhD,MAAM,aAAE4+I,GAAiBjkJ,OAAOgsI,UAChCiY,GAAclQ,mBAAmBh4C,EACnC,CAEO,SAASuoD,GAAmB,MACjCt4I,EAAK,OAAEmnF,EAAM,MAAE8K,EAAK,QAAEsmD,IAEtB,GAAI,kBAAmBvkJ,OACrB,OAAO,IAAIA,OAAOwkJ,cAAc,CAC9Bx4I,QACAmnF,SACA8K,QACAsmD,WAIN,C,kDCxGA,MAAME,EAAQ,IAAIC,QAKH,SAAS1rI,EAAgC2rI,GACtD,MAAO,IAAIl1G,KACT,MAAMm1G,EAASH,EAAM5qH,IAAI8qH,GACzB,GAAIC,IAAUC,EAAAA,EAAAA,GAAqBD,EAAOE,SAAUr1G,GAClD,OAAOm1G,EAAOG,WAGhB,MAAMn9I,EAAS+8I,KAAMl1G,GAErB,OADAg1G,EAAMh4D,IAAIk4D,EAAI,CAAEG,SAAUr1G,EAAMs1G,WAAYn9I,IACrCA,CAAM,CAEjB,C,4DCdA,MACMo9I,EAAoB,OACpBC,EAAmB,QAEnBC,EAAc,IAAI36D,IAClB46D,EAAY,IAAI56D,IAChB66D,EAAkB,IAAI76D,IAErB12E,eAAgBk1H,EACrB78G,EACA3rB,EAAQ,EACR8kJ,EAAYL,GAEZ,MAAMrwI,EAAQuX,EAAIvX,MAAM,kBACxB,IAAI2wI,EAOJ,IALEA,EADE3wI,EACSA,GAAS+2B,OAAO/2B,EAAM,IAEtBwwI,EAAUtrH,IAAI3N,KAGd,CACX,GAAIo5H,GAAY/kJ,GAAS+kJ,EAAU,OAEnC,IAAI9kJ,EAAMD,EAAQ8kJ,EAAY,EAC1BC,GAAY9kJ,EAAM8kJ,IACpB9kJ,EAAM8kJ,EAAW,GAInB,MAAMC,EAAY,GAAEr5H,KAAO3rB,KAASC,IACpC,IAAIglJ,EAAcN,EAAYrrH,IAAI0rH,GAElC,IAAKC,EAAa,CAChB,IAAIh3B,EAAU42B,EAAgBvrH,IAAI0rH,GAC7B/2B,IACHA,GAAUre,EAAAA,EAAAA,IAAQ,gBAAiB,CACjCmoC,YAAaz0I,EAAAA,GAAewlI,YAC5Bn9G,MACA3rB,QACAC,QAGF4kJ,EAAgB34D,IAAI84D,EAAU/2B,IAGhC,MAAM5mH,QAAe4mH,EAAQyvB,SAAQ,KACnCmH,EAAgB16D,OAAO66D,EAAS,IAGlC,IAAK39I,GAAQ49I,YAAa,OAGtB59I,EAAO69I,WAAaH,IACtBA,EAAW19I,EAAO69I,SAClBN,EAAU14D,IAAIvgE,EAAKtkB,EAAO69I,WAI5BD,EAAc59I,EAAO49I,YAGjBhlJ,GAAOykJ,GACTC,EAAYz4D,IAAI84D,EAAU39I,EAAO49I,YAErC,OAGMA,EAENjlJ,EAAQC,EAAM,CAChB,CACF,C,wEC5EA,MAAMklJ,EAAcl2I,SAASlQ,cAAc,OAEpC,SAAS8+B,EAAsBztB,GACpC,MAAMitB,EAAY59B,OAAO69B,eAEzB,GAAID,GAAWM,YAAcN,EAAUI,WAAY,CACjD,MAAM0T,EAAQ9T,EAAUM,WAAW,GACnCwT,EAAMi0G,iBAEN,MAAMlxI,EAAWi9B,EAAMk0G,yBAAyBj1I,GAC1Ck1I,EAAmBpxI,EAAS+8B,UAClCE,EAAMo0G,WAAWrxI,GACboxI,GACFn0G,EAAMq0G,cAAcF,GACpBn0G,EAAMs0G,YAAYH,IAElBn0G,EAAMmkB,UAAS,GAEjBj4B,EAAUkU,kBACVlU,EAAUmU,SAASL,EACrB,CACF,CAEO,SAAS+jD,EAAuBnjB,EAAyB2zE,GAC9D,IAAK3zE,EACH,MAAO,GAGT,MAAM4zE,EAAMlmJ,OAAO69B,eACnB,IAAKqoH,IAAQA,EAAIloH,WACf,OAAOs0C,EAAUr9D,UAGnB,MAAMy8B,EAAQw0G,EAAIhoH,WAAW,GAAGioH,aAChC,OAAKz0G,EAAM00G,eAAe9zE,GAIrB2zE,GAAsB3zE,EAAUwzB,SAASp0D,EAAMmjD,0BAIpDnjD,EAAMmkB,UAAS,GACfnkB,EAAME,SAAS0gC,EAAW,GAE1BozE,EAAYzwI,UAAY,GACxBywI,EAAY91I,YAAY8hC,EAAM20G,iBAEvBX,EAAYzwI,WATV,GAJAq9D,EAAUr9D,SAcrB,CAGO,SAASglF,EAAiB1oD,GAC/B,IAAIyoD,EAAgB,EACpB,MAAMp8D,EAAY59B,OAAO69B,eACzB,IAAKD,GAAsC,IAAzBA,EAAUI,WAC1B,OAAOg8D,EAGT,MAAMtoD,EAAQ9T,EAAUM,WAAW,GAC7BooH,EAAa50G,EAAMy0G,aAKzB,OAJAG,EAAWpE,mBAAmB3wG,GAC9B+0G,EAAWz0G,OAAOH,EAAM60G,aAAc70G,EAAM80G,WAC5CxsD,EAAgBssD,EAAWt5G,WAAWvtC,OAE/Bu6F,CACT,CAGO,SAASG,EAAiB5oD,EAAe9E,GAC9C,IAAK,MAAM17B,KAAQwgC,EAAQr/B,WACzB,GAAInB,EAAK4B,WAAa8zI,KAAKC,UAAW,CACpC,GAAK31I,EAActR,QAAUgtC,EAAU,CACrC,MAAMiF,EAAQliC,SAASmiC,cACjB/T,EAAY59B,OAAO69B,eAMzB,OALA6T,EAAME,SAAS7gC,EAAM07B,GACrBiF,EAAMmkB,UAAS,GACfj4B,EAAUkU,kBACVlU,EAAUmU,SAASL,IAEX,CACV,CACEjF,GAAY,WAAY17B,EAAOA,EAAKtR,OAAmB,CAE3D,MAEE,IAAkB,KADlBgtC,EAAW0tD,EAAiBppF,EAAM07B,IAEhC,OAAQ,EAKd,OAAOA,CACT,CAEO,SAASk6G,IACd,MAAM/oH,EAAY59B,OAAO69B,eACzBD,GAAWkU,iBACb,C,kBClGA,IAAI80G,EAEG,SAAS7mI,EAAsB8mI,EAAS,IAAK3e,EAA8B4e,GAAa,GACxFF,IACHA,EAAep3I,SAASlQ,cAAc,SACtCsnJ,EAAazwI,aAAa,OAAQ,SAGpCywI,EAAazwI,aAAa,SAAU0wI,GAEhCC,EACFF,EAAalxI,gBAAgB,YAE7BkxI,EAAazwI,aAAa,WAAY,YAIxCywI,EAAaG,SAAW,KACxBH,EAAa3+I,MAAQ,GACrB2+I,EAAaG,SAAW7e,EAExB0e,EAAa7E,OACf,C,kDCrBA,SAAgB,KAAO,WAAW,OAAS,WAAW,QAAU,WAAW,KAAO,WAAW,KAAO,WAAW,oBAAsB,WAAW,mBAAqB,WAAW,OAAS,WAAW,YAAc,W,mCCAlN,SAAgB,KAAO,WAAW,KAAO,WAAW,OAAS,WAAW,aAAe,WAAW,MAAQ,WAAW,iBAAmB,WAAW,gBAAkB,WAAW,UAAY,W","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMarkScrolled/useMarkScrolled.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThemeKey, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ThemeKey;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  forwardedMessagesCount,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat,\n      chatFullInfo,\n      isChatWithBot,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!);\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, threadId, windowWidth, paidMessagesStars,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={!paidMessagesStars && isInScheduledList}\n        canSchedule={!paidMessagesStars}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName('paidStarsBadge', shouldRenderPaidBadge && 'visible')}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={!paidMessagesStars && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserId,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n  isAccountFrozen?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n      + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_IOS, IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            asPreview: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n  isAccountFrozen,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type {\n  IAnchorPosition, MessageListType, SharedSettings, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","/* eslint-disable no-bitwise */\n// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata(message.chatId, message.id, isTranslatable, detectedLanguage);\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata(chatId: string, id: number, isTranslatable: boolean, detectedLanguage?: string) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / messagesChecked;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type { RefObject } from 'react';\nimport type React from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: RefObject<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: RefObject<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      }),\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  // eslint-disable-next-line @typescript-eslint/comma-dangle\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n        // eslint-disable-next-line no-bitwise\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const audioRef = useRef<HTMLAudioElement | undefined>(null);\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji: emoji!,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers!.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        ) }\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cutoutRef = useRef<HTMLDivElement>(null);\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = selectChat(global, giveaway?.channelIds[0]!)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported'}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n              {renderIcon(button)}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount!)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo!.messagesCount!)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {paidMessageStars && (\n        <span className=\"message-price\">{\n          formatStarsAsIcon(lang, paidMessageStars, {\n            asFont: true,\n            className: 'message-price-star-icon',\n            containerClassName: 'message-price-stars-container',\n          })\n        }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import React, { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}%\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const timerCircleRef = useRef<SVGCircleElement>(null);\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  onStopEffect?: VoidFunction;\n};\n\nconst Sticker: FC<OwnProps> = ({\n  message, observeIntersection, observeIntersectionForPlaying, shouldLoop,\n  shouldPlayEffect, withEffect, onStopEffect,\n}) => {\n  const { showNotification, openStickerSet } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')!\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default Sticker;\n","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageDownloadableMedia,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  onIntersectPinnedMessage,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const bottomMarkerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const quickReactionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    webPage, invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n  && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album!.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang,\n    selectMessage,\n    message,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId, isQuote } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled || shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isQuote || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(lang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album!, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName('quick-reaction', isQuickReactionVisible && !hasActiveReactions && 'visible')}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? lang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    return webPage && (\n      <WebPage\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album!}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {lang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderSenderName(shouldSkipRenderForwardTitle:boolean = false, shouldSkipRenderAdminTitle: boolean = false) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(lang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(lang, originSender!);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.usernames?.length;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.usernames?.length && (\n          <span className=\"interactive\">\n            <span className=\"via\">{lang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${botSender.usernames[0].username}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{lang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || lang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = message.content.webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || replyMessageChat.isRestricted);\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        focusedQuoteOffset,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getMessageWebPagePhoto } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video, webPage },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || webPage?.video;\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, webPage, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage) {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import React from '../../../lib/teact/teact';\n\ninterface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn } : OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const stickerRef = useRef<HTMLDivElement>(null);\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  isEditing?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  isEditing,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)} — {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { isUserId } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import type { RefObject } from '../../lib/teact/teact';\nimport { useEffect } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { throttle } from '../../util/schedulers';\n\nconst THROTTLE_DELAY = 100;\n\nconst useMarkScrolled = ({\n  containerRef, selector,\n}: {\n  containerRef: RefObject<HTMLDivElement | null>;\n  selector: string;\n}, deps: unknown[]) => {\n  useEffect(() => {\n    const elements = containerRef?.current?.querySelectorAll(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n      requestMutation(() => {\n        target.classList.toggle('scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => el.addEventListener('scroll', handleScroll, { passive: true }));\n    // Trigger the scroll handler immediately to apply the current state\n    elements.forEach((el) => el.dispatchEvent(new Event('scroll', { bubbles: false })));\n\n    return () => {\n      elements.forEach((el) => el.removeEventListener('scroll', handleScroll));\n    };\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useMarkScrolled;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","target","closest","has","preventDefault","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","messageListType","paidMessagesStars","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","oldLang","useLang","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","shouldPaidMessageAutoApprove","settings","byKey","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","selectNotifyDefaults","selectNotifyException","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","starsBalance","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","isAccountFrozen","selectIsCurrentUserFrozen","isAppConfigLoaded","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","Composer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","inputRef","counterRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","starsForAllMessages","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleSendWithConfirmation","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","canSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","Transition","slideClassName","activeKey","direction","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","getPeerTitle","messagePriceInStars","confirmHandler","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSharedSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","selectTopic","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","confirmPaymentMessage","formatStarsAsText","totalAmount","count","withMarkdown","pluralValue","confirmLabel","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","hasAvatarMediaViewer","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","emojiStatusSlug","slug","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openUniqueGiftBySlug","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","PeerColorWrapper","emojiIconClassName","shouldReset","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","asPreview","emojiSize","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","containerRef","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","getIsChatMuted","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","container","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","onChange","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterPeersByQuery","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isStarsBalanceModeOpen","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","openPaymentMessageConfirmDialogOpen","setPaidMessageAutoApprove","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","getSingularPaidMedia","extendedMedia","singularMedia","AlbumRectPart","Top","Bottom","accumulate","initValue","accumulator","calculateContainerSize","layout","dimensions","sides","calculateAlbumLayout","album","ratios","messages","isSingleMessage","paidMedia","getMessageContent","calculateMediaDimensions","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","thirdWidth","layoutThreeTopAndOther","layoutThree","w","h0","h","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","worker","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","createConnector","Worker","CHAT_STATS","throttledMakeChatDecision","throttle","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","isInSelectMode","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","contains","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","pictogramUrl","handleFastClick","peerColor","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","ownProps","clickArg","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","Photo","VideoWithSelect","Video","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","canAutoPlay","selectCanAutoPlayMedia","shouldAffectAppendix","mediaType","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","IS_ELECTRON","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","noPlay","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","noLoad","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","prev","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","AnimatedIconWithPreview","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","RE_TME_LINK","renderIcon","Invoice","forcedWidth","invoice","getMessageInvoice","currency","isTest","photoUrl","getWebDocumentHash","withBlurredBackground","useBlurredMediaThumbRef","prevShouldAffectAppendix","contentEl","MESSAGE_CONTENT_SELECTOR","getCustomAppendixBg","appendixBg","CUSTOM_APPENDIX_ATTRIBUTE","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","PI","MOVE_THRESHOLD","PinSvg","cx","cy","Location","countdownRef","location","getMessageLocation","serverTime","isGeoLiveExpired","secondsBeforeEnd","period","point","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","lat","getMetersPerPixel","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","long","pinClassName","heading","getVenueColor","venueType","iconSrc","getVenueIconUrl","mapPin","renderPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","forwardsCount","repliesTitle","time","isImported","containerClassName","isVideoProcessingPending","MessagePhoneCall","phoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","children","isClickable","isBought","starsAmount","getPercentage","total","toFixed","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","Poll","onSendVote","loadMessage","openPollResults","summary","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closed","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isPublic","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","quiz","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","getPollTypeString","CheckboxGroup","loadingOptions","isRound","RadioGroup","loadingOption","getReadableVotersCount","Sticker","withEffect","onStopEffect","effectRef","hasEffect","isMirrored","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","useOverlayPosition","anchorRef","overlayRef","openModal","isMemojiSticker","getStickerDimensions","fullMediaHash","fullMediaClassName","AnimatedSticker","onEnded","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","thumbUrl","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","getMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","appConfig","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","lastPlaybackTimestamp","selectMessageLastPlaybackTimestamp","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","useShowTransition","noMountTransition","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","asForwarded","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleMediaClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","openAudioPlayer","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","threshold","promise","request","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","gift","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","getPeerFullTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","MIN_MEDIA_WIDTH_WITH_TEXT","getMinMediaWidth","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","meta","Reactions","metaChildren","noRecentReactors","renderWebPage","backgroundEmojiId","onAudioPlay","onDocumentClick","onCancelMediaTransfer","renderInvertibleMediaContent","messageText","shouldRenderSenderName","renderForwardTitle","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","onCopy","onDoubleClick","onMouseMove","textContentClass","shouldReadMedia","RoundVideo","Story","StoryMention","footerClass","hasContentAfterText","isMetaInText","renderInvertedMediaContent","MessageAppendix","isOutside","targetHref","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","isForMessageEffect","effectClassName","isInWebPage","isPaidPreview","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","isSmall","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","defaultMuted","isPriority","onTimeUpdate","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","WebPageUniqueGift","stickerRef","backdrop","model","pattern","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","openUrl","openTelegramLink","stickersRef","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","linkTimestamp","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","active","archived","isClosing","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","drawImage","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","adminId","selectCanInviteToActiveGroupCall","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","useMarkScrolled","selector","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","parseMessageKey","splitTrackId","messageKey","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","providerUrl","cos","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}