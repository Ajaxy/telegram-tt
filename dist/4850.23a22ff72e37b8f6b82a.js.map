{"version":3,"file":"4850.23a22ff72e37b8f6b82a.js","mappings":"sFAoDAA,EAAOC,QA5CP,SAAcC,GACZ,MAUMC,EAAW,CACf,OACA,QACA,QAOIC,EAAgB,CACpBC,MAAO,UACPC,cAAeH,EAASI,KAAK,MAG/B,MAAO,CACLC,KAAM,OACNC,SAAS,CACPC,QAASP,GAEXQ,SAAU,CA9BM,CAChBC,UAAW,OACXC,MAAO,8BACPC,UAAW,MAEO,CAClBC,MAAO,YACPH,UAAW,cACXE,UAAW,GAyBTZ,EAAKc,kBACLZ,EACAF,EAAKe,cACLf,EAAKgB,oBACLhB,EAAKiB,sBAEPC,QAAS,MAEb,C","sources":["webpack://telegram-t/./node_modules/highlight.js/lib/languages/json.js"],"sourcesContent":["/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\"\n  ];\n  // NOTE: normally we would rely on `keywords` for this but using a mode here allows us\n  // - to use the very tight `illegal: \\S` rule later to flag any other character\n  // - as illegal indicating that despite looking like JSON we do not truly have\n  // - JSON and thus improve false-positively greatly since JSON will try and claim\n  // - all sorts of JSON looking stuff\n  const LITERALS_MODE = {\n    scope: \"literal\",\n    beginKeywords: LITERALS.join(\" \"),\n  };\n\n  return {\n    name: 'JSON',\n    keywords:{\n      literal: LITERALS,\n    },\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nmodule.exports = json;\n"],"names":["module","exports","hljs","LITERALS","LITERALS_MODE","scope","beginKeywords","join","name","keywords","literal","contains","className","begin","relevance","match","QUOTE_STRING_MODE","C_NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","illegal"],"sourceRoot":""}