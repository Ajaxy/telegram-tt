{"version":3,"file":"8119.b475023ce9344aa23146.js","mappings":"6JAmBO,SAASA,EAAKC,EAAOC,EAAOC,EAAYC,GAC3C,IAAIC,EAAQC,KAGZ,OAAKL,IAGDA,aAAiBM,QACN,CAACN,GAEP,YAAaA,EACPA,EAAMO,UAGNP,GAENQ,SAAQ,SAAUC,GACvBA,EAAGC,iBAAiB,SAAS,SAAUC,GACnC,IAAIC,EAAIC,EACJC,EAAKb,aAAiBc,SAAWd,EAAMQ,GAAMR,EAC7Ce,EAAQd,aAAsBa,SAAWb,EAAWO,GAAMP,EAC1De,EAAOR,EAAGS,aAAa,SACvBT,EAAGU,eAAe,+BAAgC,SAClDV,EAAGS,aAAa,gBAC4B,QAA1CN,EAAKH,EAAGW,qBAAqB,KAAK,UAAuB,IAAPR,OAAgB,EAASA,EAAGM,aAAa,SAC7FG,GAAa,QAASjB,EAAMkB,MAAMR,EAAIE,EAAOb,QAAyCA,EAAU,CAAC,GAAsC,QAAjCU,EAAKT,EAAMmB,SAASC,eAA4B,IAAPX,EAAgBA,EAAK,MA/BpL,SAAoBY,EAASR,GACzB,QAAuB,WAAnBQ,EAAQC,SAAuBT,EAIvC,EA2BiBU,CAAWlB,EAAIQ,IA3ChC,SAAoBhB,GAChB,IAAI2B,EAAa3B,EACjB,SAAI2B,EAAWC,SACXD,EAAWE,UACXF,EAAWG,SACVH,EAAWI,QAA+B,GAArBJ,EAAWI,OAIzC,CAmCiBC,CAAWtB,IACRM,IACAN,EAAauB,eACPvB,EAAauB,iBACZvB,EAAawB,aAAc,EAClCd,EACKe,MAAMC,QAAQC,OACdC,MAAK,WACNC,OAAOC,SAASxB,KAAOA,CAC3B,IACKmB,MAAMC,QAAQC,OAG/B,IAAG,EACP,IACOjC,MArCIA,IAsCf,CACO,SAASqC,EAAKC,EAAO1C,EAAOC,EAAYC,GAC3C,IAAIC,EAAQC,KAEZ,OAAKsC,GAEDA,aAAiBC,kBACjBD,EAAQ,CAACA,IACEA,EACNnC,SAAQ,SAAUC,GACvB,KAAMA,aAAcH,SAChB,MAAM,IAAIuC,UAAU,mDACxB,IAAIC,EAAU,SAAUnC,GACpB,IAAIC,EACJD,EAAauB,eACPvB,EAAauB,iBACZvB,EAAawB,aAAc,EAClC,IAAIrB,EAAKb,aAAiBc,SAAWd,EAAMQ,GAAMR,EAC7Ce,EAAQd,aAAsBa,SAAWb,EAAWO,GAAMP,GAC7C,QAASE,EAAMkB,MAAMR,EAAIE,EAAOb,QAAyCA,EAAU,CAAC,GAAsC,QAAjCS,EAAKR,EAAMmB,SAASC,eAA4B,IAAPZ,EAAgBA,EAAK,KAEnKwB,MAAMC,QAAQC,OACdC,MAAK,WACN9B,EAAGsC,QACP,IACKX,MAAMC,QAAQC,MACvB,EAGIU,EAAIR,OAAOS,QAAUT,OAAOU,MAC5BF,EACAA,EAAEvC,GAAIsC,OAAOD,GAIbrC,EAAGC,iBAAiB,SAAUoC,GAAS,EAE/C,IACOzC,MAjCIA,IAkCf,C","sources":["webpack://telegram-t/./node_modules/@june-so/analytics-next/dist/pkg/core/auto-track.js"],"sourcesContent":["import { pTimeout } from './callback';\n// Check if a user is opening the link in a new tab\nfunction userNewTab(event) {\n    var typedEvent = event;\n    if (typedEvent.ctrlKey ||\n        typedEvent.shiftKey ||\n        typedEvent.metaKey ||\n        (typedEvent.button && typedEvent.button == 1)) {\n        return true;\n    }\n    return false;\n}\n// Check if the link opens in new tab\nfunction linkNewTab(element, href) {\n    if (element.target === '_blank' && href) {\n        return true;\n    }\n    return false;\n}\nexport function link(links, event, properties, options) {\n    var _this = this;\n    var elements = [];\n    // always arrays, handles jquery\n    if (!links) {\n        return this;\n    }\n    if (links instanceof Element) {\n        elements = [links];\n    }\n    else if ('toArray' in links) {\n        elements = links.toArray();\n    }\n    else {\n        elements = links;\n    }\n    elements.forEach(function (el) {\n        el.addEventListener('click', function (elementEvent) {\n            var _a, _b;\n            var ev = event instanceof Function ? event(el) : event;\n            var props = properties instanceof Function ? properties(el) : properties;\n            var href = el.getAttribute('href') ||\n                el.getAttributeNS('http://www.w3.org/1999/xlink', 'href') ||\n                el.getAttribute('xlink:href') ||\n                ((_a = el.getElementsByTagName('a')[0]) === null || _a === void 0 ? void 0 : _a.getAttribute('href'));\n            var trackEvent = pTimeout(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_b = _this.settings.timeout) !== null && _b !== void 0 ? _b : 500);\n            if (!linkNewTab(el, href) &&\n                !userNewTab(elementEvent)) {\n                if (href) {\n                    elementEvent.preventDefault\n                        ? elementEvent.preventDefault()\n                        : (elementEvent.returnValue = false);\n                    trackEvent\n                        .catch(console.error)\n                        .then(function () {\n                        window.location.href = href;\n                    })\n                        .catch(console.error);\n                }\n            }\n        }, false);\n    });\n    return this;\n}\nexport function form(forms, event, properties, options) {\n    var _this = this;\n    // always arrays, handles jquery\n    if (!forms)\n        return this;\n    if (forms instanceof HTMLFormElement)\n        forms = [forms];\n    var elements = forms;\n    elements.forEach(function (el) {\n        if (!(el instanceof Element))\n            throw new TypeError('Must pass HTMLElement to trackForm/trackSubmit.');\n        var handler = function (elementEvent) {\n            var _a;\n            elementEvent.preventDefault\n                ? elementEvent.preventDefault()\n                : (elementEvent.returnValue = false);\n            var ev = event instanceof Function ? event(el) : event;\n            var props = properties instanceof Function ? properties(el) : properties;\n            var trackEvent = pTimeout(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_a = _this.settings.timeout) !== null && _a !== void 0 ? _a : 500);\n            trackEvent\n                .catch(console.error)\n                .then(function () {\n                el.submit();\n            })\n                .catch(console.error);\n        };\n        // Support the events happening through jQuery or Zepto instead of through\n        // the normal DOM API, because `el.submit` doesn't bubble up events...\n        var $ = window.jQuery || window.Zepto;\n        if ($) {\n            $(el).submit(handler);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            el.addEventListener('submit', handler, false);\n        }\n    });\n    return this;\n}\n//# sourceMappingURL=auto-track.js.map"],"names":["link","links","event","properties","options","_this","this","Element","toArray","forEach","el","addEventListener","elementEvent","_a","_b","ev","Function","props","href","getAttribute","getAttributeNS","getElementsByTagName","trackEvent","track","settings","timeout","element","target","linkNewTab","typedEvent","ctrlKey","shiftKey","metaKey","button","userNewTab","preventDefault","returnValue","catch","console","error","then","window","location","form","forms","HTMLFormElement","TypeError","handler","submit","$","jQuery","Zepto"],"sourceRoot":""}