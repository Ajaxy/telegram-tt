{"version":3,"file":"7540.a6646fe2a2a8682b6ca3.js","mappings":"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","sources":["webpack://telegram-t/./node_modules/ieee754/index.js","webpack://telegram-t/./node_modules/@cryptography/aes/dist/es/aes.js","webpack://telegram-t/./node_modules/os-browserify/browser.js","webpack://telegram-t/./node_modules/async-mutex/index.mjs","webpack://telegram-t/./node_modules/big-integer/BigInteger.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var S = new Uint8Array(256);\nvar Si = new Uint8Array(256);\nvar T1 = new Uint32Array(256);\nvar T2 = new Uint32Array(256);\nvar T3 = new Uint32Array(256);\nvar T4 = new Uint32Array(256);\nvar T5 = new Uint32Array(256);\nvar T6 = new Uint32Array(256);\nvar T7 = new Uint32Array(256);\nvar T8 = new Uint32Array(256);\nfunction computeTables() {\n    var d = new Uint8Array(256);\n    var t = new Uint8Array(256);\n    var x2;\n    var x4;\n    var x8;\n    var s;\n    var tEnc;\n    var tDec;\n    var x = 0;\n    var xInv = 0;\n    // Compute double and third tables\n    for (var i = 0; i < 256; i++) {\n        d[i] = i << 1 ^ (i >> 7) * 283;\n        t[d[i] ^ i] = i;\n    }\n    for (; !S[x]; x ^= x2 || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        S[x] = s;\n        Si[s] = x;\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n        T1[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T2[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T3[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T4[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T5[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T6[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T7[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T8[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        xInv = t[xInv] || 1;\n    }\n}\n\n/**\n * Gets a uint32 from string in big-endian order order\n */\nfunction s2i(str, pos) {\n    return (str.charCodeAt(pos) << 24\n        ^ str.charCodeAt(pos + 1) << 16\n        ^ str.charCodeAt(pos + 2) << 8\n        ^ str.charCodeAt(pos + 3));\n}\n\n/* eslint-disable import/prefer-default-export */\n/**\n * Helper function for transforming string key to Uint32Array\n */\nfunction getWords(key) {\n    if (key instanceof Uint32Array) {\n        return key;\n    }\n    if (typeof key === 'string') {\n        if (key.length % 4 !== 0)\n            for (var i = key.length % 4; i <= 4; i++)\n                key += '\\0x00';\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4)\n            buf[i / 4] = s2i(key, i);\n        return buf;\n    }\n    if (key instanceof Uint8Array) {\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4) {\n            buf[i / 4] = (key[i] << 24\n                ^ key[i + 1] << 16\n                ^ key[i + 2] << 8\n                ^ key[i + 3]);\n        }\n        return buf;\n    }\n    throw new Error('Unable to create 32-bit words');\n}\nfunction xor(left, right, to) {\n    if (to === void 0) { to = left; }\n    for (var i = 0; i < left.length; i++)\n        to[i] = left[i] ^ right[i];\n}\n\ncomputeTables();\n/**\n * Low-level AES Cipher\n */\nvar AES = /** @class */ (function () {\n    function AES(_key) {\n        var key = getWords(_key);\n        if (key.length !== 4 && key.length !== 6 && key.length !== 8) {\n            throw new Error('Invalid key size');\n        }\n        this.encKey = new Uint32Array(4 * key.length + 28);\n        this.decKey = new Uint32Array(4 * key.length + 28);\n        this.encKey.set(key);\n        var rcon = 1;\n        var i = key.length;\n        var tmp;\n        // schedule encryption keys\n        for (; i < 4 * key.length + 28; i++) {\n            tmp = this.encKey[i - 1];\n            // apply sbox\n            if (i % key.length === 0 || (key.length === 8 && i % key.length === 4)) {\n                tmp = S[tmp >>> 24] << 24 ^ S[(tmp >> 16) & 255] << 16 ^ S[(tmp >> 8) & 255] << 8 ^ S[tmp & 255];\n                // shift rows and add rcon\n                if (i % key.length === 0) {\n                    tmp = tmp << 8 ^ tmp >>> 24 ^ (rcon << 24);\n                    rcon = rcon << 1 ^ (rcon >> 7) * 283;\n                }\n            }\n            this.encKey[i] = this.encKey[i - key.length] ^ tmp;\n        }\n        // schedule decryption keys\n        for (var j = 0; i; j++, i--) {\n            tmp = this.encKey[j & 3 ? i : i - 4];\n            if (i <= 4 || j < 4) {\n                this.decKey[j] = tmp;\n            }\n            else {\n                this.decKey[j] = (T5[S[tmp >>> 24]]\n                    ^ T6[S[(tmp >> 16) & 255]]\n                    ^ T7[S[(tmp >> 8) & 255]]\n                    ^ T8[S[tmp & 255]]);\n            }\n        }\n    }\n    AES.prototype.encrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.encKey[0];\n        var b = message[1] ^ this.encKey[1];\n        var c = message[2] ^ this.encKey[2];\n        var d = message[3] ^ this.encKey[3];\n        var rounds = this.encKey.length / 4 - 2;\n        var k = 4;\n        var a2;\n        var b2;\n        var c2;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T1[a >>> 24] ^ T2[(b >> 16) & 255] ^ T3[(c >> 8) & 255] ^ T4[d & 255] ^ this.encKey[k];\n            b2 = T1[b >>> 24] ^ T2[(c >> 16) & 255] ^ T3[(d >> 8) & 255] ^ T4[a & 255] ^ this.encKey[k + 1];\n            c2 = T1[c >>> 24] ^ T2[(d >> 16) & 255] ^ T3[(a >> 8) & 255] ^ T4[b & 255] ^ this.encKey[k + 2];\n            d = T1[d >>> 24] ^ T2[(a >> 16) & 255] ^ T3[(b >> 8) & 255] ^ T4[c & 255] ^ this.encKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n            // console.log(a, b, c, d);\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[i] = (S[a >>> 24] << 24\n                ^ S[(b >> 16) & 255] << 16\n                ^ S[(c >> 8) & 255] << 8\n                ^ S[d & 255]\n                ^ this.encKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    AES.prototype.decrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.decKey[0];\n        var b = message[3] ^ this.decKey[1];\n        var c = message[2] ^ this.decKey[2];\n        var d = message[1] ^ this.decKey[3];\n        var rounds = this.decKey.length / 4 - 2;\n        var a2;\n        var b2;\n        var c2;\n        var k = 4;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T5[a >>> 24] ^ T6[(b >> 16) & 255] ^ T7[(c >> 8) & 255] ^ T8[d & 255] ^ this.decKey[k];\n            b2 = T5[b >>> 24] ^ T6[(c >> 16) & 255] ^ T7[(d >> 8) & 255] ^ T8[a & 255] ^ this.decKey[k + 1];\n            c2 = T5[c >>> 24] ^ T6[(d >> 16) & 255] ^ T7[(a >> 8) & 255] ^ T8[b & 255] ^ this.decKey[k + 2];\n            d = T5[d >>> 24] ^ T6[(a >> 16) & 255] ^ T7[(b >> 8) & 255] ^ T8[c & 255] ^ this.decKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[3 & -i] = (Si[a >>> 24] << 24\n                ^ Si[(b >> 16) & 255] << 16\n                ^ Si[(c >> 8) & 255] << 8\n                ^ Si[d & 255]\n                ^ this.decKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    return AES;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE = /** @class */ (function () {\n    function AES_IGE(key, iv, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.key = getWords(key);\n        this.iv = getWords(iv);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var prevX = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevY = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = text.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.encrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                cipherText[j] = y[k];\n        }\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        var cipherText = getWords(message);\n        var text = buf || new Uint32Array(cipherText.length);\n        var prevY = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevX = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = cipherText.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.decrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                text[j] = y[k];\n        }\n        return text;\n    };\n    return AES_IGE;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE$1 = /** @class */ (function () {\n    function AES_IGE(key, counter, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.offset = 0;\n        this.key = getWords(key);\n        this.counter = getWords(counter);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n        if (this.counter.length !== 4) {\n            throw new Error('AES-CTR mode counter must be 16 bytes length');\n        }\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var offset = this.offset;\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = this.cipher.encrypt(this.counter);\n            for (var j = i, k = offset; j < text.length && k < this.blockSize; j++, k++)\n                cipherText[j] = x[k] ^ text[j];\n            if (text.length - i >= this.blockSize)\n                this.incrementCounter();\n            if (offset) {\n                i -= offset;\n                offset = 0;\n            }\n        }\n        this.offset = (this.offset + (text.length % 4)) % 4;\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        return this.encrypt(message, buf);\n    };\n    AES_IGE.prototype.incrementCounter = function () {\n        // increment counter\n        for (var carry = this.counter.length - 1; carry >= 0; carry--) {\n            if (++this.counter[carry] < 0xFFFFFFFF)\n                break; // If overflowing, it'll be 0 and we'll have to continue propagating the carry\n        }\n    };\n    return AES_IGE;\n}());\n\nexport default AES;\nexport { AES_IGE$1 as CTR, AES_IGE as IGE };\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            const task = { resolve, reject, weight, priority };\n            const i = findIndexFromEnd(this._queue, (other) => priority <= other.priority);\n            if (i === -1 && weight <= this._value) {\n                // Needs immediate dispatch, skip the queue\n                this._dispatchItem(task);\n            }\n            else {\n                this._queue.splice(i + 1, 0, task);\n            }\n        });\n    }\n    runExclusive(callback_1) {\n        return __awaiter$2(this, arguments, void 0, function* (callback, weight = 1, priority = 0) {\n            const [value, release] = yield this.acquire(weight, priority);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        if (this._couldLockImmediately(weight, priority)) {\n            return Promise.resolve();\n        }\n        else {\n            return new Promise((resolve) => {\n                if (!this._weightedWaiters[weight - 1])\n                    this._weightedWaiters[weight - 1] = [];\n                insertSorted(this._weightedWaiters[weight - 1], { resolve, priority });\n            });\n        }\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatchQueue();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatchQueue();\n    }\n    cancel() {\n        this._queue.forEach((entry) => entry.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatchQueue() {\n        this._drainUnlockWaiters();\n        while (this._queue.length > 0 && this._queue[0].weight <= this._value) {\n            this._dispatchItem(this._queue.shift());\n            this._drainUnlockWaiters();\n        }\n    }\n    _dispatchItem(item) {\n        const previousValue = this._value;\n        this._value -= item.weight;\n        item.resolve([previousValue, this._newReleaser(item.weight)]);\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        if (this._queue.length === 0) {\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                waiters.forEach((waiter) => waiter.resolve());\n                this._weightedWaiters[weight - 1] = [];\n            }\n        }\n        else {\n            const queuedPriority = this._queue[0].priority;\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                const i = waiters.findIndex((waiter) => waiter.priority <= queuedPriority);\n                (i === -1 ? waiters : waiters.splice(0, i))\n                    .forEach((waiter => waiter.resolve()));\n            }\n        }\n    }\n    _couldLockImmediately(weight, priority) {\n        return (this._queue.length === 0 || this._queue[0].priority < priority) &&\n            weight <= this._value;\n    }\n}\nfunction insertSorted(a, v) {\n    const i = findIndexFromEnd(a, (other) => v.priority <= other.priority);\n    a.splice(i + 1, 0, v);\n}\nfunction findIndexFromEnd(a, predicate) {\n    for (let i = a.length - 1; i >= 0; i--) {\n        if (predicate(a[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, arguments, void 0, function* (priority = 0) {\n            const [, releaser] = yield this._semaphore.acquire(1, priority);\n            return releaser;\n        });\n    }\n    runExclusive(callback, priority = 0) {\n        return this._semaphore.runExclusive(() => callback(), 1, priority);\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock(priority = 0) {\n        return this._semaphore.waitForUnlock(1, priority);\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield (isSemaphore(sync)\n                        ? sync.acquire(weight, priority)\n                        : sync.acquire(priority));\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight, priority) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight, priority);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                const handle = setTimeout(() => reject(timeoutError), timeout);\n                (isSemaphore(sync)\n                    ? sync.waitForUnlock(weight, priority)\n                    : sync.waitForUnlock(priority)).then(() => {\n                    clearTimeout(handle);\n                    resolve();\n                });\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\nfunction isSemaphore(sync) {\n    return sync.getValue !== undefined;\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = function(v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value << v.value)\r\n    }\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = function (v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value >> v.value)\r\n    }\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","S","Uint8Array","Si","T1","Uint32Array","T2","T3","T4","T5","T6","T7","T8","getWords","key","length","buf","pos","str","charCodeAt","Error","xor","left","right","to","x2","x4","tEnc","tDec","t","x","xInv","computeTables","AES","_key","this","encKey","decKey","set","tmp","rcon","j","prototype","encrypt","_message","a2","b2","c2","message","out","a","b","rounds","k","decrypt","AES_IGE","iv","blockSize","cipher","text","cipherText","prevX","subarray","prevY","yXOR","y","counter","incrementCounter","carry","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","E_CANCELED","Semaphore","constructor","_value","_cancelError","_queue","_weightedWaiters","acquire","weight","priority","Promise","resolve","reject","task","findIndexFromEnd","other","_dispatchItem","splice","runExclusive","callback_1","thisArg","_arguments","arguments","generator","callback","P","fulfilled","step","next","rejected","result","done","then","apply","waitForUnlock","_couldLockImmediately","v","insertSorted","isLocked","getValue","setValue","_dispatchQueue","cancel","forEach","entry","_drainUnlockWaiters","shift","item","previousValue","_newReleaser","called","waiters","waiter","queuedPriority","findIndex","predicate","Mutex","cancelError","_semaphore","releaser","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","n","arrayToSmall","arr","trim","compareAbs","createArray","Array","truncate","ceil","add","sum","l_a","l_b","r","base","push","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","multiplySmall","shiftLeft","concat","multiplyKaratsuba","max","slice","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","negate","comparison","quotientDigit","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","bigInt","modPow","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","toString","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","undefined","bits","bitLength","logN","toJSNumber","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","LOBMASK_I","roughLOB","integerLogarithm","p","min","gcd","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","map","valueOf","neg","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","toJSON","parseInt","minusOne","lcm","isInstance","usedRNG","random","low","range","restricted","top","fromArray","module","hasOwnProperty"],"sourceRoot":""}