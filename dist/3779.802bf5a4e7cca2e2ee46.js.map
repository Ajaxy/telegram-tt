{"version":3,"file":"3779.802bf5a4e7cca2e2ee46.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftOption.module.scss?a171","webpack://telegram-t/./src/components/main/premium/GiftOption.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.module.scss?1c3e","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatsPicker.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.module.scss?8334","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.module.scss?e7ab","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommand.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/util/launchMediaWorkers.ts"],"sourcesContent":["import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage) {\n  const { container, mediaEl: toImage } = getNodes(origin, message);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getMessageActionPhoto,\n  getMessageDocument,\n  getMessageFileName,\n  getMessageFileSize,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoFullDimensions,\n  getVideoAvatarMediaHash,\n  getVideoDimensions,\n  isMessageDocumentPhoto,\n  isMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\ntype UseMediaProps = {\n  mediaId?: number;\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  message,\n  mediaId = 0,\n  avatarOwner,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const photo = message ? getMessagePhoto(message) : undefined;\n  const actionPhoto = message ? getMessageActionPhoto(message) : undefined;\n  const video = message ? getMessageVideo(message) : undefined;\n  const webPagePhoto = message ? getMessageWebPagePhoto(message) : undefined;\n  const webPageVideo = message ? getMessageWebPageVideo(message) : undefined;\n  const isDocumentPhoto = message ? isMessageDocumentPhoto(message) : false;\n  const isDocumentVideo = message ? isMessageDocumentVideo(message) : false;\n  const videoSize = message ? getMessageFileSize(message) : undefined;\n  const avatarMedia = avatarOwner?.photos?.[mediaId];\n  const isVideoAvatar = Boolean(avatarMedia?.isVideo || actionPhoto?.isVideo);\n  const isVideo = Boolean(video || webPageVideo || isDocumentVideo);\n  const isPhoto = Boolean(!isVideo && (photo || webPagePhoto || isDocumentPhoto || actionPhoto));\n  const { isGif } = video || webPageVideo || {};\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaHash = useMemo(() => (isFull?: boolean) => {\n    if (avatarOwner) {\n      if (avatarMedia) {\n        if (avatarMedia.isVideo && isFull) {\n          return getVideoAvatarMediaHash(avatarMedia);\n        } else if (mediaId === 0) {\n          // Show preloaded avatar if this is the first media (when user clicks on profile info avatar)\n          return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n        } else {\n          return `photo${avatarMedia.id}?size=c`;\n        }\n      } else {\n        return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n      }\n    }\n    if (actionPhoto && isVideoAvatar && isFull) {\n      return `videoAvatar${actionPhoto.id}?size=u`;\n    }\n    return message && getMessageMediaHash(message, isFull ? 'full' : 'preview');\n  }, [avatarOwner, actionPhoto, isVideoAvatar, message, avatarMedia, mediaId]);\n\n  const pictogramBlobUrl = useMedia(\n    message\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocumentPhoto || isDocumentVideo)\n    && getMessageMediaHash(message, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaHash(true),\n    undefined,\n    message && getMessageMediaFormat(message, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = (photo || video) ? (photo || video)!.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && message && getMessageMediaThumbDataUri(message));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    !isVideo ? previewBlobUrl || pictogramBlobUrl || bestImageData : undefined\n  );\n  const isLocal = Boolean(localBlobUrl);\n  const fileName = message\n    ? getMessageFileName(message)\n    : avatarOwner\n      ? `avatar${avatarOwner!.id}.${avatarOwner?.hasVideoAvatar ? 'mp4' : 'jpg'}`\n      : undefined;\n\n  const dimensions = useMemo(() => {\n    if (message) {\n      if (isDocumentPhoto || isDocumentVideo) {\n        return getMessageDocument(message)!.mediaSize!;\n      } else if (photo || webPagePhoto || actionPhoto) {\n        return getPhotoFullDimensions((photo || webPagePhoto || actionPhoto)!)!;\n      } else if (video || webPageVideo) {\n        return getVideoDimensions((video || webPageVideo)!)!;\n      }\n    } else {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n    return undefined;\n  }, [\n    isDocumentPhoto,\n    isDocumentVideo,\n    isVideoAvatar,\n    message,\n    photo,\n    video,\n    actionPhoto,\n    webPagePhoto,\n    webPageVideo,\n  ]);\n\n  return {\n    getMediaHash,\n    photo,\n    video,\n    webPagePhoto,\n    actionPhoto,\n    webPageVideo,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocumentPhoto,\n    isDocumentVideo,\n    fileName,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    avatarPhoto: avatarMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    videoSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum } from '../../types';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectBot,\n  selectChat,\n  selectCurrentMessageList,\n  selectUser,\n} from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  onClose: NoneToVoidFunction;\n  onConfirm?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n  } = getActions();\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    onClose();\n  }, [onConfirm, album, message.id, deleteMessages, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    onClose();\n  }, [onConfirm, album, message.id, isSchedule, onClose, deleteScheduledMessages, deleteMessages]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen && !canDeleteForAll ? handleDeleteMessageForSelf : undefined}\n      className=\"delete\"\n      title={lang('DeleteSingleMessagesTitle')}\n    >\n      <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n      )}\n      {willDeleteForAll && (\n        <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n            {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, isSchedule }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const chat = selectChat(global, message.chatId);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(selectBot(global, message.chatId));\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { MenuItemProps } from '../ui/MenuItem';\n\nimport { getMessageMediaFormat, getMessageMediaHash, isUserId } from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsDownloading,\n  selectIsMessageProtected,\n} from '../../global/selectors';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteMessageModal from '../common/DeleteMessageModal';\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  avatarOwnerId?: string;\n};\n\ntype OwnProps = {\n  mediaData?: string;\n  isVideo: boolean;\n  message?: ApiMessage;\n  canUpdateMedia?: boolean;\n  isSingleMedia?: boolean;\n  avatarPhoto?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  fileName?: string;\n  canReport?: boolean;\n  selectMedia: (mediaId?: number) => void;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  mediaData,\n  isVideo,\n  message,\n  avatarPhoto,\n  avatarOwnerId,\n  fileName,\n  isChatProtected,\n  isDownloading,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  selectMedia,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n  } = getActions();\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    message && getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    message && getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message: message! });\n    } else {\n      downloadMessageMedia({ message: message! });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (!avatarPhoto || !avatarOwnerId) return;\n    if (isUserId(avatarOwnerId)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwnerId, photo: avatarPhoto });\n    }\n    selectMedia(0);\n  });\n\n  const lang = useLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModals() {\n    return message\n      ? (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          message={message}\n        />\n      )\n      : (avatarOwnerId && avatarPhoto) ? (\n        <DeleteProfilePhotoModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          profileId={avatarOwnerId}\n          photo={avatarPhoto}\n        />\n      ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected) {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (message?.isForwardingAllowed && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModal,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModals()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {message?.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModal}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModals()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message, canUpdateMedia, avatarPhoto, avatarOwner,\n  }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isDownloading = message ? selectIsDownloading(global, message) : false;\n    const isProtected = selectIsMessageProtected(global, message);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarHash);\n    const canDeleteAvatar = canUpdateMedia && !!avatarPhoto;\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && !!avatarPhoto && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      isDownloading,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      avatarOwnerId: avatarOwner?.id,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useEffect(() => {\n    return () => {\n      setIsVideoWaiting(false);\n    };\n  }, []);\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => videoPreview?.destroy();\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FWH9e05HHn4BJrkuqmgL\",\"preview\":\"PmR9chdfbwrolc8FOkNB\",\"previewCanvas\":\"O7IGkaF5yzopTKVImH2v\",\"previewTime\":\"R85IB61J5InMMYwLQWxU\",\"previewTimeText\":\"QBMgsZDdCiXJzzHzd8rg\",\"track\":\"YiY5CtrarIYsGovxCo1b\",\"buffered\":\"s3rSBAeNFQimTK3eRl8t\",\"played\":\"sQTcQShWx8rMXJFKN2hO\",\"seeking\":\"pNanY7hqtTLHXdRob0qg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useFullscreen from '../../hooks/useFullscreen';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered && !isUnsupported, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            square\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  selectChat, selectChatMessage, selectIsMessageProtected, selectScheduledMessage, selectTabState, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  mediaId?: number;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  isMoving?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  mediaId?: number;\n  senderId?: string;\n  threadId?: number;\n  avatarOwner?: ApiPeer;\n  message?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent: FC<OwnProps & StateProps> = (props) => {\n  const {\n    mediaId,\n    isActive,\n    avatarOwner,\n    chatId,\n    message,\n    origin,\n    withAnimation,\n    isProtected,\n    volume,\n    playbackRate,\n    isMuted,\n    isHidden,\n    onClose,\n    onFooterClick,\n    isMoving,\n  } = props;\n\n  const lang = useLang();\n\n  const {\n    isVideo,\n    isPhoto,\n    actionPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    videoSize,\n    loadProgress,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (avatarOwner || actionPhoto) {\n    if (!isVideoAvatar) {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={mediaId}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={videoSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (!message) return undefined;\n  const textParts = message.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message, forcePlayback: true, isForMediaViewer: true });\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = message && calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={mediaId}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={videoSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n    } = ownProps;\n\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n    } = selectTabState(global).mediaViewer;\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        origin,\n        message,\n        isProtected: selectIsMessageProtected(global, message),\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const sender = selectUser(global, avatarOwnerId) || selectChat(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: sender,\n        origin,\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      origin,\n      message,\n      isProtected: selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport { useFullscreenStatus } from '../../hooks/useFullscreen';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useSignal from '../../hooks/useSignal';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport useTimeout from '../../hooks/useTimeout';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  mediaId?: number;\n  getMediaId: (fromId?: number, direction?: number) => number | undefined;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  selectMedia: (id?: number) => void;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  onClose: () => void;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  onFooterClick: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  mediaId,\n  getMediaId,\n  selectMedia,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  ...rest\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveMediaId, setActiveMediaId] = useSignal<number | undefined>(mediaId);\n  const activeMediaIdRef = useSignalRef(getActiveMediaId);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeMediaId = useDerivedState(getActiveMediaId);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n  const { onClose } = rest;\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectMediaDebounced = useDebouncedCallback(selectMedia, [selectMedia], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveMediaId(mediaId);\n    }\n  }, [mediaId, setActiveMediaId, transformRef]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeMediaIdRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const mId = getMediaId(activeMediaIdRef.current, direction);\n      if (mId !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const mId = getMediaId(activeMediaIdRef.current, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (mId !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    onClose,\n    setTransform,\n    getMediaId,\n    windowWidth,\n    windowHeight,\n    clickXThreshold,\n    shouldCloseOnVideo,\n    selectMediaDebounced,\n    setIsActiveDebounced,\n    clearSwipeDirectionDebounced,\n    withAnimation,\n    setIsMouseDown,\n    setIsActive,\n    isHidden,\n    isFullscreen,\n    transformRef,\n    setActiveMediaId,\n    activeMediaIdRef,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  if (activeMediaId === undefined) return undefined;\n\n  const nextMediaId = getMediaId(activeMediaId, 1);\n  const prevMediaId = getMediaId(activeMediaId, -1);\n  const hasPrev = prevMediaId !== undefined;\n  const hasNext = nextMediaId !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={prevMediaId}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          /* eslint-disable-next-line react/jsx-props-no-spreading */\n          {...rest}\n          mediaId={activeMediaId}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={nextMediaId}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\n\nimport { getSenderTitle } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectPeer,\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  messageId?: number;\n  isAvatar?: boolean;\n  isFallbackAvatar?: boolean;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  message?: ApiMessage;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  messageId,\n  sender,\n  isFallbackAvatar,\n  isAvatar,\n  message,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, messageId });\n    }\n  });\n\n  const lang = useLang();\n\n  if (!sender || (!message && !isAvatar)) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, sender);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={sender.id} size=\"medium\" peer={sender} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {isAvatar\n            ? lang(isFallbackAvatar ? 'lng_mediaview_profile_public_photo' : 'lng_mediaview_profile_photo')\n            : formatMediaDateTime(lang, message!.date * 1000, true)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { chatId, messageId, isAvatar }): StateProps => {\n    if (isAvatar && chatId) {\n      return {\n        sender: selectPeer(global, chatId),\n      };\n    }\n\n    if (!messageId || !chatId) {\n      return {};\n    }\n\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      message,\n      sender: message && selectSender(global, message),\n    };\n  },\n)(SenderInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPhoto, ApiUser,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getChatMediaMessageIds, isChatAdmin, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentMediaSearch, selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: number;\n  mediaId?: number;\n  senderId?: string;\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatarOwner?: ApiPeer;\n  avatarOwnerFallbackPhoto?: ApiPhoto;\n  message?: ApiMessage;\n  chatMessages?: Record<number, ApiMessage>;\n  collectionIds?: number[];\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\n\nconst MediaViewer: FC<StateProps> = ({\n  chatId,\n  threadId,\n  mediaId,\n  senderId,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatarOwner,\n  avatarOwnerFallbackPhoto,\n  message,\n  chatMessages,\n  collectionIds,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const {\n    webPagePhoto,\n    webPageVideo,\n    isVideo,\n    actionPhoto,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n    avatarPhoto,\n    fileName,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = !!avatarPhoto && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  /* Navigation */\n  const singleMediaId = webPagePhoto || webPageVideo || actionPhoto ? mediaId : undefined;\n\n  const mediaIds = useMemo(() => {\n    if (singleMediaId) {\n      return [singleMediaId];\n    } else if (avatarOwner) {\n      return avatarOwner.photos?.map((p, i) => i) || [];\n    } else {\n      return getChatMediaMessageIds(chatMessages || {}, collectionIds || [], isFromSharedMedia);\n    }\n  }, [singleMediaId, avatarOwner, chatMessages, collectionIds, isFromSharedMedia]);\n\n  const selectedMediaIndex = mediaId ? mediaIds.indexOf(mediaId) : -1;\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || !animationKey.current)) {\n    animationKey.current = selectedMediaIndex;\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      document.body.classList.toggle('is-media-viewer-open', isOpen);\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    if (typeof mql.addEventListener === 'function') {\n      mql.addEventListener('change', forceUpdate);\n    } else if (typeof mql.addListener === 'function') {\n      mql.addListener(forceUpdate);\n    }\n\n    return () => {\n      if (typeof mql.removeEventListener === 'function') {\n        mql.removeEventListener('change', forceUpdate);\n      } else if (typeof mql.removeListener === 'function') {\n        mql.removeListener(forceUpdate);\n      }\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevIsHidden = usePrevious<boolean | undefined>(isHidden);\n  const prevOrigin = usePrevious(origin);\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwner = usePrevious<ApiPeer | undefined>(avatarOwner);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevMediaId !== mediaId;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (!prevMessage || shouldAnimateOpening) && !prevAvatarOwner) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message);\n    }\n\n    if (isGhostAnimation && !isOpen && (prevMessage || prevAvatarOwner)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage || undefined);\n    }\n  }, [\n    isGhostAnimation, isOpen, shouldAnimateOpening, origin, prevOrigin, message, prevMessage, prevAvatarOwner,\n    bestImageData, prevBestImageData, dimensions, isVideo, hasFooter,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const mediaIdRef = useStateRef(mediaId);\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    const currentMediaId = mediaIdRef.current;\n\n    if (!chatId || !currentMediaId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId: currentMediaId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId: currentMediaId });\n    }\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [mediaId!],\n    });\n  });\n\n  const selectMedia = useLastCallback((id?: number) => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      mediaId: id,\n      avatarOwnerId: avatarOwner?.id,\n      origin: origin!,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const mediaIdsRef = useStateRef(mediaIds);\n\n  const getMediaId = useLastCallback((fromId?: number, direction?: number): number | undefined => {\n    if (fromId === undefined) return undefined;\n    const mIds = mediaIdsRef.current;\n    const index = mIds.indexOf(fromId);\n    if ((direction === -1 && index > 0) || (direction === 1 && index < mIds.length - 1)) {\n      return mIds[index + direction];\n    }\n    return undefined;\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    if (mediaIds.length <= 1) {\n      handleClose();\n      return;\n    }\n    let index = mediaId ? mediaIds.indexOf(mediaId) : -1;\n    // Before deleting, select previous media or the first one\n    index = index > 0 ? index - 1 : 0;\n    selectMedia(mediaIds[index]);\n  });\n\n  const lang = useLang();\n\n  function renderSenderInfo() {\n    return avatarOwner ? (\n      <SenderInfo\n        key={mediaId}\n        chatId={avatarOwner.id}\n        isAvatar\n        isFallbackAvatar={isUserId(avatarOwner.id)\n          && (avatarOwner as ApiUser).photos?.[mediaId!]?.id === avatarOwnerFallbackPhoto?.id}\n      />\n    ) : (\n      <SenderInfo\n        key={mediaId}\n        chatId={chatId}\n        messageId={mediaId}\n      />\n    );\n  }\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          {renderSenderInfo()}\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          message={message}\n          canUpdateMedia={canUpdateMedia}\n          avatarPhoto={avatarPhoto}\n          avatarOwner={avatarOwner}\n          fileName={fileName}\n          canReport={canReport}\n          selectMedia={selectMedia}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatarPhoto}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        mediaId={mediaId}\n        getMediaId={getMediaId}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectMedia={selectMedia}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n      isHidden,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId } = global;\n    let isChatWithSelf = !!chatId && selectIsChatWithSelf(global, chatId);\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        isChatWithSelf,\n        origin,\n        message,\n        withAnimation,\n        isHidden,\n        shouldSkipHistoryAnimations,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const user = selectUser(global, avatarOwnerId);\n      const chat = selectChat(global, avatarOwnerId);\n      let canUpdateMedia = false;\n      if (user) {\n        canUpdateMedia = avatarOwnerId === currentUserId;\n      } else if (chat) {\n        canUpdateMedia = isChatAdmin(chat);\n      }\n\n      isChatWithSelf = selectIsChatWithSelf(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: user || chat,\n        avatarOwnerFallbackPhoto: user ? selectUserFullInfo(global, avatarOwnerId)?.fallbackPhoto : undefined,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      chatMessages = selectChatScheduledMessages(global, chatId);\n    } else {\n      chatMessages = selectChatMessages(global, chatId);\n    }\n    let collectionIds: number[] | undefined;\n\n    if (origin === MediaViewerOrigin.Inline\n      || origin === MediaViewerOrigin.Album) {\n      collectionIds = selectOutlyingListByMessageId(global, chatId, threadId, message.id)\n        || selectListedIds(global, chatId, threadId);\n    } else if (origin === MediaViewerOrigin.SharedMedia) {\n      const currentSearch = selectCurrentMediaSearch(global);\n      const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n      collectionIds = foundIds;\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectionIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gJ2Z_EQBnbDYMJ2NKHPj\",\"fullSize\":\"F47ywnKRf0QnMNfkDAhN\",\"backdrop\":\"aZegQFa4eGDydcez2hhX\",\"captionBackdrop\":\"tt0i3c46mBP8eper4sX9\",\"backdropNonInteractive\":\"qBNqjd4Jivn9JZM9LTR1\",\"close\":\"oHmnmRivkoOTtFlipOlm\",\"wrapper\":\"tfRbD6UXCoHpURk9jkFs\",\"slideAnimation\":\"KeE62xWk53FkLDgmLDHC\",\"slideAnimationToActive\":\"u4UY_cga_HGYeSeXtJFy\",\"content\":\"AS2XHnign2xV16Kjj6bL\",\"slideAnimationFromActive\":\"fMXsSVdwtbHbHVPe7TRY\",\"composer\":\"RrR48bdsuf7ziCaT39SR\",\"caption\":\"DfZIQpvbsc1Lopohx81T\",\"storyIndicators\":\"E5huzrUvL4LEC9dx4KwW\",\"slide\":\"Xd5grwcEn6r_RQyYYwTw\",\"slidePreview\":\"fH5dgpor5kv4sjYevuiU\",\"activeSlide\":\"Cs943zlR1iWQhsSG8QUZ\",\"slideInner\":\"UxBW6ApLLCk97qq1YxJH\",\"mediaWrapper\":\"tOO6t_Iv78rQnpDEOgh8\",\"media\":\"IWB6V7TuwMQUqxdPJDKT\",\"name\":\"zX3llen5J3KlIJGrCz2u\",\"forward\":\"mFCpxKAL5_Xa89VkFv5i\",\"storyHeader\":\"Kcahvy487TvQIEvXamQu\",\"sender\":\"E1bHDTXle6dida5Kw_Ob\",\"senderInfo\":\"MtJgsqpsPRYORGENbJDM\",\"senderName\":\"h7HZqUP3UoB_TWRA3ien\",\"storyMetaRow\":\"N9xfCNDRX4SkiLZ4_S9E\",\"storyMeta\":\"_fljB0mSVyj1YctbrtIQ\",\"closeButton\":\"qiXq5_w5pl5BhuytgsUI\",\"actions\":\"rlPJs7dRj8mRAAzEoxxg\",\"active\":\"YFM2wDC77SIBRSobTTNQ\",\"visibilityButton\":\"L2DlAgxoJ9gNRcSiZRkI\",\"visibilityButtonSelf\":\"uFpWDsHmcfI_qQSfKtph\",\"button\":\"Njk4jy0AOyHD31ABkS6M\",\"buttonMenu\":\"nqQ3MS3rHe4c00GJvtwh\",\"captionGradient\":\"MnckwrDaIp2zIGy011sM\",\"captionInner\":\"jXIvfN5QPnrzWo9eANQf\",\"captionContent\":\"_nAzidGNr0mdSkqyvmj_\",\"hasOverflow\":\"d3FJsMTVC2kORJMGxgbG\",\"expanded\":\"zAH8_B8BrtyxRZR_iHvS\",\"animate\":\"ZguPPKlRJgtkBr7ENcvT\",\"withShowMore\":\"XOq3cloVnzuYbz2bQw_b\",\"captionShowMore\":\"OIcA1buYWPCjn6NzLZJn\",\"navigate\":\"nAa_W_FxKosbXRpB3tgu\",\"prev\":\"zwhGmE8SJA8XAnthasxt\",\"next\":\"a9J5InzXCE1XEX5m3A6J\",\"modal\":\"RiK8REKD0zdsqi8XRHh5\",\"thumbnail\":\"lFdi4MIeHlnMCtiJbwTA\",\"ghost\":\"zY4iKmbIIQ3TXtFU3PvS\",\"ghost2\":\"b1yiparcCewkKHh2aOHA\",\"ghostImage\":\"rAlVsvmsoSnnvgZfAsc5\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GNraau1Tus9Dhh2t0acA\",\"closeButton\":\"osHMUMN4HFvGPbQ6eYUw\",\"stealthIcon\":\"VLiBdviejkHCeGYNuGbe\",\"title\":\"uEr8ArVuYRUD3Ca3K1Sr\",\"description\":\"uV7xfk10UeLETmkHjCSv\",\"listItem\":\"P7J78AMcEBuYTdRnkNpv\",\"icon\":\"cFpiujXxzIbtMShso6wr\",\"button\":\"z5JVVwDZqJmujLRuZYiL\",\"subtitle\":\"ADx8YQgxcFasnFZ14Tcy\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <Picker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"wU1uWdwnVeSGSB5gOjJ6\",\"active\":\"SlrHi8_ck8rgqhL48EhA\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Tc2kIulYTlFPvwfiTsFu\",\"header\":\"JXAfpcoB9izWjIX_WP0Q\",\"closeButton\":\"Hku60UdVn3LASgJdRQuw\",\"headerTitle\":\"L0Y7Snis7FiIcjMWZBBV\",\"content\":\"TBDaWd1Xw_wRqKUfj6IE\",\"section\":\"aNUFlXJVOpJVBLust1Ow\",\"title\":\"zNuDMViBzMNzGZxwFYGt\",\"list\":\"uW2YeebP6I62I5STt6az\",\"option\":\"CmouOddJNYo5qMb1eDhZ\",\"checked\":\"PxjIam8OpB7IAvp7fByQ\",\"input\":\"K9FImlb6XOJreshP5cfK\",\"icon\":\"Wpl9IXFnTYZf8HWj8H7_\",\"action\":\"oOUd_PRdTkIxpN_BekC1\",\"optionContent\":\"BkziTDKbvbzgii4mPbsx\",\"footer\":\"gH3hgLj6tnN_xhycOx0Q\",\"info\":\"i2HOS8g2UGDP69ABnvAe\",\"submit\":\"XwAIvijHgerStkRxm6rt\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryPinned } = getActions();\n\n  const lang = useLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isPinned);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isPinned !== isPinned) {\n      toggleStoryPinned({ peerId: story!.peerId, storyId: story!.id, isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst OVERFLOW_THRESHOLD_PX = 5.75 * REM;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n\n  const caption = story.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const { clientHeight } = ref.current;\n    setHasOverflow(clientHeight > OVERFLOW_THRESHOLD_PX);\n  }, [caption]);\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransition(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useEffect(() => {\n    if (!showMoreButtonRef.current || !contentRef.current) {\n      return;\n    }\n\n    const button = showMoreButtonRef.current;\n    const container = contentRef.current;\n\n    const { offsetWidth } = button;\n    requestMutation(() => {\n      container.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n    });\n  }, [canExpand]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    hasOverflow && !isExpanded && styles.hasOverflow,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          <MessageText\n            messageOrStory={story}\n            withTranslucentThumbs\n            forcePlayback\n          />\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SZ7yrkn5jnFJYa8rf9Lq\",\"viewInfo\":\"sGmslpAUN8yKBOxe13Kg\",\"interactive\":\"UfBe8dmqVfC7BCCMwpOI\",\"avatars\":\"fx7W4KZAaiK5T2nIZL5c\",\"spacer\":\"SdmjC2sdiWVr6VAguB1N\",\"reactionCount\":\"be7sESSsLrdDEAFmfgN1\",\"reactionCountHeart\":\"j6UTHtXm5pGlZTUQtiNw\",\"channelReaction\":\"ZeZWZgtRc6Lk344t1KSQ\",\"views\":\"nrvshNssU3J7YjDRMGJt\",\"viewIcon\":\"ALYrJzsIz00qOE3fZxAg\",\"reactionButton\":\"BnHCTCGK8AHZZfrBsrRz\",\"reactionHeart\":\"oDRgq62aSPNYamk9P2EV\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  areViewsExpired?: boolean;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  areViewsExpired,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useLang();\n\n  const {\n    viewsCount, reactionsCount, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = story && 'recentViewerIds' in story ? story.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [story]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {!areViewsExpired && Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <div className={styles.channelReaction}>\n          <Button\n            round\n            className={styles.reactionButton}\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleLikeStory}\n            ariaLabel={lang('AccDescrLike')}\n          >\n            {sentReaction && (\n              <ReactionAnimatedEmoji\n                key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                containerId={containerId}\n                reaction={sentReaction}\n                withEffectOnly={isSentStoryReactionHeart}\n              />\n            )}\n            {(!sentReaction || isSentStoryReactionHeart) && (\n              <Icon\n                name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n              />\n            )}\n          </Button>\n          {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uXHBlEUDZKJr1u7dvj4k\",\"viewed\":\"GiJXPT0zbAmsx82Nm8ci\",\"active\":\"PaCfy7Nei0tOQAE9i0XV\",\"inner\":\"goBtmBaUzEEUaT_NbrvT\",\"progress\":\"kvGsn6HE3seo_5jfVRs1\",\"paused\":\"J1oS3YeXCbdBhKm3eIBi\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport {\n  selectChat, selectIsCurrentUserPremium,\n  selectPeerStories, selectPeerStory,\n  selectTabState, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dateFormat';\nimport download from '../../util/download';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useBackgroundMode from '../../hooks/useBackgroundMode';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n}\n\nconst VIDEO_MIN_READY_STATE = 4;\nconst SPACEBAR_CODE = 32;\n\nconst PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nconst SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryPinned,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n\n  const isChangelog = peerId === storyChangelogUserId;\n  const isChannel = !isUserId(peerId);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isPinned : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isPinned : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const shouldShowFooter = isLoadedStory && (isOut || isChannel);\n\n  const {\n    shouldRender: shouldRenderSkeleton, transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransition(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransition(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransition(!isOut && !isChangelog && !isChannel);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransition(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransition(true);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress(handleLongPressStart, handleLongPressEnd);\n\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !isVideo || !fullMediaData);\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => { if (hasAllData && !isUnsupported) handlePlayStory(); }, [hasAllData, isUnsupported]);\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isOut || isDeletedStory || areViewsExpired) return;\n\n    // Refresh recent viewers list each time\n    loadStoryViews({ peerId, storyId, isPreload: true });\n  }, [isDeletedStory, areViewsExpired, isOut, peerId, storyId]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) return;\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      setCurrentTime(video.currentTime);\n    }\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    setCurrentTime(0);\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    setCurrentTime(0);\n    openNextStory();\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryPinned({ peerId, storyId, isPinned: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryPinned({ peerId, storyId, isPinned: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    setCurrentTime(0);\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    const duration = isLoadedStory && story.content.video?.duration\n      ? story.content.video.duration\n      : undefined;\n\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (isChannel) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderInfo}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>{lang('StorySave')}</MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>{lang('ArchiveStory')}</MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>{lang('StealthMode')}</MenuItem>\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPlaying={markStoryPlaying}\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n            onEnded={handleOpenNextStory}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} areViewsExpired={areViewsExpired} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={styles.captionGradient} />}\n      {hasText && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={appearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang('ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId, storyId, isPrivateStories, isArchivedStories, isReportModalOpen, isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const { orderedIds, pinnedIds, archiveIds } = selectPeerStories(global, peerId) || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  return {\n    peer: (user || chat)!,\n    story,\n    orderedIds: isArchivedStories ? archiveIds : (isPrivateStories ? pinnedIds : orderedIds),\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n  };\n})(Story));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress(\n  onStart: NoneToVoidFunction,\n  onEnd: NoneToVoidFunction,\n) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart();\n      isLongPressActive.current = true;\n    }, DEFAULT_THRESHOLD);\n  }, [onStart]);\n\n  const cancel = useCallback(() => {\n    if (isLongPressActive.current) {\n      onEnd();\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd]);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timerId.current);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1);\n    const resultId = byId[previewIndexId]?.id || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <Avatar\n          peer={peer}\n          withStory\n          storyViewerMode=\"disabled\"\n        />\n        <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { ANIMATION_END_DELAY, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport { selectIsStoryViewerOpen, selectPeer, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport {\n  IS_FIREFOX, IS_IOS, IS_SAFARI,\n} from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSignal from '../../hooks/useSignal';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ANIMATION_DURATION_MS = 350 + (IS_SAFARI || IS_FIREFOX ? ANIMATION_END_DELAY : 20);\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePrevious(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n  const animationDuration = isMobile ? 0 : ANIMATION_DURATION_MS;\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    const timeoutId = window.setTimeout(() => {\n      setRenderingPeerId(currentPeerId);\n    }, animationDuration);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [animationDuration, currentPeerId]);\n\n  useEffect(() => {\n    let timeOutId: number | undefined;\n\n    if (renderingPeerId !== currentPeerId) {\n      timeOutId = window.setTimeout(() => {\n        setRenderingStoryId(currentStoryId);\n      }, animationDuration);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n\n    return () => {\n      window.clearTimeout(timeOutId);\n    };\n  }, [renderingPeerId, currentStoryId, currentPeerId, renderingStoryId, animationDuration]);\n\n  useEffect(() => {\n    let timeOutId: number | undefined;\n\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n      timeOutId = window.setTimeout(() => {\n        setIsAnimating(false);\n      }, animationDuration);\n    }\n\n    return () => {\n      setIsAnimating(false);\n      window.clearTimeout(timeOutId);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, animationDuration]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${-offsetY}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, renderingPeerId, onClose, windowWidth, windowHeight]);\n\n  useLayoutEffect(() => {\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n\n        return;\n      }\n\n      const getScale = () => {\n        if (isMobile) return '1';\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        if (!isMobile) offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        if (!isMobile) offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, isMobile, slideSizes]);\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { archived, active } } = global.stories;\n  const peer = currentPeerId ? selectPeer(global, currentPeerId) : undefined;\n\n  return {\n    byPeerId,\n    peerIds: peer?.areStoriesHidden ? archived : active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"hOwWWII6h241MvvB87N5\",\"viewsList\":\"hOwWWII6h241MvvB87N5\",\"views-list-loading\":\"ZaMMMcb_gGs7nmClMvzj\",\"viewsListLoading\":\"ZaMMMcb_gGs7nmClMvzj\",\"info\":\"Yt7QHLaCNE1N3OSWXa_n\",\"centeredInfo\":\"vKqMQNiuvK152lO__j16\",\"view-reaction\":\"x77ctFpUWd2rG2IUxz7y\",\"viewReaction\":\"x77ctFpUWd2rG2IUxz7y\",\"header\":\"oGYCTCHvXEkdIBMd0dHh\",\"content\":\"NfqCS7dx9c9nxYXZc3p2\",\"top-button\":\"hMKJ4bqsyGw0fQn5RwVQ\",\"topButton\":\"hMKJ4bqsyGw0fQn5RwVQ\",\"contact-filter\":\"RnVt9sK0OgnrHADARI9k\",\"contactFilter\":\"RnVt9sK0OgnrHADARI9k\",\"selected\":\"deHea5ii46_J57LhYmaj\",\"sort\":\"Mq_j5_FRMS06qJcPCwmC\",\"sort-button\":\"BYQ1X4iADCMrIUqdd3Lt\",\"sortButton\":\"BYQ1X4iADCMrIUqdd3Lt\",\"icon-sort\":\"yq5P30VXV4gSKmSHmXLL\",\"iconSort\":\"yq5P30VXV4gSKmSHmXLL\",\"icon-down\":\"mjcXdhEuASJWWO5Cqlxq\",\"iconDown\":\"mjcXdhEuASJWWO5Cqlxq\",\"search\":\"vs1AYj85WQxzI646EBZt\",\"bottom-info\":\"sWTOVQoWoeNAu2G8kVOl\",\"bottomInfo\":\"sWTOVQoWoeNAu2G8kVOl\",\"scrolled\":\"knxco2DJ3lthvQo2SOG6\",\"footer\":\"RqsPFLpLbJYFm50JYSiw\",\"closeButton\":\"DonddSsGK4E9DM8F5ctU\",\"opacity-fade-in\":\"h15igx036PH4epiXwUBg\",\"opacityFadeIn\":\"h15igx036PH4epiXwUBg\",\"fadeIn\":\"T9DzW6zCmxNgXv1YaUji\",\"blocked\":\"EVxErnsRszao77tgwSaA\",\"check\":\"HbQucamQwAYpvNnTqHVM\",\"menuBubble\":\"Y3KJ1StmiJpvbpeqbMuv\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiStoryView, ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiStoryView;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\nconst StoryView = ({\n  storyView,\n  user,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat, closeStoryViewer, unblockUser, blockUser, deleteContact, updateStoryView,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useLastCallback(() => {\n    closeStoryViewer();\n\n    setTimeout(() => {\n      openChat({ id: storyView.userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    const { userId, areStoriesBlocked, isUserBlocked } = storyView;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId, isOnlyStories: true });\n            updateStoryView({ userId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId, isOnlyStories: true });\n            updateStoryView({ userId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId });\n            updateStoryView({ userId, isUserBlocked: false });\n          } else {\n            blockUser({ userId });\n            updateStoryView({ userId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, user]);\n\n  return (\n    <ListItem\n      key={storyView.userId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => handleClick()}\n      rightElement={storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      <PrivateChatInfo\n        userId={storyView.userId}\n        noStatusOrTyping\n        status={formatDateAtTime(lang, storyView.date * 1000)}\n        statusIcon=\"message-read\"\n        withStory\n        forceShowSelf\n      />\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const user = selectUser(global, storyView.userId);\n\n  return {\n    user,\n    availableReactions: global.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  viewsById?: Record<string, ApiStoryView>;\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  viewsById,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViews, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const viewsCount = story?.viewsCount || 0;\n  const reactionsCount = story?.reactionsCount || 0;\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViewIds = useMemo(() => {\n    if (!viewsById) {\n      return undefined;\n    }\n\n    return Object.values(viewsById)\n      .sort(prepareComparator(areReactionsFirst))\n      .map((view) => view.userId);\n  }, [areReactionsFirst, viewsById]);\n\n  const placeholderCount = !sortedViewIds?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViewIds?.length) && sortedViewIds!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViews({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViewIds?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViewIds?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViewIds}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViewIds?.map((id) => (\n            <StoryView key={id} storyView={viewsById![id]} />\n          ))}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiStoryView, b: ApiStoryView) => {\n    if (areReactionsFirst) {\n      if (a.reaction && !b.reaction) {\n        return -1;\n      }\n      if (!a.reaction && b.reaction) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, viewsById, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    viewsById,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePrevious(isOpen);\n  const prevBestImageData = usePrevious(bestImageData);\n  const prevPeerId = usePrevious(peerId);\n  const prevOrigin = usePrevious(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  chatsById?: Record<string, ApiChat>;\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  chatsById,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const topicsResult = forumId ? chatsById?.[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById![forumId!], topic.id)\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [chatsById, forumId, topicSearch]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById?.[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useLastCallback((e: React.MouseEvent, chatId: string) => {\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const handleTopicClick = useLastCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  });\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatType } from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n  sortChatIds,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ChatOrUserPicker from './ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatsById: Record<string, ApiChat>;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  chatsById,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID);\n    });\n\n    const sorted = sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n      ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n    ]), chatsById, undefined, priorityIds);\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, chatsById, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      chatsById={chatsById}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsById,\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      chatsById,\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n}) => {\n  const {\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingIsStory = usePrevious(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      setForwardChatOrTopic({ chatId: recipientId, topicId: threadId });\n    }\n  }, [currentUserId, isManyMessages, isStory, lang]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang('ForwardTo')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pZFkNPeaXsO10mdITSZR\",\"buttons\":\"bYI0Nm410CJjgAhnH3EL\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiGeoPoint } from '../../../api/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  geoPoint?: ApiGeoPoint;\n  zoom?: number;\n};\n\nconst OpenMapModal = ({ geoPoint, zoom }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          Open Street Maps\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"jztdH6qO5uz3c2muOpPT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  urlAuth?: TabState['urlAuth'];\n  currentUserName?: string;\n};\n\nconst UrlAuthModal: FC<OwnProps> = ({\n  urlAuth, currentUserName,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(urlAuth, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (urlAuth?.url && isLoginChecked) {\n      const acceptAction = urlAuth.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    urlAuth, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(urlAuth?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, currentUserName]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(UrlAuthModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused, unmarkTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(selectedDate);\n  }, [onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <Button onClick={handleSubmit}>\n          {submitLabel}\n        </Button>\n        {secondButtonLabel && (\n          <Button onClick={onSecondButtonClick} isText>\n            {secondButtonLabel}\n          </Button>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useWindowSize from '../../../../hooks/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const reloadFrame = useCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  }, [ref]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        closeWebApp();\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useInterval from '../../../hooks/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  webApp?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst LUMA_THRESHOLD = 128;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  webApp,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n\n  const [shouldConfirmClosing, setShouldConfirmClosing] = useState(false);\n  const [isCloseModalOpen, openCloseModal, hideCloseModal] = useFlag(false);\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequesingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useLang();\n  const {\n    url, buttonText, queryId, replyToMessageId, threadId,\n  } = webApp || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyToMessageId,\n      threadId,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(webApp!.url);\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (shouldConfirmClosing) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, setWebAppPaymentSlug, webApp]);\n\n  const handleToggleClick = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: !attachBot,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n\n      setShouldConfirmClosing(false);\n      hideCloseModal();\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n      markUnloaded();\n    }\n  }, [hideCloseModal, isOpen, markUnloaded]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      if (eventData.color_key) {\n        const themeParams = extractCurrentThemeParams();\n        const key = eventData.color_key;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        setHeaderColor(color);\n      }\n\n      if (eventData.color) {\n        const color = validateHexColor(eventData.color) ? eventData.color : headerColor;\n        setHeaderColor(color);\n      }\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setShouldConfirmClosing(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequesingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequesingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.moreButton, isMenuOpen && 'active')}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {attachBot?.hasSettings && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequesingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={hideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={closeWebApp}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { webApp }): StateProps => {\n    const { botId } = webApp || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CWJDTp88gsPYaq6de8yn\",\"more-button\":\"_VJv8UKGVoUJKFRjrn8B\",\"moreButton\":\"_VJv8UKGVoUJKFRjrn8B\",\"close-icon\":\"l4SsaN4Dx0bKGb83CYhA\",\"closeIcon\":\"l4SsaN4Dx0bKGb83CYhA\",\"state-back\":\"jscxQ3PMmXnE2oWrMVBY\",\"stateBack\":\"jscxQ3PMmXnE2oWrMVBY\",\"loading-spinner\":\"ElvN45roGsPDzZuJjk3H\",\"loadingSpinner\":\"ElvN45roGsPDzZuJjk3H\",\"hide\":\"L441lq9G5_x3lNeWNFlB\",\"frame\":\"uFAepVSf6dgEREGs6Kio\",\"with-button\":\"ruOZRuUOenMeQp5WIpy0\",\"withButton\":\"ruOZRuUOenMeQp5WIpy0\",\"main-button\":\"QoAHIcQHa0NNmR8fma3w\",\"mainButton\":\"QoAHIcQHa0NNmR8fma3w\",\"visible\":\"OViz2KN7MjYjs1f5Z3JN\",\"hidden\":\"IEfxtMw7c1U4BRBpulWm\",\"main-button-spinner\":\"e4f56fQ8AjPxn8H1Avdv\",\"mainButtonSpinner\":\"e4f56fQ8AjPxn8H1Avdv\",\"web-app-popup\":\"afCqZ6iSD2Iw6bKyAKO1\",\"webAppPopup\":\"afCqZ6iSD2Iw6bKyAKO1\",\"without-title\":\"GuFs2OL_xXL5ODh10kTj\",\"withoutTitle\":\"GuFs2OL_xXL5ODh10kTj\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiAttachBot;\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  bot,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {bot?.isInactive && bot.isForSideMenu && (\n        renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePrevious(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PEnE7xWTMwTPGmhubmj6\",\"text\":\"U4UYSH7uHW3k4FlqBefm\",\"header\":\"Jdlm3dtJ8gOIY0x0u2d4\",\"description\":\"cE44My72bdvMJna9mgoc\",\"icon\":\"mxF3NdPgAi_H0ZFgNEtw\",\"font-icon\":\"r6_o8xZKIo11QFFYm2Hv\",\"fontIcon\":\"r6_o8xZKIo11QFFYm2Hv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  onClick?: VoidFunction;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\nconst PremiumFeatureItem: FC<OwnProps> = ({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  onClick,\n}) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={onClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NtJc4bt94t9fklIWC6wF\",\"arrow\":\"_rzXza87NHdAMH2TDKul\",\"right\":\"J4UYbae0Frt01jIavpB0\",\"arrow-hidden\":\"qd3rvhZma3JJmhdt07Ig\",\"arrowHidden\":\"qd3rvhZma3JJmhdt07Ig\",\"dot\":\"eCgEFkp07vgaUGwymYAQ\",\"medium\":\"AIpVWjJc47egZ8ATaC3n\",\"small\":\"MnRKztu0OZTyIywGLMc6\",\"invisible\":\"boSFbatyzatdw70J7mpu\",\"active\":\"nlCmVncFkKVtsawWqcfw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qiAkShre9E6R3S_XXL9S\",\"floating-badge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floatingBadge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floating-badge-triangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floatingBadgeTriangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floating-badge-icon\":\"y7T3FpaFXDsnPGk6dPmg\",\"floatingBadgeIcon\":\"y7T3FpaFXDsnPGk6dPmg\",\"text\":\"X0zFAEpRoPWj1yE904xR\",\"floating-badge-value\":\"rQ6ZdKdWi4HVydX6qhWS\",\"floatingBadgeValue\":\"rQ6ZdKdWi4HVydX6qhWS\",\"left-text\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"leftText\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-text\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightText\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-value\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightValue\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"left-value\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"leftValue\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"line\":\"slESyAvUqizX4_EIX_yg\",\"left\":\"lQi3xqxjvl2Owb4ES2SM\",\"right\":\"Dcv5uphsn2Sxpg3ROS_u\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jeeOV_UYyl50GFLOzjGC\",\"title\":\"SVqE3gr2ekQUWfFT_Mvg\",\"description\":\"mCBNPstzrSlOQsz6rOtE\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dVn5gk50tXn1EiI4kJFJ\",\"sticker\":\"PIYKt4xxOUBpRjRu0b4q\",\"effect-sticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\",\"effectSticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: NoneToVoidFunction;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useCallback(() => {\n    onClick(realIndex);\n  }, [onClick, realIndex]);\n\n  const handleEnded = useCallback(() => {\n    inanimate();\n    onEnded();\n  }, [inanimate, onEnded]);\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useCallback((i: number) => {\n    setOffset(-i);\n  }, []);\n\n  const handleEnded = useCallback(() => {\n    setTimeout(() => {\n      setOffset((current) => cycleRestrict(renderedStickers.length, current + 1));\n    }, ENDED_DELAY);\n  }, [renderedStickers.length]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((l, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={l}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dfgGrPUU6AC7NazJh8Ut\",\"header\":\"Y9bbyTXeZIKzoa8wtnkn\",\"circle\":\"eTSbeIbZl_YRbAPcqHhQ\",\"title\":\"me5CfUvQ6RleMxtFjIaR\",\"features\":\"ssjliTyWlTUXFLdz5NJd\",\"mobile\":\"ckFVT8AXlwgCejTXWdfQ\",\"scrolled\":\"T0nWA26c2Q0j0Z_PpexK\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { DPR } from '../../../../util/windowEnvironment';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLang from '../../../../hooks/useLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * DPR * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n    });\n  }, []);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE / DPR;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WHiQiGCtWfjSlEysEelB\",\"wrapper\":\"WUpKHfqLbeZmhfYqqiko\",\"down\":\"MiGmL4xqBPkxmLim4Ai0\",\"frame\":\"xuhT9JHpFkVsTcUWeh4L\",\"video\":\"sLLJqCkdSug4bzEQrACs\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QfngIllOc1THaTQiJf7h\",\"button\":\"n8tTb600de2uZKGkyw67\",\"button-content\":\"eZLuJy6dL4ekVllaRcCm\",\"buttonContent\":\"eZLuJy6dL4ekVllaRcCm\",\"back-button\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"backButton\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"white-back-button\":\"E42Dy7DFLAxvj8HE4GAD\",\"whiteBackButton\":\"E42Dy7DFLAxvj8HE4GAD\",\"content\":\"JMdhJYW94Mas4JDye486\",\"frame\":\"fEQZ2fyO9g6L1v8QJUCJ\",\"slide\":\"xkC9BFxv7RkSwbPe4RMb\",\"limits\":\"zngeFAwxdlVJZY876fHc\",\"stories\":\"uOZMPO0FyBVTsM6ACXDw\",\"limits-content\":\"le7Qv9QkHlO3qdK0Hs_g\",\"limitsContent\":\"le7Qv9QkHlO3qdK0Hs_g\",\"header\":\"Mw81cOCIGy8KGn9VokFA\",\"no-header-border\":\"tRvcw256KSHRqgSj5uGX\",\"noHeaderBorder\":\"tRvcw256KSHRqgSj5uGX\",\"preview\":\"EXGFQjwHmQxjvMLbYtS9\",\"title\":\"eEYA2lXPy_DUKe8JKHiP\",\"description\":\"TVO7LjkV_yHUGIu5PXCA\",\"footer\":\"EKr_FVmiDSwhUxouhaqB\",\"no-footer-border\":\"H8z5Q6gsuqeCy82HFlyX\",\"noFooterBorder\":\"H8z5Q6gsuqeCy82HFlyX\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPremiumPromo } from '../../../api/types';\nimport type { ApiLimitType, GlobalState } from '../../../global/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n};\n\nexport const PREMIUM_FEATURE_SECTIONS = [\n  'stories',\n  'double_limits',\n  'more_upload',\n  'faster_download',\n  'voice_to_text',\n  'no_ads',\n  'infinite_reactions',\n  'premium_stickers',\n  'animated_emoji',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n  'translations',\n];\n\nconst PREMIUM_BOTTOM_VIDEOS: string[] = [\n  'faster_download',\n  'voice_to_text',\n  'advanced_chat_management',\n  'infinite_reactions',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n  'translations',\n];\n\ntype ApiLimitTypeWithoutUpload = Exclude<ApiLimitType, 'uploadMaxFileparts' | 'chatlistInvites' | 'chatlistJoined'>;\n\nconst LIMITS_ORDER: ApiLimitTypeWithoutUpload[] = [\n  'channels',\n  'dialogFolderPinned',\n  'channelsPublic',\n  'savedGifs',\n  'stickersFaved',\n  'aboutLength',\n  'captionLength',\n  'dialogFilters',\n  'dialogFiltersChats',\n];\n\nconst LIMITS_TITLES: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  onBack: VoidFunction;\n  initialSection: string;\n  promo: ApiPremiumPromo;\n  onClickSubscribe: (startParam?: string) => void;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  onBack,\n  onClickSubscribe,\n  isPremium,\n  limits,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  function handleClick() {\n    onClickSubscribe(initialSection);\n  }\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = e.currentTarget;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n    e.currentTarget.style.setProperty('--scroll-progress', progress.toString());\n    e.currentTarget.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex}`);\n    prevElement?.classList.toggle('reverse', false);\n    reverseElement?.classList.toggle('reverse', true);\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = PREMIUM_FEATURE_SECTIONS.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, initialSection, prevInitialSection, startScrolling, stopScrolling]);\n\n  const handleSelectSlide = useCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  }, [startScrolling, stopScrolling]);\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {PREMIUM_FEATURE_SECTIONS.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        <Button\n          className={buildClassName(styles.button)}\n          isShiny={!isPremium}\n          withPremiumGradient={!isPremium}\n          onClick={isPremium ? onBack : handleClick}\n        >\n          {isPremium\n            ? lang('OK')\n            : lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JJNHc_FZuydBNBIHK9xC\",\"transition\":\"Q05gUm0HCMtSoeX2HVGw\",\"button\":\"Fb3VVHNrypZ3lhYfSVI_\",\"main\":\"E9_LJ9RqAHTj8h84EROt\",\"logo\":\"Vaf41aTAoSwl_e_cZhah\",\"status-emoji\":\"ZDQ58Gu2MpISHIigNnCf\",\"statusEmoji\":\"ZDQ58Gu2MpISHIigNnCf\",\"header-text\":\"J2z1gqvfQu5kqV_UP8US\",\"headerText\":\"J2z1gqvfQu5kqV_UP8US\",\"description\":\"PXg8sU2cfdeysJXctlpB\",\"list\":\"LlPAfJpL066su4P2NFmh\",\"no-button\":\"wpPtJKCqTdOGkKoh7KTo\",\"noButton\":\"wpPtJKCqTdOGkKoh7KTo\",\"header\":\"Rwuf1efaEfZ13AD5XbCB\",\"hidden-header\":\"NV7fN3j69oFZEJu7ejG8\",\"hiddenHeader\":\"NV7fN3j69oFZEJu7ejG8\",\"close-button\":\"TyuYAZecpI2K_1i3B5XO\",\"closeButton\":\"TyuYAZecpI2K_1i3B5XO\",\"premium-header-text\":\"jA_DV7G5VJo8xGOe0otF\",\"premiumHeaderText\":\"jA_DV7G5VJo8xGOe0otF\",\"footer-text\":\"yVkdTScCEhH3EQMQiA42\",\"footerText\":\"yVkdTScCEhH3EQMQiA42\",\"primary-footer-text\":\"MQbFSG2o_R8rjKDsqs8R\",\"primaryFooterText\":\"MQbFSG2o_R8rjKDsqs8R\",\"footer\":\"FApXoTPpasib6Np5Uxpt\",\"stickerSetText\":\"CCRIHzjKzzj6y3nYJQKk\",\"stickerSetLink\":\"_G_ogp7ec2JUxZUhoaAi\",\"stickerSetLinkIcon\":\"vJ2GKZFltN22CJDw5Bdu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_SECTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<string, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  isClosing?: boolean;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: string;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: string[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isClosing,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<string | undefined>(initialSection);\n\n  const handleOpen = useCallback((section: string | undefined) => {\n    return () => {\n      setCurrentSection(section);\n    };\n  }, []);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  function handleClickWithStartParam(startParam?: string) {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  }\n\n  const handleClick = useLastCallback(() => {\n    handleClickWithStartParam();\n  });\n\n  const showConfetti = useCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n      });\n    }\n  }, [isOpen, requestConfetti]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      // eslint-disable-next-line react/jsx-no-bind\n      onCloseAnimationEnd={() => closePremiumModal({ isClosed: true })}\n      onClose={closePremiumModal}\n      isOpen={isOpen && !isClosing}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    onClick={handleOpen(section)}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleOpen(undefined)}\n            promo={promo}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isClosing: premiumModal?.isClosing,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"c43s0Q6_xgGlM8sZxQ7Q\",\"active\":\"PjYaF42Oe55WgPpTP6Od\",\"input\":\"r03M3Tzd52_D2GCAdabK\",\"content\":\"oL_26LDnHDwJRxqKF1Kn\",\"month\":\"JmEuBQ4mFzu1MiFV5qSB\",\"perMonth\":\"hssGd7AUhDhhG2_aXqe9\",\"amount\":\"mhc9AgOUiNT2QMcErpQe\",\"discount\":\"WCXGWHYNQh8lg2rIWehC\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './GiftOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  onChange: (month: number) => void;\n};\n\nconst GiftOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount, onChange,\n}) => {\n  const lang = useLang();\n\n  const { months, amount, currency } = option;\n  const perMonth = Math.floor(amount / months);\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label className={buildClassName(styles.wrapper, checked && styles.active)} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"gift_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>{lang('Months', months)}</div>\n        <div className={styles.perMonth}>\n          {lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n          {Boolean(discount) && (\n            <span className={styles.discount} title={lang('GiftDiscount')}> &minus;{discount}% </span>\n          )}\n        </div>\n        <div className={styles.amount}>{formatCurrency(amount, currency, lang.code)}</div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiftOption);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPremiumGiftOption, ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport {\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport GiftOption from './GiftOption';\n\nimport styles from './GiftPremiumModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  gifts?: ApiPremiumGiftOption[];\n  monthlyCurrency?: string;\n  monthlyAmount?: number;\n};\n\nconst GiftPremiumModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  user,\n  gifts,\n  monthlyCurrency,\n  monthlyAmount,\n}) => {\n  const { openPremiumModal, closeGiftPremiumModal, openUrl } = getActions();\n\n  const lang = useLang();\n  const renderedUser = useCurrentOrPrev(user, true);\n  const renderedGifts = useCurrentOrPrev(gifts, true);\n  const [selectedOption, setSelectedOption] = useState<number | undefined>();\n  const firstGift = renderedGifts?.[0];\n  const fullMonthlyAmount = useMemo(() => {\n    if (!renderedGifts || renderedGifts.length === 0 || !firstGift) {\n      return undefined;\n    }\n\n    const cheaperGift = renderedGifts.reduce((acc, gift) => {\n      return gift.amount < firstGift?.amount ? gift : firstGift;\n    }, firstGift);\n\n    return cheaperGift.currency === monthlyCurrency && monthlyAmount\n      ? monthlyAmount\n      : Math.floor(cheaperGift.amount / cheaperGift.months);\n  }, [firstGift, renderedGifts, monthlyAmount, monthlyCurrency]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedOption(firstGift?.months);\n    }\n  }, [firstGift?.months, isOpen]);\n\n  const selectedGift = useMemo(() => {\n    return renderedGifts?.find((gift) => gift.months === selectedOption);\n  }, [renderedGifts, selectedOption]);\n\n  const handleSubmit = useCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    closeGiftPremiumModal();\n    openUrl({ url: selectedGift.botUrl });\n  }, [closeGiftPremiumModal, openUrl, selectedGift]);\n\n  const handlePremiumClick = useCallback(() => {\n    openPremiumModal();\n  }, [openPremiumModal]);\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  return (\n    <Modal\n      onClose={closeGiftPremiumModal}\n      isOpen={isOpen}\n      className={styles.modalDialog}\n    >\n      <div className=\"custom-scroll\">\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeGiftPremiumModal()}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <Avatar\n          peer={renderedUser}\n          size=\"jumbo\"\n          className={styles.avatar}\n        />\n        <h2 className={styles.headerText}>\n          {lang('GiftTelegramPremiumTitle')}\n        </h2>\n        <p className={styles.description}>\n          {renderText(\n            lang('GiftTelegramPremiumDescription', getUserFirstOrLastName(renderedUser)),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n\n        <div className={styles.options}>\n          {renderedGifts?.map((gift) => (\n            <GiftOption\n              key={gift.amount}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={gift.months === selectedOption}\n              onChange={setSelectedOption}\n            />\n          ))}\n        </div>\n\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      <Button className={styles.button} isShiny disabled={!selectedOption} onClick={handleSubmit}>\n        {lang(\n          'GiftSubscriptionFor',\n          selectedGift && formatCurrency(Number(selectedGift.amount), selectedGift.currency, lang.code),\n        )}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { forUserId, monthlyCurrency, monthlyAmount } = selectTabState(global).giftPremiumModal || {};\n  const user = forUserId ? selectUser(global, forUserId) : undefined;\n  const gifts = user ? selectUserFullInfo(global, user.id)?.premiumGifts : undefined;\n\n  return {\n    user,\n    gifts,\n    monthlyCurrency,\n    monthlyAmount: monthlyAmount ? Number(monthlyAmount) : undefined,\n  };\n})(GiftPremiumModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"K80So3B9potKGNvwdtYE\",\"closeButton\":\"dxx424IZDNuP1OLbUIve\",\"avatar\":\"qJgJ7R5NJVmAxBjT5LxT\",\"headerText\":\"eqCNa8zBoMroKcepfXyE\",\"description\":\"MtYhgDChavNfKIUAJPzt\",\"premiumFeatures\":\"J0hST5xsC45ZolfGpbDc\",\"options\":\"HyfHjS1vAds31eFcSpDg\",\"button\":\"sSXm9RjIQSsVFi0D1nEd\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\n\nimport Icon from '../../../common/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iz5RJvcQyNNDQzKfXQbN\",\"limit-compare\":\"az3lXhmlMfZfIQ_81jog\",\"limitCompare\":\"az3lXhmlMfZfIQ_81jog\",\"limit-badge\":\"womlEQglVV1w8ltVa6PQ\",\"limitBadge\":\"womlEQglVV1w8ltVa6PQ\",\"limit-value\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limitValue\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limit-icon\":\"q8SgjqQqlOVMSofzhdwh\",\"limitIcon\":\"q8SgjqQqlOVMSofzhdwh\",\"dialog-buttons\":\"DgRFl7StCs4fhROb7CKH\",\"dialogButtons\":\"DgRFl7StCs4fhROb7CKH\",\"x2\":\"MeIsw1Fm4WBqIZzbpS10\",\"button-icon\":\"BW05mF5k9uq5qBi_BYzg\",\"buttonIcon\":\"BW05mF5k9uq5qBi_BYzg\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z2hl3sxq0tzStr0JpMxi\",\"video\":\"h6jE3TEaqlzbs0ro0J2_\",\"image\":\"ivo3DVINrp81Kb9ho9kA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, thumbCustomEmojiId, isLottie, isVideos: isVideo,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToStatic = stickerSet.stickers && isVideo && !IS_WEBM_SUPPORTED;\n  const staticHash = shouldFallbackToStatic && getStickerPreviewHash(stickerSet.stickers![0].id);\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || isLottie) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransition(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        isLottie ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (isVideo && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xW0m4eR0ukCfRp6WS_Qd\",\"selected\":\"XTCJlnWtVba28wuDmeBN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation) : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransition(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionUniqueKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransition(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID && stickerSet.id !== POPULAR_SYMBOL_SET_ID;\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = withDefaultTopicIcon ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-name', withAddSetButton && 'symbol-set-name-external')}>\n            {isLocked && <i className=\"symbol-set-locked-icon icon icon-lock-badge\" />}\n            {stickerSet.title}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <i className=\"symbol-set-remove icon icon-close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('symbol-set-container shared-canvas-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <i className=\"icon icon-premium\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionUniqueKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gsyAr7lPlzHWUF_aYaVa\",\"main\":\"cnWk4tq3tmB7r08ScyxQ\",\"main_customEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"mainCustomEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"header\":\"x0Qtu0yjl4v02fLLyxV1\",\"headerWithBorder\":\"m4MXEae1lmdJZV64zN6b\",\"stickerCover\":\"A5Fetmgo_VQRMWxFTV_v\",\"activated\":\"yiTAGOkL3Hgb0VXRPy46\",\"pickerDisabled\":\"jNEbrwsYAlEp67HG75uy\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  CHAT_STICKER_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    if (!addedCustomEmojiIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = (defaultStatusIconsPack.stickers || []).concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const setIdsToDisplay = unique(addedCustomEmojiIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <i className=\"icon icon-recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      recentReactions,\n      topReactions,\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      availableReactions: isReactionPicker ? global.availableReactions : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z0kj3ATb_u7kBMYsqUpx\",\"activated\":\"sGL0teusRxo4NrXceldd\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"XWSv0Pf1SKleWNyX04yO\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"qcaMioaPQuA3J2DdyYu6\",\"modal\":\"Y9MSWZPXcoywEGAVkIGe\",\"loading\":\"rTu4qT5HMT5xEA0iBnQZ\",\"description\":\"kR5ezaKOBrU14CVmMWM0\",\"chip\":\"bwLqkQdHNWlFwAxcZAQs\",\"replaceModal\":\"YoELl5NSlfGHhh0TV09C\",\"replaceModalContent\":\"l39rkylGwQCNJD7zFGNp\",\"avatarContainer\":\"tfMx99CifV4hYxg9MEqE\",\"arrow\":\"f_dXofOOgJ37seFwxD55\",\"boostedWrapper\":\"Ylfk1xu6gEHr_yzPetrS\",\"boostedMark\":\"WDTDg5KQT796SQTEgPpx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiApplyBoostInfo, ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle } from '../../../global/helpers';\nimport { selectChat, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { formatDateInFuture } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  applyInfo?: ApiApplyBoostInfo;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  info: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  boostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  info,\n  chat,\n  boostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isOpen = Boolean(info);\n\n  const lang = useLang();\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!boostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, boostedChat);\n  }, [boostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    applyInfo,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n  }: BoostInfo = useMemo(() => {\n    if (!info?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      level, currentLevelBoosts, hasMyBoost,\n    } = info.boostStatus;\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n    } = getBoostProgressInfo(info.boostStatus, true);\n\n    const hasBoost = hasMyBoost || info.applyInfo?.type === 'already';\n    const isJustUpgraded = boosts === currentLevelBoosts && hasBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n    const currentStoriesPerDay = lang('ChannelBoost.StoriesPerDay', level);\n    const nextLevelStoriesPerDay = lang('ChannelBoost.StoriesPerDay', level + 1);\n\n    const modalTitle = hasBoost ? lang('YouBoostedChannel2', chatTitle)\n      : level === 0 ? lang('lng_boost_channel_title_first') : lang('lng_boost_channel_title_more');\n\n    let description: string | undefined;\n    if (level === 0) {\n      if (!hasBoost) {\n        description = lang('ChannelBoost.EnableStoriesForChannelText', [chatTitle, moreBoosts]);\n      } else {\n        description = lang('ChannelBoost.EnableStoriesMoreRequired', moreBoosts);\n      }\n    } else if (isJustUpgraded) {\n      if (level === 1) {\n        description = lang('ChannelBoost.EnabledStoriesForChannelText');\n      } else {\n        description = lang('ChannelBoost.BoostedChannelReachedLevel', [level, currentStoriesPerDay]);\n      }\n    } else {\n      description = lang('ChannelBoost.HelpUpgradeChannelText', [chatTitle, moreBoosts, nextLevelStoriesPerDay]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      applyInfo: info.applyInfo,\n      isBoosted: hasBoost,\n    };\n  }, [chat, chatTitle, info, lang]);\n\n  const isBoostDisabled = !applyInfo && isCurrentUserPremium;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id });\n    requestConfetti();\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumDialog();\n      return;\n    }\n\n    if (isBoosted) {\n      closeBoostModal();\n      return;\n    }\n\n    if (applyInfo?.type === 'ok') {\n      handleApplyBoost();\n    }\n\n    if (applyInfo?.type === 'replace') {\n      openReplaceModal();\n    }\n\n    if (applyInfo?.type === 'wait') {\n      openWaitDialog();\n    }\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {!isBoosted ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang('ChannelBoost.BoostChannel')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {applyInfo?.type === 'replace' && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={boostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {applyInfo?.type === 'wait' && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), applyInfo.waitUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const chat = info && selectChat(global, info?.chatId);\n    const boostedChat = info?.applyInfo?.type === 'replace'\n      ? selectChat(global, info.applyInfo.boostedChatId) : undefined;\n\n    return {\n      chat,\n      boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"UwWVjbf4Ptl9vrrJPZon\",\"picker-wrapper\":\"h97ntomDmLCVEoTjzCHi\",\"pickerWrapper\":\"h97ntomDmLCVEoTjzCHi\",\"picker-header\":\"Wz6C5rszlwOTdImks0cL\",\"pickerHeader\":\"Wz6C5rszlwOTdImks0cL\",\"picker-header-info\":\"OwAqbtXus5KwSxvNBKyu\",\"pickerHeaderInfo\":\"OwAqbtXus5KwSxvNBKyu\",\"selection-toggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"selectionToggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"foldersWrapper\":\"HFZAaai7bs4X21rCRSyQ\",\"folders\":\"Xrr7zKG4KrVimUxojATI\",\"folder\":\"_7YreahCXXe3zGG5sywZA\",\"button-text\":\"K7T3MH1zL9aRmVFtTBBu\",\"buttonText\":\"K7T3MH1zL9aRmVFtTBBu\",\"button-badge\":\"_Z6IH9MHEorrdl7VDqJ2\",\"buttonBadge\":\"_Z6IH9MHEorrdl7VDqJ2\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.alreadyPeerIds}\n          lockedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.peerIds}\n          lockedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  info?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  info,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(info);\n  const renderingInfo = usePrevious(info) || info;\n  const renderingFolder = usePrevious(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const { invite, removal } = info || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport SafeLink from './SafeLink';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('SponsoredMessageInfo')}\n    >\n      <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n      <p>\n        <SafeLink\n          url={lang('SponsoredMessageAlertLearnMoreUrl')}\n          text={lang('SponsoredMessageAlertLearnMoreUrl')}\n        />\n      </p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Close')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectCanDeleteSelectedMessages, selectCurrentChat, selectTabState, selectUser,\n} from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const lang = useLang();\n\n  // Returning `undefined` from FC instead of `<Modal>` doesn't trigger useHistoryBack\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen]);\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n      title={lang('Conversation.DeleteManyMessages')}\n    >\n      <p>{lang('AreYouSureDeleteFewMessages')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>This will delete them just for you, not for other participants in the chat.</p>\n      )}\n      {willDeleteForAll && (\n        <p>This will delete them for everyone in this chat.</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName\n              ? renderText(lang('ChatList.DeleteForEveryone', contactName))\n              : lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      selectedMessageIds,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      <DeleteSelectedMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={isSchedule}\n        onClose={closeDeleteModal}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isForwardModalOpen = tabState.forwardMessages.isModalShown;\n    const isAnyModalOpen = Boolean(isForwardModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"phK_DdEImRiGA8z2FwyB\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionUniqueKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionUniqueKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionUniqueKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"syvgWO0b6lIEPd3iu1TA\",\"list-item\":\"_nKqEo7SgYwpaclSSCIx\",\"listItem\":\"_nKqEo7SgYwpaclSSCIx\",\"title\":\"R7LNh8TMqiktRuTuESsf\",\"subtitle\":\"so4259O2hcdGOxENXdqc\",\"languages\":\"DiSTH_4CZnPK8Dh8Tpfq\"};","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads']['byChatId'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads.byChatId;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openChat } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      openChat({ id: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { getPrivateChatUserId, isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"large\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"large\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport {\n  filterUsersByName,\n  sortChatIds,\n} from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  localContactIds?: string[];\n  localChatIds?: string[];\n  localUserIds?: string[];\n  globalChatIds?: string[];\n  globalUserIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  localContactIds,\n  localChatIds,\n  localUserIds,\n  globalChatIds,\n  globalUserIds,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2)) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(localContactIds || []),\n    ];\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    return [\n      ...sortChatIds(unique([\n        ...(foundContactIds || []),\n        ...(localChatIds || []),\n        ...(localUserIds || []),\n      ]), chatsById, undefined, currentUserId ? [currentUserId] : undefined),\n    ];\n  }, [searchQuery, currentUserId, localContactIds, lang, localChatIds, localUserIds, chatsById]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalChatIds || !globalUserIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return sortChatIds(\n      unique([...globalChatIds, ...globalUserIds]),\n      chatsById,\n      true,\n    );\n  }, [chatsById, globalChatIds, globalUserIds, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId, searchQuery, searchDate]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n\n    const { userIds: localContactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!localContactIds) {\n      return {\n        chatsById,\n      };\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { chatIds: globalChatIds, userIds: globalUserIds } = globalResults || {};\n    const { chatIds: localChatIds, userIds: localUserIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.text?.foundIds;\n\n    return {\n      currentUserId,\n      localContactIds,\n      localChatIds,\n      localUserIds,\n      globalChatIds,\n      globalUserIds,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getMessageDocument } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Document\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      mediaId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(1),\n];\n\nconst TRANSITION_RENDER_COUNT = Object.keys(GlobalSearchContent).length / 2;\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const handleSwitchTab = useCallback((index: number) => {\n    const tab = TABS[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  }, [setGlobalSearchContent]);\n\n  const handleSearchDateSelect = useCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  }, [setGlobalSearchDate]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={chatId ? CHAT_TABS : TABS} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={TRANSITION_RENDER_COUNT}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderChatType } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useInfiniteScroll from '../../../../hooks/useInfiniteScroll';\nimport useLang from '../../../../hooks/useLang';\n\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PickerSelectedItem from '../../../common/PickerSelectedItem';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport Checkbox from '../../../ui/Checkbox';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../../ui/InfiniteScroll';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\nimport '../../../common/Picker.scss';\nimport './SettingsFoldersChatsPicker.scss';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  chatIds: string[];\n  selectedIds: string[];\n  selectedChatTypes: string[];\n  filterValue?: string;\n  shouldHideChatTypes?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onSelectedChatTypesChange: (types: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onSaveFilter: VoidFunction;\n  isActive?: boolean;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\ntype StateProps = {\n  maxChats: number;\n};\n\nconst SettingsFoldersChatsPicker: FC<OwnProps & StateProps> = ({\n  mode,\n  chatIds,\n  selectedIds,\n  selectedChatTypes,\n  filterValue,\n  shouldHideChatTypes,\n  onSelectedIdsChange,\n  onSelectedChatTypesChange,\n  onFilterChange,\n  maxChats,\n  onSaveFilter,\n  isActive,\n}) => {\n  const { openLimitReachedModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const chatTypes = mode === 'included' ? INCLUDED_CHAT_TYPES : EXCLUDED_CHAT_TYPES;\n  const shouldMinimize = selectedIds.length + selectedChatTypes.length > MAX_FULL_ITEMS;\n  const [isTouched, setIsTouched] = useState(false);\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      if (selectedIds.length >= maxChats && mode === 'included') {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      newSelectedIds.push(id);\n    }\n    setIsTouched(true);\n    onSelectedIdsChange(newSelectedIds);\n  }, [selectedIds, onSelectedIdsChange, maxChats, mode, openLimitReachedModal]);\n\n  const handleChatTypeClick = useCallback((key: FolderChatType['key']) => {\n    const newSelectedChatTypes = [...selectedChatTypes];\n    if (newSelectedChatTypes.includes(key)) {\n      newSelectedChatTypes.splice(newSelectedChatTypes.indexOf(key), 1);\n    } else {\n      newSelectedChatTypes.push(key);\n    }\n    setIsTouched(true);\n    onSelectedChatTypesChange(newSelectedChatTypes);\n  }, [selectedChatTypes, onSelectedChatTypesChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const lang = useLang();\n\n  function renderSelectedChatType(key: string) {\n    const selectedType = chatTypes.find(({ key: typeKey }) => key === typeKey);\n    if (!selectedType) {\n      return undefined;\n    }\n\n    return (\n      <PickerSelectedItem\n        icon={selectedType.icon}\n        title={lang(selectedType.title)}\n        isMinimized={shouldMinimize}\n        canClose\n        onClick={handleChatTypeClick}\n        clickArg={selectedType.key}\n      />\n    );\n  }\n\n  function renderChatType(type: FolderChatType) {\n    return (\n      <ListItem\n        key={type.key}\n        className=\"chat-item-clickable picker-list-item chat-type-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleChatTypeClick(type.key)}\n        ripple\n      >\n        <i className={buildClassName('icon', `icon-${type.icon}`)} />\n        <h3 className=\"chat-type\" dir=\"auto\">{lang(type.title)}</h3>\n        <Checkbox\n          label=\"\"\n          checked={selectedChatTypes.includes(type.key)}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  function renderItem(id: string) {\n    const isSelected = selectedIds.includes(id);\n\n    return (\n      <ListItem\n        key={id}\n        className=\"chat-item-clickable picker-list-item chat-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {isUserId(id) ? (\n          <PrivateChatInfo userId={id} />\n        ) : (\n          <GroupChatInfo chatId={id} withChatType />\n        )}\n        <Checkbox\n          label=\"\"\n          checked={isSelected}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, chatIds, Boolean(filterValue));\n\n  return (\n    <div className=\"Picker SettingsFoldersChatsPicker\">\n      <div className=\"picker-header custom-scroll\">\n        {selectedChatTypes.map(renderSelectedChatType)}\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            peerId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n      <InfiniteScroll\n        className=\"picker-list custom-scroll fab-padding-bottom\"\n        itemSelector=\".chat-item\"\n        items={viewportIds}\n        onLoadMore={getMore}\n      >\n        {(!viewportIds || !viewportIds.length || viewportIds.includes(chatIds[0])) && (\n          <div key=\"header\">\n            {!shouldHideChatTypes && (\n              <>\n                <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang('FilterChatTypes')}\n                </h4>\n                {chatTypes.map(renderChatType)}\n                <div className=\"picker-list-divider\" />\n              </>\n            )}\n            <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterChats')}\n            </h4>\n          </div>\n        )}\n\n        {viewportIds?.length ? (\n          viewportIds.map(renderItem)\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\" key=\"no-results\">Sorry, nothing found.</p>\n        ) : (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatsPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { unique } from '../../../../util/iteratees';\n\nimport {\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport Loading from '../../../ui/Loading';\nimport SettingsFoldersChatsPicker from './SettingsFoldersChatsPicker';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n}) => {\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = selectChatFilters(state, mode, true);\n\n  const lang = useLang();\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...selectedChatIds,\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedChatIds, lang, chatFilter]);\n\n  const handleFilterChange = useCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n  }, [dispatch]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n  }, [mode, state, dispatch]);\n\n  const handleSelectedChatTypesChange = useCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  }, [mode, selectedChatIds, dispatch]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <SettingsFoldersChatsPicker\n      mode={mode}\n      chatIds={displayedIds}\n      selectedIds={selectedChatIds}\n      selectedChatTypes={selectedChatTypes}\n      filterValue={chatFilter}\n      shouldHideChatTypes={shouldHideChatTypes}\n      onSelectedIdsChange={handleSelectedIdsChange}\n      onSelectedChatTypesChange={handleSelectedChatTypesChange}\n      onFilterChange={handleFilterChange}\n      onSaveFilter={onSaveFilter}\n      isActive={isActive}\n    />\n  );\n};\n\nexport default memo(SettingsFoldersChatFilters);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport ShowMoreButton from '../../../ui/ShowMoreButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = selectChatFilters(state, 'included');\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = selectChatFilters(state, 'excluded');\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ShowMoreButton\n            count={leftChatsCount}\n            itemName=\"chat\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item mb-0\"\n              icon=\"link\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePrevious(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport InviteLink from '../../../common/InviteLink';\nimport Picker from '../../../common/Picker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <InviteLink\n        className=\"settings-item\"\n        inviteLink={!url ? lang('Loading') : url}\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-chatlist\">\n        <Picker\n          itemIds={itemIds}\n          lockedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          isRoundCheckbox\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"settingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"iconDevice\":\"a633Zas_0v2MAAY277vj\",\"iconDevice__android\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDeviceAndroid\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDevice__apple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDeviceApple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDevice__brave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDeviceBrave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDevice__chrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDeviceChrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDevice__edge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDeviceEdge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDevice__firefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDeviceFirefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDevice__linux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDeviceLinux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDevice__opera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDeviceOpera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDevice__safari\":\"XGWuju_22haQw0Qraor7\",\"iconDeviceSafari\":\"XGWuju_22haQw0Qraor7\",\"iconDevice__samsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDeviceSamsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDevice__ubuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDeviceUbuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDevice__unknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDeviceUnknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDevice__vivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDeviceVivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDevice__windows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDeviceWindows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDevice__xbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"iconDeviceXbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"title\":\"b9iUjEhCpOrQ4dPhn2KU\",\"note\":\"hTTCWbngkwJoEwtGFD9o\",\"date\":\"pUv5oVVNDZ5lBRzNzx3X\",\"box\":\"e32uLjclYAYuxxW1CAex\",\"actionHeader\":\"xwSMwr4aHsrRVIVInLEo\",\"actionName\":\"tSrCe7E_Iom1nGuh2Gs3\",\"headerButton\":\"N0buK669iHOZ1hN_H7Ik\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OeRWKjYQC6t7Uxv8I3j0\",\"avatar\":\"oy_023CG29VsnL9L5ulf\",\"title\":\"bg8UD_Pu2JWogmjuvVXg\",\"note\":\"TgiK64wG1hkOWSiXybQf\",\"box\":\"HSyJbRkyhkeT0s2QA4Ku\",\"action-header\":\"AQX7GM28GeWO4b1bXTNK\",\"actionHeader\":\"AQX7GM28GeWO4b1bXTNK\",\"action-name\":\"_VJHBZTk5qdYimQAoCWe\",\"actionName\":\"_VJHBZTk5qdYimQAoCWe\",\"header-button\":\"hlKLEbMQAsx572pUREy0\",\"headerButton\":\"hlKLEbMQAsx572pUREy0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"n3bBygyO4j5MQyJ70Twt\",\"clear-help\":\"vUICy6ZQCYFSrvvxXe7f\",\"clearHelp\":\"vUICy6ZQCYFSrvvxXe7f\",\"subtitle\":\"t3PK9_nPdL12eMsiMNcM\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  }, [firstSticker, onClick]);\n\n  if (!stickerSet || !stickerSet.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', className)}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\nimport type { IRadioOption } from '../../ui/CheckboxGroup';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition, unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'language' | 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  language,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n  const [displayedOptions, setDisplayedOptions] = useState<IRadioOption[]>([]);\n  const [search, setSearch] = useState('');\n\n  const options: IRadioOption[] = useMemo(() => {\n    return SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n  }, [language]);\n\n  useEffect(() => {\n    if (!isActive) setSearch('');\n  }, [isActive]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (prevIsActive === isActive) return;\n    if (isActive && displayedOptions.length) return;\n\n    const current = options.find((option) => option.value === language);\n    const otherLanguages = options.filter((option) => option.value !== language);\n\n    const [selected, unselected] = partition(otherLanguages, (option) => doNotTranslate.includes(option.value));\n\n    setDisplayedOptions([current!, ...selected, ...unselected]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, options]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newDoNotTranslate: string[];\n    if (checked) {\n      newDoNotTranslate = unique([...doNotTranslate, value]);\n    } else {\n      newDoNotTranslate = doNotTranslate.filter((v) => v !== value);\n    }\n\n    setSettingOption({\n      doNotTranslate: newDoNotTranslate,\n    });\n  }, [doNotTranslate, setSettingOption]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const filteredDisplayedOptions = useMemo(() => {\n    if (!search.trim()) {\n      return displayedOptions;\n    }\n\n    return displayedOptions.filter((option) => (\n      option.label.toLowerCase().includes(search.toLowerCase())\n      || option.subLabel?.toLowerCase().includes(search.toLowerCase())\n      || option.value.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [displayedOptions, search]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content custom-scroll')}>\n      <div className={buildClassName(styles.item, 'settings-item')}>\n        <InputText\n          key=\"search\"\n          value={search}\n          onChange={handleSearch}\n          placeholder={lang('Search')}\n          teactExperimentControlled\n        />\n        <div className={buildClassName(styles.languages, 'radio-group custom-scroll')}>\n          {filteredDisplayedOptions.map((option) => (\n            <Checkbox\n              className={styles.checkbox}\n              label={option.label}\n              subLabel={option.subLabel}\n              checked={doNotTranslate.includes(option.value)}\n              value={option.value}\n              key={option.value}\n              onChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      language,\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"obOZMv8VwZgTltdIBhFA\",\"item\":\"lDWs17bpqtGWDX0EJr0y\",\"checkbox\":\"BShBwPkgjleuDsjyfnNk\",\"languages\":\"whcbPSSJLGdGCaY66qfR\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"u8GGVdXgbKUMvoqqs0VJ\",\"header\":\"sPTmRsKHnc3FL9AubUaY\",\"description\":\"YqnFSIc98kYMRge1RrlJ\",\"sortableContainer\":\"pWxbEJm12NZb25lGmdwA\",\"item\":\"AWgYeVXfLin4VAmQzhKQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePrevious(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst MIN_USERNAME_LENGTH = 5;\nconst MAX_USERNAME_LENGTH = 32;\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\nconst USERNAME_REGEX = /^\\D([a-zA-Z0-9_]+)$/;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nfunction isUsernameValid(username: string) {\n  return username.length === 0 || (\n    username.length >= MIN_USERNAME_LENGTH\n    && username.length <= MAX_USERNAME_LENGTH\n    && USERNAME_REGEX.test(username)\n  );\n}\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = isUsernameValid(newUsername);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti()}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/langProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { setLanguage } from '../../../util/langProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void setLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            className=\"pb-2\"\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\">{lang('Localization.InterfaceLanguage')}</h4>\n        {options ? (\n          <RadioGroup\n            name=\"language-settings\"\n            options={options}\n            selected={selectedLanguage}\n            loadingOption={isLoading ? selectedLanguage : undefined}\n            onChange={handleChange}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ChatExtra from '../../common/ChatExtra';\nimport PremiumIcon from '../../common/PremiumIcon';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n}) => {\n  const {\n    loadProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadProfilePhotos({ profileId: currentUserId });\n    }\n  }, [currentUserId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            userId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            forceShowSelf\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<PremiumIcon withGradient big />}\n            className=\"settings-main-menu-premium\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('lng_settings_ask_ok')}\n        title={lang('AskAQuestion')}\n        text={lang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacyPhoneNumber?: ApiPrivacySettings;\n  privacyLastSeen?: ApiPrivacySettings;\n  privacyProfilePhoto?: ApiPrivacySettings;\n  privacyForwarding?: ApiPrivacySettings;\n  privacyVoiceMessages?: ApiPrivacySettings;\n  privacyGroupChats?: ApiPrivacySettings;\n  privacyPhoneCall?: ApiPrivacySettings;\n  privacyBio?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacyPhoneNumber,\n  privacyLastSeen,\n  privacyProfilePhoto,\n  privacyForwarding,\n  privacyVoiceMessages,\n  privacyGroupChats,\n  privacyPhoneCall,\n  privacyBio,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    showNotification,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleVoiceMessagesClick = useCallback(() => {\n    if (isCurrentUserPremium) {\n      onScreenSelect(SettingsScreens.PrivacyVoiceMessages);\n    } else {\n      showNotification({\n        message: lang('PrivacyVoiceMessagesPremiumOnly'),\n      });\n    }\n  }, [isCurrentUserPremium, lang, onScreenSelect, showNotification]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyLastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyProfilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyBio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyForwarding)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyGroupChats)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          disabled={!isCurrentUserPremium}\n          allowDisabledClick\n          rightElement={!isCurrentUserPremium && <i className=\"icon icon-lock-badge settings-icon-locked\" />}\n          className=\"no-icon\"\n          onClick={handleVoiceMessagesClick}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyVoiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      privacyPhoneNumber: privacy.phoneNumber,\n      privacyLastSeen: privacy.lastSeen,\n      privacyProfilePhoto: privacy.profilePhoto,\n      privacyForwarding: privacy.forwards,\n      privacyVoiceMessages: privacy.voiceMessages,\n      privacyGroupChats: privacy.chatInvite,\n      privacyPhoneCall: privacy.phoneCall,\n      privacyBio: privacy.bio,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"pqiopoENn7dO3E8DQI3e\",\"fallbackPhoto\":\"pqiopoENn7dO3E8DQI3e\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      { value: 'contacts', label: lang('P2PContacts') },\n    ];\n    if (hasNobody) {\n      options.push({ value: 'nobody', label: lang('P2PNobody') });\n    }\n    return options;\n  }, [lang, screen]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[]) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return lang('EditAdminAddUsers');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {(primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../config';\nimport { filterChatsByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) setNewSelectedContactIds(selectedContactIds);\n  }, [isActive, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => chatId !== currentUserId);\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedContactIds, onScreenSelect, screen, setPrivacySettings]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { availableReactions, config } = global;\n\n    return {\n      availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          className=\"mt-4\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, screen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(screen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(screen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(screen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(screen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(screen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).includes(screen.toString())\n      || Object.values(privacyAllowScreens).find((key) => key === true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || screen === SettingsScreens.GeneralChatBackgroundColor\n              || screen === SettingsScreens.GeneralChatBackground\n              || screen === SettingsScreens.QuickReaction\n              || screen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || screen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || screen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={screen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(isScreenActive: boolean, isFrom: boolean, currentKey: SettingsScreens) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, currentKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { filterUsersByName, isUserBot, sortChatIds } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsById: Record<string, ApiChat>;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n  chatsById,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localUserIds,\n  globalUserIds,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localUserIds || []),\n        ...(globalUserIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      chatsById,\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, chatsById, searchQuery, localUserIds, globalUserIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n    const { byId: chatsById } = global.chats;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { userIds: globalUserIds } = globalResults || {};\n    const { userIds: localUserIds } = localResults || {};\n\n    return {\n      chatsById,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalUserIds,\n      localUserIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransition(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransition(isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('FilterAddTo')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageText,\n  getMessageTextWithSpoilers,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  hasMessageLocalBlobUrl,\n} from '../../../../global/helpers';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = getMessageMediaHash(message, 'inline');\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMessageLocalBlobUrl(message))\n    && CLIPBOARD_ITEM_SUPPORTED;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: () => {\n        onCopyLink();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\n\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './ReactionSelector';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  noTransition?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAds?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_BUBBLE_EXTRA_WIDTH = 32;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  maxUniqueReactions,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  noTransition,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n  onSponsorInfo,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const { showNotification, openStickerSet, openCustomEmojiSets } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      marginSides: withReactions ? REACTION_BUBBLE_EXTRA_WIDTH : undefined,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionPicker');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      shouldSkipTransition={noTransition}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          maxUniqueReactions={maxUniqueReactions}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        style={menuStyle}\n        ref={scrollableRef}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && <MenuItem icon=\"reply\" onClick={onReply}>{lang('Reply')}</MenuItem>}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem key={option.label} icon={option.icon} onClick={option.handler}>{lang(option.label)}</MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <MenuItem\n            icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n            onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n            disabled={!canShowReactionsCount && !seenByDatesCount}\n          >\n            <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n              <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {canShowReactionsCount && message.reactors?.count ? (\n                  canShowSeenBy && seenByDatesCount\n                    ? lang(\n                      'Chat.OutgoingContextMixedReactionCount',\n                      [message.reactors.count, seenByDatesCount],\n                    )\n                    : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                ) : (\n                  seenByDatesCount === 1 && seenByRecentPeers\n                    ? renderText(\n                      isUserId(seenByRecentPeers[0].id)\n                        ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                        : (seenByRecentPeers[0] as ApiChat).title,\n                    ) : (\n                      seenByDatesCount\n                        ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                        : lang('Conversation.ContextMenuNoViews')\n                    )\n                )}\n              </span>\n            </span>\n            <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n          </MenuItem>\n        )}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && <MenuItem icon=\"help\" onClick={onAboutAds}>{lang('SponsoredMessageInfo')}</MenuItem>}\n        {isSponsoredMessage && onSponsoredHide && (\n          <MenuItem icon=\"stop\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage, ApiReaction, ApiStickerSet, ApiStickerSetInfo, ApiThreadInfo,\n} from '../../../api/types';\nimport type { MessageListType, TabState } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition } from '../../../types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageLink,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport DeleteMessageModal from '../../common/DeleteMessageModal';\nimport PinMessageModal from '../../common/PinMessageModal';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  activeDownloads?: TabState['activeDownloads']['byChatId'][number];\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  maxUniqueReactions?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  messageLink?: string;\n};\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  topReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  messageLink,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openChat,\n    setReplyingToId,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n  } = getActions();\n\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(msg.id);\n      });\n    }\n\n    return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(message.id);\n  }, [activeDownloads, album, message]);\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    setReplyingToId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openChat({\n      id: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyTextToClipboard(messageLink!);\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      if (isDownloading) {\n        cancelMessageMediaDownload({ message: msg });\n      } else {\n        downloadMessageMedia({ message: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n    });\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        maxUniqueReactions={maxUniqueReactions}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={messageListType === 'scheduled'}\n        onClose={closeDeleteModal}\n        album={album}\n        message={message}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const activeDownloads = selectActiveDownloads(global, message.chatId);\n    const chat = selectChat(global, message.chatId);\n    const { seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions } = global.appConfig || {};\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n\n    const isPrivate = chat && isUserId(chat.id);\n    const isOwn = isOwnMessage(message);\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const isLocal = isMessageLocal(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n    const messageLink = selectMessageLink(global, message.chatId, threadId, message.id);\n\n    return {\n      availableReactions: global.availableReactions,\n      topReactions: global.topReactions,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: canCopyNumber || (!isProtected && canCopy),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      maxUniqueReactions,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      messageLink,\n    };\n  },\n)(ContextMenuContainer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n};\n\ntype StateProps = {\n  canBuyPremium?: boolean;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps & StateProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onClose,\n  onCloseAnimationEnd,\n  canBuyPremium,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAds();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={canBuyPremium ? handleSponsoredHide : undefined}\n        onSponsorInfo={handleSponsorInfo}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canBuyPremium: !selectIsCurrentUserPremium(global) && !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SponsoredMessageContextMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePrevious(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isComments = Boolean(threadInfo?.originChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isComments) && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qzt_zq5gWHne6P2rw7Wj\",\"sets\":\"Ay41sqhq2QmXdgDHnt2E\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePrevious(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => (\n          <StickerSetCard\n            key={customEmojiSet.id}\n            className={styles.setCard}\n            stickerSet={customEmojiSet}\n            onClick={handleSetClick}\n            observeIntersection={observeIntersectionForCovers}\n            noPlay={!canPlayAnimatedEmojis}\n          />\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { customEmojiSetIds }): StateProps => {\n    const customEmojiSets = customEmojiSetIds?.map((id) => global.stickers.setsById[id]);\n\n    return {\n      customEmojiSets,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage, selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown, selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  withForumActions,\n  isTopic,\n  isForum,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openBoostStatistics,\n    openGiftPremiumModal,\n    openChatWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openChatWithInfo({ id: chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openGiftPremiumModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    openBoostStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {lang(isPrivate\n                  ? 'DeleteChatUser'\n                  : (canDeleteChat ? 'GroupInfo.DeleteAndExit' : (isChannel ? 'LeaveChannel' : 'Group.LeaveGroup')))}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={chat}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectCurrentTextSearch,\n  selectTabState,\n} from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dateFormat';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: number;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  query,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0], threadId });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const handleMessageSearchQueryChange = useLastCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (newQuery.length) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  });\n\n  const handleUp = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleDown = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleCloseLocalTextSearch = useLastCallback(() => {\n    closeLocalTextSearch();\n  });\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={handleCloseLocalTextSearch}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {query ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chat = selectCurrentChat(global);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      query,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n    };\n  },\n)(MobileSearchFooter));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vUbCal8_iSPkPVzQcz24\",\"wrapper\":\"f4pTNqkRRCFtZzheXcV9\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiChatReactions, ApiReaction } from '../../../api/types';\n\nimport { getReactionUniqueKey, sortReactions } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport ReactionEmoji from '../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const allAvailableReactions = useMemo(() => {\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionUniqueKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global;\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiMessageEntity,\n  ApiReaction, ApiReactionCustomEmoji, ApiSticker, ApiStory, ApiStorySkipped,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getStoryKey, isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectChatMessage, selectIsContextMenuTranslucent, selectIsCurrentUserPremium,\n  selectPeerStory, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  withCustomReactions?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  withCustomReactions,\n  sendAsMessage,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, withCustomReactions]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style,\n  } = useMenuPosition(renderingPosition, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push('emoticon' in reaction ? reaction.emoticon : reaction.documentId);\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !withCustomReactions && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      positionX={positionX}\n      positionY={positionY}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      <CustomEmojiPicker\n        idPrefix=\"message-emoji-set-\"\n        isHidden={!isOpen || !(withCustomReactions || renderedStoryId)}\n        loadAndPlay={Boolean(isOpen && withCustomReactions)}\n        isReactionPicker\n        className={!withCustomReactions && !renderedStoryId ? styles.hidden : undefined}\n        selectedReactionIds={selectedReactionIds}\n        isTranslucent={isTranslucent}\n        onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n        onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n      />\n      {!withCustomReactions && Boolean(renderedChatId) && (\n        <ReactionPickerLimited\n          chatId={renderedChatId}\n          loadAndPlay={isOpen}\n          onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          selectedReactionIds={selectedReactionIds}\n        />\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const areCustomReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  return {\n    message,\n    story,\n    position,\n    withCustomReactions: chat?.isForbidden || areSomeReactionsAllowed\n      ? false\n      : areCustomReactionsAllowed || isPrivateChat,\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"s4eo5UICU4xBMDvMxWU_\",\"menuContent\":\"Q2c4gWaMXfXzLL_Jbbjr\",\"storyMenu\":\"nwZabdh1rB72Eb1x64Og\",\"onlyReactions\":\"rWa1hIFdrb4U0xFrHLic\",\"hidden\":\"P95Gk2sUhvBJ70LKg_vc\"};","import { fixImageContent } from '../../../../util/parseMessageInput';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZqafRENXro3B4A2UTp9s\",\"preview\":\"FfTpBGrctDEiFLXC4aqP\",\"duration\":\"Igo3Vsou5areTsmh2Ng3\",\"single\":\"ZJNnn8HUzq8cC3WwTzY0\",\"no-grouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"noGrouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"file\":\"QAlzNLWBYdWR4UMMaiGm\",\"overlay\":\"YOoQRXIFINVsu3FFIKR0\",\"action-item\":\"y5JLmIFtCzK05l40rdHJ\",\"actionItem\":\"y5JLmIFtCzK05l40rdHJ\",\"delete-file\":\"Qqp72_dWGSui9ORCN3MT\",\"deleteFile\":\"Qqp72_dWGSui9ORCN3MT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { GIF_MIME_TYPE, SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'image':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const canDisplaySpoilerButton = attachment.mimeType !== GIF_MIME_TYPE;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && canDisplaySpoilerButton\n    && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          {canDisplaySpoilerButton && (\n            <i\n              className={buildClassName(\n                'icon',\n                attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n                styles.actionItem,\n              )}\n              onClick={handleSpoilerClick}\n            />\n          )}\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'image';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VncEpkgqABgA8MUCarxh\",\"mobile\":\"EBYYWwiG6Uj4Aqt4DKGy\",\"symbolMenuOpen\":\"eVLBe8iLKwjR6B31YwJj\",\"header-border\":\"u08mL9ikB7S0oRZKxvsA\",\"headerBorder\":\"u08mL9ikB7S0oRZKxvsA\",\"attachments\":\"d_uMaJ26HlkCfSn5XiQp\",\"attachments-bottom-padding\":\"DUGHCuTKi7H5d_1_vYqj\",\"attachmentsBottomPadding\":\"DUGHCuTKi7H5d_1_vYqj\",\"caption-wrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"captionWrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"caption-top-border\":\"UrYInfws7roRktEiMxvT\",\"captionTopBorder\":\"UrYInfws7roRktEiMxvT\",\"caption\":\"c4dyk1Emgpla8BvDJMAz\",\"drop-target\":\"iWmxxlUXOjTzbvJzWF8g\",\"dropTarget\":\"iWmxxlUXOjTzbvJzWF8g\",\"hovered\":\"B5wzgwCPupbnO1XB5Rwc\",\"send-wrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"sendWrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"send\":\"eFD46lVH5GCILXEOx9BO\",\"is-pointer-env\":\"Os76p3jpmhB2IWYxXigi\",\"isPointerEnv\":\"Os76p3jpmhB2IWYxXigi\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  attachments: ApiAttachment[];\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean((shouldSendCompressed || shouldForceCompression) && !shouldForceAsFile);\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: a.mimeType !== GIF_MIME_TYPE ? true : undefined,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_IMAGE_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => a.mimeType !== GIF_MIME_TYPE\n      && !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang('PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang('PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang('PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang('PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        <DropdownMenu\n          className=\"attachment-modal-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n          {hasMedia && (\n            <>\n              {\n                !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                    {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                    {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                  </MenuItem>\n                ))\n              }\n              {isSendingCompressed && hasAnySpoilerable && (\n                hasSpoiler ? (\n                  <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                    {lang('Attachment.DisableSpoiler')}\n                  </MenuItem>\n                ) : (\n                  <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                    {lang('Attachment.EnableSpoiler')}\n                  </MenuItem>\n                )\n              )}\n            </>\n          )}\n          {isMultiple && (\n            shouldSendGrouped ? (\n              <MenuItem\n                icon=\"grouped-disable\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setShouldSendGrouped(false)}\n              >\n                Ungroup All Media\n              </MenuItem>\n            ) : (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                Group All Media\n              </MenuItem>\n            )\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule ? lang('Next') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      list.classList.toggle('overflown', list.scrollHeight > MAX_LIST_HEIGHT);\n      list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter((o) => o.length);\n\n    if (!questionTrimmed || optionsTrimmed.length < 2) {\n      setQuestion(questionTrimmed);\n      if (optionsTrimmed.length) {\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption])) {\n      setHasErrors(true);\n      return;\n    }\n\n    const answers = optionsTrimmed\n      .map((text, index) => ({\n        text: text.trim(),\n        option: String(index),\n        ...(index === correctOption && { correct: true }),\n      }));\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: questionTrimmed,\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseMessageInput(solution.substring(0, MAX_SOLUTION_LENGTH))) || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: index === options.length - 1 }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_ELECTRON_BUILD } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_ELECTRON_BUILD ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const localMediaHash = `gif${gif.id}`;\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n  const videoData = useMedia(localMediaHash, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    localMediaHash,\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          // We need to always render to avoid blur re-calculation\n          style={isVideoReady ? 'display: none;' : undefined}\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy, uniqueByField } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport PremiumIcon from '../../common/PremiumIcon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  premiumStickers: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  premiumStickers,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat!.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, addedSetIds));\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    if (isCurrentUserPremium) {\n      const addedPremiumStickers = existingAddedSetIds\n        .map(({ stickers }) => stickers?.filter((sticker) => sticker.hasEffect))\n        .flat()\n        .filter(Boolean);\n\n      const totalPremiumStickers = uniqueByField([...addedPremiumStickers, ...premiumStickers], 'id');\n\n      if (totalPremiumStickers.length) {\n        defaultSets.push({\n          id: PREMIUM_STICKER_SET_ID,\n          accessHash: '0',\n          title: lang('PremiumStickers'),\n          stickers: totalPremiumStickers,\n          count: totalPremiumStickers.length,\n        });\n      }\n    }\n\n    if (chatStickerSetId) {\n      const fullSet = stickerSetsById[chatStickerSetId];\n      if (fullSet) {\n        defaultSets.push({\n          id: CHAT_STICKER_SET_ID,\n          accessHash: fullSet.accessHash,\n          title: lang('GroupStickers'),\n          stickers: fullSet.stickers,\n          count: fullSet.stickers!.length,\n        });\n      }\n    }\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds, stickerSetsById, favoriteStickers, recentStickers, isCurrentUserPremium, chatStickerSetId, lang,\n    premiumStickers,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents && !noPopulatedSets && canSendStickers;\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.id === PREMIUM_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === PREMIUM_STICKER_SET_ID ? (\n            <PremiumIcon withGradient big />\n          ) : stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div ref={headerRef} className={headerClassName}>\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={buildClassName(styles.main, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      premiumSet,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      premiumStickers: premiumSet.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  transformOriginX?: number;\n  transformOriginY?: number;\n  style?: string;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  positionX,\n  positionY,\n  transformOriginX,\n  transformOriginY,\n  style,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  const lang = useLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX={isAttachmentModal ? positionX : 'left'}\n      positionY={isAttachmentModal ? positionY : 'bottom'}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './BotCommand.scss';\n\ntype OwnProps = {\n  botCommand: ApiBotCommand;\n  bot?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  onClick: (botCommand: ApiBotCommand) => void;\n};\n\nconst BotCommand: FC<OwnProps> = ({\n  withAvatar,\n  focus,\n  botCommand,\n  bot,\n  onClick,\n}) => {\n  return (\n    <ListItem\n      key={botCommand.command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => onClick(botCommand)}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={bot} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{botCommand.command}</span>\n        <span className=\"subtitle\">{renderText(botCommand.description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BotCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport BotCommand from './BotCommand';\n\nimport './BotCommandTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  withUsername,\n  botCommands,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSelect = useLastCallback((botCommand: ApiBotCommand) => {\n    // We need an additional check because tooltip is updated with throttling\n    if (!botCommand.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    handleSendCommand(botCommand);\n    return true;\n  });\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: botCommands,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffect(() => {\n    if (botCommands && !botCommands.length) {\n      onClose();\n    }\n  }, [botCommands, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  const prevCommands = usePrevious(botCommands && botCommands.length ? botCommands : undefined, shouldRender);\n  const renderedCommands = botCommands && !botCommands.length ? prevCommands : botCommands;\n\n  if (!shouldRender || (renderedCommands && !renderedCommands.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'BotCommandTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedCommands && renderedCommands.map((chatBotCommand, index) => (\n        <BotCommand\n          key={`${chatBotCommand.botId}_${chatBotCommand.command}`}\n          botCommand={chatBotCommand}\n          // No need for expensive global updates on users and chats, so we avoid them\n          bot={getGlobal().users.byId[chatBotCommand.botId]}\n          withAvatar\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(BotCommandTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport BotCommand from './BotCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((botCommand: ApiBotCommand) => {\n    sendBotCommand({\n      command: `/${botCommand.command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <BotCommand\n          key={botCommand.command}\n          botCommand={botCommand}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"o7fHB9vMHP_k5l9rZC2R\",\"emojiButton\":\"LzdBMbvLbmND0s2zfaff\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className=\"CustomSendMenu with-menu-transitions\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n      {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{lang('SendWithoutSound')}</MenuItem>}\n      {canSchedule && onSendSchedule && (\n        <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>\n      )}\n      {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n        <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n          {lang('SendWhenOnline')}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? `webDocument:${thumbnail.url}` : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult && isForGallery) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailDataUrl = useMedia(webThumbnail ? `webDocument:${webThumbnail.url}` : undefined);\n  const mediaBlobUrl = useMedia(photo && `photo${photo.id}?size=m`);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailDataUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbUrl={mediaBlobUrl || (thumbnail?.dataUri || thumbnailDataUrl)}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../api/types';\n\nimport {\n  selectChat,\n  selectChatMessages,\n  selectCurrentTextSearch,\n  selectUser,\n} from '../../global/selectors';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n};\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isActive,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n  onClose,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isActive]);\n\n  const handleSearchTextMessagesLocal = useCallback(() => {\n    searchTextMessagesLocal();\n  }, [searchTextMessagesLocal]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(handleSearchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if (!query || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const global = getGlobal();\n\n      let senderPeer = message.senderId\n        ? selectUser(global, message.senderId) || selectChat(global, message.senderId)\n        : undefined;\n\n      if (!senderPeer && message.forwardInfo) {\n        const { isChannelPost, fromChatId } = message.forwardInfo;\n        const originalSender = isChannelPost && fromChatId ? selectChat(global, fromChatId) : undefined;\n        if (originalSender) senderPeer = originalSender;\n      }\n\n      if (!senderPeer) {\n        return undefined;\n      }\n\n      return {\n        message,\n        senderPeer: senderPeer!,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, viewportIds, messagesById, focusMessage, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderPeer, onClick,\n  }: {\n    message: ApiMessage;\n    senderPeer: ApiPeer;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar\n          peer={senderPeer}\n        />\n        <div className=\"info\">\n          <div className=\"search-result-message-top\">\n            <FullNameTitle peer={senderPeer} withEmojiStatus />\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const messagesById = selectChatMessages(global, chatId);\n    if (!messagesById) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isComments = Boolean(threadInfo?.originChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId) && getCanPostInChat(chat, threadId, isComments);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsRecentMessage as StatisticsRecentMessageType } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport './StatisticsRecentMessage.scss';\n\nexport type OwnProps = {\n  message: ApiMessage & StatisticsRecentMessageType;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ message }) => {\n  const lang = useLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        'StatisticsRecentMessage',\n        Boolean(mediaBlobUrl || mediaThumbnail) && 'StatisticsRecentMessage--with-image',\n      )}\n      onClick={handleClick}\n    >\n      <div className=\"StatisticsRecentMessage__title\">\n        <div className=\"StatisticsRecentMessage__summary\">\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {lang('ChannelStats.ViewsCount', message.views, 'i')}\n        </div>\n      </div>\n\n      <div className=\"StatisticsRecentMessage__info\">\n        <div className=\"StatisticsRecentMessage__date\">\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {message.forwards ? lang('ChannelStats.SharesCount', message.forwards) : 'No shares'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName('media-preview__image', isRoundVideo && 'round')}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiGroupStatistics,\n  ApiMessage,\n  StatisticsGraph,\n  StatisticsRecentMessage as StatisticsRecentMessageType,\n} from '../../../api/types';\n\nimport { selectChat, selectChatFullInfo, selectStatistics } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  statistics,\n  dcId,\n  isGroup,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove('hidden');\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className=\"Statistics__graph hidden\" />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentTopMessages?.length) && (\n        <div className=\"Statistics__messages\">\n          <h2 className=\"Statistics__messages-title\">{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentTopMessages.map((message) => (\n            <StatisticsRecentMessage message={message as ApiMessage & StatisticsRecentMessageType} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n\n    return {\n      statistics, dcId, isGroup,\n    };\n  },\n)(Statistics));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport './StatisticsPublicForward.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsPublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => getMainUsername(data.chat), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className=\"StatisticsPublicForward\" onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div className=\"StatisticsPublicForward__info\">\n        <div className=\"StatisticsPublicForward__title\">\n          {data.title}\n        </div>\n\n        <div className=\"StatisticsPublicForward__views\">\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsPublicForward);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessagePublicForward, ApiMessageStatistics, StatisticsGraph } from '../../../api/types';\n\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsPublicForward from './StatisticsPublicForward';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiMessageStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiMessageStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName('Statistics__graph', !loadedCharts.current.includes(graph) && 'hidden')} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className=\"Statistics__public-forwards\">\n          <h2 className=\"Statistics__public-forwards-title\">{lang('Stats.Message.PublicShares')}</h2>\n\n          {statistics.publicForwardsData!.map((item: ApiMessagePublicForward) => (\n            <StatisticsPublicForward data={item} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">{text}</span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">{renderText(summary.question, ['emoji', 'br'])}</h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qj1MQaLfhumlxACIpkUl\",\"content\":\"ph5g3hCSQ_72FnZ3YkuA\",\"section\":\"bYZBp9H7Ks8tqaBvQm57\",\"general\":\"CSjgq5gkTxM3iZQ9oJ9b\",\"top\":\"sV6D57DhbsFwQhRNzw9K\",\"bottom\":\"pUkmozcBdIn4yWGGPoX1\",\"iconWrapper\":\"JT0__kgf23rGv5BWQF2s\",\"icon\":\"gx85t_IsGh2fgS2yDGtk\",\"clickable\":\"TVwtYFuxdwJH5LZ7yvwu\",\"heading\":\"o9l56jP2uXfAul061gXq\",\"icon-picker\":\"ByQF8Qg3NcYnBCvGwoH0\",\"iconPicker\":\"ByQF8Qg3NcYnBCvGwoH0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isSignaturesShown}\n              label={lang('ChannelSignMessages')}\n              onChange={handleToggleSignatures}\n            />\n          </div>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{lang('Subscribers', chat.membersCount ?? 0, 'i')}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  currentUserId?: string;\n  isChannel: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const canAddNewAdmins = Boolean(chat.isCreator || chat.adminRights?.addAdmins);\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    return Object.values(adminMembersById).sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId\n      ? selectChat(global, linkedChatId)\n      : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickPermissions = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateGroup = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickMembers = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  }, [onScreenSelect]);\n\n  const handleTogglePreHistory = useCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  }, [chat.id, chatFullInfo]);\n\n  const handleForumToggle = useCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  }, [chatId, toggleForum]);\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [\n    isBasicGroup, chat.isCreator, chat.id,\n    closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, deleteChat, openChat,\n  ]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'changeInfo'),\n      canBanUsers: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'banUsers'),\n      canInvite: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.availableReactions,\n      canEditForum,\n    };\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postStories\"\n                checked={Boolean(permissions.postStories)}\n                label={lang('EditAdminPostStories')}\n                blocking\n                disabled={getControlIsDisabled('postStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editStories\"\n                checked={Boolean(permissions.editStories)}\n                label={lang('EditAdminEditStories')}\n                blocking\n                disabled={getControlIsDisabled('editStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"deleteStories\"\n                checked={Boolean(permissions.deleteStories)}\n                label={lang('EditAdminDeleteStories')}\n                blocking\n                disabled={getControlIsDisabled('deleteStories')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, sortChatIds, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement, toggleParticipantsHidden,\n  } = getActions();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      chatsById,\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  }, [closeManagement, noAdmins, onChatMemberSelect, onScreenSelect, openChat]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  }, [setUserSearchQuery]);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useCallback(() => {\n    setDeletingUserId(undefined);\n  }, []);\n\n  const handleToggleParticipantsHidden = useCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  }, [areParticipantsHidden, chatId, toggleParticipantsHidden]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  hasLinkedChat?: boolean;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  hasLinkedChat,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights, showNotification } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useLang();\n  const { isForum } = chat || {};\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  const handleDisabledClick = useCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  }, [lang, showNotification]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem with-checkbox\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n            <div className=\"ListItem with-checkbox\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                disabled={shouldDisablePermissionForPublicGroup}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={shouldDisablePermissionForPublicGroup}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      hasLinkedChat,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n\n  const { isForum } = chat || {};\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('UserRestrictionsCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              disabled={getControlIsDisabled('sendPlain')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              disabled={getControlIsDisabled('sendMedia')}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPhotos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  disabled={getControlIsDisabled('sendStickers')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  disabled={getControlIsDisabled('sendAudios')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  disabled={getControlIsDisabled('sendDocs')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVoices')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  disabled={getControlIsDisabled('sendRoundvideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  disabled={getControlIsDisabled('embedLinks')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPolls')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                disabled={getControlIsDisabled('inviteUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={getControlIsDisabled('changeInfo')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  disabled={getControlIsDisabled('manageTopics')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {lang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text=\"Are you sure you want to ban and remove this user from the group?\"\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId];\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId];\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInterval from '../../../hooks/useInterval';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport InviteLink from '../../common/InviteLink';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(() => {\n    forceUpdate();\n  }, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <InviteLink\n            className=\"section\"\n            inviteLink={primaryInviteLink}\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId];\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n  }, [enabledReactions]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n    } else {\n      setLocalEnabledReactions(undefined);\n    }\n    setIsTouched(true);\n  }, [enabledReactions]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n    setIsTouched(true);\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('AvailableReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      enabledReactions: selectChatFullInfo(global, chatId)?.enabledReactions,\n      availableReactions: global.availableReactions,\n      chat,\n    };\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SM3T4awhZJvKn_c8aRuY\",\"description\":\"RWoBZem6PCNMF5hu6Shs\",\"checkout-picture\":\"prUKJGh6W9LIyjSnRbZc\",\"checkoutPicture\":\"prUKJGh6W9LIyjSnRbZc\",\"text\":\"xUG3uFeTiPPFkWHQELCc\",\"checkout-title\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkoutTitle\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkout-description\":\"LqaZe1TRdNI17BEa1gcl\",\"checkoutDescription\":\"LqaZe1TRdNI17BEa1gcl\",\"price-info\":\"mz2vhtmYPNRaJbeUrXKA\",\"priceInfo\":\"mz2vhtmYPNRaJbeUrXKA\",\"price-info-item\":\"Ct9Ine31cu5h7FCjtRWa\",\"priceInfoItem\":\"Ct9Ine31cu5h7FCjtRWa\",\"price-info-item-main\":\"JduVB3d3NxN9TybmxIgS\",\"priceInfoItemMain\":\"JduVB3d3NxN9TybmxIgS\",\"price-info-item-title\":\"O7d8G4OQ_yTJSHiHbgBR\",\"priceInfoItemTitle\":\"O7d8G4OQ_yTJSHiHbgBR\",\"tipsList\":\"zsSyrAOxg0qs0nPJWSEe\",\"tipsItem\":\"lcjeIUsdqs95BdK_oysT\",\"tipsItem_active\":\"XRnGKO5ClzA_4S8i81wC\",\"tipsItemActive\":\"XRnGKO5ClzA_4S8i81wC\",\"invoice-info\":\"MyMLGHhiEKOVIoG3aQTS\",\"invoiceInfo\":\"MyMLGHhiEKOVIoG3aQTS\",\"provider\":\"hLVHJSaVspSZdzxNlBJk\",\"stripe\":\"nrKVVKzRmr7s0TE15uG1\",\"smartglocal\":\"oONvjFUTa5AbWvrbzbWn\",\"checkout-info-item-info-title\":\"bkIqUpVUAY04wdT8fySX\",\"checkoutInfoItemInfoTitle\":\"bkIqUpVUAY04wdT8fySX\",\"checkout-info-item-info-data\":\"VAzhVfK6c1pUriepo4Ga\",\"checkoutInfoItemInfoData\":\"VAzhVfK6c1pUriepo4Ga\",\"tos-checkbox\":\"WjrdCzbl3hROmSBGGnjy\",\"tosCheckbox\":\"WjrdCzbl3hROmSBGGnjy\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiChat, ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  chat?: ApiChat;\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n};\n\nconst Checkout: FC<OwnProps> = ({\n  chat,\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, true)}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', chat?.title);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || !isInteractive) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || !isInteractive) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  return (\n    <ListItem\n      multiline={Boolean(title && label !== title)}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n    >\n      {customIcon && <i className={buildClassName('icon', customIcon)} />}\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ninterface IframeCallbackEvent {\n  eventType: string;\n  eventData: {\n    path_full: string;\n  };\n}\n\nconst ConfirmPayment: FC<OwnProps> = ({ url, noRedirect, onClose }) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n\n      if (eventType !== 'web_app_open_tg_link') {\n        return;\n      }\n\n      if (!noRedirect) {\n        const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n        openTelegramLink({ url: linkUrl });\n      }\n\n      onClose();\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 400;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 23;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            placeholder={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              placeholder={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport { PaymentStep } from '../../types';\n\nimport { selectChat, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  chat,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePrevious(step, true);\n  const prevRequestId = usePrevious(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            chat={chat}\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handleButtonClick = useCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  }, [\n    isEmailRequested, isNameRequested, isPhoneRequested, isShippingAddressRequested, nativeProvider, passwordValidUntil,\n    paymentDispatch, paymentState, requestId, savedInfo, sendCredentials, sendForm, setStep, smartGlocalToken, step,\n    stripeId, twoFaPassword, validatePaymentPassword, validateRequest,\n  ]);\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrency(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.isRecurring && !isTosAccepted);\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition name=\"slide\" activeKey={step}>\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n    } = selectTabState(global).payment;\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId) : undefined;\n    const isProviderError = Boolean(invoice && (!nativeProvider || !SUPPORTED_PROVIDERS.has(nativeProvider)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl,\n      countryList: global.countryList.general,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiShippingAddress, ApiWebDocument } from '../../api/types';\nimport type { Price } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice = useMemo(() => {\n    return {\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker);\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n"],"names":["createGhost","source","origin","ghost","document","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","message","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","ScheduledInline","Inline","MESSAGE_CONTENT_SELECTOR","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","video","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","useMediaProps","_ref","mediaId","avatarOwner","delay","photo","getMessagePhoto","undefined","actionPhoto","getMessageActionPhoto","getMessageVideo","webPagePhoto","getMessageWebPagePhoto","webPageVideo","getMessageWebPageVideo","isDocumentPhoto","isMessageDocumentPhoto","isDocumentVideo","isMessageDocumentVideo","videoSize","getMessageFileSize","avatarMedia","photos","isVideoAvatar","Boolean","isVideo","isPhoto","isGif","isFromSharedMedia","isFromSearch","getMediaHash","useMemo","isFull","getVideoAvatarMediaHash","getChatAvatarHash","getMessageMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMessageMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","length","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","useBlurSync","getMessageMediaThumbDataUri","bestData","isLocal","fileName","getMessageFileName","hasVideoAvatar","dimensions","getMessageDocument","mediaSize","getPhotoFullDimensions","getVideoDimensions","VIDEO_AVATAR_FULL_DIMENSIONS","AVATAR_FULL_DIMENSIONS","avatarPhoto","getZoomChange","setZoomChange","useZoomChange","memo","withGlobal","global","_ref4","isSchedule","threadId","selectCurrentMessageList","canDeleteForAll","selectAllowedMessageActions","chat","selectChat","chatId","contactName","isUserId","getUserFirstOrLastName","selectUser","getPrivateChatUserId","isChatWithBot","selectBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","isChatSuperGroup","isOpen","album","onConfirm","onClose","deleteMessages","deleteScheduledMessages","getActions","handleDeleteMessageForAll","useCallback","messageIds","messages","map","_ref2","shouldDeleteForAll","handleDeleteMessageForSelf","_ref3","lang","useLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","renderText","profileId","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","canUpdateMedia","currentMessageList","isDownloading","selectIsDownloading","isProtected","selectIsMessageProtected","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","isCurrentAvatar","avatarHash","canUpdate","messageListType","type","avatarOwnerId","canReport","selectMedia","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMessageMedia","cancelMessageMediaDownload","updateProfilePhoto","updateChatPhoto","downloadProgress","handleDownloadClick","useLastCallback","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","MenuButton","onTrigger","round","ariaLabel","renderDeleteModals","DeleteMessageModal","DeleteProfilePhotoModal","menuItems","isForwardingAllowed","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","isForVideo","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","e","stopPropagation","dir","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","index","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","params","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransition","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","square","VideoPlayerControls","ownProps","selectTabState","mediaViewer","selectChatMessage","senderId","selectScheduledMessage","props","withAnimation","onFooterClick","isMoving","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","content","action","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","getMediaId","rest","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveMediaId","setActiveMediaId","activeMediaIdRef","isScaled","activeMediaId","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectMediaDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","mId","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","nextMediaId","prevMediaId","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","isAvatar","sender","selectPeer","selectSender","isFallbackAvatar","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","senderTitle","getSenderTitle","Avatar","peer","formatMediaDateTime","date","shouldSkipHistoryAnimations","selectPerformanceSettingsValue","currentUserId","chatMessages","collectionIds","isChatWithSelf","selectIsChatWithSelf","user","isChatAdmin","avatarOwnerFallbackPhoto","selectUserFullInfo","fallbackPhoto","selectChatScheduledMessages","selectChatMessages","selectOutlyingListByMessageId","selectListedIds","currentSearch","selectCurrentMediaSearch","foundIds","resultsByType","media","openMediaViewer","openForwardMenu","animationKey","prevSenderId","usePrevious","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","singleMediaId","mediaIds","p","i","getChatMediaMessageIds","selectedMediaIndex","indexOf","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","addListener","removeListener","prevMessage","prevIsHidden","prevOrigin","prevAvatarOwner","prevBestImageData","shouldAnimateOpening","dispatchHeavyAnimationEvent","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","mediaIdRef","useStateRef","handleFooterClick","currentMediaId","handleForward","fromChatId","forceOnHeavyAnimation","captureEscKeyListener","stopCurrentAudio","mediaIdsRef","fromId","mIds","handleBeforeDelete","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","peerId","MediaViewerSlides","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","tabState","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","Picker","itemIds","MEMO_EMPTY_ARRAY","filterValue","filterPlaceholder","searchInputId","isSearchable","forceShowSelf","onSelectedIdsChange","onFilterChange","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryPinned","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","OVERFLOW_THRESHOLD_PX","isExpanded","onExpand","onFold","contentRef","showMoreButtonRef","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","button","offsetWidth","setProperty","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","areViewsExpired","openStoryViewModal","sendStoryReaction","viewsCount","reactionsCount","isOut","sentReaction","isChannel","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","Icon","ReactionAnimatedEmoji","documentId","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","isPrivateStories","isArchivedStories","appConfig","viewModal","isPrivacyModalOpen","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","orderedIds","pinnedIds","archiveIds","selectPeerStories","shouldForcePause","reactionPicker","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isSingleStory","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openChat","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","canPinToProfile","useCurrentOrPrev","canUnpinFromProfile","canCopyLink","usernames","canShare","canPlayStory","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransition","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","onMouseDown","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","onStart","isLongPressActive","isPressed","timerId","canProcessEvent","cancel","useLongPress","hasAllData","useBackgroundMode","load","isPreload","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleVideoStoryTimeUpdate","handleOpenChat","handleOpenPrevStory","handleOpenNextStory","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","renderStoriesTabs","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","onPlaying","MediaAreaOverlay","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","peerStories","openStoryViewer","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","withStory","storyViewerMode","ANIMATION_DURATION_MS","IS_SAFARI","IS_FIREFOX","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","archived","active","peerIds","areStoriesHidden","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","animationDuration","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","timeoutId","timeOutId","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","buildStyle","Story","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","noStatusOrTyping","status","formatDateAtTime","statusIcon","viewsById","nextOffset","isLoading","closeStoryViewModal","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViewIds","values","sort","a","b","prepareComparator","view","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","StoryView","Array","_","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","chatOrUserIds","chatsById","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","topicIds","topics","topicsResult","searchTitle","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","handleTopicClick","topicId","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","clickArg","TopicIcon","letterClassName","Loading","GroupChatInfo","chats","listIds","orderedPinnedIds","activeListIds","archivedListIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isManyMessages","isStory","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","isSelf","toChatId","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","hash","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","geoPoint","closeMapModal","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","openUrl","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","urlAuth","currentUserName","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","unmarkTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","valueOf","CalendarModal","userStatus","selectUserStatus","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","getUserStatus","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","webApp","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","paymentStatus","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","backgroundColor","setBackgroundColor","headerColor","setHeaderColor","shouldConfirmClosing","setShouldConfirmClosing","isCloseModalOpen","openCloseModal","hideCloseModal","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequesingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","themeParams","extractCurrentThemeParams","bg_color","frameRef","buttonText","queryId","replyToMessageId","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","ignoreEventsRef","lastFrameSizeRef","handleLoad","once","contentWindow","JSON","stringify","isNonStable","eventType","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","getComputedStyle","getPropertyValue","req_id","slug","linkUrl","TME_LINK_PREFIX","path_full","is_visible","validateHexColor","color_key","newColor","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","useInterval","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","buttonId","button_id","handleAppPopupModalClose","prevIsPaymentModalOpen","handleToggleClick","isEnabled","handleBackClick","handleAcceptPhone","handleAcceptWriteAccess","openBotChat","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","hasSettings","isAttachBot","sandbox","allow","allowFullScreen","hasCloseButton","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","shortName","isInactive","isForSideMenu","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","count","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","fill","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","viewBox","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","l","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","DPR","currentUser","circleRef","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","PREMIUM_FEATURE_DESCRIPTIONS","PREMIUM_FEATURE_SECTIONS","PREMIUM_BOTTOM_VIDEOS","LIMITS_ORDER","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","LIMITS_DESCRIPTIONS","promo","onClickSubscribe","isPremium","limits","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","options","find","months","scrollLeft","scrollLeftOriginal","toString","reverseIndex","prevElement","reverseElement","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","SliderDots","formatCurrency","amount","currency","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isClosing","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","premiumPromoOrder","dialogRef","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","handleClickWithStartParam","showConfetti","prevIsPremium","filteredSections","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","isClosed","PremiumFeatureModal","isBig","PremiumLogo","renderTextWithEntities","statusText","entities","statusEntities","renderFooterText","fullMonthlyAmount","perMonth","discount","handleChange","forUserId","monthlyCurrency","monthlyAmount","giftPremiumModal","gifts","premiumGifts","closeGiftPremiumModal","renderedUser","renderedGifts","selectedOption","setSelectedOption","firstGift","cheaperGift","gift","selectedGift","botUrl","handlePremiumClick","GiftOption","parts","match","Link","isPrimary","renderPremiumFeaturesLink","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","currentIndex","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","isLottie","isVideos","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerPreviewHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","accessHash","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isSavedMessages","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","noShowPremium","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","setEmojiStatus","menuRef","isCustomEmoji","hasEffect","isLocked","shouldLoad","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","getMenuElement","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","item","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","available","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","observeIntersectionForPlaying","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","isConfirmModalOpen","openConfirmModal","closeConfirmModal","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","reactions","isInstalled","installedDate","isArchived","canCut","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","Set","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionUniqueKey","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","has","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","CHAT_STICKER_SET_ID","PREMIUM_STICKER_SET_ID","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","topReactionsSlice","TOP_SYMBOL_SET_ID","cleanRecentReactions","some","topReaction","cleanAvailableReactions","allRecentReactions","concat","defaultStatusIconsPack","defaultTopicIconsPack","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","useHorizontalScroll","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","boostedChat","applyInfo","boostedChatId","applyBoost","closeBoostModal","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","boostStatus","level","currentLevelBoosts","hasMyBoost","boosts","currentLevel","hasNextLevel","levelProgress","remainingBoosts","getBoostProgressInfo","hasBoost","isJustUpgraded","moreBoosts","currentStoriesPerDay","nextLevelStoriesPerDay","modalTitle","isBoostDisabled","handleApplyBoost","handleProceedPremium","handleButtonClick","handleCloseClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","waitUntil","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","SafeLink","isPrivateChat","isChatChannel","isGroup","isSuperGroup","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isForwardModalOpen","isModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","handleCopy","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","memberIds","leftId","rightId","handleCloseSeenByModal","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","flatMap","peerReactions","reactor","seenByUser","FullNameTitle","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","secondaryIcon","narrow","highlight","createMapStateToProps","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","activeDownloads","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","handleMessageFocus","handlePlayAudio","canRenderContents","noFastList","NothingFound","shouldDrawDateDivider","toYearMonth","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","shouldReplaceHistory","useSelectWithEnter","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","storyViewerOrigin","MuteChatModal","ChatFolderModal","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","LeftSearchResultChat","localContactIds","globalResults","localResults","globalChatIds","globalUserIds","localChatIds","localUserIds","setGlobalSearchChatId","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handleChatClick","handlePickerItemClick","startsWith","contactIdsWithMe","foundContactIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","PickerSelectedItem","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","itemSelector","Media","TABS","GlobalSearchContent","Links","Files","Music","Voice","CHAT_TABS","TRANSITION_RENDER_COUNT","currentContent","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","TabList","tabs","onSwitchTab","renderCount","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","selectedChatTypes","shouldHideChatTypes","onSelectedChatTypesChange","onSaveFilter","openLimitReachedModal","chatTypes","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","shouldMinimize","isTouched","setIsTouched","handleItemClick","newSelectedIds","splice","handleChatTypeClick","newSelectedChatTypes","handleFilterChange","selectedType","typeKey","isMinimized","canClose","withChatType","dispatch","chatFilter","selectedChatIds","selectChatFilters","folderAllOrderedIds","useFolderManagerForOrderedIds","ALL_FOLDER_ID","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","isChatList","newFilter","handleSelectedIdsChange","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","SettingsFoldersChatsPicker","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","renderChatType","ShowMoreButton","itemName","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","LOCAL_TGS_URLS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","subtitle","getFolderDescriptionText","handleCreateFolderFromRecommended","handleDrag","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","isStatic","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","setSelectedIds","isFirstRenderRef","prevUrl","handleClickDisabled","isUserBot","chatsCount","FoldersShare","InviteLink","inviteLink","onRevoke","onDisabledClick","isRoundCheckbox","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordMonkey","isPasswordVisible","PasswordForm","shouldResetValue","onChangePasswordVisibility","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","formatDateTimeToString","dateActive","box","appName","appVersion","ip","region","country","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","iconClassName","sessionHashes","sessionHash","RadioGroup","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","avatar","SettingsActiveWebsite","handleCardClick","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","newValue","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","isChecked","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","language","doNotTranslate","displayedOptions","setDisplayedOptions","subLabel","otherLanguages","unselected","newDoNotTranslate","v","filteredDisplayedOptions","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","copyTextToClipboard","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","USERNAME_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","test","handleUsernameChange","newUsername","isValid","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","nonInteractive","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","newSize","documentElement","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","callback","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyForwarding","PrivacyVoiceMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","setLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","buildOptions","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","rightIcon","onClickLabel","loadingOption","sessionCount","loadProfilePhotos","openSupportChat","isSupportDialogOpen","openSupportDialog","closeSupportDialog","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","langName","PremiumIcon","withGradient","big","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","every","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","prev","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","privacyPhoneNumber","privacyLastSeen","lastSeen","privacyProfilePhoto","profilePhoto","privacyForwarding","forwards","privacyVoiceMessages","voiceMessages","privacyGroupChats","chatInvite","privacyPhoneCall","phoneCall","privacyBio","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","updateGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleVoiceMessagesClick","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","allowDisabledClick","blockedIds","userSearch","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","setPrivacyVisibility","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","privacyKey","headerText","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","getCurrentPrivacySettings","isAllowList","setPrivacySettings","selectedContactIds","updatedIds","config","selectedReaction","defaultReaction","setDefaultReaction","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","onSuccess","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","isFrom","currentKey","SettingsHeader","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","statusesById","userStatusesById","openNewContactDialog","filteredIds","sortUserIds","isSearching","selectedMemberIds","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","onTransitionEnd","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","CheckboxGroup","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","getCopyLabel","hasSelection","isReactionPickerOpen","enabledReactions","maxUniqueReactions","anchor","targetHref","canSendNow","canReschedule","canReply","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","noTransition","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAds","onSponsoredHide","onSponsorInfo","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","isSponsoredMessage","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessageContact","canImageBeCopied","hasMessageLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","menuElMinWidth","withScroll","handleOpenMessageReactionPicker","bubbleStyle","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","MenuSeparator","inline","withWrap","sponsorInfo","detectedLanguage","selectActiveDownloads","seenByExpiresAt","seenByMaxChatMembers","noOptions","isOwn","isOwnMessage","isScheduled","isMessageLocal","isChatGroup","membersCount","isAction","isActionMessage","chatFullInfo","selectChatFullInfo","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","messageLink","selectMessageLink","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","canScheduleUntilOnline","selectCanScheduleUntilOnline","selectIsReactionPickerOpen","setReplyingToId","setEditingId","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","setIsMenuOpen","setIsDeleteModalOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","handleDelete","handleReport","closeMenu","closePinModal","handleReply","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","PinMessageModal","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isComments","originChannelId","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","chatBot","REPLIES_USER_ID","userFullInfo","fullInfo","canGiftPremium","canCreateTopic","isCreator","isUserRightBanned","getHasAdminRight","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","isTopic","canDeleteChat","getCanDeleteChat","hasLinkedChat","linkedChatId","botCommands","botInfo","commands","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openBoostStatistics","openGiftPremiumModal","openChatWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","shouldCloseFast","setShouldCloseFast","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","cmd","DeleteChatModal","runDebouncedForSearch","selectCurrentTextSearch","isHistoryCalendarOpen","setLocalTextSearchQuery","searchTextMessagesLocal","closeLocalTextSearch","openHistoryCalendar","focusedIndex","setFocusedIndex","visualViewport","mainEl","pageTop","blur","handleMessageSearchQueryChange","newQuery","handleUp","newFocusIndex","handleDown","handleCloseLocalTextSearch","getDayStartAt","isTouchScreen","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areCustomReactionsAllowed","areCustomAllowed","withCustomReactions","closeReactionPicker","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","isFree","customEmojiMessage","parseMessageInput","buildCustomEmojiHtml","isReaction","chosenOrder","backdropExcludedSelector","ReactionPickerLimited","div","BLUR_CANVAS_SIZE","attachment","isSingle","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_IMAGE_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","canDisplaySpoilerButton","GIF_MIME_TYPE","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","members","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","focusInput","addNewOption","requestNextMutation","behavior","handleCreate","questionTrimmed","substring","optionsTrimmed","o","summary","answers","correct","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","hidden","noReplaceNewlines","native","IS_ELECTRON_BUILD","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","recent","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","categories","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","unshift","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","withThumb","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","handleMouseDown","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","favorite","premiumSet","chatStickerSetId","recentStickers","premiumStickers","selectShouldLoopStickers","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","existingAddedSetIds","addedPremiumStickers","flat","totalPremiumStickers","uniqueByField","fullSet","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","EmojiPicker","StickerPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseEnter","withAvatar","botCommand","handleSendCommand","selectedCommandIndex","prevCommands","renderedCommands","chatBotCommand","BotCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","messagesById","handleSearchTextMessagesLocal","viewportResults","senderPeer","forwardInfo","isChannelPost","originalSender","foundResult","isOnTop","preloadBackwards","teactOrderKey","LastMessageMeta","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","toggleMessageStatistics","views","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentTopMessages","StatisticsRecentMessage","openChatByUsername","GRAPH_TITLES","viewsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","publicForwards","publicForwardsData","StatisticsPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","setIsLoading","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","CHANNEL_TITLE_EMPTY","management","isSignaturesShown","canChangeInfo","canInvite","exportedInvites","updateChat","toggleSignatures","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","ManagementProgress","adminsCount","adminMembersById","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleToggleSignatures","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","isChatPublic","formatInteger","joinRequests","onChatMemberSelect","canAddNewAdmins","adminRights","addAdmins","adminMembers","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","deleteChatMember","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","updateChatMemberBannedRights","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","bannedRights","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","channelId","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","canBanUsers","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","defaultBannedRights","sendStickers","sendGifs","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","isNewAdmin","selectedUserId","updateChatAdmin","permissions","setPermissions","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handlePermissionChange","handleSavePermissions","handleDismissAdmin","getControlIsDisabled","memberStatus","handleCustomTitleChange","changeInfo","blocking","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","inviteUsers","pinMessages","manageCall","manageTopics","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","noAdmins","toggleParticipantsHidden","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","noScrollRestore","memberId","DeleteMemberModal","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","havePermissionChanged","setHavePermissionChanged","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","checkMedia","mediaPermissions","sendMedia","assign","embedLinks","sendPlain","sendMessages","updateChatDefaultBannedRights","shouldDisablePermissionForPublicGroup","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isMediaDropdownOpen","setIsMediaDropdownOpen","handleOpenMediaDropdown","handleDisabledClick","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","sendPhotos","sendVideos","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","isCalendarOpened","openCalendar","closeCalendar","setIsRequestNeeded","customExpireDate","setCustomExpireDate","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleExpireDateChange","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","reactionsOptions","handleSaveReactions","availableActiveReactions","handleReactionsOptionChange","handleReactionChange","local","personalPhoto","notPersonalPhoto","uploadContactProfilePhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","isSuggestRef","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","handleSelectAvatar","isSuggest","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","iso2","defaultName","invoice","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","getWebDocumentHash","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","main","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","passwordHint","onPasswordChange","clearPaymentError","cardName","shouldShowSubmit","onInputChange","useFocusAfterAnimation","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","inputInvoice","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","general","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","validateRequest","requestInfo","getRequestInfo","sendCredentials","credentials","expiryMonth","expiryYear","zip","getCredentials","sendForm","shippingOptionId","ConfirmPassword","handleModalClose","modalHeader","isSubmitDisabled","isRecurring","getIsSubmitDisabled","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","fullAddress","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","hardwareConcurrency","instances","IS_TEST","Worker","createConnector"],"sourceRoot":""}