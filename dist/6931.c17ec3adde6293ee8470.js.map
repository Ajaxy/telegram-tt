{"version":3,"file":"6931.c17ec3adde6293ee8470.js","mappings":"sFA4IAA,EAAOC,QAnIP,SAAoBC,GAClB,MAAMC,EAAW,CACfC,QAEE,6IAEFC,QACE,iBACFC,SACE,qRAKEC,EAAc,2BACdC,EAAQ,CACZC,UAAW,QACXC,MAAO,MACPC,IAAK,KACLC,SAAUT,GAENU,EAAc,CAClBX,EAAKY,QAAQZ,EAAKa,cAChB,CAAEC,OAAQ,CACRL,IAAK,WACLM,UAAW,KAEf,CACER,UAAW,SACXS,SAAU,CACR,CACER,MAAO,IACPC,IAAK,IACLQ,SAAU,CAAEjB,EAAKkB,mBAEnB,CACEV,MAAO,IACPC,IAAK,IACLQ,SAAU,CACRjB,EAAKkB,iBACLZ,MAKR,CACEC,UAAW,WACXC,MAAO,MAAQR,EAAKmB,UAEtB,CAAEX,MAAO,IAAMR,EAAKmB,UAEpB,CAAEX,MAAOR,EAAKmB,SAAW,OAASnB,EAAKmB,WAGzCb,EAAMW,SAAWN,EAEjB,MAAMS,EAAQpB,EAAKY,QAAQZ,EAAKqB,WAAY,CAAEb,MAAOH,IAC/CiB,EAAqB,0BACrBC,EAAS,CACbhB,UAAW,SACXC,MAAO,YACPgB,aAAa,EAGbP,SAAU,CACR,CACET,MAAO,KACPC,IAAK,KACLC,SAAUT,EACVgB,SAAU,CAAE,QAASQ,OAAOd,MAKlC,MAAO,CACLe,KAAM,aACNC,QAAS,CAAE,QACXjB,SAAUT,EACV2B,QAAS,OACTX,SAAUN,EAAYc,OAAO,CAC3BzB,EAAK6B,QAAQ,KAAM,KACnB,CACEtB,UAAW,WACXC,MAAO,QAAUH,EAAc,YAAciB,EAC7Cb,IAAK,QACLe,aAAa,EACbP,SAAU,CACRG,EACAG,IAGJ,CACEf,MAAO,aACPO,UAAW,EACXE,SAAU,CACR,CACEV,UAAW,WACXC,MAAOc,EACPb,IAAK,QACLe,aAAa,EACbP,SAAU,CAAEM,MAIlB,CACEhB,UAAW,QACXuB,cAAe,QACfrB,IAAK,IACLmB,QAAS,YACTX,SAAU,CACR,CACEa,cAAe,UACfC,gBAAgB,EAChBH,QAAS,YACTX,SAAU,CAAEG,IAEdA,IAGJ,CACEb,UAAW,OACXC,MAAOH,EAAc,IACrBI,IAAK,IACLe,aAAa,EACbQ,WAAW,EACXjB,UAAW,KAInB,C","sources":["webpack://telegram-t/./node_modules/highlight.js/lib/languages/moonscript.js"],"sourcesContent":["/*\nLanguage: MoonScript\nAuthor: Billy Quith <chinbillybilbo@gmail.com>\nDescription: MoonScript is a programming language that transcompiles to Lua.\nOrigin: coffeescript.js\nWebsite: http://moonscript.org/\nCategory: scripting\n*/\n\nfunction moonscript(hljs) {\n  const KEYWORDS = {\n    keyword:\n      // Moonscript keywords\n      'if then not for in while do return else elseif break continue switch and or '\n      + 'unless when class extends super local import export from using',\n    literal:\n      'true false nil',\n    built_in:\n      '_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load '\n      + 'loadfile loadstring module next pairs pcall print rawequal rawget rawset require '\n      + 'select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug '\n      + 'io math os package string table'\n  };\n  const JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS\n  };\n  const EXPRESSIONS = [\n    hljs.inherit(hljs.C_NUMBER_MODE,\n      { starts: {\n        end: '(\\\\s*/)?',\n        relevance: 0\n      } }), // a number tries to eat the following slash to prevent treating it as a regexp\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'/,\n          end: /'/,\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: /\"/,\n          end: /\"/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ]\n        }\n      ]\n    },\n    {\n      className: 'built_in',\n      begin: '@__' + hljs.IDENT_RE\n    },\n    { begin: '@' + hljs.IDENT_RE // relevance booster on par with CoffeeScript\n    },\n    { begin: hljs.IDENT_RE + '\\\\\\\\' + hljs.IDENT_RE // inst\\method\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  const TITLE = hljs.inherit(hljs.TITLE_MODE, { begin: JS_IDENT_RE });\n  const POSSIBLE_PARAMS_RE = '(\\\\(.*\\\\)\\\\s*)?\\\\B[-=]>';\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]',\n    returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [ 'self' ].concat(EXPRESSIONS)\n      }\n    ]\n  };\n\n  return {\n    name: 'MoonScript',\n    aliases: [ 'moon' ],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('--', '$'),\n      {\n        className: 'function', // function: -> =>\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + POSSIBLE_PARAMS_RE,\n        end: '[-=]>',\n        returnBegin: true,\n        contains: [\n          TITLE,\n          PARAMS\n        ]\n      },\n      {\n        begin: /[\\(,:=]\\s*/, // anonymous function start\n        relevance: 0,\n        contains: [\n          {\n            className: 'function',\n            begin: POSSIBLE_PARAMS_RE,\n            end: '[-=]>',\n            returnBegin: true,\n            contains: [ PARAMS ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [ TITLE ]\n          },\n          TITLE\n        ]\n      },\n      {\n        className: 'name', // table\n        begin: JS_IDENT_RE + ':',\n        end: ':',\n        returnBegin: true,\n        returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n}\n\nmodule.exports = moonscript;\n"],"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","JS_IDENT_RE","SUBST","className","begin","end","keywords","EXPRESSIONS","inherit","C_NUMBER_MODE","starts","relevance","variants","contains","BACKSLASH_ESCAPE","IDENT_RE","TITLE","TITLE_MODE","POSSIBLE_PARAMS_RE","PARAMS","returnBegin","concat","name","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"sourceRoot":""}