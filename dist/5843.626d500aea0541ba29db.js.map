{"version":3,"file":"5843.626d500aea0541ba29db.js","mappings":"yOA+BA,MA+FA,GAAeA,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA6B,IAA3B,OAAEC,GAAQD,EACjB,MAAME,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAC1BG,GAAYC,EAAAA,EAAAA,IAAoBN,EAAQE,GAG9C,MAAO,CACLG,YACAE,WAJwBC,EAAAA,EAAAA,IAAeR,GAAQS,YAAcT,EAAOU,WAAWC,uBAAoBC,KAInEP,GAAWQ,IAAMC,QAC/CT,EACIA,EAAUU,kBAAoB,GAAKV,EAAUW,SAC7Cb,GAAQA,EAAKc,gBAAkBd,EAAKe,cAE3C,GAbenB,EA7FgCoB,IAM9C,IAN+C,OACnDjB,EAAM,SACNK,EAAQ,UACRa,EAAS,UACTf,EAAS,gBACTgB,GACDF,EACC,MAAM,8BACJG,EAA6B,4BAC7BC,IACEC,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPC,GAAsBC,EAAAA,EAAAA,KAAY,KACtCN,EAA8B,CAC5BpB,UACA,GACD,CAACoB,EAA+BpB,IAE7B2B,EAAexB,GAAWwB,aAE1BC,GAAsBC,EAAAA,EAAAA,KAAQ,KAClC,IAAKF,EACH,MAAO,GAIT,MAAMG,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KAC9BC,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAOG,OAAOC,OAAOV,GAClBW,MAAM,EAlCiB,GAmCvBC,KAAIC,IAAA,IAAC,GAAE7B,GAAI6B,EAAA,OAAKV,EAAUnB,IAAOuB,EAAUvB,EAAG,IAC9C8B,OAAO7B,QAAQ,GACjB,CAACe,KAEJe,EAAAA,EAAAA,KAAU,KACR,GAAKvC,GAAWQ,KACXN,IAAYF,EAAUW,UAO3B,OALAO,EAA4B,CAC1BV,GAAIR,EAAUQ,GACdgC,YAAY,IAGP,KACLtB,EAA4B,CAC1BV,GAAIR,EAAUQ,GACdgC,YAAY,GACZ,CACH,GACA,CAACxC,GAAWQ,GAAIR,GAAWW,SAAUT,EAAUgB,IAElD,MAAM,aACJuB,EAAY,qBACZC,IACEC,EAAAA,EAAAA,GAAkBlC,QAAQT,GAAaE,IAErC0C,GAA4BC,EAAAA,EAAAA,GAAiB7C,GAAWU,mBAAmB,GAC3EoC,GAA+BD,EAAAA,EAAAA,GAAiBpB,GAAqB,GAE3E,GAAKgB,EAEL,OACEM,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GACT,mBACAhC,GAAmB,oBACnBD,EACA2B,GAEFO,QAAS3B,GAETyB,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,QACbgC,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,SAASK,EAAK,uBAC9B2B,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,gBAAgBK,EAAK,eAAgBwB,QAAAA,EAA6B,EAAG,OAEvFG,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,WACZ+B,GAA8BV,KAAKc,GAClCH,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLC,IAAKF,EAAK1C,GACV0C,KAAMA,OAIZH,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACC,OAAK,EAACvC,UAAU,QACrBK,EAAK,iBAEJ,I,yGCzHV,MCqEA,EApDsCN,IAGhC,IAHiC,KACrCyC,EAAI,UACJxC,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEPmC,GAAcC,EAAAA,EAAAA,OACbC,EAAaC,EAAeC,IAAmBC,EAAAA,EAAAA,IAAQ,GAExDC,GAAgBC,EAAAA,EAAAA,KAA0BnC,EAAAA,EAAAA,OAE1CoC,GAActC,EAAAA,EAAAA,KAAQ,KAC1B,IAAKoC,EACH,OAAOP,EAET,IAAKG,EACH,OAAOF,EAAYS,SAAWV,EAGhC,MAAMW,EAAWV,EAAYS,QAEvBE,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAKc,OAAQD,IAC3BF,GAAYX,EAAKa,KAAOF,EAASE,GACnCD,EAASG,KACPvB,EAAAA,GAAAA,cAAA,OAAKhC,UD1CiG,wBC2CpGgC,EAAAA,GAAAA,cAAA,OAAKhC,UD3CkI,wBC2CpGwC,EAAKa,IACxCrB,EAAAA,GAAAA,cAAA,OAAKhC,UD5C+M,uBC4C/KwD,eAAgBX,GAAkBM,EAASE,IAChFrB,EAAAA,GAAAA,cAAA,OAAKhC,UD7CqX,uBC6CrVwD,eAAgBX,GAAkBL,EAAKa,MAIhFD,EAASG,KAAKvB,EAAAA,GAAAA,cAAA,YAAOQ,EAAKa,KAM9B,OAFAZ,EAAYS,QAAUV,EAEfY,CAAQ,GACd,CAACL,EAAeJ,EAAaH,IAMhC,OAJAhB,EAAAA,EAAAA,KAAU,KACRoB,GAAe,GACd,CAACJ,IAGFR,EAAAA,GAAAA,cAAA,QAAMhC,WAAWiC,EAAAA,EAAAA,GD/DE,uBC+D0BjC,GAAYyD,IAAKpD,EAAKqD,MAAQ,WAAQlE,GAChFyD,EACI,C,gUCzBX,SAAevE,EAAAA,EAAAA,KAzBf,SAAiCiF,GAC/B,MAAM,QACJC,EAAO,OAAEC,EAAM,aAAEC,KAAiBC,GAChCJ,EAEEK,EAAeJ,GAASK,WAAWC,QACnCC,EAAiBP,GAAY,UAASA,EAAQnE,KAC9C2E,GAAiBC,EAAAA,EAAAA,GACrBT,GAAUU,EAAAA,EAAAA,IAAsBV,EAAQnE,SAAMD,EAC9CqE,IAAWC,EACXS,EAAAA,GAAAA,SAEIC,GAASH,EAAAA,EAAAA,GAASF,EAAgBN,GAExC,OACE7B,EAAAA,GAAAA,cAACyC,EAAAA,EAAuBC,EAAA,CACtBF,OAAQA,EACRG,WAAYP,EACZJ,aAAcA,GAEVD,GAGV,G,oHCtCA,QAAwD,uB,oOCkBxD,MAAMa,EAAoB,IAAIC,IAyC9B,GAAenG,EAAAA,EAAAA,KAvCf,SAAiCiF,GAC/B,MAAM,WACJgB,EAAU,aAAEX,EAAY,UAAEhE,KAAc+D,GACtCJ,GAEGmB,EAAiBC,IAAqBjC,EAAAA,EAAAA,GAAQpD,QAAQsE,IAAiBY,EAAkBI,IAAIL,IAC9FhD,GAAuBsD,EAAAA,EAAAA,GAAmBH,IACzCI,EAAkBC,IAAsBrC,EAAAA,EAAAA,IAAQ,GAEjDsC,GAAoBC,EAAAA,EAAAA,IAAgB,KACxCN,IACAH,EAAkBU,IAAIX,EAAW,KAG7B,KAAEY,GAAS5B,EAEjB,OACE3B,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GAAejC,EDtCT,uBCsCiC2B,GAClD6D,OAAOC,EAAAA,EAAAA,QAAoBjG,IAAT+F,GAAuB,UAASA,gBAAmBA,SAEpEvB,IAAiBkB,GAEhBlD,EAAAA,GAAAA,cAAA,OAAK0D,IAAK1B,EAAchE,UAAW2F,IAEpChB,IAAeO,GAEdlD,EAAAA,GAAAA,cAAA,OACE0D,IAAKf,EACL3E,UAAW2F,EACXC,OAAQR,IAIZpD,EAAAA,GAAAA,cAAC6D,EAAAA,EAAYnB,EAAA,GAAKX,EAAU,CAAE6B,OAAQT,EAAoBW,cAAY,KAG5E,G,mFC9CO,SAASC,EACdC,EACAC,EACAC,EAAgBnG,GAIhB,IAHA,KACEoG,EAAI,UAAEC,EAAS,kBAAEC,GACFtG,EAEjB,MAAMuG,EAZW,EAYHL,EAAO3C,OAGrB0C,EAAOM,MAAgB,EAARA,EACfN,EAAOO,OAASA,GAChBP,EAAOR,MAAMc,MAAS,GAAEA,MACxBN,EAAOR,MAAMe,OAAU,OAEvB,MAAMC,EAAMR,EAAOS,WAAW,MAC9BD,EAAIE,MAAM,EAAG,GAEbT,EAAOU,SAAQ,CAACC,EAAMvD,KACpBmD,EAAIK,YAAexD,EAAI4C,EAAO3C,QAAU4C,EAAY,GAAM,EAC1DM,EAAIJ,UAAYF,EAAW7C,EAAI4C,EAAO3C,OAAS+C,EAAoBD,EACnE,MAAMU,EAAcC,KAAKC,IAAI,EAAaJ,EAAOG,KAAKC,IAAI,EAAGb,GAxBlD,KA8Bf,SACEK,EAA+BS,EAAWC,EAAWZ,EAAeC,EAAgBY,GAlClE,EAoCN,EAAIA,IACdA,EAASb,GAEPC,EAAS,EAAIY,IACfA,EAASZ,EAAS,GAGpBC,EAAIY,YACJZ,EAAIa,OAAOJ,EAAIE,EAAQD,GACvBV,EAAIc,MAAML,EA7CQ,EA6CGC,EAAGD,EA7CN,EA6CiBC,EAAIX,EAAQY,GAC/CX,EAAIc,MAAML,EA9CQ,EA8CGC,EAAIX,EAAQU,EAAGC,EAAIX,EAAQY,GAChDX,EAAIc,MAAML,EAAGC,EAAIX,EAAQU,EAAGC,EAAGC,GAC/BX,EAAIc,MAAML,EAAGC,EAAGD,EAhDE,EAgDSC,EAAGC,GAC9BX,EAAIe,WACN,CAtBIC,CAAiBhB,EA3BF,EA2BOnD,GAzBX,GAyBqCyD,GAAe,EA5B/C,EA4B+DA,EA1B9D,GA2BjBN,EAAIiB,MAAM,GAEd,C,yDCnCO,SAASC,EAAeC,GAC7B,MAAMC,EAAiC,EAArBD,EAAYrE,OACxBuE,EAAcd,KAAKe,MAAMF,EAAY,GAC3C,IAAKC,EACH,MAAO,GAWT,MAAME,EAASC,MAAMH,GACfI,EAAWN,EACjB,IAAK,IAAItE,EAAI,EAAG6E,EAAIL,EAAc,EAAGxE,IAAM6E,IAAK7E,EAAG,CACjD,MAAM8E,EAAYpB,KAAKe,MAAW,EAAJzE,EAAS,GACjC+E,EAAWrB,KAAKe,MAAW,EAAJzE,EAAS,GAChCgF,EAAQJ,EAASE,IAAcF,EAASE,EAAY,IAAM,GAChEJ,EAAO1E,GAAOgF,GAASD,EAAY,EACrC,CACA,MAAME,EAAgBvB,KAAKe,MAA2B,GAAnBD,EAAc,GAAU,GACrDU,EAAexB,KAAKe,MAA2B,GAAnBD,EAAc,GAAU,GACpDW,EAAYP,EAASK,IAAkBL,EAASK,EAAgB,IAAM,GAG5E,OAFAP,EAAOF,EAAc,GAAMW,GAAaD,EAAgB,GAEjDR,CACT,CAEO,SAASU,EAAiBC,EAAgBC,GAC/C,IAAIxC,EAAO,EACX,MAAMyC,EAAU,IAAIZ,MAAMW,GACpBE,EAAeH,EAAKpF,OAASqF,EAC7BG,EAAaJ,EAAK,GAClBK,EAAcL,EAAKA,EAAKpF,OAAS,GACvC,IAAK,IAAID,EAAI,EAAGA,EAAIsF,EAAUtF,IAAK,KAAA2F,EAAAC,EAAAC,EACjC,MAAMC,EAAMpC,KAAKe,MAAMzE,EAAIwF,GACrBO,IAAqB,QAAdJ,EAACN,EAAKS,EAAM,UAAE,IAAAH,EAAAA,EAAIF,IAAwB,QAAdG,EAAKP,EAAKS,UAAI,IAAAF,EAAAA,EAAIH,IAA4B,QAAjBI,EAAIR,EAAKS,EAAM,UAAE,IAAAD,EAAAA,EAAIH,IAAgB,EAC3GH,EAAQvF,GAAK+F,EACTjD,EAAOiD,IACTjD,EAAOiD,EAEX,CACA,MAAO,CAAEV,KAAME,EAASzC,OAC1B,C,8ICqBO,MAAMkD,EAAwBC,OAAOC,WAAW,sBAC1CC,EAAoCF,OAAOC,WAAW,sBAmVnE,SAASE,EAAwBC,EAAoBC,GACnD,MAAO,CACLC,WAAYF,EAAYL,EAAsBQ,QAAU,GAAK,GAAM,GACnEC,WAAYJ,EACPL,EAAsBQ,QACrB,GACCF,GAAcH,EAAkCK,QAAU,GAAK,GAClE,GAER,CAqLA,SAASE,EACPC,EACAC,EACAC,GAEA,OACElI,EAAAA,GAAAA,cAAA,OACEhC,UAAU,WACVmK,IAAKD,GAEJD,EAAe5I,KAAIC,IAAA,IAAC,MAAE8I,EAAK,IAAEC,GAAK/I,EAAA,OACjCU,EAAAA,GAAAA,cAAA,OACEhC,UAAU,6BACVwF,MAAQ,SAAgB,IAAR4E,cAAwB,IAAY,IAANC,MAC9C,IAEJrI,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,0BACdgC,EAAAA,GAAAA,cAAA,KACEhC,UAAU,+BACVwF,MAAQ,yBAAuC,IAAfwE,SAGpChI,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,kBACdgC,EAAAA,GAAAA,cAAA,KACEhC,UAAU,uBACVwF,MAAQ,yBAAuC,IAAfwE,SAK1C,CAEA,SAAetL,EAAAA,EAAAA,KA5iBaqB,IAuBtB,IAvBuB,MAC3BuK,EAAK,QACLC,EAAO,YACPC,EAAW,eACXC,EAAc,OACdC,EAAM,KACNC,EAAI,UACJC,EAAS,UACT5K,EAAS,aACT6K,EAAY,WACZC,EAAU,cACVC,EAAa,eACbC,EAAc,sBACdC,EAAqB,cACrBC,EAAa,qBACbC,EAAoB,YACpBC,EAAW,cACXC,EAAa,oBACbC,EAAmB,OACnBC,EAAM,YACNC,EAAW,eACXC,EAAc,YACdC,GACD3L,EACC,MAAM,2BAAE4L,EAA0B,qBAAEC,EAAoB,gBAAEC,IAAoBzL,EAAAA,EAAAA,OAEtE0L,SAAS,MAAEC,EAAK,MAAEC,GAAK,MAAEC,IAAO,cAAEC,IAAkB3B,EACtD4B,GAAUzM,QAAQsM,IAASC,IAC3BG,IAAY1J,EAAAA,EAAAA,KAAgB,GAE5BwH,IAAYxH,EAAAA,EAAAA,IAAuB,MACnCrC,IAAOC,EAAAA,EAAAA,MACP,MAAEoD,IAAUrD,IAEZ,SAAEqJ,KAAa2C,EAAAA,EAAAA,OACdC,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,GACzCC,GAAaH,KAtCL,EAuCRI,IAAYC,EAAAA,EAAAA,IAAoBpC,EAAS,aACzCqC,IAAevI,EAAAA,EAAAA,GAASqI,IAAW,EAAOnI,EAAAA,GAAAA,SAE1CsI,IAAYxI,EAAAA,EAAAA,IAChBsI,EAAAA,EAAAA,IAAoBpC,EAAS,WAC5BkC,IACDK,EAAAA,EAAAA,IAAsBvC,EAAS,YAGzBwC,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCN,EAAAA,EAAAA,IAAoBpC,EAAS,aAC5BQ,GACD+B,EAAAA,EAAAA,IAAsBvC,EAAS,aAG3B2C,IAAkB7H,EAAAA,EAAAA,IAAgB,KACtCkH,IAAe,GACfhB,EAAOhB,EAAQ9K,GAAI8K,EAAQzL,OAAO,IAG9BqO,IAAoB9H,EAAAA,EAAAA,IAAgB,KACxCkH,IAAe,EAAM,KAGjB,WACJa,GAAU,eAAEnD,GAAc,kBAAEoD,GAAiB,eAAEC,KAC7CC,EAAAA,EAAAA,MAEE,UACJC,GAAS,aAAExD,GAAY,UAAEyD,GAAS,eAAEC,GAAc,SAAEC,KAClDC,EAAAA,EAAAA,IACFC,EAAAA,EAAAA,IAAYtD,IACZuD,EAAAA,EAAAA,IAAiBvD,GACjB4B,GAAU,QAAU,QACpBU,GACAQ,QACA7N,EACA8N,GACAhB,GACAY,GACAC,IACAY,EAAAA,EAAAA,IAAexD,IAGXyD,IAAQC,EAAAA,EAAAA,IAAa1D,GACrB2D,GAoYR,SACE5D,EACA0B,GAKA,IAJAhC,EAAYmE,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAG,EACfH,EAAKG,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACLxE,EAAUwE,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACVzE,EAAQyE,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAGR,MAAMC,GAAY1L,EAAAA,EAAAA,IAA0B,OAEpCgG,KAAMzC,EAAM,KAAEE,IAASxF,EAAAA,EAAAA,KAAQ,KACrC,IAAKqL,EACH,OAGF,MAAM,SAAEqC,EAAQ,SAAEV,GAAa3B,EAC/B,IAAKqC,EACH,MAAO,CACL3F,KAAM,IAAIV,MAAMjB,KAAKuH,IAAIX,EF/iBQ,KE+iB8BlG,KAAK,GACpEtB,KAAM,GAIV,MAAM,WAAEyD,EAAU,WAAEE,GAAeL,EAAwBC,EAAUC,GAC/D4E,EAAiBxH,KAAKuH,IAAIX,EAnfT,GAmfwC,GACzDa,EAAczH,KAAKxE,MAAMqH,GAAcE,EAAaF,GAAc2E,GAGxE,OAAO9F,EAFiBf,EAAe,IAAI+G,WAAWJ,IAEbG,EAAY,GACpD,CAAC9E,EAAUsC,EAAOrC,KAAgB,CAAC,EAqBtC,OAnBA+E,EAAAA,EAAAA,KAAgB,KACd,MAAM1I,EAASoI,EAAUlL,QAEpB8C,GAAWC,QAAmBzG,IAAT2G,GAS1BJ,EAAeC,EAAQC,EAAQ+D,EAAc,CAC3C7D,OACAC,UAAW4H,EANkB,SAAV1D,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,UAQ/CjE,kBAAmB2H,EALkB,SAAV1D,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,WAOvD,GACD,CAAC0D,EAAO7H,EAAM6D,EAAc/D,EAAQqE,IAEhC8D,CACT,CAxb4BO,CACxBrE,EAAO0B,GAAQE,KAAkB8B,GAAS,EAAIhE,GAAcgE,IAAQpD,EAAWlB,IAG3EkF,GAAepB,IAAcxD,GAAe,GAAKA,GAAe,GAEtExI,EAAAA,EAAAA,KAAU,KACR+K,GAAeiB,GAAU,GACxB,CAACA,KAEJ,MAAMqB,GAAsBvC,KAAgBc,IAEtC,YACJ0B,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACF1E,EACAE,GAAkBuC,GAClB6B,IAAuB9D,IAIvBrJ,aAAcwN,GACdvN,qBAAsBwN,KACpBvN,EAAAA,EAAAA,GAAkBmN,IAEhBK,GAAoBF,KAAwBL,IAAuBC,IAEnEO,IAAoBhK,EAAAA,EAAAA,IAAgB,KACpCyJ,GACFrD,OAIG+B,IACHjC,EAAOhB,EAAQ9K,GAAI8K,EAAQzL,SAG7BsB,EAAAA,EAAAA,MAAakP,qBAAqB,CAAE5E,WACpC6B,IAAgBD,IAChBmB,KAAW,KAGbjM,EAAAA,EAAAA,KAAU,KACJgK,GAAeU,KAAkBsB,IAAazC,IAChDS,GACF,GACC,CAACgC,GAAWtB,GAAeV,EAAaT,IAE3C,MAAMwE,IAAsBlK,EAAAA,EAAAA,IAAgB,KACtC0F,EACFY,EAA2B,CAAEpB,YAE7BqB,EAAqB,CAAErB,WACzB,IAGIiF,IAAanK,EAAAA,EAAAA,IAAiBoK,IAClC,GAAIrD,GAAUlJ,SAAWgH,GAAUhH,QAAS,CAC1C,MAAM,MAAEoD,EAAK,KAAEoJ,GAASxF,GAAUhH,QAAQyM,wBACpCC,EAAUH,aAAaI,WAAaJ,EAAEG,QAAUH,EAAEK,cAAc,GAAGF,QACzEH,EAAEM,kBAEFrC,GAAe3G,KAAKC,IAAID,KAAKuH,IAAIX,KAAaiC,EAAUF,GAAQpJ,GAAQqH,GAAW,IAAM,MAC3F,KAGIqC,IAAkB3K,EAAAA,EAAAA,IAAiBoK,IACnCA,aAAaI,YAA2B,IAAbJ,EAAEQ,SACjC7D,GAAUlJ,SAAU,EACpBsM,GAAWC,GAAE,IAGTS,IAAiB7K,EAAAA,EAAAA,IAAgB,KACrC+G,GAAUlJ,SAAU,CAAK,IAGrBiN,IAAkB9K,EAAAA,EAAAA,IAAgB,KACtCqG,EAAanB,EAAQ9K,GAAI8K,EAAQzL,OAAO,IAGpCsR,IAAmB/K,EAAAA,EAAAA,IAAgB,KACvCwG,EAAgB,CAAE/M,OAAQyL,EAAQzL,OAAQuR,UAAW9F,EAAQ9K,IAAK,IAapE,SAAS6Q,KACP,GAAInE,GACF,OAAO3B,GAAe,QAGxB,MAAM,MAAE+F,EAAK,SAAEC,GAAazE,EAE5B,OAAOwE,GAASC,CAClB,EAlBAhP,EAAAA,EAAAA,KAAU,KACR,GAAK0I,GAAUhH,SAAY0L,GAC3B,OAAO6B,EAAAA,EAAAA,IAAcvG,GAAUhH,QAAS,CACtCwN,UAAWV,GACXW,UAAWT,GACXhO,QAASgO,GACTU,OAAQpB,IACR,GACD,CAACZ,GAAcoB,GAAiBR,GAAYU,KAkC/C,MAAMW,IAAgB5O,EAAAA,EAAAA,GACpB,QACAjC,EACA0K,IAAWoG,EAAAA,GAAAA,QAAsB,SACjC9C,IAAStD,IAAWoG,EAAAA,GAAAA,QAAsB,OACzCpG,IAAWoG,EAAAA,GAAAA,QAAsBpG,IAAWoG,EAAAA,GAAAA,cAA4B,SACzEhG,GAAc,qBAGViG,GAAmB,CAAC,eACtB3B,GACF2B,GAAiBxN,KAAK,WAEtBwN,GAAiBxN,KAAKiK,GAAY,QAAU,QAG9C,MAAMwD,IAAmB/O,EAAAA,EAAAA,GAAe,UAAW2M,IAAgB,iBAEnE,SAASqC,KACP,OACEjP,EAAAA,GAAAA,cAAA,OAAKhC,UAAWgR,IACdhP,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,eACbgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,QAAQyD,IAAI,OAAO8M,MAAOD,OAAoBY,EAAAA,EAAAA,GAAWZ,OAEtEtO,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,gBACZN,QAAQiL,IACP3I,EAAAA,GAAAA,cAACmP,EAAAA,EAAI,CACHnR,UAAU,OACVkC,QAASiO,KAERiB,EAAAA,EAAAA,IAAoB/Q,GAAa,IAAPsK,MAMlCiE,IACC5M,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,qBAAqByD,IAAKC,GAAQ,WAAQlE,GACvDwC,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,yBAAyByD,IAAI,QAC1CuG,GAAe,GAAM,IAAEqH,EAAAA,EAAAA,IAAoB1D,GAAW3D,GAAc2D,OAEtE5D,EAAeC,GAAcC,GAAgBC,MAGhD0E,IAlER,WACE,GAAIzC,GACF,OACEnK,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,OAAOyD,IAAKC,GAAQ,WAAQlE,IACxC6R,EAAAA,EAAAA,KAAqBrF,IAASC,IAAQ0B,WAK7C,MAAM,UAAE2D,GAAcvF,EAEtB,OACE/J,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,OAAOyD,IAAKC,GAAQ,WAAQlE,IACxC6R,EAAAA,EAAAA,IAAoB1D,IACrB3L,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,UAAS,KACxBsR,GAAatP,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,YAAYuQ,MAAOe,IAAYJ,EAAAA,EAAAA,GAAWI,IACvEA,GAAa9G,GAAexI,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,UAAS,KACrDwK,GAAexI,EAAAA,GAAAA,cAAA,QAAMuO,MAAO/F,IAAc0G,EAAAA,EAAAA,GAAW1G,IAG5D,CA8CwB+G,GAGxB,CAEA,OACEvP,EAAAA,GAAAA,cAAA,OAAKhC,UAAW6Q,GAAepN,IAAKpD,GAAKqD,MAAQ,MAAQ,OACtDmH,GACC7I,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,0BACZ8K,GAAc9I,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,sBAGhCgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLiP,QAAS9H,GACTnE,KAAK,UACLkM,MAAO7E,GAAe,oBAAsB,UAC5C5M,UAAW+Q,GAAiBW,KAAK,KACjCC,UAAWnE,GAAY,cAAgB,aACvCtL,QAASmN,GACT3L,MAAOrD,GAAKqD,MACZkO,gBAAiBhF,IAEjB5K,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,mBACbgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,qBAEdkP,IACClN,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,gBAAiBkN,GAAmBC,IAAqB,gBACtFpN,EAAAA,GAAAA,cAAC6P,EAAAA,EAAe,CACd3L,SAAU8I,GACV8C,aAAW,EACXvM,KAAK,IACLrD,QAASkN,GAAoBC,QAAoB7P,EACjDuS,SAAU3C,MAIfrD,GAASX,IAAgB0D,IACxB9M,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLgD,KAAK,OACLvF,UAAU,kBACV2R,UAAW5G,EAAgB,kBAAoB,WAC/C7I,QAASqN,IAETvN,EAAAA,GAAAA,cAAA,KAAGhC,WAAWiC,EAAAA,EAAAA,GAAe,OAAQ8I,EAAgB,aAAe,sBAGvEL,IAAWoG,EAAAA,GAAAA,QAAsBG,KACjCvG,IAAWoG,EAAAA,GAAAA,QAAsB/E,GA4CxC,SACE1L,EACA0L,EACA4B,EACAH,EACAxD,EACAC,EACAC,EACA8H,EACArH,EACAzE,EACAiK,GAEA,MAAM,MACJI,EAAK,UAAEe,EAAS,SAAEd,GAChBzE,EACEkG,EAAezE,GAAcxD,EAAe,GAAKA,EAAe,GAChE,MAAEtG,GAAUrD,EAElB,OACE2B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,WACbgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,QAAQyD,IAAI,OAAO8M,MAAOA,IAAQW,EAAAA,EAAAA,GAAWX,GAASC,IAClEyB,GACCjQ,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,OAAOyD,IAAKC,EAAQ,WAAQlE,GACzCwC,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,yBAAyByD,IAAI,SAC1C4N,EAAAA,EAAAA,IAAoB1D,EAAW3D,EAAc2D,IAE/C5D,EAAeC,EAAcC,EAAgBC,KAGhD+H,GAAgBD,GAChBhQ,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,OAAOyD,IAAKC,EAAQ,WAAQlE,GACxC0G,EAAY,IAAEgM,EAAAA,EAAAA,IAAkBnG,EAAOxG,KAAOW,aAAiB1G,GAAW0S,EAAAA,EAAAA,IAAkBnG,EAAOxG,QAGtG0M,IAAiBD,GACjBhQ,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,OAAOyD,IAAKC,EAAQ,WAAQlE,GACzCwC,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,WAAWyD,IAAI,SAAQ4N,EAAAA,EAAAA,IAAoB1D,IAC1D2D,GACCtP,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,UAAS,KACzBgC,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,YAAYyD,IAAI,OAAO8M,MAAOe,IAAYJ,EAAAA,EAAAA,GAAWI,KAGxE5R,QAAQiL,IACP3I,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,UAAS,KACzBgC,EAAAA,GAAAA,cAACmP,EAAAA,EAAI,CAACnR,UAAU,OAAOkC,QAASiO,IAC7BgC,EAAAA,EAAAA,IAAoB9R,EAAa,IAAPsK,GAAa,MAQxD,CApGiDyH,CACzC/R,GACA0L,EACA4B,GACAH,GACAxD,GACAC,GACAC,GACCa,GAAiB+D,GAClBnE,EACAqE,GACAtD,EAAcyE,QAAkB3Q,GAEjCkL,IAAWoG,EAAAA,GAAAA,cAA4B9E,IAASC,KAAUgF,KAC1DvG,IAAWoG,EAAAA,GAAAA,QAAsB9E,IAwFxC,SACEA,EACA9B,EACAgE,EACAlE,EACAkC,EACAlB,EACAC,EACAC,EACAC,EACAkH,EACA/G,GAEA,OACEtJ,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,WACbgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,oBACbgC,EAAAA,GAAAA,cAAA,OACEhC,UAAU,WACVsS,WAAW,EACXnI,IAAKD,GAELlI,EAAAA,GAAAA,cAAA,UAAQmI,IAAK+D,KAEdmE,GAECrQ,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACJ,QAASA,MACVgJ,GAAiBC,IAAyBG,EAC7CA,GAAqBL,GACXD,GACVqH,GACF,GAGArQ,EAAAA,GAAAA,cAAA,KAAGhC,WAAWiC,EAAAA,EAAAA,GACZ,kBACA,OACCiJ,GAAiBC,EAAwB,YAAc,mBACvDD,GAAiBC,KAA0BF,GAAyB,sBAGtED,GACChJ,EAAAA,GAAAA,cAAA,OAAKuQ,QAAQ,YAAYvS,UAAU,eACjCgC,EAAAA,GAAAA,cAAA,QACEhC,UAAU,eACVyH,KAAK,cACLnB,MAAM,KACNC,OAAO,KACP,eAAa,IACb,kBAAgB,QAChBiM,GAAG,IACHC,GAAG,IACHC,OAAO,sBACP,oBAAkB,IAClB,mBAAiB,aAO7B1Q,EAAAA,GAAAA,cAAA,KAAGhC,WAAWiC,EAAAA,EAAAA,GAAe,iBAAkBiK,GAAiB,UAAWzI,IAAI,QAC3D,IAAjBuG,GAAqBqH,EAAAA,EAAAA,IAAoBrF,EAAM2B,WAAY0D,EAAAA,EAAAA,IAAoBrF,EAAM2B,SAAW3D,IAIzG,CAxJQ2I,CACE3G,GACA9B,GACAgE,GACAlE,GACAkC,GACAlB,EACAC,EACAC,EACAC,EACAE,EAAgB+E,QAAmB5Q,EACnC8L,GAGA,G,mFCrZV,SAAgB,KAAO,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,YAAY,uBAAuB,SAAW,uBAAuB,YAAY,uBAAuB,SAAW,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,oBAAoB,uBAAuB,gBAAkB,uBAAuB,cAAc,uBAAuB,WAAa,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,aAAa,uBAAuB,UAAY,uBAAuB,OAAS,wBCmC1nB,GAAe5M,EAAAA,EAAAA,KAjBkBqB,IAI3B,IAJ4B,MAChC6S,EAAK,KACLrN,EAAI,UACJvF,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,OACE0B,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GAAejC,EAAW2F,EAAAA,KAAaA,EAAQ,QAAOJ,MACjE9B,IAAKpD,EAAKqD,MAAQ,MAAQ,OAEzBkP,GAAOvR,KAAKc,GAASH,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CAACmD,KAAMA,EAAMpD,KAAMA,EAAMnC,UAAW2F,EAAAA,WAC7D,G,yMC2BV,MAAMkN,GAAeC,EAAAA,EAAAA,KAAUC,GAAOA,KAAM,KAAK,GAyMjD,GAAerU,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAAmC,IAAjC,aAAEmU,GAAcnU,EACvB,MAAQoU,aAAeC,WAAYC,IAAoBvU,EAEjDG,EAAOiU,GAAehU,EAAAA,EAAAA,IAAWJ,EAAQoU,QAAgBxT,EACzD4T,GAAOC,EAAAA,EAAAA,IAASL,IAAgBM,EAAAA,EAAAA,IAAW1U,EAAQoU,QAAgBxT,EACnE+T,EAAUxU,GAAMwU,QAChBC,EAAUzU,IAAQ0U,EAAAA,EAAAA,IAAkB1U,GAAM2U,EAAAA,EAAAA,IAAqB9U,IAAS+U,EAAAA,EAAAA,IAAuB/U,KAC/F,SAAEgV,IAAaC,EAAAA,EAAAA,IAAyBjV,IAAW,CAAC,EACpDkV,EAAUP,EAAUK,OAAWpU,EAC/BuU,EAAiBhV,GAAOiV,EAAAA,EAAAA,IAAmBpV,EAAQG,EAAKU,KAAKwU,gBAAazU,EAChF,IAAI0U,EAAcd,GAAOe,EAAAA,EAAAA,IAAmBvV,EAAQwU,EAAK3T,KAAK2U,SAAM5U,EAUpE,OATK0U,GAAenV,IAClBmV,GAAcF,EAAAA,EAAAA,IAAmBpV,EAAQG,EAAKU,KAAK4U,OAQ9C,CACLlB,gBACApU,OACAqU,OACAkB,eATqBvV,IAASqU,MAC5BmB,EAAAA,EAAAA,IAAcxV,MAAUyV,EAAAA,EAAAA,IAAkBzV,EAAM,iBAC/C0V,EAAAA,EAAAA,IAAiB1V,EAAM,gBAQ1ByU,UACAM,UACAC,iBACAG,cACD,GA9BevV,EAvMyBoB,IAUvC,IAVwC,KAC5CqT,EAAI,KACJrU,EAAI,cACJ2V,EAAa,eACbJ,EAAc,QACdd,EAAO,cACPL,EAAa,QACbW,EAAO,YACPI,EAAW,eACXH,GACDhU,EACC,MAAM,aACJ4U,EAAY,iBACZC,EAAgB,qBAChBC,EAAoB,sBACpBC,IACE1U,EAAAA,EAAAA,OAGFX,GAAIsV,EAAM,UACVC,EAAS,YACTC,EAAW,OACXC,GACE9B,GAAQ,CAAC,GACL3T,GAAIX,EAAQkW,UAAWG,GAAkBpW,GAAQ,CAAC,EACpDsB,GAAOC,EAAAA,EAAAA,MAEN8U,EAAyBC,IAA8B7I,EAAAA,EAAAA,KAAUgH,IAExEhS,EAAAA,EAAAA,KAAU,KACR6T,GAA4B7B,EAAQ,GACnC,CAACA,KAEJhS,EAAAA,EAAAA,KAAU,KACHuT,GACLJ,EAAa,CAAEI,UAAS,GACvB,CAACA,IAEJ,MAAMO,EAAc5V,QAAQoU,GAAWA,IAAYyB,EAAAA,IAE7CC,GAAkB7U,EAAAA,EAAAA,KAAQ,KAC9B,MAAMoH,EAASiN,GAAWzT,QAAQkU,GAAMA,EAAEtW,WAE1C,OAAO4I,GAAQzE,OAASyE,OAASvI,CAAS,GACzC,CAACwV,IAEEU,GAAsB/U,EAAAA,EAAAA,KAAQ,KAClC,MAAMoH,EAAUqL,OAAkD5T,EAA3C2V,GAAe5T,QAAQkU,GAAMA,EAAEtW,WAEtD,OAAO4I,GAAQzE,OAASyE,OAASvI,CAAS,GACzC,CAAC2V,EAAe/B,IAEbuC,GAAOhV,EAAAA,EAAAA,KAAQ,KACnB,GAAK5B,EAIL,OAAOuW,GACHM,EAAAA,EAAAA,IAAa7W,EAAKU,GAAIiW,IAAsB,GAAGG,SAAU/B,IACzDgC,EAAAA,EAAAA,IAAY/W,IAASgV,CAAc,GACtC,CAAChV,EAAMuW,EAAaI,EAAqB5B,EAASC,IAE/CgC,GAA2B1Q,EAAAA,EAAAA,IAAgB,KAC/CgQ,GAA4BnS,IAC1B,MAAM8S,GAA8B9S,EAcpC,OAZA2P,GAAa,KACPyC,EACFR,EAAsB,CACpBhW,OAAQA,EACRgV,QAASA,EACTN,SAAUwC,IAGZnB,EAAqB,CAAE/V,OAAQA,EAAS0U,SAAUwC,GACpD,IAGKA,CAA0B,GACjC,IAGJ,IAAKjX,GAAQA,EAAKkX,cAAiBf,IAAWR,EAC5C,OAGF,SAASwB,EAAK1T,EAAc2T,IAC1BC,EAAAA,EAAAA,IAAoB5T,GACpBoS,EAAiB,CAAErK,QAAU,GAAE4L,gBACjC,CAEA,MAAME,EAAkBpB,IAAeqB,EAAAA,EAAAA,IAA0BnD,EAAe8B,GAEhF,SAASsB,EAAgBC,EAA6BC,GACpD,MAAOC,KAAiBC,GAAkBH,EAEpCI,EAAgBD,EAAerT,OAChCjD,EAAK,eAAgB,eACrBwW,MAAM,KACNxV,KAAKyV,GACU,cAANA,EACN9U,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACG2U,EAAetV,KAAI,CAAAC,EAAqB6H,KAAQ,IAA1B0M,SAAUkB,GAAMzV,EACrC,MAAM0V,EAAaP,EAAU,GAAEQ,EAAAA,MAAkBF,IAAU,IAAGA,IAC9D,OACE/U,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACGmH,EAAM,EAAI,KAAO,GAClBnH,EAAAA,GAAAA,cAAA,KACEK,IAAK0U,EACLG,KAAO,GAAED,EAAAA,MAAkBF,IAC3B7U,QAAUuN,KACR0H,EAAAA,EAAAA,GAAU1H,GACVyG,EAAKc,EAAY3W,EAAKoW,EAAS,OAAS,YAAY,EAEtDzW,UAAU,kCAER,IAAG+W,KAEN,KAIPD,SAENtX,EAEEqW,EAAWY,EAAU,QAAOC,EAAab,WAAaa,EAAab,SACnEmB,EAAaP,EAAU,GAAEQ,EAAAA,MAAkBP,EAAab,WAAc,IAAGa,EAAab,WAE5F,OACE7T,EAAAA,GAAAA,cAACoV,EAAAA,EAAQ,CACPC,KAAMZ,EAAS,OAAS,UACxBa,WAAS,EACTC,QAAM,EACN/F,QAAM,EAENtP,QAASA,IAAMgU,EAAKc,EAAY3W,EAAKoW,EAAS,OAAS,cAEvDzU,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,QAAQyD,IAAI,QAAQoS,GACpC7T,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,YACb4W,GAAiB5U,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,mBAAmB4W,GACpDvW,EAAKoW,EAAS,OAAS,aAIhC,CAEA,OACEzU,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,aACZqW,GAAmB3W,QAAQ2W,EAAgB/S,SAE1CtB,EAAAA,GAAAA,cAACoV,EAAAA,EAAQ,CAACC,KAAK,QAAQC,WAAS,EAACC,QAAM,EAAC/F,QAAM,EAACtP,QAASA,IAAMgU,EAAKG,EAAiBhW,EAAK,WACvF2B,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,QAAQyD,IAAI,QAAQ4S,GACpCrU,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,YAAYK,EAAK,WAGpCmV,GAAmBe,EAAgBf,GACnCtB,GAAexU,QAAQwU,EAAY5Q,SAClCtB,EAAAA,GAAAA,cAACoV,EAAAA,EAAQ,CACPC,KAAK,OACLC,WAAS,EACTC,QAAM,EACNC,UAAQ,GAERxV,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,mCAAmCyD,IAAI,SACpDyN,EAAAA,EAAAA,GAAWgD,EAAa,CAAC,KAAM,QAAS,WAE3ClS,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,YAAYK,EAAK0U,EAAS,UAAY,UAGzDW,IAAwBJ,GAAeiB,EAAgBb,GAAqB,KACzEA,GAAuBpB,GAAmBgB,IAAgBK,GAC5D3T,EAAAA,GAAAA,cAACoV,EAAAA,EAAQ,CACPC,KAAK,OACLC,WAAS,EACTC,QAAM,EACN/F,QAAM,EAENtP,QAASA,IAAMgU,EAAKP,EAAMtV,EAAK,uBAE/B2B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,SAAS2V,GACxB3T,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,YAAYK,EAAK,wBAGnCqU,GACA1S,EAAAA,GAAAA,cAACoV,EAAAA,EAAQ,CAACC,KAAK,SAAS7F,QAAM,EAACtP,QAAS6T,GACtC/T,EAAAA,GAAAA,cAAA,YAAO3B,EAAK,kBACZ2B,EAAAA,GAAAA,cAACyV,EAAAA,EAAQ,CACPhY,GAAG,sBACHiY,MAAO3C,EAAS,4BAA8B,4BAC9C4C,QAASvC,EACTwC,UAAQ,KAIV,I,wICnNV,MA8KA,GAAelZ,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA2B,IAAzB,KAAEvC,GAAMuC,EACf,MAAMuW,GAAgBxE,EAAAA,EAAAA,IAAStU,EAAKU,IAC9BqY,GAAiBC,EAAAA,EAAAA,IAAqBnZ,EAAQG,EAAKU,IACnD2T,EAAOyE,IAAiBvE,EAAAA,EAAAA,IAAW1U,GAAQoZ,EAAAA,EAAAA,IAAqBjZ,IAChEkZ,EAAQ7E,IAAQ8E,EAAAA,EAAAA,IAAU9E,KAAUrU,EAAKoZ,UACzCC,EAAmBP,IAAkBC,IAAmBG,EACxDI,EAAcR,GAChBS,EAAAA,EAAAA,KAAuBhF,EAAAA,EAAAA,IAAW1U,GAAQoZ,EAAAA,EAAAA,IAAqBjZ,UAC/DS,EAEJ,MAAO,CACLqY,gBACAC,iBACAG,QACAM,WAAWhE,EAAAA,EAAAA,IAAcxV,GACzByZ,cAAcC,EAAAA,EAAAA,IAAiB1Z,GAC/B2Z,cAAcC,EAAAA,EAAAA,IAAiB5Z,GAC/B6Z,cAAeha,EAAOga,cACtBR,kBACAC,cACD,GArBe1Z,EA9K+BoB,IAc7C,IAd8C,OAClD8Y,EAAM,KACN9Z,EAAI,UACJwZ,EAAS,cACTV,EAAa,eACbC,EAAc,MACdG,EAAK,aACLO,EAAY,aACZE,EAAY,cACZE,EAAa,gBACbR,EAAe,YACfC,EAAW,QACXS,EAAO,oBACPC,GACDhZ,EACC,MAAM,aACJiZ,EAAY,cACZC,EAAa,cACbC,EAAa,eACbC,EAAc,aACdC,IACEhZ,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KACP+Y,GAAYC,EAAAA,EAAAA,GAAajZ,EAAMtB,GAE/Bwa,GAAqB/Y,EAAAA,EAAAA,KAAY,KACrCyY,EAAc,CAAEna,OAAQC,EAAKU,GAAI+Z,oBAAoB,IAErDV,GAAS,GACR,CAACG,EAAela,EAAKU,GAAIqZ,IAEtBW,GAAsBjZ,EAAAA,EAAAA,KAAY,KACtCyY,EAAc,CAAEna,OAAQC,EAAKU,GAAI+Z,oBAAoB,IACrDJ,EAAa,CAAEM,UAAW3a,EAAKU,GAAIka,WAAY5a,EAAK4a,aAEpDb,GAAS,GACR,CAACG,EAAela,EAAKU,GAAIV,EAAK4a,WAAYP,EAAcN,IAErDc,GAAmBpZ,EAAAA,EAAAA,KAAY,KAC/BqX,EACFoB,EAAc,CAAEna,OAAQC,EAAKU,GAAI+Z,oBAAoB,IAC5ChB,GACTW,EAAe,CAAEra,OAAQC,EAAKU,GAAIsV,OAAQ6D,IAC1CK,EAAc,CAAEna,OAAQC,EAAKU,GAAI+Z,oBAAoB,MAC3CjB,IAAaG,GAAkB3Z,EAAK8a,WAEpCtB,GAAaG,IAAiB3Z,EAAK8a,WAC7CX,EAAc,CAAEpa,OAAQC,EAAKU,KAF7BuZ,EAAa,CAAEla,OAAQC,EAAKU,KAI9BqZ,GAAS,GACR,CACDjB,EACAW,EACAD,EACAG,EACAE,EACA7Z,EAAK8a,UACL9a,EAAKU,GACLqZ,EACAG,EACAE,EACAH,EACAE,IAGIY,GAAkBtZ,EAAAA,EAAAA,KAAY,KAC9B+X,GAAaG,GACfM,EAAa,CAAEla,OAAQC,EAAKU,KAC5BqZ,KAEAc,GACF,GACC,CAAC7a,EAAKU,GAAIma,EAAkBrB,EAAWG,EAAcM,EAAcF,IA8DtE,OACE9W,EAAAA,GAAAA,cAAC+X,EAAAA,EAAK,CACJlB,OAAQA,EACR7Y,UAAU,kBACVga,OA9DAhY,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,eAAeyD,IAAKpD,EAAKqD,MAAQ,WAAQlE,GACtDwC,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLmD,KAAK,OACLpD,KAAMpD,EACNkb,gBAAiBnC,IAEnB9V,EAAAA,GAAAA,cAAA,MAAIhC,UAAU,eAAeK,EAM7BkY,IAAcxZ,EAAK8a,UACd,eAGLtB,GAAaxZ,EAAK8a,UACb,gBAGLrB,GAAgBE,EACX,mBAGF,oBAuCLI,QAASA,EACTC,oBAAqBA,GApCnBR,GAAaxZ,EAAK8a,UAElB7X,EAAAA,GAAAA,cAAA,UACGkP,EAAAA,EAAAA,GAAW7Q,EAAK,2CAA4CgZ,GAAY,CAAC,kBAAmB,WAK9Fd,IAAcxZ,EAAK8a,WAAcrB,GAAgBE,EAC7C1W,EAAAA,GAAAA,cAAA,UAAIkP,EAAAA,EAAAA,GAAW7Q,EAAK,4BAA6BgZ,GAAY,CAAC,kBAAmB,WAGnFrX,EAAAA,GAAAA,cAAA,UAAIkP,EAAAA,EAAAA,GAAW7Q,EAAK,kCAAmCgY,GAAc,CAAC,kBAAmB,WA2B9FrW,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,yBACZiY,GACCjW,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACmP,MAAM,SAASzR,UAAU,wBAAwBka,QAAM,EAAChY,QAASuX,GACtEpZ,EAAK,kBAGT+X,GACCpW,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACmP,MAAM,SAASzR,UAAU,wBAAwBka,QAAM,EAAChY,QAASqX,GACtElB,GAAcnH,EAAAA,EAAAA,GAAW7Q,EAAK,6BAA8BgY,IAAgBhY,EAAK,kBAGpFwX,GAAiB9Y,EAAK8a,WACtB7X,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACmP,MAAM,SAASzR,UAAU,wBAAwBka,QAAM,EAAChY,QAAS0X,GACtEvZ,EAAK,iBAGV2B,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmP,MAAM,SACNzR,UAAU,wBACVka,QAAM,EACNhY,QAAS2V,EAAgB+B,EAAmBE,GAE3CzZ,EA7CHkY,IAAcxZ,EAAK8a,UACd,eAELtB,GAAaxZ,EAAK8a,UACb,oBAGLrB,GAAgBE,EACX,mBAGFN,EAAkB,gCAAkC,WAoCvDpW,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACtC,UAAU,wBAAwBka,QAAM,EAAChY,QAAS4W,GAAUzY,EAAK,YAErE,I,6JCtKZ,MAoHA,GAAe3B,EAAAA,EAAAA,KAlHgBqB,IAiBzB,IAjB0B,QAC9BwK,EAAO,oBACP4P,EAAmB,QACnBC,EAAO,YACPC,EAAW,sBACXC,EAAqB,eACrB7P,EAAc,SACd8P,EAAQ,SACRC,EAAQ,UACRxa,EAAS,OACTya,EAAM,WACN3P,EAAU,aACVD,EAAY,eACZY,EAAc,aACdiP,EAAY,YACZhP,EAAW,cACXX,GACDhL,EACC,MAAM4a,GAAWva,EAAAA,EAAAA,MAGX+J,GAAMzH,EAAAA,EAAAA,IAAuB,MAE7BkY,EAAWrQ,EAAQuB,QAAQ8O,UAC3B,SAAEpK,EAAQ,KAAEjL,EAAI,UAAEsV,GAAcD,EAChCE,GAAYC,EAAAA,EAAAA,IAAqBH,IAAa,GAE9CI,GAAiBC,EAAAA,EAAAA,IAAkB9Q,EAAKgQ,IACvCe,EAAgBC,IAAmBrY,EAAAA,EAAAA,MAC1CtB,EAAAA,EAAAA,KAAU,KACJwZ,GACFG,GACF,GACC,CAACH,EAAgBG,IAGpB,MAAOC,EAAeC,IAAoB7O,EAAAA,EAAAA,IACxC6N,KAAiBC,GAAyB/U,GAvCzB,QAuCiC+U,IAG9CgB,EAAiB5b,QAAQqL,GAAkBqQ,GAAiBF,GAE5DK,GAAe5O,EAAAA,EAAAA,IAAoBpC,EAAS,aAC1CwC,aAAcC,EAAgB,UAAEH,IAAcI,EAAAA,EAAAA,GACpDsO,GAAeD,GAAgBxO,EAAAA,EAAAA,IAAsBvC,EAAS,iBAAa/K,GAAW,GAElFI,EAAWF,QAAQmN,IAEnB,YACJiC,EAAW,eAAEC,EAAc,iBAAEC,IAC3BC,EAAAA,EAAAA,IAAsB1E,EAASE,GAAkBuC,EAAkBsO,IAAmB1b,GAEpF4b,GAAaC,EAAAA,EAAAA,IAAsBb,GACnC5W,EAAewX,GAAaE,EAAAA,EAAAA,IAA4BnR,QAAW/K,EACnEmc,EAAeH,EAAaZ,EAASxW,oBAAiB5E,EACtDoc,GAAcvX,EAAAA,EAAAA,IAASsI,EAAAA,EAAAA,IAAoBpC,EAAS,cAAeyQ,GAEnEa,EAAkBnB,GAAgBhb,QAAQkb,EAASkB,aACvDC,EAAAA,IAAAA,IAAkCnB,EAASoB,WAAaC,EAAAA,IAAAA,IAAkCrB,EAASoB,WAG/FE,GAAc7W,EAAAA,EAAAA,IAAgB,KAC9ByJ,EACErD,GACFA,IAKAV,EACF4P,EAAShP,2BAA2B,CAAEpB,YAIpCwE,EACFsM,GAAiB,GAIfQ,EACFnB,IAEAC,EAAS/O,qBAAqB,CAAErB,WAClC,IAGI4F,IAAkB9K,EAAAA,EAAAA,IAAgB,KACtCqG,EAAanB,EAAQ9K,GAAI8K,EAAQzL,OAAO,IAG1C,OACEkD,EAAAA,GAAAA,cAACma,EAAAA,EAAI,CACHhS,IAAKA,EACLiS,KAAM5L,EACNsK,UAAWA,EACXvV,KAAMA,EACNsV,UAAWN,EAAWC,GAAYK,OAAYrb,EAC9C6c,iBAAkBrY,EAClB4X,YAAaD,GAAgBC,EAC7BxB,QAASA,EACTrL,eAAgBA,EAChBD,YAAaA,EACbE,iBAAkBA,EAClBhP,UAAWA,EACXya,OAAQA,EACR5P,aAAcA,EACdC,WAAYA,EACZwR,WAAYT,GAAmBU,EAAAA,EAAAA,IAAuBhS,GAAW,YAAc,WAAc,gBAC7FrI,QAASga,EACTxQ,YAAaA,EAAcyE,QAAkB3Q,GAC7C,G,mFCjJN,MAUA,EAVmCO,IAA4B,IAA3B,QAAE+L,EAAO,UAAE9L,GAAWD,EACxD,MAAMM,GAAOC,EAAAA,EAAAA,KACb,OACE0B,EAAAA,GAAAA,cAAA,QAAMhC,WAAWiC,EAAAA,EAAAA,GAAe,eAAgBjC,GAAYyD,IAAKpD,EAAKqD,MAAQ,MAAQ,SACnFwN,EAAAA,EAAAA,GAAWpF,GACZ9J,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,aACX,C,4LCsBX,MAgIA,GAAetB,EAAAA,EAAAA,KAhIYqB,IAmBrB,IAnBsB,IAC1BoK,EAAG,KACHiS,EAAI,KACJ7W,EAAI,UACJuV,EAAY,GAAE,UACdD,EAAS,OACTJ,EAAM,iBACN4B,EAAgB,YAChBT,EAAW,UACX5b,EAAS,QACToa,EAAO,eACPrL,EAAc,YACdD,EAAW,aACXjE,EAAY,WACZC,EAAU,iBACVkE,EAAgB,WAChBsN,EAAU,QACVpa,EAAO,YACPwJ,GACD3L,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAIkc,GAAa9Z,EAAAA,EAAAA,IAAuB,MACpCyH,IACFqS,EAAarS,GAGf,MAAM,SAAET,IAAa2C,EAAAA,EAAAA,OACdoQ,IAAajQ,EAAAA,EAAAA,KAAUoP,GACxBc,EAAUhd,QAAQkc,GAClBe,GAAWC,EAAAA,EAAAA,GAAcP,EAAkBK,EAAShT,IAAamT,EAAAA,IACjEC,GAAkB7X,EAAAA,EAAAA,IAAoByX,IAG1Chb,aAAcqb,EACdpb,qBAAsBwN,IACpBvN,EAAAA,EAAAA,GAAkBmN,OAAgBvP,GAAW,GAE3CiS,GAAQuL,EAAAA,EAAAA,IAAsBlC,GAC9BmC,GAAa/K,EAAAA,EAAAA,IAAkB3M,GAC/B2X,GAAWvc,EAAAA,EAAAA,KAAQ,IAClBoO,GAAmBC,EAChB,IAAEkD,EAAAA,EAAAA,IAAkB3M,EAAOyJ,QAAuBiO,IADTA,GAEhD,CAAClO,EAAgBxJ,EAAM0X,EAAYjO,KAEhC,MAAE1I,EAAK,OAAEC,IAAW4W,EAAAA,EAAAA,IAA+B/C,GAEnDvJ,GAAgB5O,EAAAA,EAAAA,GACpB,OACAjC,EACAoa,GAAW,UACXlY,IAAY4M,GAAe,cAC3BhE,GAAc,oBAGhB,OACE9I,EAAAA,GAAAA,cAAA,OAAKmI,IAAKqS,EAAYxc,UAAW6Q,EAAepN,IAAKpD,EAAKqD,MAAQ,WAAQlE,GACvEqL,GACC7I,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,0BACZ8K,GAAc9I,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,sBAGhCgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,sBAAsBkC,QAAS4M,OAActP,EAAY0C,GACrEma,GAAoBT,EACnB5Z,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,4BACbgC,EAAAA,GAAAA,cAAA,OACE0D,IAAKkW,EACL5b,UAAU,aACVsG,MAAOA,EACPC,OAAQA,EACR6W,IAAI,KAELX,GACCza,EAAAA,GAAAA,cAAA,UACEmI,IAAKwS,EACL3c,WAAWiC,EAAAA,EAAAA,GAAe,YAAa6a,MAK7C9a,EAAAA,GAAAA,cAAA,OAAKhC,UAAY,aAAYyR,KAC1BqJ,EAAUxX,QAAU,GACnBtB,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,WAAWyD,IAAI,QAAQqX,IAI5CiC,GACC/a,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,gBAAiBwP,EAAOtC,IACrDnN,EAAAA,GAAAA,cAAC6P,EAAAA,EAAe,CACd3L,SAAU8I,EACVzJ,KAAM6U,EAAU,IAAM,IACtBlY,QAAS4M,EAAc5M,OAAU1C,KAItC0C,GACCF,EAAAA,GAAAA,cAAA,KACEhC,WAAWiC,EAAAA,EAAAA,GACT,cACA,OACAqa,GAAc,gBACdS,GAAuB,aAK/B/a,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,aACbgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,aAAayD,IAAI,OAAO8M,MAAO6L,IAAOlL,EAAAA,EAAAA,GAAWkL,IAChEpa,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,gBAAgByD,IAAI,QACjCzB,EAAAA,GAAAA,cAAA,YACGkb,GAEFzC,GAAUzY,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,gBAAekR,EAAAA,EAAAA,GAAWuJ,KACnDA,GAAU/a,QAAQmb,IAClB7Y,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,WAChBgC,EAAAA,GAAAA,cAACmP,EAAAA,EAAI,CAACjP,QAASwJ,IAAcyG,EAAAA,EAAAA,IAAoB9R,EAAkB,IAAZwa,GAAkB,OAKhFJ,GAAU/a,QAAQmb,IACjB7Y,EAAAA,GAAAA,cAACmP,EAAAA,EAAI,CAACjP,QAASwJ,IAAc0F,EAAAA,EAAAA,IAAoB/Q,EAAkB,IAAZwa,IAErD,G,0MCtIV,MAAMwC,EAAkB,IAAMC,EAAAA,GA8L9B,GAAe5e,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAuC,IAArC,OAAExC,EAAM,SAAE8U,GAAUtS,EAC3B,MAAMvC,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAC1Bye,EAAa3J,GAAW4J,EAAAA,EAAAA,IAAiB5e,EAAQE,EAAQ8U,QAAYpU,EACrEie,EAAc1e,GAAO2e,EAAAA,EAAAA,IAAsB9e,EAAQG,QAAQS,EAC3Dme,EAAoBje,SAAQke,EAAAA,EAAAA,IAAmBhf,EAAQE,IACvD+e,EAAQjK,EAAW7U,GAAM+e,SAASlK,QAAYpU,EAGpD,MAAO,CACLT,OACAwe,aACAE,cACAI,QACAF,oBACAI,cARoBF,IAASG,EAAAA,EAAAA,IAA0Bpf,EAAQE,EAAQ8U,GASxE,GAhBejV,EA/J6BoB,IAqB3C,IArB4C,aAChDke,EAAY,UACZje,EAAS,WACTke,EAAa,SAAQ,SACrBC,EAAQ,OACRC,EAAM,SACNC,EAAQ,gBACRxC,EAAe,aACfyC,EAAY,aACZC,EAAY,mBACZC,EAAkB,aAClBC,EAAY,WACZlB,EAAU,MACVmB,EAAK,KACL3f,EAAI,YACJ0e,EAAW,kBACXE,EAAiB,MACjBE,EAAK,cACLE,EAAa,iBACbY,EAAgB,QAChBzc,GACDnC,EACC,MAAM,aACJ6e,EAAY,gBACZC,EAAe,kBACfC,IACE1e,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPoY,EAAe3Z,IAAQ4Z,EAAAA,EAAAA,IAAiB5Z,GACxCggB,EAAUrf,QAAQX,GAAMwU,SAAWgK,GAAcM,IAC/Cpe,GAAIX,EAAM,MAAEkgB,EAAK,aAAE/I,GAAiBlX,GAAQ,CAAC,GAErDyC,EAAAA,EAAAA,KAAU,KACJ1C,IAAWkgB,IACTT,GAAcK,EAAa,CAAE9f,WAC7B+c,GAAiBiD,EAAkB,CAAEG,UAAWngB,IACtD,GACC,CAACA,EAAQkgB,EAAOT,EAAcK,EAAcE,EAAmBpG,EAAcmD,IAEhF,MAAMqD,GAAyB7Z,EAAAA,EAAAA,IAC7B,CAACoK,EAAiD0P,KAC5CpgB,GAAQogB,IACV1P,EAAEM,kBACF8O,EAAgB,CACdO,cAAergB,EAAKU,GACpB4f,QAAS,EACT3U,OAAuB,UAAfwT,EAAyBoB,EAAAA,GAAAA,cAAkCA,EAAAA,GAAAA,qBAEvE,IAIE5I,GAAe/V,EAAAA,EAAAA,KAAQ,IAAM5B,GAAQuf,IAAgBiB,EAAAA,EAAAA,IAAgBxgB,IAAO,CAACA,EAAMuf,IAEzF,GAAKvf,EAqDL,OACEiD,EAAAA,GAAAA,cAAA,OACEhC,WACEiC,EAAAA,EAAAA,GAAe,WAAYjC,GAE7ByD,KAAMib,GAASre,EAAKqD,MAAQ,WAAQlE,EACpC0C,QAASA,IAEPic,IAAaY,GACb/c,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLC,IAAKtD,EAAKU,GACV8F,KAAM2Y,EACN/b,KAAMpD,EACNmD,QAAS2Z,EAAkBqD,OAAyB1f,IAGvDuf,GACC/c,EAAAA,GAAAA,cAACwd,EAAAA,EAAS,CACR3B,MAAOA,EACP7d,UAAU,oBACVuF,KAAM8X,IAGVrb,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,QACZ6d,EACG7b,EAAAA,GAAAA,cAAA,MAAIyB,IAAI,OAAOzD,UAAU,aAAYkR,EAAAA,EAAAA,GAAW2M,EAAMtN,QACtDvO,EAAAA,GAAAA,cAACyd,EAAAA,EAAa,CAACtd,KAAMpD,KACvB4f,GA5ER,WACE,GAAIP,EACF,OAAOC,EACLrc,EAAAA,GAAAA,cAAC0d,EAAAA,EAAY,CAAC1f,UAAU,SAAS8L,QAASsS,IAE1Cpc,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,SAASyD,IAAI,QAAQ2a,GAIzC,GAAII,IAAuBb,IAAsB1H,EAC/C,OACEjU,EAAAA,GAAAA,cAAC0d,EAAAA,EAAY,CAAC1f,UAAU,SAAS8L,QAASzL,EAAK,cAInD,IAAKtB,EACH,OAGF,GAAIkf,EACF,OAAOjc,EAAAA,GAAAA,cAAC2d,EAAAA,EAAY,CAAC1B,aAAcA,IAGrC,GAAIc,EACF,OACE/c,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,SAASyD,IAAI,QAC1Bsa,EAAgB1d,EAAK,WAAY0d,EAAe,MAAO7M,EAAAA,EAAAA,GAAWnS,EAAKwR,QAK9E,GAAIkO,EACF,OACEzc,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,SAASyD,IAAI,QAAQpD,GAAKuf,EAAAA,EAAAA,IAAkB7gB,KAIhE,MAAM8gB,EA6CV,SAAwBxf,EAActB,GACpC,MAAM+gB,EAAiBzf,GAAKuf,EAAAA,EAAAA,IAAkB7gB,KACxC,aAAEghB,GAAiBhhB,EAEzB,OAAIA,EAAKkX,aACmB,YAAnB6J,EAA+B,0BAA4B,wBAG/DC,EAKD1f,EADsB,YAAnByf,EACE,cACA,UADeC,EAAc,KAJ7BD,CAMX,CA5DwBE,CAAe3f,EAAMtB,GACnCkhB,EAAexC,EAAe,KAAIpd,EAAK,cAAeod,EAAa,YAASje,EAElF,OACEwC,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,UACb0W,GAAgB1U,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,UAAU0W,GAC3C1U,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,gBAAgB6f,GAC/BI,GAAgBje,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,iBAAiBigB,GAGxD,CA6B4BC,IAEpB,I,gFC1LV,MAYA,GAAexhB,EAAAA,EAAAA,KAZuBqB,IAAiC,IAAhC,QAAEwK,EAAO,eAAE4V,GAAgBpgB,EAChE,MAAMM,GAAOC,EAAAA,EAAAA,KACb,OACE0B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,mBACZmgB,GACCne,EAAAA,GAAAA,cAACoe,EAAAA,EAAqB,CAAChC,OAAQ+B,IAEjCne,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,SAAQoR,EAAAA,EAAAA,IAAoB/Q,EAAqB,IAAfkK,EAAQI,OACtD,G,2JCUV,MA6DA,GAAejM,EAAAA,EAAAA,KA7DaqB,IAMtB,IANuB,QAC3BwK,EAAO,SACP8V,EAAW,eAAc,YACzBC,EAAW,oBACXnG,EAAmB,QACnBjY,GACDnC,EAEC,MAAMoK,GAAMzH,EAAAA,EAAAA,IAAuB,MAE7BsY,GAAiBC,EAAAA,EAAAA,IAAkB9Q,EAAKgQ,GACxCnW,GAAe0X,EAAAA,EAAAA,IAA4BnR,GAC3CgW,GAAelc,EAAAA,EAAAA,IAASsI,EAAAA,EAAAA,IAAoBpC,EAAS,cAAeyQ,GACpErZ,GAAuBsD,EAAAA,EAAAA,GAAmBsb,GAE1CtU,GAAQuU,EAAAA,EAAAA,IAAgBjW,GAExBkW,GAAaC,EAAAA,EAAAA,IAAoBnW,IAChCoW,EAAe,CAAGC,IAAe9d,EAAAA,EAAAA,GAAQ2d,GAE1CvE,GAAc7W,EAAAA,EAAAA,IAAgB,KAClCub,IACA1e,EAASqI,EAAQ9K,GAAI8K,EAAQzL,OAAO,IAGtC,OACEkD,EAAAA,GAAAA,cAAA,OACEmI,IAAKA,EACL1K,GAAK,GAAE4gB,KAAWQ,EAAAA,EAAAA,IAAiBtW,EAAQ9K,MAC3CO,UAAU,oBACVkC,QAASA,EAAUga,OAAc1c,GAEjCwC,EAAAA,GAAAA,cAAA,OACE0D,IAAK1B,EACLhE,UAAU,kBACVod,IAAI,GACJ9K,WAAYgO,EACZQ,SAAS,QACTC,cAAeT,EAAcnJ,EAAAA,OAAY3X,IAE3CwC,EAAAA,GAAAA,cAAA,OACE0D,IAAK6a,EACLvgB,WAAWiC,EAAAA,EAAAA,GAAe,aAAc,kBAAmBN,GAC3Dyb,IAAI,GACJ9K,WAAYgO,EACZQ,SAAS,QACTC,cAAeT,EAAcnJ,EAAAA,OAAY3X,IAE1CihB,GACCze,EAAAA,GAAAA,cAACgf,EAAAA,EAAY,CACXhd,aAAcuc,GAAgBvc,EAC9Bid,UAAWN,EACX3gB,UAAU,kBAGbiM,GAASjK,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,kBAAkBiM,EAAMiV,MAAQ,OAAQ7P,EAAAA,EAAAA,IAAoBpF,EAAM0B,WAC3F2S,GAAete,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,cAC5B,G,8FC3FV,MCiEA,GAAetB,EAAAA,EAAAA,KA1CoBqB,IAO7B,IAP8B,UAClCkhB,EAAS,cACTE,EAAa,aACbnd,EAAY,UACZhE,EAAS,MACTsG,EAAK,OACLC,GACDxG,EAEC,MAAMoK,GAAMzH,EAAAA,EAAAA,IAAuB,OAE7B,aAAEhB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAC7Cqf,OAAWzhB,GAAW,GAAM2hB,QAAwB3hB,OAAWA,EAdxC,KAgBnB4O,GAAYwO,EAAAA,EAAAA,GAAc5Y,GAAetC,OAAclC,EAjB3C,GAiBmE8G,EAAOC,GAEtF2V,GAAc7W,EAAAA,EAAAA,IAAiBoK,IACnC,IAAKtF,EAAIjH,QAAS,OAClB,MAAMke,EAAO3R,EAAE4R,cAAc1R,wBACvB1I,EAAIwI,EAAEG,QAAUwR,EAAK1R,KACrBxI,EAAIuI,EAAE6R,QAAUF,EAAKG,IACrBC,EAASva,EAAKma,EAAK9a,MAAQ,EAC3Bmb,EAASva,EAAKka,EAAK7a,OAAS,EAClC4D,EAAIjH,QAAQwe,aAAa,QAAU,oBAAmBF,yBAA8BC,MAAW,IAGjG,GAAK/f,EAIL,OACEM,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GDvDM,uBCuDsBN,EAAsB3B,EAAWmhB,GDvDwB,wBCwDhGhX,IAAKA,EACLjI,QAASif,EAAgBjF,OAAc1c,GAEvCwC,EAAAA,GAAAA,cAAA,UAAQmI,IAAKiE,EAAWpO,UD3D6M,uBC2DnLsG,MAAOA,EAAOC,OAAQA,IACxEvE,EAAAA,GAAAA,cAAA,OAAKhC,UD5DgM,yBC6DjM,G,2DCjDL2hB,EAAI,SAAJA,GAAI,OAAJA,EAAAA,EAAI,mBAAJA,EAAAA,EAAI,qBAAJA,EAAAA,EAAI,yBAAJA,EAAAA,EAAI,eAAJA,CAAI,EAAJA,GAAI,IAIT,MAcA,GAAejjB,EAAAA,EAAAA,KAd6BqB,IAAgB,IAAf,OAAEqe,GAAQre,EACrD,OACEiC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,yBACbgC,EAAAA,GAAAA,cAAC4f,EAAAA,EAAU,CAACxF,KAAK,SAASyF,UAAWF,EAAKvD,IAC5B,WAAXA,EACCpc,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,iCACbgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,8BAEbgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAY,qBAAoBoe,OAErC,G,8FCZV,MAAM0D,EAAe,iBAcrB,GAAepjB,EAAAA,EAAAA,KAZoBqB,IAA0C,IAAzC,KAAEyC,EAAOsf,EAAY,YAAE5N,GAAanU,EACtE,MAAMM,GAAOC,EAAAA,EAAAA,MACP,qBAAEqB,IAAyBC,EAAAA,EAAAA,IAAkB,GAEnD,OACEI,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,eAAgBN,EAAsBuS,GAAe,qBACjF1R,EACA0R,GAAelS,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,gBAAekR,EAAAA,EAAAA,GAAW7Q,EAAK6T,GAAc,CAAC,QACvE,G,gJCUV,MA+HA,GAAexV,EAAAA,EAAAA,KA/HoBqB,IAgB7B,IAhB8B,UAClCgiB,GAAY,EAAK,kBACjBC,EAAiB,MACjBC,EAAK,KACLC,EAAI,YACJC,EAAc,WAAU,YACxBC,EAAc,OAAM,YACpBlO,EAAW,iBACXmO,EAAgB,iBAChBC,EAAgB,6BAChBC,GAA+B,EAAK,SACpCC,GAAW,EAAK,WAChBC,EAAU,2BACVC,EAA0B,cAC1BC,EAAa,SACbC,GACD7iB,EAEC,MAAM8iB,GAAWngB,EAAAA,EAAAA,IAAyB,MACpCrC,GAAOC,EAAAA,EAAAA,MAEP,SAAEoJ,IAAa2C,EAAAA,EAAAA,OACdyW,EAAUC,IAAevW,EAAAA,EAAAA,IAAS,KAClCwW,EAAWC,IAAgBzW,EAAAA,EAAAA,KAAS,GACrC0W,EAAsBxZ,EAAW,IAAM,IAgE7C,OA9DAlI,EAAAA,EAAAA,KAAU,KACJ8gB,GACFS,EAAY,GACd,GACC,CAACT,KAEJa,EAAAA,EAAAA,IAAW,KACJC,EAAAA,IACHP,EAAS3f,QAASmgB,OACpB,GACCH,IAEH1hB,EAAAA,EAAAA,KAAU,KACJygB,IACFqB,EAAAA,EAAAA,KAAgB,KACdT,EAAS3f,QAASmgB,QAClBR,EAAS3f,QAASqgB,QAAQ,GAE9B,GACC,CAACtB,IA4CFjgB,EAAAA,GAAAA,cAAA,QAAMwhB,OAAO,GAAGZ,SAAUA,EAzB5B,SAAsBa,GACpBA,EAAMC,iBAEF3B,GAIAiB,GACFJ,EAAUE,EAEd,EAesD3L,EAAAA,EAAWwM,aAAa,OAC1E3hB,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GAAe,6BAA8B6gB,GAAY,UAAWb,GAAS,SACxFxe,IAAKpD,EAAKqD,MAAQ,WAAQlE,GAEzB+iB,GAhBHvgB,EAAAA,GAAAA,cAAA,SACE4hB,KAAK,WACLnkB,GAAG,mBACHkkB,aAAa,MACb3jB,UAAU,kBACV6jB,UAAW,IAYX7hB,EAAAA,GAAAA,cAAA,SACEmI,IAAK0Y,EACL7iB,UAAU,eACV4jB,KAAM5B,EAAoB,OAAS,WACnCviB,GAAG,mBACH4I,MAAOya,GAAY,GACnBa,aAAcpB,EAA+B,gBAAkB,mBAC/DuB,SAvDR,SAA0BrU,GACpBwS,GACFQ,IAGF,MAAM,OAAEsB,GAAWtU,EACnBsT,EAAYgB,EAAO1b,OACnB4a,EAAac,EAAO1b,MAAM/E,QAAU0gB,EAAAA,KAChCrB,GACFA,EAAcoB,EAAO1b,MAEzB,EA6CQ4b,UAAW,IACXxgB,IAAI,SAENzB,EAAAA,GAAAA,cAAA,aAAQigB,GAASC,GAAQC,GACzBngB,EAAAA,GAAAA,cAAA,OACEhC,UAAU,6BACVkC,QAjDR,WACEwgB,GAA4BV,EAC9B,EAgDQkC,KAAK,SACLL,SAAU,EACVtT,MAAM,8BAENvO,EAAAA,GAAAA,cAAA,KAAGhC,WAAWiC,EAAAA,EAAAA,GAAe,OAAQ+f,EAAoB,WAAa,uBAGzE9N,GAAelS,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,eAAekU,GAC3C0O,IAAaI,GAAaX,IACzBrgB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACshB,KAAK,SAASpS,QAASgR,EAAUT,UAAWA,EAAWoC,UAAWnB,GACvEZ,GAGA,G,sNChHX,MAmKA,GAAe1jB,EAAAA,EAAAA,KA9JcqB,IAgBvB,IAhBwB,QAC5BqkB,EAAO,YACPC,EAAW,YACXC,EAAW,kBACXC,EAAiB,aACjBC,EAAY,cACZC,EAAa,UACb1C,EAAS,gBACT2C,EAAe,aACfC,EAAY,gBACZC,EAAe,UACfC,EAAS,oBACTC,EAAmB,eACnBC,EAAc,gBACdC,EAAe,WACfC,GACDllB,EAEC,MAAM8iB,GAAWngB,EAAAA,EAAAA,IAAyB,MACpCwiB,EAAiBb,EAAY/gB,OAtBd,IAwBrB9B,EAAAA,EAAAA,KAAU,KACHmjB,GACLQ,YAAW,MACT7B,EAAAA,EAAAA,KAAgB,KACdT,EAAS3f,QAASmgB,OAAO,GACzB,GA/Be,IAgCD,GACjB,CAACsB,IAEJ,MAAOS,EAAmBC,IAAuB1kB,EAAAA,EAAAA,KAAQ,KACvD,IAAKkkB,GAAWvhB,OAAQ,MAAO,CAACgiB,EAAAA,EAAkBjB,GAClD,MAAMkB,EAAclB,EAAY9iB,QAAQ9B,IAAQolB,EAAUW,SAAS/lB,KACnE,MAAO,CAAColB,EAAWU,EAAY,GAC9B,CAAClB,EAAaQ,IAEXY,GAAe9kB,EAAAA,EAAAA,KAAQ,IAAM,IAAIkE,IAAIggB,IAAY,CAACA,IAElDa,GAAgB/kB,EAAAA,EAAAA,KAAQ,IACrByjB,EAAQuB,MAAK,CAACC,EAAGC,KACtB,MAAMC,EAAYL,EAAazgB,IAAI4gB,GAC7BG,EAAYN,EAAazgB,IAAI6gB,GACnC,OAAIC,IAAcC,GACR,GAELD,GAAaC,EACT,EAEF,CAAC,KAET,CAAC3B,EAASqB,IAEPO,GAAkB3gB,EAAAA,EAAAA,IAAiB5F,IACvC,GAAIgmB,EAAazgB,IAAIvF,GAEnB,YADAulB,IAAkBvlB,GAIpB,MAAMwmB,EAAiB5B,EAAYjjB,QAC/B6kB,EAAeT,SAAS/lB,GAC1BwmB,EAAeC,OAAOD,EAAeE,QAAQ1mB,GAAK,GAElDwmB,EAAe1iB,KAAK9D,GAEtBqlB,IAAsBmB,GACtBlB,IAAiB,GAAG,IAGhBqB,GAAqB/gB,EAAAA,EAAAA,IAAiBoK,IAC1C,MAAM,MAAEpH,GAAUoH,EAAE4R,cACpB0D,IAAiB1c,EAAM,KAGlBge,EAAaC,IAAWC,EAAAA,EAAAA,GAAkBtB,EAAYS,EAAehmB,QAAQ4kB,IAE9EjkB,GAAOC,EAAAA,EAAAA,KAEb,OACE0B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,UACZ2kB,GACC3iB,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,8BAA8ByD,IAAKpD,EAAKqD,MAAQ,WAAQlE,GACpE4lB,EAAkB/jB,KAAI,CAAC5B,EAAI4D,IAC1BrB,EAAAA,GAAAA,cAACwkB,EAAAA,EAAkB,CACjBxT,aAAcvT,EACdgnB,YAAavB,GAAkB7hB,EAAIghB,EAAY/gB,OAtF7B,EAuFlBpB,QAAS8jB,EACTU,SAAUjnB,MAGb4lB,EAAoBhkB,KAAI,CAAC5B,EAAI4D,IAC5BrB,EAAAA,GAAAA,cAACwkB,EAAAA,EAAkB,CACjBxT,aAAcvT,EACdgnB,YACEvB,GAAkB7hB,EAAI+hB,EAAkB9hB,OAAS+gB,EAAY/gB,OA/F7C,EAiGlBqjB,UAAQ,EACRzkB,QAAS8jB,EACTU,SAAUjnB,MAGduC,EAAAA,GAAAA,cAAC4kB,EAAAA,EAAS,CACRnnB,GAAIglB,EACJta,IAAK0Y,EACLxa,MAAOic,EACPR,SAAUsC,EACVjE,YAAaoC,GAAqBlkB,EAAK,iBAK5CgmB,GAAa/iB,OACZtB,EAAAA,GAAAA,cAAC6kB,EAAAA,EAAc,CACb7mB,UAAU,4BACV8mB,MAAOT,EACPpB,WAAYqB,EACZ5B,gBAAiBA,GAEhB2B,EAAYhlB,KAAK5B,IAChB,MAAMsnB,EAAiBA,IAEnB/kB,EAAAA,GAAAA,cAACglB,EAAAA,EAAQ,CACPtP,MAAM,GACNyM,SAAUsB,EAAazgB,IAAIvF,GAC3BkY,QAAS0M,EAAYmB,SAAS/lB,GAC9B8C,MAAOqiB,IAIb,OACE5iB,EAAAA,GAAAA,cAACoV,EAAAA,EAAQ,CACP/U,IAAK5C,EACLO,WAAWiC,EAAAA,EAAAA,GAAe,uCAAwC2iB,GAAmB,aACrFT,SAAUsB,EAAazgB,IAAIvF,GAC3BwnB,mBAAoBvnB,QAAQslB,GAE5B9iB,QAASA,IAAM8jB,EAAgBvmB,GAC/B+R,QAAM,GAEJoT,OAAqCplB,EAAnBunB,KACnB1T,EAAAA,EAAAA,IAAS5T,GACRuC,EAAAA,GAAAA,cAACklB,EAAAA,EAAe,CAACnS,OAAQtV,IAEzBuC,EAAAA,GAAAA,cAACmlB,EAAAA,EAAa,CAACroB,OAAQW,IAExBmlB,EAAkBmC,SAAmBvnB,EAC7B,KAIduiB,IAAasE,GAAgBA,EAAY/iB,OAG5CtB,EAAAA,GAAAA,cAAColB,EAAAA,EAAO,MAFRplB,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,cAAcwkB,GAAgB,yBAIzC,G,+HC5KV,MAuEA,GAAe9lB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAmC,IAAjC,aAAE0R,GAAc1R,EACvB,OAAK0R,EAOE,CACLjU,KAJWiU,GAAehU,EAAAA,EAAAA,IAAWJ,EAAQoU,QAAgBxT,EAK7D4T,MAJWC,EAAAA,EAAAA,IAASL,IAAgBM,EAAAA,EAAAA,IAAW1U,EAAQoU,QAAgBxT,EAKvEoZ,cAAeha,EAAOga,eATf,CAAC,CAUT,GAbeja,EAvEkCoB,IAWhD,IAXiD,KACrDsX,EAAI,MACJ9G,EAAK,YACLkW,EAAW,SACXE,EAAQ,SACRD,EAAQ,KACR3nB,EAAI,KACJqU,EAAI,UACJpT,EAAS,cACT4Y,EAAa,QACb1W,GACDnC,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAI+mB,EACAC,EAEJ,GAAIjQ,GAAQ9G,EACV8W,EACErlB,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,aACbgC,EAAAA,GAAAA,cAAA,KAAGhC,WAAWiC,EAAAA,EAAAA,GAAe,OAAS,QAAOoV,QAIjDiQ,EAAY/W,OACP,GAAI6C,GAAQrU,EAAM,CACvBsoB,EACErlB,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLD,KAAMiR,GAAQrU,EACdwG,KAAK,QACL0U,gBAAiB7G,GAAM8B,SAI3B,MAAMkH,GAAQrd,GAASqU,IAASA,EAAK8B,QACjCoD,EAAAA,EAAAA,IAAuBlF,IACvBkG,EAAAA,EAAAA,GAAajZ,EAAMtB,EAAMA,EAAKU,KAAOmZ,GAEzC0O,EAAYlL,GAAOlL,EAAAA,EAAAA,GAAWkL,QAAQ5c,CACxC,CAEA,MAAMqR,GAAgB5O,EAAAA,EAAAA,GACpB,qBACAjC,EACAjB,GAAMwU,SAAW,eACjBkT,GAAe,YACfE,GAAY,aAGd,OACE3kB,EAAAA,GAAAA,cAAA,OACEhC,UAAW6Q,EACX3O,QAASA,IAAMA,EAAQwkB,GACvBnW,MAAOkW,EAAca,OAAY9nB,EACjCiE,IAAKpD,EAAKqD,MAAQ,WAAQlE,GAEzB6nB,GACCZ,GACAzkB,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,YAAYyD,IAAI,QAC5B6jB,GAGJX,GACC3kB,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,eACbgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,qBAGb,I,oLC/CV,MAwIA,GAAetB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAEyT,EAAM,cAAEL,GAAepT,EAChC,MAAM8R,GAAOE,EAAAA,EAAAA,IAAW1U,EAAQmW,GAKhC,MAAO,CACL3B,OACAmU,YANiBC,EAAAA,EAAAA,IAAiB5oB,EAAQmW,GAO1CkF,iBANuBvF,GAAiBtB,GAAQA,EAAK8B,OAOrDyI,kBANwBje,SAAQke,EAAAA,EAAAA,IAAmBhf,EAAQmW,IAO5D,GAZepW,EAxI+BoB,IAmB7C,IAnB8C,aAClDke,EAAY,WACZC,EAAa,SAAQ,OACrBE,EAAM,WACNqJ,EAAU,SACVpJ,EAAQ,gBACRxC,EAAe,aACfyC,EAAY,aACZC,EAAY,mBACZC,EAAkB,gBAClBkJ,EAAe,iBACf/I,EAAgB,cAChBgJ,EAAa,MACbjJ,EAAK,KACLtL,EAAI,WACJmU,EAAU,gBACVtN,EAAe,kBACf0D,EAAiB,YACjBiK,GACD7nB,EACC,MAAM,aACJ4U,EAAY,gBACZkK,EAAe,kBACfC,IACE1e,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAIsV,GAAW3B,GAAQ,CAAC,GAEhC5R,EAAAA,EAAAA,KAAU,KACJuT,IACEwJ,GAAc5J,EAAa,CAAEI,WAC7B8G,GAAiBiD,EAAkB,CAAEG,UAAWlK,IACtD,GACC,CAACA,EAAQwJ,EAAc1C,IAE1B,MAAMqD,GAAyB7Z,EAAAA,EAAAA,IAC7B,CAACoK,EAAiD0P,KAC5C/L,GAAQ+L,IACV1P,EAAEM,kBACF8O,EAAgB,CACdO,cAAehM,EAAK3T,GACpB4f,QAAS,EACT3U,OAAuB,UAAfwT,EAAyBoB,EAAAA,GAAAA,cAAkCA,EAAAA,GAAAA,qBAEvE,IAIE5I,GAAe/V,EAAAA,EAAAA,KAAQ,IAAMyS,GAAQkL,IAAgBiB,EAAAA,EAAAA,IAAgBnM,IAAO,CAACA,EAAMkL,IAEzF,IAAKlL,EACH,OAqCF,MAAMyU,EAAcD,EAChBA,EAAYC,aAAexnB,EAAKunB,EAAYE,QAAU,uBAAyB,6BAC/EtoB,EA2BJ,OACEwC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,WAAWyD,KAAMib,GAASre,EAAKqD,MAAQ,WAAQlE,GAC5DwC,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLC,IAAK+Q,EAAK3T,GACV8F,KAAM2Y,EACN/b,KAAMiR,EACN6G,gBAAiBA,EACjB/X,QAAS2Z,EAAkBqD,OAAyB1f,IAEtDwC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,QAjCb6nB,EAEA7lB,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,mBACbgC,EAAAA,GAAAA,cAACyd,EAAAA,EAAa,CACZtd,KAAMiR,EACN2U,iBAAkBJ,EAClBD,gBAAiBA,EACjBzN,gBAAiBA,IAElB4N,GAAe7lB,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,gBAAgB6nB,IAMpD7lB,EAAAA,GAAAA,cAACyd,EAAAA,EAAa,CACZtd,KAAMiR,EACN2U,iBAAkBJ,EAClBD,gBAAiBA,EACjBzN,gBAAiBA,KAgBfmE,IAAYnE,IAAoB0E,KAzElCP,EACKC,EACLrc,EAAAA,GAAAA,cAAC0d,EAAAA,EAAY,CAAC1f,UAAU,SAAS8L,QAASsS,IAE1Cpc,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,SAASyD,IAAI,QAC1BgkB,GAAczlB,EAAAA,GAAAA,cAAA,KAAGhC,UAAY,QAAOynB,mBACpCvW,EAAAA,EAAAA,GAAWkN,IAKdI,IAAuBb,EAEvB3b,EAAAA,GAAAA,cAAC0d,EAAAA,EAAY,CAAC1f,UAAU,SAAS8L,QAASzL,EAAK,cAI9C+S,EAID6K,EACKjc,EAAAA,GAAAA,cAAC2d,EAAAA,EAAY,CAAC1B,aAAcA,IAInCjc,EAAAA,GAAAA,cAAA,QAAMhC,WAAWiC,EAAAA,EAAAA,GAAe,UAAU+lB,EAAAA,EAAAA,IAAa5U,EAAMmU,IAAe,WACzE7Q,GAAgB1U,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,UAAU0W,GAC3C1U,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,cAAcyD,IAAI,SAAQwkB,EAAAA,EAAAA,IAAc5nB,EAAM+S,EAAMmU,UAXxE,IA0DM,I,ySClJV,MAkHA,GAAe7oB,EAAAA,EAAAA,KAlHoBqB,IAO7B,IAP8B,KAClChB,EAAI,KACJqU,EAAI,MACJ8U,EAAK,gBACLjO,EAAe,aACfkO,EAAY,QACZjmB,GACDnC,EAEC,MAAMqoB,GAAW1lB,EAAAA,EAAAA,IAAyB,MAEpCrC,GAAOC,EAAAA,EAAAA,MACP,SAAEoJ,IAAa2C,EAAAA,EAAAA,MAEfgc,EAAYjV,IAAQkV,EAAAA,EAAAA,IAAclV,GAClCmV,EAAgBxpB,IAAQypB,EAAAA,EAAAA,IAAqBzpB,EAAKU,IAClDgpB,EAAarV,GAAQrU,EACrB2pB,EAAeD,IAAexO,IAAoBoO,IAAcE,GAChE,QAAEI,GAAYT,GAAS,CAAC,EAExBU,EAAaF,IAAgBG,EAAAA,EAAAA,IAAkBJ,EAAY,UAC3DK,GAAgBzkB,EAAAA,EAAAA,GAASukB,GAEzBG,EAAYL,GAAgBR,IAAUS,GAAY,QAAOT,EAAMzoB,YAC/DupB,GAAe3kB,EAAAA,EAAAA,GAAS0kB,GAExBE,EAAYP,GAAgBR,GAASS,IAAWO,EAAAA,EAAAA,IAAwBhB,GAGxEiB,GAFe9kB,EAAAA,EAAAA,GAAS4kB,IAEQD,GAC/BI,EAAcC,IAAkBvmB,EAAAA,EAAAA,KACjCwmB,EAAmB5pB,QAAQypB,KAAmBR,GAAWS,IACzDznB,GAAuBsD,EAAAA,EAAAA,GAAmBqkB,GAC1CC,EAAiBb,IAAiBY,IAAqBR,GAAiBZ,GAAOjkB,WAAWC,QAC1FslB,GAAwB5M,EAAAA,EAAAA,GAC5BsL,GAAOjkB,WAAWC,SAAUqlB,EAAgB7f,IAAamT,EAAAA,IAErDsC,EAAW+I,GAASY,GAAiBS,EAQ3C,IAAIzd,EAEJ,IARAtK,EAAAA,EAAAA,KAAU,KACJ4mB,EAASllB,UAAYilB,IACvBC,EAASllB,QAAQumB,YAAc,EACjC,GACC,CAACtB,IAIAlO,EACFnO,EAAU9J,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,yCAClB,GAAIqoB,EACTvc,EAAU9J,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,0CAClB,GAAIuoB,EACTzc,EAAU9J,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,gCAClB,GAAImf,EACTrT,EACE9J,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACGunB,EACCvnB,EAAAA,GAAAA,cAAA,UAAQmI,IAAKqf,EAAuBxpB,UAAU,UAE9CgC,EAAAA,GAAAA,cAAA,OAAK0D,IAAKojB,EAAe9oB,UAAU,QAAQod,IAAI,KAEhD8K,IACCS,EACE3mB,EAAAA,GAAAA,cAAC0nB,EAAAA,EAAc,CACbC,QAASxB,EACThe,IAAKie,EACL1iB,IAAKyjB,EACLnpB,WAAWiC,EAAAA,EAAAA,GAAe,eAAgBN,GAC1CioB,OAAK,EACLC,yBAAuB,EACvBC,MAAI,EACJC,aAAW,EACXC,QAASX,IAGXrnB,EAAAA,GAAAA,cAAA,OACE0D,IAAKyjB,EACLnpB,WAAWiC,EAAAA,EAAAA,GAAe,eAAgBN,GAC1Cyb,IAAI,YAMT,GAAIhK,EAAM,CACf,MAAM6W,GAAeC,EAAAA,EAAAA,IAAgB9W,GACrCtH,EAAUme,GAAeE,EAAAA,EAAAA,IAAgBF,EAAc,QAAKzqB,CAC9D,MAAO,GAAIT,EAAM,CACf,MAAMwR,GAAQ+I,EAAAA,EAAAA,GAAajZ,EAAMtB,GACjC+M,EAAUyE,IAAS4Z,EAAAA,EAAAA,IAAgB5Z,GAAO8C,EAAAA,EAAAA,IAAStU,EAAKU,IAAM,EAAI,EACpE,MACEqM,EACE9J,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,mBACbgC,EAAAA,GAAAA,cAACooB,EAAAA,EAAO,CAAC3Y,MAAM,WAKrB,MAAMZ,GAAgB5O,EAAAA,EAAAA,GACpB,eACC,aAAWooB,EAAAA,EAAAA,IAAgBjX,GAAQrU,KACpCkb,GAAmB,iBACnBoO,GAAa,kBACbE,GAAiB,uBACftO,IAAoBkF,GAAa,YAGrC,OACEnd,EAAAA,GAAAA,cAAA,OAAKhC,UAAW6Q,EAAe3O,QAASid,EAAWjd,OAAU1C,GACvC,iBAAZsM,GAAuBoF,EAAAA,EAAAA,GAAWpF,EAAS,CAAC,aAAeA,EAC/D,I,mCCpJV,QAAqF,uBAArF,EAA4H,uBAA5H,EAA2K,uBAA3K,EAAyN,uBAAzN,EAA4S,uBAA5S,EAA6e,uBC0V7e,GAAepN,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAEyT,EAAM,cAAEL,GAAepT,EAChC,MAAM,gBAAEgpB,GAAoB1rB,EACtBwU,GAAOE,EAAAA,EAAAA,IAAW1U,EAAQmW,GAC1BwV,GAAYlX,EAAAA,EAAAA,IAAS0B,GACrBwS,GAAaC,EAAAA,EAAAA,IAAiB5oB,EAAQmW,GACtChW,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQmW,GAC1BkF,GAAmBvF,GAAiBtB,GAAQA,EAAK8B,QACjD,QAAEmK,EAAO,cAAED,IAAkBhgB,EAAAA,EAAAA,IAAeR,GAAQ4rB,YACpDjX,EAAUxU,GAAMwU,SACdK,SAAU6W,IAAmB5W,EAAAA,EAAAA,IAAyBjV,IAAW,CAAC,EACpEif,EAAQtK,GAAWkX,EAAiB1rB,GAAM+e,SAAS2M,QAAkBjrB,EACrEkrB,EAAeH,GAAYpW,EAAAA,EAAAA,IAAmBvV,EAAQmW,QAAUvV,EAChEmrB,EAAgBJ,OAAiD/qB,GAArCwU,EAAAA,EAAAA,IAAmBpV,EAAQmW,GAE7D,MAAO,CACLuV,kBACAlX,OACAmU,aACAxoB,OACA6rB,kBAAmBF,GAAcG,cACjCC,iBAAkBJ,GAAcK,aAChCC,kBAAmBN,GAAcO,cACjCC,iBAAkBP,GAAcI,aAChC9Q,kBACAoF,UACAD,mBACIvB,GAAS,CACXA,QACAE,eAAeC,EAAAA,EAAAA,IAA0Bpf,EAAQmW,EAAQ0V,IAE5D,GA/Be9rB,EArR2BoB,IAgBzC,IAhB0C,cAC9C2U,EAAa,aACbyT,EAAY,KACZ/U,EAAI,WACJmU,EAAU,KACVxoB,EAAI,gBACJkb,EAAe,gBACfqQ,EAAe,QACfjL,EAAO,cACPD,EAAa,MACbvB,EAAK,cACLE,EAAa,kBACb6M,EAAiB,iBACjBE,EAAgB,kBAChBE,EAAiB,iBACjBE,GACDnrB,EACC,MAAM,aACJ4U,EAAY,gBACZkK,EAAe,iBACfsM,IACE/qB,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAIsV,GAAW3B,GAAQ,CAAC,GACxB3T,GAAIX,GAAWC,GAAQ,CAAC,EAC1BqsB,EAAShY,GAAMgY,QAAUrsB,GAAMqsB,QAAU9F,EAAAA,EACzC+F,GAAcC,EAAAA,EAAAA,GAAYjM,GAC1BkM,GAAoBD,EAAAA,EAAAA,GAAYlM,IAC/BoM,EAAmBC,IAAwBjf,EAAAA,EAAAA,KAAS,GACrDkf,EAAiBF,EAClBnrB,EAAKqD,MAAQ,oBAAsB,iBACpC,QAEGioB,EAAmBC,KAAwBpf,EAAAA,EAAAA,IAAS,GACrDqf,GAAU5R,GAAmBmR,EAAO9nB,QAAU,GAA2B,IAAtBqoB,EACnDG,GAAS7R,GAAmBmR,EAAO9nB,QAAU,GAAKqoB,IAAsBP,EAAO9nB,OAAS,GAG9F9B,EAAAA,EAAAA,KAAU,KACJ+pB,QAAqC/rB,IAAhB6rB,QAAyC7rB,IAAZ6f,IACpDoM,GAAqB,GACrBG,GAAqBP,GACvB,GACC,CAAChM,EAASgM,EAAaE,KAG1B/pB,EAAAA,EAAAA,KAAU,KACJmqB,EAAoBP,EAAO9nB,QAC7BsoB,GAAqB7kB,KAAKC,IAAI,EAAGokB,EAAO9nB,OAAS,GACnD,GACC,CAACqoB,EAAmBP,EAAO9nB,UAE9B9B,EAAAA,EAAAA,KAAU,KACgB,yBAApB8oB,GAA8CvV,IAAWL,GAC3DC,EAAa,CAAEI,UACjB,GACC,CAACA,EAAQJ,EAAc2V,EAAiB5V,ICzH9B,SACb0W,EACAW,IAEAvqB,EAAAA,EAAAA,KAAU,KACR4pB,EAAOhqB,MAAM2qB,EAAcA,EAPL,GAOuCplB,SAASuhB,IAClD8D,EAAAA,GAA2B,QAAO9D,EAAMzoB,cAExDusB,EAAAA,GAAmB,QAAO9D,EAAMzoB,YAAa8E,EAAAA,GAAAA,QAC/C,GACA,GACD,CAACwnB,EAAcX,GACpB,CD+GEa,CAAiBb,EAAQO,GAEzB,MAAMO,IAA0B7mB,EAAAA,EAAAA,IAAgB,KAC9CwZ,EAAgB,CACdO,cAAerK,GAAUjW,EACzBugB,QAASsM,EACTjhB,OAAQgK,EAAgB4K,EAAAA,GAAAA,eAAmCA,EAAAA,GAAAA,eAC3D,IAGE6M,IAAqB9mB,EAAAA,EAAAA,IAAgB,KACpC+N,GAEL+X,EAAiB,CAAEiB,WAAYhZ,EAAK3T,IAAK,IAGrC4sB,IAAsBhnB,EAAAA,EAAAA,IAAgB,KACtCwmB,KAGJJ,GAAqB,GACrBG,GAAqBD,EAAoB,GAAE,IAGvCW,IAAkBjnB,EAAAA,EAAAA,IAAgB,KAClCymB,KAGJL,GAAqB,GACrBG,GAAqBD,EAAoB,GAAE,IAuF7C,IAAwBY,GAAAC,GAvDxB,IAtBAhrB,EAAAA,EAAAA,KAAU,KACR,MAAMirB,EAAU7R,SAAS8R,cAA+B,yBACxD,GAAKD,EAIL,OAAOhc,EAAAA,EAAAA,IAAcgc,EAAS,CAC5BE,wBAAyB,8BACzBC,QAASxJ,EAAAA,GAAe,CAAC3T,EAAGod,IACtBA,IAAcC,EAAAA,GAAAA,OAChBT,MACO,GACEQ,IAAcC,EAAAA,GAAAA,OACvBR,MACO,QAIP9sB,GACJ,GACD,CAAC8sB,GAAiBD,KAEhBjZ,GAASrU,EA0Ed,OAAI8e,EApEA7b,EAAAA,GAAAA,cAAA,OAAKhC,UDpM4qB,wBCqM/qBgC,EAAAA,GAAAA,cAACwd,EAAAA,EAAS,CACR3B,MAAOA,EACPtY,KApIe,IAqIfvF,UDxMovB,uBCyMpvB+sB,gBDzM4xB,uBC0M5xBC,aAAW,IAEbhrB,EAAAA,GAAAA,cAAA,MAAIhC,UD5M+sB,uBC4MjrByD,IAAKpD,EAAKqD,MAAQ,WAAQlE,IAAY0R,EAAAA,EAAAA,GAAW2M,EAAOtN,QAC1FvO,EAAAA,GAAAA,cAAA,KAAGhC,UD7My0B,wBC8Mz0B+d,EAAgB1d,EAAK,mBAAoB0d,EAAe,KAAO1d,EAAK,2BA+D3E2B,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GAAe,cAAeyS,GD9QxB,wBC+QjBjR,IAAKpD,EAAKqD,MAAQ,WAAQlE,GAE1BwC,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,GA7DpB,WACE,KAAIsU,IAAoBmR,GAAUA,EAAO9nB,QAAU,GAInD,OACEtB,EAAAA,GAAAA,cAAA,OAAKhC,UD1NsU,wBC2NxUorB,EAAO/pB,KAAI,CAAC4rB,EAAG5pB,IACdrB,EAAAA,GAAAA,cAAA,QAAMhC,WAAWiC,EAAAA,EAAAA,GD5NyV,uBC4NxToB,IAAMsoB,GD5N6V,4BCgO7Z,CAkDOuB,IACCxY,GAAiBkW,GACjB5oB,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GACd0D,EACAkmB,IAAWlmB,IAGX3D,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,GACbtF,EAAKuqB,EAAkBjC,QAAU,uBAAyB,0BAIhEjU,GAAiBsW,GAChBhpB,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GACd0D,GACCkmB,IAAWC,KAAWnmB,IAGvB3D,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,EAA8BzD,QAnIxD,WACO2pB,KACLJ,GAAqB,GACrBG,GAAqBR,EAAO9nB,OAAS,GACvC,IAgIcwoB,IACA9pB,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACL8lB,MAAO8C,EACPhrB,UDxSoP,uBCySpPuF,KAAK,SAGRlF,EAAK2qB,EAAkBrC,QAAU,uBAAyB,0BAIjE3mB,EAAAA,GAAAA,cAAC4f,EAAAA,EAAU,CAACC,UAAW8J,EAAmBvP,KAAMsP,GAC7CyB,KAGDtB,IACA7pB,EAAAA,GAAAA,cAAA,UACE4hB,KAAK,SACLngB,IAAKpD,EAAKqD,MAAQ,WAAQlE,EAC1BQ,WAAWiC,EAAAA,EAAAA,GAAe0D,EDxTgf,wBCyT1gB,aAAYtF,EAAK,oBACjB6B,QAASmqB,MAGXP,IACA9pB,EAAAA,GAAAA,cAAA,UACE4hB,KAAK,SACLngB,IAAKpD,EAAKqD,MAAQ,WAAQlE,EAC1BQ,WAAWiC,EAAAA,EAAAA,GAAe0D,EDjUikB,wBCkU3lB,aAAYtF,EAAK,QACjB6B,QAASoqB,MAKftqB,EAAAA,GAAAA,cAAA,OAAKhC,UDxU0C,uBCwUlByD,IAAKpD,EAAKqD,MAAQ,MAAQ,SACnD0P,GAAQrU,IACRiD,EAAAA,GAAAA,cAACyd,EAAAA,EAAa,CACZtd,KAAOiR,GAAQrU,EACfgpB,iBAAe,EACfL,gBA3Qc,GA4QdzN,gBAAiBA,EACjBmT,mBAAoBjB,GACpBa,aAAW,EACXK,cAAY,KAGdpT,IA9FF7G,EAEApR,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe0D,EAAe,UAAUqiB,EAAAA,EAAAA,IAAa5U,EAAMmU,IAAe,WACxFvlB,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,cAAcyD,IAAI,SAAQwkB,EAAAA,EAAAA,IAAc5nB,EAAM+S,EAAMmU,KAMxEvlB,EAAAA,GAAAA,cAAA,QAAMhC,WAAWiC,EAAAA,EAAAA,GAAe0D,EAAe,UAAWlC,IAAI,SAC5D8Q,EAAAA,EAAAA,IAAcxV,GACVsB,EAAK,cAAiC,QAApBksB,GAAExtB,EAAMghB,oBAAY,IAAAwM,GAAAA,GAAI,EAAG,KAC7ClsB,EAAK,UAA6B,QAApBmsB,GAAEztB,EAAMghB,oBAAY,IAAAyM,GAAAA,GAAI,EAAG,SAhCnD,SAASW,GAAYhuB,GACnB,MAGM4rB,IAHS9Q,GAAmBmR,EAAO9nB,OAAS,EAC9C8nB,EAAOO,QACPnsB,IAC0BorB,GAAqBE,GAAoBI,GAAoBF,EAE3F,OACEhpB,EAAAA,GAAAA,cAACsrB,EAAY,CACXjrB,IAAKspB,EACLvY,KAAMA,EACNrU,KAAMA,EACNmpB,MAAO6C,EACP9Q,gBAAiBA,EACjBkO,aAAczoB,QAAQP,GAAYgpB,GAClCjmB,QAASgqB,IAGf,CAmGQ,I,6HE7TV,MAqCA,GAAextB,EAAAA,EAAAA,KArC2BqB,IAMpC,IANqC,SACzCwtB,EAAQ,mBACRC,EAAkB,UAClBxtB,EAAS,KACTuF,EAAI,oBACJ4U,GACDpa,EACC,MAAM0tB,EAAW,eAAgBF,EAC3BG,GAAoB/sB,EAAAA,EAAAA,KAAQ,IAChC6sB,GAAoBG,MAAMC,IAAcC,EAAAA,EAAAA,IAAeD,EAAUL,SAAUA,MAC1E,CAACC,EAAoBD,IAClBO,EAAeJ,GAAmBK,YAAYtuB,GAC9CoN,GAAYxI,EAAAA,EAAAA,GAAU,WAAUypB,KAAiBA,EAAcvpB,EAAAA,GAAAA,SAE/D5C,GAAuBsD,EAAAA,EAAAA,GAAmB4H,GAEhD,OAAI4gB,EAEAzrB,EAAAA,GAAAA,cAACgsB,EAAAA,EAAW,CACVC,WAAYV,EAASU,WACrBjuB,WAAWiC,EAAAA,EAAAA,GAAe,sBAAuBjC,GACjDuF,KAAMA,EACN2oB,8BAA+B/T,IAMnCnY,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GAAe,sBAAuBN,EAAsB3B,GACvEwF,MAAOD,EAAQ,UAASA,gBAAmBA,WAAW/F,EACtDkG,IAAKmH,GAAashB,EAClB/Q,IAAKsQ,GAAmBnd,OACxB,G,6HCjCN,MAoGA,GAAe7R,EAAAA,EAAAA,KApGmBqB,IAQ5B,IAR6B,OACjC8Y,EAAM,QACNuV,EAAU,WAAU,OACpBtvB,EAAM,MACNopB,EAAK,WACLmG,EAAU,QACVvV,EAAO,oBACPC,GACDhZ,EACC,MAAM,eACJuuB,EAAc,WACdC,EAAU,mBACVC,EAAkB,sBAClBC,IACEruB,EAAAA,EAAAA,OAEGsuB,EAAgBC,IAAqBniB,EAAAA,EAAAA,IAA0B,SAC/D0H,EAAa0a,IAAkBpiB,EAAAA,EAAAA,IAAS,IAEzCqiB,GAAexpB,EAAAA,EAAAA,IAAgB,KACnC,OAAQ+oB,GACN,IAAK,WACHE,EAAe,CAAED,WAAYA,EAAaS,OAAQJ,EAAgBxa,gBAClEua,IACA,MACF,IAAK,OACHF,EAAW,CAAEzvB,SAAQgwB,OAAQJ,EAAgBxa,gBAC7C,MACF,IAAK,QACHsa,EAAmB,CACjB1vB,SAAQopB,QAAO4G,OAAQJ,EAAgBxa,gBAI7C4E,GAAS,IAGLiW,GAAqB1pB,EAAAA,EAAAA,IAAiBgD,IAC1CsmB,EAAkBtmB,EAAyB,IAGvC2mB,GAA0B3pB,EAAAA,EAAAA,IAAiBoK,IAC/Cmf,EAAenf,EAAEsU,OAAO1b,MAAM,IAG1BhI,GAAOC,EAAAA,EAAAA,KAEP2uB,GAA8DtuB,EAAAA,EAAAA,KAAQ,IAAM,CAChF,CAAE0H,MAAO,OAAQqP,MAAOrX,EAAK,2BAC7B,CAAEgI,MAAO,WAAYqP,MAAOrX,EAAK,+BACjC,CAAEgI,MAAO,cAAeqP,MAAOrX,EAAK,kCACpC,CAAEgI,MAAO,aAAcqP,MAAOrX,EAAK,kCACnC,CAAEgI,MAAO,YAAaqP,MAAOrX,EAAK,+BAClC,CAAEgI,MAAO,eAAgBqP,MAAO,iBAChC,CAAErP,MAAO,kBAAmBqP,MAAO,oBACnC,CAAErP,MAAO,QAASqP,MAAOrX,EAAK,8BAC7B,CAACA,IAEJ,GACe,aAAZ+tB,IAA2BC,GACZ,SAAZD,IAAuBtvB,GACX,UAAZsvB,KAAyBtvB,IAAWopB,GAExC,OAGF,MAAM3X,EACFlQ,EADsB,aAAZ+tB,EACL,2BACA,qBAET,OACEpsB,EAAAA,GAAAA,cAAC+X,EAAAA,EAAK,CACJlB,OAAQA,EACRC,QAASA,EACToW,QAASrW,EAASgW,OAAervB,EACjCuZ,oBAAqBA,EACrB/Y,UAAU,SACVuQ,MAAOA,GAEPvO,EAAAA,GAAAA,cAACmtB,EAAAA,EAAU,CACT/S,KAAK,iBACLgT,QAASH,EACTnL,SAAUiL,EACVM,SAAUX,IAEZ1sB,EAAAA,GAAAA,cAAC4kB,EAAAA,EAAS,CACRlP,MAAOrX,EAAK,iCACZgI,MAAO6L,EACP4P,SAAUkL,IAEZhtB,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,kBACbgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACmP,MAAM,SAASzR,UAAU,wBAAwBka,QAAM,EAAChY,QAAS2sB,GACtExuB,EAAK,sBAER2B,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACtC,UAAU,wBAAwBka,QAAM,EAAChY,QAAS4W,GAAUzY,EAAK,YAErE,G,kNClEZ,MAAMivB,EAA8B,CAClC,CAAE/e,MAAO,sBAAuBlI,MAAO,EAAGknB,IAAK,MAC/C,CAAEhf,MAAO,sBAAuBlI,MAAO,EAAGknB,IAAK,MAC/C,CAAEhf,MAAO,sBAAuBlI,MAAO,EAAGknB,IAAK,OAC/C,CAAEhf,MAAO,qBAAsBlI,MAAO,EAAGknB,IAAK,OAC9C,CAAEhf,MAAO,qBAAsBlI,MAAO,EAAGknB,IAAK,SAiShD,GAAe7wB,EAAAA,EAAAA,KA9ROqB,IAyBH,IAzBqF,QACtG6D,EAAO,KACP2B,EAAI,OACJiqB,EAAM,MACNjf,EAAK,UACLvQ,EAAS,cACTyvB,EAAa,gBACbxV,EAAe,eACfyV,EAAc,WACdC,EAAU,oBACVxV,EAAmB,8BACnByV,EAA6B,WAC7B9kB,EAAU,qBACV+kB,EAAoB,cACpBC,EAAa,gBACbC,EAAe,qBACfC,EAAoB,QACpB9tB,EAAO,SACPwkB,EAAQ,YACRuJ,EAAW,cACXC,EAAa,oBACbC,EAAmB,kBACnBC,EAAiB,mBACjBC,EAAkB,mBAClBC,GACYvwB,EACZ,MAAM,eAAEwwB,EAAc,iBAAEpF,EAAgB,eAAEqF,IAAmBpwB,EAAAA,EAAAA,MAEvD+J,GAAMzH,EAAAA,EAAAA,IAAuB,MAE7B+tB,GAAU/tB,EAAAA,EAAAA,IAAuB,MACjCrC,GAAOC,EAAAA,EAAAA,KACPowB,EAAiB9sB,EAAQ+sB,mBACzBC,GAAcC,EAAAA,EAAAA,GAAwB1mB,GAAMumB,IAE5C,GACJjxB,EAAE,cAAEqxB,EAAeC,UAAWC,EAAS,eAAEC,GACvCrtB,EACEstB,IAAYrB,GAAwBmB,EAEpChW,IAAiBC,EAAAA,EAAAA,IAAkB9Q,EAAKgQ,GACxC1N,GAAauO,GACbmW,GAAanW,KAAmBwU,EAEhC4B,IAA0BnW,EAAAA,EAAAA,IAAkB9Q,EAAKylB,IAEjD,kBACJyB,GAAiB,oBAAEC,GAAmB,wBACtCC,GAAuB,kBAAEC,GAAiB,uBAC1CC,GAAsB,sBAAEC,KACtBC,EAAAA,EAAAA,GAAuBxnB,GACrBynB,GAA0BlyB,SAAS+vB,GAAiB6B,IAEpDO,IAAoBxsB,EAAAA,EAAAA,IAAgB,IAAM8E,EAAIjH,UAC9C4uB,IAAiBzsB,EAAAA,EAAAA,IAAgB,IAAM8E,EAAIjH,QAAS6uB,QAAQ,mCAC5DC,IAAiB3sB,EAAAA,EAAAA,IAAgB,IAC9BqqB,EAAiBe,EAAQvtB,QAAUiH,EAAIjH,QAASwpB,cAAc,oCAKjE,UACJuF,GAAS,UAAEC,GAAS,iBAAEC,GAAgB,iBAAEC,GAAkB5sB,MAAO6sB,KAC/DC,EAAAA,EAAAA,GACFhB,GACAO,GACAC,GACAE,IARgBO,KAAA,CAASC,WAAY9C,EAAgB+C,6BAA6B,OAYpFjxB,EAAAA,EAAAA,KAAU,KACJ6vB,GACFjB,MAEAC,KACF,GACC,CAACgB,GAAmBhB,EAAoBD,KAE3C5uB,EAAAA,EAAAA,KAAU,KACHwZ,IAAgByW,IAAwB,GAC5C,CAACA,GAAwBzW,KAE5B,MAcM0X,IAAoBrtB,EAAAA,EAAAA,IAAiBoK,IACzCA,EAAEM,kBACFN,EAAEiU,iBAEFyM,EAAqBvsB,EAAQ,IAGzB+uB,IAA4BttB,EAAAA,EAAAA,IAAgB,KAChD8qB,EAAqBvsB,EAAQ,IAGzBgvB,IAAsBvtB,EAAAA,EAAAA,IAAgB,KAC1C6qB,EAAetsB,EAAQ,IAGnBivB,IAAoBxtB,EAAAA,EAAAA,IAAgB,KACxC4qB,EAAarsB,EAAQ,IAGjBkvB,IAAkBztB,EAAAA,EAAAA,IAAgB,KACtCnD,IAAUwkB,GAAU,EAAK,IAGrBqM,IAAsB1tB,EAAAA,EAAAA,IAAgB,KAC1CnD,IAAUwkB,OAAUlnB,GAAW,EAAK,IAGhCwzB,IAAgB3tB,EAAAA,EAAAA,IAAgB,KACpCkrB,EAAe,CAAEU,kBAAiB,IAG9BgC,IAAgC5tB,EAAAA,EAAAA,IAAgB,SAACoK,GAA0C,IAAjB9B,EAAQQ,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAG,EACzFsB,EAAEiU,iBACFjU,EAAEM,kBAEF0hB,KACAnB,MACAE,EAAe,CACb0C,YAAatvB,EACbuvB,QAASC,KAAKC,MAAQ,IAAO1lB,GAAW2lB,EAAAA,EAAAA,OAE5C,IAEMC,IAAyBnQ,EAAAA,IAAgB+M,EAEzCtf,IAAgB5O,EAAAA,EAAAA,GACpB,gBACAC,GAAW,cACX4I,GAAc,WACdgmB,GAAiB,eACjB9wB,GAGIwzB,IAAmB7yB,EAAAA,EAAAA,KAAQ,KAC/B,IAAKixB,IAA2BnC,GAAkBqB,IAAkBpB,EAAiB,MAAO,GAE5F,MAAM5I,EAAqB,GAE3B,OAAIgK,GACFxB,EAA4B3oB,SAASC,IACnCkgB,EAAMvjB,KACJvB,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACvxB,QAAS+wB,GAA+BvM,SAAU9f,EAAK2oB,KAC9DlvB,EAAKuG,EAAK2J,MAAO3J,EAAKyB,MAAO,MAEjC,IAGIye,IAGLoJ,GACFpJ,EAAMvjB,KACJvB,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACpc,KAAK,WAAWnV,QAAS0wB,IAChCvyB,EAAK,kCAKR4vB,GACFnJ,EAAMvjB,KACJvB,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACpc,KAAK,WAAWnV,QAAS2wB,IAChCxyB,EAAK,8BAKP6wB,IAAYhvB,IACV+X,GACH6M,EAAMvjB,KAAKvB,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACvxB,QAAS4wB,GAAiBzb,KAAK,SAAShX,EAAK,sBAEpEymB,EAAMvjB,KACJvB,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACvxB,QAAS6wB,GAAqB1b,KAAK,YAC1ChX,EAAK4Z,EAAkB,cAAgB,sBAK1C0V,GACF7I,EAAMvjB,KACJvB,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACvxB,QAAS8wB,GAAe3b,KAAK,YACpChX,EAAK,qBAIR8vB,GACFrJ,EAAMvjB,KACJvB,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACpc,KAAK,SAASnV,QAASywB,IAC9BtyB,EAAK,sBAILymB,EAAK,GACX,CACD8K,GAAyBnC,EAAeqB,EAAepB,EAAgBQ,EAAeD,EAAaiB,GACnGhvB,EAASytB,EAAYQ,EAAqB8C,GAA+B5yB,EAAMuyB,GAC/EC,GAAmB5Y,EAAiB8Y,GAAqBD,GAAiBE,GAAeL,KAG3F,OACE3wB,EAAAA,GAAAA,cAAA,OACEmI,IAAKA,EACLnK,UAAW6Q,GACXN,MAAOA,GAAU3M,GAAS8vB,MAC1B,kBAAiBj0B,EACjBk0B,YAjIqBlkB,KACvBmkB,EAAAA,EAAAA,GAAoCnkB,GACpC8hB,GAAwB9hB,EAAE,EAgIxBvN,QA3IgBga,KACdmV,KACAH,GACF/F,EAAiB,CAAE0I,eAAgB,qBAGrC3xB,IAAUwkB,GAAS,EAsIjB3F,cAAeyQ,IAEdJ,IACCpvB,EAAAA,GAAAA,cAAC8xB,EAAAA,EAAW,CACVC,aAAc5pB,EACdvG,QAASA,EACTowB,SAAO,EACPzuB,KAAMA,EACN0uB,YAAU,EACVC,sBAAoB,EACpBrwB,QAAS4I,GACT+iB,QAAS2B,GACTgD,qBAAmB,EACnBpE,gBAAiBA,EACjBC,qBAAsBA,EACtBY,YAAaA,KAGfd,GAAiBoB,IACjBlvB,EAAAA,GAAAA,cAAA,OACEhC,UAAU,kBAEVgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,2BAGf8vB,GAAiBkB,IAAcE,IAC/BlvB,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,mBACbgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,uBAGhBuzB,IACCvxB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLtC,UAAU,wBACVyR,MAAM,OACNlP,OAAK,EACL6xB,aAAW,EACXlyB,QAASwwB,IAET1wB,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,qBAGhBN,QAAQ8zB,GAAiBlwB,SACxBtB,EAAAA,GAAAA,cAACqyB,EAAAA,EAAI,CACHlqB,IAAKsmB,EACL5X,OAAQwY,GACRc,iBAAkBA,GAClBC,iBAAkBA,GAClBH,UAAWA,GACXC,UAAWA,GACX1sB,MAAO6sB,GACPryB,UAAU,uBACVs0B,WAAS,EACT9B,WAAY9C,EACZ5W,QAAS2Y,GACT1Y,oBAAqB2Y,IAEpB8B,IAGD,G,uECvUV,MAqCA,GAAe90B,EAAAA,EAAAA,KAlCiBqB,IAQ1B,IAR2B,MAC/B8d,EAAK,UACL7d,EAAS,gBACT+sB,EAAe,KACfxnB,EAAI,YACJynB,EAAW,oBACX7S,EAAmB,QACnBjY,GACDnC,EACC,OAAI8d,EAAM0W,aAXY,MAWG1W,EAAM0W,YAE3BvyB,EAAAA,GAAAA,cAACgsB,EAAAA,EAAW,CACVC,WAAYpQ,EAAM0W,YAClBv0B,UAAWA,EACXuF,KAAMA,EACN2oB,8BAA+B/T,EAC/Bqa,UAAYxH,OAA2BxtB,EAnB5B,EAoBX0C,QAASA,IAMbF,EAAAA,GAAAA,cAACyyB,EAAAA,EAAgB,CACfC,UAAW7W,EAAM6W,UACjBnkB,MAAOsN,EAAMtN,MACbuD,QAAS+J,EAAMpe,GACfO,UAAWA,EACX+sB,gBAAiBA,EACjB7qB,QAASA,GACT,G,oHC7BN,MAkBA,GAAexD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAmC,IAAjC,aAAE2c,GAAc3c,EACvB,OAAK2c,EAAalJ,OAMX,CAAE4f,YAFUrhB,EAAAA,EAAAA,IAAW1U,EAAQqf,EAAalJ,SAH1C,CAAC,CAKW,GARLpW,EAlB4BoB,IAAkC,IAAjC,aAAEke,EAAY,WAAE0W,GAAY50B,EAC3E,MAAMM,GAAOC,EAAAA,EAAAA,KACPs0B,EAAiBD,IAAeA,EAAWzf,SAAUoD,EAAAA,EAAAA,IAAuBqc,GAC5E7oB,EAAUzL,EAAK4d,EAAauF,QAE/BqR,QAAQ,SAAU,IAClBA,QAAQ,UAAW5W,EAAayV,OAAS,IAAIoB,OAEhD,OACE9yB,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,gBAAgByD,IAAKpD,EAAKqD,MAAQ,MAAQ,QACpDkxB,GACC5yB,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,cAAcyD,IAAI,SAAQyN,EAAAA,EAAAA,GAAW0jB,IAEvD5yB,EAAAA,GAAAA,cAAC0d,EAAAA,EAAY,CAAC5T,QAASA,IACrB,I,sKCXR,MAyGA,GAAepN,EAAAA,EAAAA,KA3FeqB,IAExB,IAFyB,QAC7BwK,EAAO,YAAEC,EAAW,YAAE8V,EAAW,oBAAEnG,EAAmB,eAAE4a,GACzDh1B,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAI00B,GAAgDC,EAAAA,EAAAA,IAAkB1qB,GAEtE,IAAKyqB,EAAU,CACb,MAAMrf,GAAOuf,EAAAA,EAAAA,IAAsB3qB,GACnC,GAAIoL,EAAM,CACR,MAAM,IAAEwf,EAAG,OAAEC,GAAWzf,EAExBqf,EAAW,CACTK,SAAUD,EAAOP,QAAQ,QAAS,IAClCM,IAAKA,EAAI3P,SAAS,OAAS2P,EAAMA,EAAI3P,SAAS,KAAQ,UAAS2P,IAAS,UAASA,IACjFG,sBAAsBC,EAAAA,EAAAA,IAAehrB,KAAa4qB,GAC9CK,EAAAA,EAAAA,GAAqBn1B,EAAMkK,OAAS/K,OAAWA,EA9BnC,UA+BZA,EAER,CACF,CAEA,MAAMi2B,GAAqBpwB,EAAAA,EAAAA,IAAgB,KACzC0vB,EAAexqB,EAAQ9K,GAAI8K,EAAQzL,OAAO,IAG5C,IAAKk2B,EACH,OAGF,MAAM,SACJK,EAAQ,IACRF,EAAG,WACHO,EAAU,MACVnlB,EAAK,YACL2D,EAAW,qBACXohB,EAAoB,MACpBpN,EAAK,MACLjc,GACE+oB,EAEEW,GAAwBnrB,GAAe0J,IAAe0hB,EAAAA,EAAAA,GAAS1hB,EAvD/C,KAyDhBlU,GAAYiC,EAAAA,EAAAA,GAChB,uBACEimB,IAAUjc,GAAU,iBAGlB4pB,EAAkBV,EAAIN,QAAQ,UAAW,KAAOa,EAEtD,OACE1zB,EAAAA,GAAAA,cAAA,OACEhC,UAAWA,EACX,gBAAeq1B,GAAYK,GAAY,GACvCjyB,IAAKpD,EAAKqD,MAAQ,WAAQlE,GAEzB0oB,GACClmB,EAAAA,GAAAA,cAAC8zB,EAAAA,EAAK,CAACvrB,QAASA,EAAS+V,YAAaA,EAAanG,oBAAqBA,IAE1EnY,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,WACbgC,EAAAA,GAAAA,cAACmP,EAAAA,EAAI,CAACzN,MAAOrD,EAAKqD,MAAO1D,UAAU,aAAakC,QAASuzB,IACtDvkB,EAAAA,EAAAA,GAAWX,GAAS8kB,GAAYK,KAEjCC,GAAwBL,IACxBtzB,EAAAA,GAAAA,cAACmP,EAAAA,EAAI,CAACzN,MAAOrD,EAAKqD,MAAO1D,UAAU,mBAAmBkC,QAASuzB,GAC5DH,GAAyBK,IAAwBzkB,EAAAA,EAAAA,GAAWykB,IAGjE3zB,EAAAA,GAAAA,cAAC+zB,EAAAA,EAAQ,CACPZ,IAAKA,EACLn1B,UAAU,YACVwC,KAAMqzB,EACNnyB,MAAOrD,EAAKqD,QAEb8G,GAAexI,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,gBAAekR,EAAAA,EAAAA,GAAW1G,KAE1DA,GACCxI,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,gBACbgC,EAAAA,GAAAA,cAACmP,EAAAA,EAAI,CACHnR,UAAU,OACVkC,QAASuzB,EACT/xB,MAAOrD,EAAKqD,QAEX0N,EAAAA,EAAAA,IAAoB/Q,EAAqB,IAAfkK,EAAQI,QAIrC,G,mGC/GH,SAASqrB,EACdzrB,EACA0rB,EACAC,EACAC,EACAC,EACA9V,EACA+V,GAEA,MAAM,KAAE7zB,EAAI,SAAE8zB,GAAa/rB,EAAQuB,QAAQtJ,MAAQ,CAAC,EAEpD,IAAKA,EAAM,CACT,MAAM+zB,GAA0BhB,EAAAA,EAAAA,IAAehrB,GAC/C,OAAOgsB,EAA0B,EAACX,EAAAA,EAAAA,GAASW,EAAyBH,SAAmB52B,CACzF,CAEA,OAAOg3B,EAAAA,EAAAA,GAAuB,CAC5Bh0B,MAAMozB,EAAAA,EAAAA,GAASpzB,EAAM4zB,GACrBE,WACAL,YACAC,YACAG,qBACAhmB,UAAW9F,EAAQ9K,GACnB02B,WACA7V,eAEJ,CAGO,SAASkV,EACdn1B,EACAkK,GAIY,IAHZksB,EAAOtoB,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACP8nB,EAAkB9nB,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAClB42B,EAAcjoB,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAGuoB,EAAAA,GAEjB,MAAM,SAAEJ,GAAa/rB,EAAQuB,QAAQtJ,MAAQ,CAAC,EAExCm0B,EAAcL,GAAUM,MAAMnnB,GAAMA,EAAEmU,OAASiT,EAAAA,GAAAA,UAC/CC,EAAiBR,GAAUM,MAAMnnB,GAAMA,EAAEmU,OAASiT,EAAAA,GAAAA,cACxD,IAAKF,IAAgBG,EAAgB,CACnC,MAAMt0B,GAAOozB,EAAAA,EAAAA,IAASmB,EAAAA,EAAAA,IAAsB12B,EAAMkK,EAASksB,GAAUL,GAErE,OAAIH,GACK/kB,EAAAA,EAAAA,GAAW1O,EAAM,CAAC,QAAS,aAAc,CAAEyzB,eAE3C/kB,EAAAA,EAAAA,GAAW1O,EAEtB,CAEA,MAAMkxB,GAAS+C,IAAWO,EAAAA,EAAAA,IAAuBzsB,GAC3C0sB,EAAiBvD,EAAS,GAAEA,KAAW,GAEvClxB,EAAOwzB,EAAkBzrB,EAAS0rB,OAAWz2B,GAAW,EAAM42B,GAC9DliB,GAAcgjB,EAAAA,EAAAA,IAA6B72B,EAAMkK,EAAS/H,GAEhE,MAAO,KACF0O,EAAAA,EAAAA,GAAW+lB,MACVjvB,MAAMmvB,QAAQjjB,GAAeA,EAAc,CAACA,IAChD3S,OAAO7B,QACX,C,wECrEA,MAQA,EAR4CiE,IAC1C,MAAM,OAAEkV,GAAWlV,EACbyzB,GAAkBC,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,mBAAoBze,GAG3E,OAAOue,EAAkBp1B,EAAAA,GAAAA,cAACo1B,EAAoBzzB,QAAYnE,CAAS,C,wECLrE,MAQA,EAR0CmE,IACxC,MAAM,OAAEkV,GAAWlV,EACb4zB,GAAgBF,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,iBAAkBze,GAGvE,OAAO0e,EAAgBv1B,EAAAA,GAAAA,cAACu1B,EAAkB5zB,QAAYnE,CAAS,C,mHCejE,MAyGA,GAAed,EAAAA,EAAAA,KAzGiBqB,IAE1B,IAF2B,MAC/B8d,EAAK,KAAE9e,EAAI,SAAEy4B,EAAQ,QAAEhkB,EAAO,4BAAEikB,EAA2B,eAAEC,EAAc,YAAEC,GAC9E53B,EACC,MAAM,oBACJ63B,EAAsB,EAAC,qBAAEC,EAAuB,GAC7C94B,EAAKwU,QAAiB,CAAC,EAARxU,EAEd+4B,GAAmBN,GAAY3Z,IAAU6Z,EACzCnkB,EAAUxU,EAAKwU,UAAYsK,EAC3Bka,GAAmBp3B,EAAAA,EAAAA,KAAQ,IAC/B4S,GAAWxU,GAAM+e,OAAS5c,OAAOC,OAAOpC,EAAK+e,QAAQvc,QAAOD,IAAA,IAAC,YAAE02B,GAAa12B,EAAA,OAAK02B,CAAW,SAAIx4B,GAC/F,CAACT,EAAMwU,IAEJykB,GAAcr3B,EAAAA,EAAAA,KAAQ,IAC1B4S,EAEMC,GAAWukB,GAAkBx2B,QAAQ02B,IAAwB,IAAhBA,EAAIzkB,UAAmBlQ,QACnEy0B,GAAkBz0B,QACpBua,GAAS9e,GAAMi5B,aACnB,CAACj5B,EAAM8e,EAAOka,EAAkBxkB,EAASC,IAEtC0kB,GAAgBv3B,EAAAA,EAAAA,KAAQ,KAC5B,MAAMw3B,EAAyBp5B,EAAK+e,QAC/B5c,OAAOC,OAAOpC,EAAK+e,QAAQ8Y,MAAMqB,GAAQA,EAAIzkB,SAAWykB,EAAID,cAEjE,OAAOxkB,GAAYzU,EAAK+e,SAAWqa,CAAuB,GACzD,CAACp5B,EAAMyU,IAEJ4kB,GAAgBva,GAAgB9e,EAAKq5B,cAMrCC,IAJsBC,EAAAA,EAAAA,IAC1B,KAAOC,EAAAA,EAAAA,IAASZ,GAAeA,IAAgBA,GAC/C,CAACA,KAEqCj4B,QACtCs4B,GAAeJ,GAAuBQ,GAAiBZ,GAAYK,GAChEC,GAGCU,EAAW94B,QAAQs4B,GAAeI,GAClCp4B,GAAYiC,EAAAA,EAAAA,GAChB,YACAi2B,GAAiB,SAChBM,GAAYhB,GAAY,SACzBgB,GAAY,UAsDd,OACEx2B,EAAAA,GAAAA,cAACy2B,EAAAA,EAAc,CAAChL,UAAQ,EAACztB,UAAU,uBAAuB6Y,OAAQwf,GApDpE,WACE,MAAMK,EAAyBb,GAC7B71B,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,qBAAsBi2B,GAAiB,UACpEl2B,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,qBAIX24B,EAAwBf,GAC5B51B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,qBACbgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,uBAIX44B,EAAuBd,GAC3B91B,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,qBAAsBi2B,GAAiB,WAGlEW,EAAsBT,GAAiBJ,EAC3Ch2B,EAAAA,GAAAA,cAAA,OAAKhC,UAAWA,IACZo4B,GAAiBp2B,EAAAA,GAAAA,cAAC82B,EAAAA,EAAe,CAACt2B,MAAMu2B,EAAAA,EAAAA,IAAqBf,WAE/Dx4B,EAEEw5B,EAAgBxB,IAAaqB,IAAuBF,IAA0BD,GAClF12B,EAAAA,GAAAA,cAAA,OAAKhC,UAAWA,GACdgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,2BAIXoD,EAAW,CACfw1B,EAAsBF,EAAwBC,EAAuBE,EAAoBG,GACzFz3B,OAAO7B,SAET,GAAwB,IAApB0D,EAASE,OAEb,OAAwB,IAApBF,EAASE,OAAqBF,EAAS,GAEvCq0B,EACgC,CAChCkB,EAAuBE,EAAoBH,EAAwBM,GACnEz3B,OAAO7B,SACwB,GAIjCsC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,qBACZoD,EAGP,CAIK61B,GACc,G,gSCzGrB,MAAMC,EAAa,IAAIC,KAEvBC,EAAAA,EAAAA,KAAax6B,IACX,IAAK,MAAOy6B,GAAU,OAAEC,MAAaJ,EACnCI,EAAOD,EAASz6B,GAClB,I,kJC3BF,QAAkG,uBCgClG,GAAeF,EAAAA,EAAAA,KArBsBqB,IAI/B,IAJgC,WACpC+K,EAAU,SACV3L,EAAQ,SACRuK,GACD3J,EACC,OACEiC,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GDjBG,uBCmBjB9C,GDnB8J,uBCoB9J2L,IAAepB,GDpB+G,yBCuB9H1H,EAAAA,GAAAA,cAAA,OAAKhC,UDvB+C,wBCwBlDgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,IAChB3D,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,IAChB3D,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,KAEd,I,eCuEV,MAyOA,GAAejH,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA6B,IAA3B,OAAExC,GAAQwC,EACjB,MAAMvC,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAChC,IAAKC,EACH,MAAO,CAAC,EAGV,MAAM,SAAEw6B,EAAQ,iBAAEC,EAAgB,WAAEC,GAAe16B,EAAK26B,aAAe,CAAC,EAClEC,EAAoBJ,GACrBjmB,EAAAA,EAAAA,IAAW1U,EAAQ26B,KAAav6B,EAAAA,EAAAA,IAAWJ,EAAQ26B,QAAa/5B,EAC/Do6B,EAAoB76B,EAAK26B,aAAcG,EAAAA,EAAAA,IAAiB96B,EAAK26B,kBAAel6B,EAC5Es6B,EAAsBF,GAAqBJ,GAC7CO,EAAAA,EAAAA,IAAkBn7B,EAAQG,EAAKU,GAAI+5B,QACnCh6B,GACIw6B,cAAeC,EAAqBC,aAAcC,GAAuBP,GAAqB,CAAC,EACjGQ,GAAoBpiB,EAAAA,EAAAA,IAAqBjZ,IAE7CD,OAAQu7B,EACRzmB,SAAU0mB,EACV1W,KAAM2W,IACJ1mB,EAAAA,EAAAA,IAAyBjV,IAAW,CAAC,EACnCkM,EAAahM,IAAWu7B,GAAiBC,IAAoB/kB,EAAAA,GAC7DilB,EAAmBz7B,EAAKwU,SAAWzU,IAAWu7B,GAC/Cv7B,KAAWM,EAAAA,EAAAA,IAAeR,GAAQ67B,iBAEjCrnB,EAAOgnB,GAAoB9mB,EAAAA,EAAAA,IAAW1U,EAAQw7B,QAAqB56B,EACnE+nB,EAAa6S,GAAoB5S,EAAAA,EAAAA,IAAiB5oB,EAAQw7B,QAAqB56B,EAC/Ek7B,EAAmB37B,EAAK26B,cAAeiB,EAAAA,EAAAA,IAAuB/7B,EAAQG,EAAK26B,aAE3Ezb,GAAe2c,EAAAA,EAAAA,IAAkBh8B,EAAQE,EAAQyW,EAAAA,GAAgB,gBAEvE,MAAO,CACLxW,OACAyU,SAASC,EAAAA,EAAAA,IAAkB1U,GAAM2U,EAAAA,EAAAA,IAAqB9U,IAAS+U,EAAAA,EAAAA,IAAuB/U,IACtF+6B,oBACAM,sBACAE,qBACAL,sBACAe,OAAOC,EAAAA,EAAAA,IAAYl8B,EAAQE,EAAQyW,EAAAA,IACnCzK,aACA0vB,kBACAO,kBAAkBC,EAAAA,EAAAA,IAAuBp8B,GACzCq8B,cAAenwB,GAAkC,WAApByvB,EAC7BW,iBAAkBt8B,EAAOu8B,YAAYC,YAAY93B,QAAU,GAAK,KAC5Dm2B,GAAc16B,EAAK26B,aAAe,CACpC2B,2BAA2BC,EAAAA,EAAAA,IAAqB18B,EAAQG,EAAK26B,cAE/DtmB,OACAmU,aACAmT,mBACAzc,eACAsd,yBAAyBv4B,EAAAA,EAAAA,IAA0BpE,GACpD,GApDeD,EAzOoBoB,IA2BlC,IA3BmC,OACvCjB,EAAM,SACN08B,EAAQ,UACRC,EAAS,cACTC,EAAa,SACblE,EAAQ,oBACRrd,EAAmB,KACnBpb,EAAI,QACJyU,EAAO,KACPJ,EAAI,WACJmU,EAAU,oBACV0S,EAAmB,kBACnBN,EAAiB,0BACjB0B,EAAyB,oBACzBvB,EAAmB,mBACnBK,EAAkB,UAClBwB,EAAS,MACTd,EAAK,wBACLU,EAAuB,WACvBzwB,EAAU,gBACV0vB,EAAe,iBACfO,EAAgB,cAChBE,EAAa,gBACbC,EAAe,iBACfR,EAAgB,aAChBzc,EAAY,YACZ2d,IACD77B,EACC,MAAM,SACJ87B,GAAQ,iBACRC,GAAgB,WAChBC,GAAU,eACVC,GAAc,gBACdC,KACE77B,EAAAA,EAAAA,OAEE,SAAEsJ,KAAa2C,EAAAA,EAAAA,OACd6vB,GAAmBC,GAAiBC,KAAoBt5B,EAAAA,EAAAA,MACxDu5B,GAAiBC,GAAeC,KAAkBz5B,EAAAA,EAAAA,MAClD05B,GAAuBC,GAAqBC,KAAwB55B,EAAAA,EAAAA,MACpE65B,GAAmBC,GAAiBC,KAAoB/5B,EAAAA,EAAAA,MACxDg6B,GAAyBC,GAAuBC,KAA2Bl6B,EAAAA,EAAAA,MAC3Em6B,GAAuBC,GAAqBC,KAAyBr6B,EAAAA,EAAAA,MACrEs6B,GAA6BC,GAA2BC,KAA+Bx6B,EAAAA,EAAAA,MACvFy6B,GAAyBC,GAAuBC,KAA2B36B,EAAAA,EAAAA,MAE5E,YAAE42B,GAAW,QAAEnmB,IAAYxU,GAAQ,CAAC,GAEpC,eAAE2+B,GAAc,IAAEvzB,KAAQwzB,EAAAA,EAAAA,GAAiB,CAC/C5+B,OACAD,SACA46B,eACAzb,eACA4c,QACAf,sBACAG,sBACAE,qBACAO,mBACAf,oBACAxf,sBACAuhB,gBACAH,0BACAE,cAGImC,GHtIR,SAA0CvE,GACxC,IAAIwE,EAAQ3E,EAAW4E,IAAIzE,GAE3B,IAAKwE,EAAO,CACV,MAAOE,EAAQzE,IAAU0E,EAAAA,EAAAA,IAAa3E,GAASx4B,EAAAA,EAAAA,QAC/Cg9B,EAAQ,CAAEI,aAAc,EAAGF,SAAQzE,UACnCJ,EAAWgF,IAAI7E,EAAUwE,EAC3B,CAcA,OAZAM,EAAAA,EAAAA,IAAc,KACZN,EAAOI,eAEA,KACLJ,EAAOI,eAEFJ,EAAOI,cACV/E,EAAWkF,OAAO/E,EACpB,KAIGwE,EAAME,MACf,CGgHgCM,CAAkBC,EAAAA,IAE1CpiB,IAAc7W,EAAAA,EAAAA,IAAgB,KAC9BkO,GACEwnB,EACFkB,QAAgBz8B,EAAW,CAAE++B,uBAAuB,IAEpDvC,GAAe,CAAEl9B,UAAU,CAAEy/B,uBAAuB,KAMxD1C,GAAS,CAAEp8B,GAAIX,EAAQ0/B,sBAAsB,GAAQ,CAAED,uBAAuB,IAE1EzzB,GAAcmwB,GAChBa,KACF,IAGI2C,IAAkBp5B,EAAAA,EAAAA,IAAiBoK,IACvCA,EAAEiU,iBACFkY,KAAc98B,EAAO,IAGjB4/B,IAAer5B,EAAAA,EAAAA,IAAgB,KACnC03B,KACAZ,IAAiB,IAGbwC,IAAat5B,EAAAA,EAAAA,IAAgB,KACjC63B,KACAZ,IAAe,IAGXsC,IAAyBv5B,EAAAA,EAAAA,IAAgB,KAC7Cg4B,KACAZ,IAAqB,IAGjB5N,IAAexpB,EAAAA,EAAAA,IAAgB,KACnCm4B,KACAZ,IAAiB,IAGbiC,IAAiBC,EAAAA,EAAAA,GAAsB,CAC3C//B,OACAqU,OACAsrB,gBACAC,cACAC,0BACA/P,gBACA2M,WACAhE,WACAhkB,UACA0nB,oBAGIlgB,IAAiBC,EAAAA,EAAAA,IAAkB9Q,GAAKpL,EAAOob,OAAsB3a,IAG3EgC,EAAAA,EAAAA,KAAU,KACJwZ,IAAkBzH,IAAWxU,QAAgCS,IAAxBT,EAAKggC,gBAC5ChD,GAAW,CAAEj9B,UACf,GACC,CAACC,EAAMD,EAAQyU,GAASyH,KAE3B,MAAMgkB,GAAW5rB,GAAQmU,IAAcS,EAAAA,EAAAA,IAAa5U,EAAMmU,IAClD0X,cAAeC,KAAwBt9B,EAAAA,EAAAA,GAAkBo9B,IAEjE,IAAKjgC,EACH,OAGF,MAAMoD,GAAOiR,GAAQrU,EAEfiB,IAAYiC,EAAAA,EAAAA,GAChB,4BACAoR,EAAAA,EAAAA,IAASvU,GAAU,UAAY,QAC/ByU,IAAW,QACXzI,GAAc,WACd0vB,GAAmB,kBAGrB,OACEx4B,EAAAA,GAAAA,cAACoV,EAAAA,EAAQ,CACPjN,IAAKA,GACLnK,UAAWA,GACXkX,KAAMioB,EAAAA,GAAgC,KAAGC,EAAAA,EAAAA,IAAmBtgC,EAAQ,SAAUyW,EAAAA,WAAoB/V,EAClGgG,MAAQ,QAAOm2B,MACfnqB,QAAS+B,KAAY7J,GACrBm1B,eAAgBA,GAChB38B,QAASga,GACT0f,YAAa6C,GACbY,mBAAiB,GAEjBr9B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,UACbgC,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLD,KAAMA,GACN8X,gBAAiB7G,GAAM8B,SAEzBlT,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,wBACbgC,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,gBAAiBi9B,IAAuB,yBACvEl9B,EAAAA,GAAAA,cAACs9B,EAAAA,EAAS,CAACvgC,KAAMA,EAAMyU,QAASA,EAASikB,6BAA2B,EAACE,YAAaiG,MAEnF7+B,EAAKe,cAAgBf,EAAKc,gBACzBmC,EAAAA,GAAAA,cAACu9B,EAAc,CAAC71B,SAAUA,GAAUoB,WAAYA,EAAY3L,SAAUo8B,KAG1Ev5B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,QACbgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,YACbgC,EAAAA,GAAAA,cAACyd,EAAAA,EAAa,CACZtd,KAAMA,GACN4lB,iBAAe,EACf9N,gBAAiBnb,IAAWsU,GAAM3T,IAAM2T,GAAM8B,OAC9CiF,oBAAqBA,IAEtB3G,GAAWxR,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,oBACzBgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,cACdjB,EAAK26B,aACJ13B,EAAAA,GAAAA,cAACw9B,EAAAA,EAAe,CACdj1B,QAASxL,EAAK26B,YACdvZ,eAAgBkb,KAItBr5B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,YACZ09B,KACD17B,EAAAA,GAAAA,cAACs9B,EAAAA,EAAS,CAACvgC,KAAMA,EAAMy4B,SAAUA,EAAUhkB,QAASA,MAGvDspB,IACC96B,EAAAA,GAAAA,cAACy9B,EAAAA,EAAe,CACd5mB,OAAQqjB,GACRpjB,QAASsjB,GACTrjB,oBAAqBikB,GACrBj+B,KAAMA,IAGTk+B,IACCj7B,EAAAA,GAAAA,cAACu1B,EAAAA,EAAa,CACZ1e,OAAQwjB,GACRvjB,QAASyjB,GACTxjB,oBAAqBokB,GACrBr+B,OAAQA,IAGXs+B,IACCp7B,EAAAA,GAAAA,cAACo1B,EAAAA,EAAe,CACdve,OAAQ2jB,GACR1jB,QAAS4jB,GACT3jB,oBAAqBukB,GACrBx+B,OAAQA,IAGXy+B,IACCv7B,EAAAA,GAAAA,cAAC09B,EAAAA,EAAW,CACV7mB,OAAQ8jB,GACR7jB,QAAS+jB,GACT9jB,oBAAqB0kB,GACrB3+B,OAAQA,EACRsvB,QAAQ,SAGH,K,mCCxUf,MCqEA,GAAe1vB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAA2C,IAAzC,SAAEk6B,EAAQ,WAAEmE,GAAYr+B,EAGxE,MAAO,CACLs+B,WAHiBpE,GAA2B,WAAfmE,GAA0BE,EAAAA,EAAAA,IAAiBjhC,EAAQ48B,QAAYh8B,EAI5FsgC,eAAeC,EAAAA,EAAAA,IAAoBnhC,EAAQ,MAC5C,GANiBD,EAvC2BoB,IAEzC,IAF0C,WAC9C6/B,EAAU,cAAEE,EAAa,gBAAEE,EAAe,uBAAEC,GAC7ClgC,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,SAAEoJ,IAAa2C,EAAAA,EAAAA,MAEf6zB,GAAmB1/B,EAAAA,EAAAA,KAAY,KACnCw/B,EAAgB,CAAEpc,KAAM,aAAcuc,QAASP,IAC/CK,EAAuBG,EAAAA,GAAAA,8BAA8C,GACpE,CAACR,EAAYI,EAAiBC,IAEjC,OACEj+B,EAAAA,GAAAA,cAAA,OAAKhC,UD1Cc,wBC2CjBgC,EAAAA,GAAAA,cAAA,OAAKhC,UD3C6C,wBC4C/C8/B,GAAiB99B,EAAAA,GAAAA,cAACq+B,EAAAA,EAAuB,CAACz8B,QAASk8B,EAAev6B,KAhBzD,MAkBZvD,EAAAA,GAAAA,cAAA,MAAIhC,UD9C6E,uBC8CpDyD,IAAI,QAAQpD,EAAK,2BAC9C2B,EAAAA,GAAAA,cAAA,KAAGhC,UD/CmH,uBC+CpFyD,IAAI,QACnCpD,EAAKu/B,EAAa,mCAAqC,mBAEzDA,GACC59B,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLkP,QAAS9H,EACT42B,OAAK,EACLC,MAAI,EACJr+B,QAASg+B,EACT36B,KAAK,UACL7B,MAAOrD,EAAKqD,OAEZ1B,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,uBACbgC,EAAAA,GAAAA,cAAA,OAAKhC,UD5DwT,wBC6D1TK,EAAK,sCAIR,K,+CCjEV,SAAgB,KAAO,uBAAuB,UAAY,uBAAuB,OAAS,uBAAuB,MAAQ,uBAAuB,eAAe,uBAAuB,YAAc,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,cAAgB,uBAAuB,OAAS,uBAAuB,aAAe,uBAAuB,OAAS,wBCoK3a,GAAe3B,EAAAA,EAAAA,KAxIeqB,IAIxB,IAJyB,gBAC7BygC,EAAe,YACf5E,EAAW,QACX15B,GACDnC,EACC,MAAM,sBAAE0gC,IAA0BrgC,EAAAA,EAAAA,MAC5BC,GAAOC,EAAAA,EAAAA,KAEPogC,GAAiBC,EAAAA,EAAAA,IAA8BC,EAAAA,KAE/CC,GADiBC,EAAAA,EAAAA,MACmBF,EAAAA,MAAqBG,WAEzDC,GAAergC,EAAAA,EAAAA,KAAQ,KAC3B,IAAK+/B,GAAgBp9B,OAAQ,OAAOjD,EAAK,WAEzC,MAAMW,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAO2/B,EAAet/B,MAAM,EAnBV,GAmB4BC,KAAI,CAACvC,EAAQuE,EAAG49B,KAC5D,MAAMnV,EAASzoB,IAAM49B,EAAI39B,OAAS,EAC5BvE,EAAOiC,EAAUlC,GACvB,IAAKC,EACH,OAGF,MAAMwR,GAAQ+I,EAAAA,EAAAA,GAAajZ,EAAMtB,GAEjC,OACEiD,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMhC,WAAWiC,EAAAA,EAAAA,GAAe0D,EAAAA,KAAak7B,GAAsB9hC,EAAKi5B,aAAeryB,EAAAA,UACpFuL,EAAAA,EAAAA,GAAWX,IAEbub,EAAS,GAAK,KACd,GAEL,GACD,CAAC4U,EAAgBrgC,EAAMwgC,IAEpBhC,GAAiBl+B,EAAAA,EAAAA,KAAQ,KAC7B,MAAMugC,GAAkBV,EAAgB/Z,aAAe,CACrDlW,MAAOlQ,EAAK,gCACZgX,KAAM,WACN8pB,QAASA,KACPV,EAAsB,CAAEha,aAAa,GAAO,GAI1C2a,EAAeZ,EAAgB/Z,aAAe,CAClDlW,MAAOlQ,EAAK,8BACZgX,KAAM,SACN8pB,QAASA,KACPV,EAAsB,CAAEha,aAAa,GAAQ,GAI3C4a,EAAa,CACjB9wB,MAAOlQ,EAAK,+BACZgX,KAAM,kBACN8pB,QAASA,KACPV,EAAsB,CAAEa,UAAU,GAAO,GAI7C,OAAOC,EAAAA,EAAAA,IAAQ,CAACL,EAAgBE,EAAcC,GAAY,GACzD,CAACb,EAAgB/Z,YAAapmB,EAAMogC,IAEjChC,GAAkBj+B,EAAAA,EAAAA,KAAaiP,IACnCA,EAAEiU,iBACFkY,KAAe,GACd,CAACA,IAiDJ,OACE55B,EAAAA,GAAAA,cAACoV,EAAAA,EAAQ,CACPlV,QAASA,EACT05B,YAAa6C,EACbz+B,WAAWiC,EAAAA,EAAAA,GACT0D,EAAAA,KACA66B,EAAgB/Z,aAAe9gB,EAAAA,UAC/B,sBACA,qBAEF67B,gBAAiB77B,EAAAA,OACjBk5B,eAAgBA,EAChBQ,mBAAiB,GAEhBmB,EAAgB/Z,YA3DjBzkB,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe0D,EAAAA,KAAa,SAC1C3D,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,YACbgC,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,QAAS0D,EAAAA,QACtC3D,EAAAA,GAAAA,cAAA,MAAIyB,IAAI,OAAOzD,WAAWiC,EAAAA,EAAAA,GAAe0D,EAAAA,KAAa,aACpD3D,EAAAA,GAAAA,cAAA,KAAGhC,WAAWiC,EAAAA,EAAAA,GAAe0D,EAAAA,KAAa,OAAQ,yBACjDtF,EAAK,mBAGV2B,EAAAA,GAAAA,cAACy/B,EAAAA,EAAK,CACJzhC,UAAW2F,EAAAA,YACXnD,KAAMq+B,GAAqB9H,EAAAA,EAAAA,IAAqB8H,QAAsBrhC,MAS5EwC,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,SAAU0D,EAAAA,gBACvC3D,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,SAAU0D,EAAAA,SACvC3D,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,+BAGjBgC,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe0D,EAAAA,KAAa,SAC1C3D,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,YACbgC,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,QAAS0D,EAAAA,QACtC3D,EAAAA,GAAAA,cAAA,MAAIyB,IAAI,OAAOzD,WAAWiC,EAAAA,EAAAA,GAAe0D,EAAAA,KAAa,aAActF,EAAK,oBAG7E2B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,YACbgC,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,SAAU0D,EAAAA,eACtCq7B,GAEHh/B,EAAAA,GAAAA,cAACy/B,EAAAA,EAAK,CACJzhC,UAAW2F,EAAAA,YACXnD,KAAMq+B,GAAqB9H,EAAAA,EAAAA,IAAqB8H,QAAsBrhC,OAuBrE,IC/GTkiC,GAAmB,IAAI78B,IAAI,CAAC,IAAK,MAkLvC,IAAenG,EAAAA,EAAAA,KAhLgBqB,IAUzB,IAV0B,WAC9B4/B,EAAU,SACVnE,EAAQ,SACRr8B,EAAQ,iBACR47B,EAAgB,kBAChB4G,EAAiB,gBACjBnB,EAAe,gBACfR,EAAe,uBACfC,EAAsB,0BACtB2B,GACD7hC,EACC,MAAM,SAAE87B,EAAQ,aAAEgG,EAAY,gBAAE5F,IAAoB77B,EAAAA,EAAAA,MAE9C2zB,GAAerxB,EAAAA,EAAAA,IAAuB,MACtCo/B,GAAsBp/B,EAAAA,EAAAA,KAAO,GAE7Bq/B,EACW,QAAfpC,EAAuBqC,EAAAA,IAA+B,aAAfrC,EAA4BiB,EAAAA,IAAqBpF,EAGpFyG,EAAsC,QAAftC,GAAwBgC,EAE/CvG,GAAauF,EAAAA,EAAAA,IAA8BoB,GAE3CG,GAAe9G,GAAY93B,QAAU,GAAK6+B,EAAAA,IAC1CC,EAAgBH,EAClBzB,EAAgB/Z,YAAc4b,EAAAA,IAA2BF,EAAAA,IAAiB,GAExE,cAAEG,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAapH,IAElD/U,EAAaC,IAAWC,EAAAA,EAAAA,QAAkB/mB,EAAW47B,OAAY57B,EAAWijC,EAAAA,MAGnFC,EAAAA,EAAAA,GAAWvjC,GAAYi8B,GAAY93B,OAAS,CAC1C,cAAgBmM,IACdA,EAAEiU,iBACFme,EAAa,CAAEc,kBAAmB,EAAGvH,cAAa,EAEpD,gBAAkB3rB,IAChBA,EAAEiU,iBACFme,EAAa,CAAEc,iBAAkB,EAAGvH,cAAa,QAEjD57B,IAGJgC,EAAAA,EAAAA,KAAU,KACR,GAAKrC,GAAai8B,GAAewH,EAAAA,GA2BjC,OAFAhoB,SAASioB,iBAAiB,UAAWC,GAE9B,KACLloB,SAASmoB,oBAAoB,UAAWD,EAAc,EAxBxD,SAASA,EAAcrzB,GACrB,IAAMuzB,EAAAA,IAAavzB,EAAEwzB,UAAcD,EAAAA,IAAavzB,EAAEyzB,UAAazzB,EAAE0zB,KAAKC,WAAW,SAAU,CACzF,MAAO,CAAEC,GAAS5zB,EAAE0zB,KAAKG,MAAM,cAAgB,GAC/C,IAAKD,GAAS3B,GAAiB18B,IAAIq+B,GAAQ,OAE3C,MAAME,EAAkBtB,IAAyBzB,EAAgB/Z,YAE3D+c,EAAQD,GAAmB,EAAI,EAC/BE,EAAWC,OAAOL,GAASG,EAAQ,EAEzC,GAAID,IAAiC,IAAdE,EAErB,YADA7B,EAA0B+B,EAAAA,GAAAA,UAI5B,GAAIF,EAAWrI,EAAY93B,OAAS,EAAG,OAEvCu4B,EAAS,CAAEp8B,GAAI27B,EAAYqI,GAAWjF,sBAAsB,GAC9D,CACF,CAMC,GACA,CAACgC,EAAiBrhC,EAAUyiC,EAA2B/F,EAAUgG,EAAczG,EAAY6G,IAE9F,MAAM,QAAE2B,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAS/P,EACTgQ,WApF0B,MAuFtBC,GAAsB3+B,EAAAA,EAAAA,IAAgB,KAC1Cu8B,EAA0B+B,EAAAA,GAAAA,UAC1B1H,GAAiB,IAGbgI,GAA0B5+B,EAAAA,EAAAA,IAAgB,KAC1Cy8B,EAAoB5+B,QACtB4+B,EAAoB5+B,SAAU,EAGhC8gC,GAAqB,IAGjBvF,GAAkByF,EAAAA,EAAAA,IAAsBplC,IACxCgjC,EAAoB5+B,QACtB4+B,EAAoB5+B,SAAU,EAGhC24B,EAAS,CAAEp8B,GAAIX,EAAQ0/B,sBAAsB,GAAO,GACnD,CAAC3C,GAzGsB,KAyGU,GAE9BsI,GAAkB9+B,EAAAA,EAAAA,IAAiBoK,IACvC,MAAM2R,EAAO3R,EAAE4R,cAAc1R,wBACvB1I,EAAIwI,EAAEG,QAAUwR,EAAK1R,KACrBxI,EAAIuI,EAAE6R,QAAUF,EAAKG,IACvBta,EAAIma,EAAK9a,OAASY,EAAIka,EAAKla,IAC/B46B,EAAoB5+B,SAAU,EAAI,IA6BpC,OACElB,EAAAA,GAAAA,cAAC6kB,EAAAA,EAAc,CACb7mB,WAAWiC,EAAAA,EAAAA,GAAe,0BAA2B84B,GAAoB,oBACzE5wB,IAAK4pB,EACLjN,MAAOT,EACP+d,aAAa,oCACbC,iBAAkB5B,EAAAA,IAClB6B,yBAAuB,EACvBC,UAAWrC,EAAcE,EACzBnd,WAAYqB,EACZke,YAAaL,GAEZlC,GACCjgC,EAAAA,GAAAA,cAACyiC,EAAO,CACNpiC,IAAI,UACJm+B,gBAAiBA,EACjBt+B,QAAS8hC,EACTpI,YAAaqI,IAGhB5d,GAAa/iB,OA9ClB,WACE,MAAMohC,EAAiBtJ,EAAYjV,QAAQE,EAAa,IAElDse,GAAcC,EAAAA,EAAAA,IAAoB7C,IAAqB,EAE7D,OAAO1b,EAAahlB,KAAI,CAAC5B,EAAI4D,KAC3B,MAAMm0B,EAAWkN,EAAiBrhC,EAAIshC,EAChChJ,EAAYyG,GAAiBsC,EAAiBrhC,GAAK8+B,EAAAA,IAEzD,OACEngC,EAAAA,GAAAA,cAAC6iC,EAAI,CACHxiC,IAAK5C,EACLqlC,cAAetN,EAAWn0B,GAAI0hC,EAAAA,EAAAA,IAAYtlC,GAC1CX,OAAQW,EACR+3B,SAAUA,EACVgE,SAAUA,EACVE,cAAe6G,EAAiB9iC,GAChCg8B,UAAW6G,EAAc7iC,GACzBk8B,UAAWA,EACXxhB,oBAAqBypB,EACrBhI,YAAa6C,GACb,GAGR,CAuBMuG,GACE3e,IAAgBA,EAAY/iB,OAE5BtB,EAAAA,GAAAA,cAACijC,EAAW,CACVzJ,SAAUA,EACVmE,WAAYA,EACZK,gBAAiBA,EACjBC,uBAAwBA,IAI5Bj+B,EAAAA,GAAAA,cAAColB,EAAAA,EAAO,CAAC/kB,IAAI,YAEA,G,qZC/NrB,MCsOA,GAAe3D,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAoC,IAAlC,OAAExC,EAAM,MAAE+e,EAAK,WAAE/S,GAAYxJ,EACpC,MAAMvC,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAE1B46B,GAAcK,EAAAA,EAAAA,IAAkBn7B,EAAQE,EAAQ+e,EAAMqnB,gBACtD,SAAE3L,EAAQ,iBAAEC,EAAgB,WAAEC,GAAeC,GAAe,CAAC,EAC7DC,EAAoBJ,GACrBjmB,EAAAA,EAAAA,IAAW1U,EAAQ26B,KAAav6B,EAAAA,EAAAA,IAAWJ,EAAQ26B,QAAa/5B,EAC/Do6B,EAAoBF,GAAcG,EAAAA,EAAAA,IAAiBH,QAAel6B,EAClEs6B,EAAsBF,GAAqBJ,GAC7CO,EAAAA,EAAAA,IAAkBn7B,EAAQE,EAAQ06B,QAClCh6B,GACIw6B,cAAeC,EAAqBC,aAAcC,GAAuBP,GAAqB,CAAC,EACjG3b,GAAe2c,EAAAA,EAAAA,IAAkBh8B,EAAQE,EAAQ+e,EAAMpe,GAAI,gBAC3Do7B,GAAQC,EAAAA,EAAAA,IAAYl8B,EAAQE,EAAQ+e,EAAMpe,IAC1C8d,GAAaC,EAAAA,EAAAA,IAAiB5e,EAAQE,EAAQ+e,EAAMpe,IACpDi4B,EAAiBh4B,QAAQ6d,GAAY4nB,yBAEnCrmC,OAAQu7B,EAAezmB,SAAU0mB,IAAoBzmB,EAAAA,EAAAA,IAAyBjV,IAAW,CAAC,EAElG,MAAO,CACLG,OACA26B,cACAO,sBACAE,qBACAL,sBACAH,oBACA1b,eACAmnB,WAAWC,EAAAA,EAAAA,IAAqBzmC,EAAQE,EAAQ+e,EAAMpe,IACtD87B,yBAAyBv4B,EAAAA,EAAAA,IAA0BpE,GACnDi8B,WACIpB,GAAcC,GAAe,CAC/B2B,2BAA2BC,EAAAA,EAAAA,IAAqB18B,EAAQ86B,IAE1DuB,cAAenwB,GAAc/L,GAAMU,KAAO46B,GAAiBC,IAAoBzc,EAAMpe,GACrFi4B,iBACD,GApCe/4B,EA/JqBoB,IAqBnC,IArBoC,MACxC8d,EAAK,WACL/S,EAAU,OACVhM,EAAM,KACNC,EAAI,MACJyG,EAAK,YACLk0B,EAAW,cACXuB,EAAa,0BACbI,EAAyB,oBACzBlhB,EAAmB,UACnBirB,EAAS,oBACTtL,EAAmB,oBACnBG,EAAmB,mBACnBE,EAAkB,kBAClBR,EAAiB,cACjB+B,EAAa,wBACbH,EAAuB,UACvBE,EAAS,aACTxd,EAAY,MACZ4c,EAAK,eACLnD,GACD33B,EACC,MAAM,SAAE87B,EAAQ,YAAEyJ,EAAW,iBAAExJ,IAAqB17B,EAAAA,EAAAA,MAE9CC,GAAOC,EAAAA,EAAAA,MAEN47B,EAAmBC,EAAiBC,IAAoBt5B,EAAAA,EAAAA,MACxDu5B,EAAiBC,EAAeC,IAAkBz5B,EAAAA,EAAAA,MAClDg6B,EAAyBC,EAAuBC,IAA2Bl6B,EAAAA,EAAAA,MAC3Em6B,EAAuBC,EAAqBC,KAAyBr6B,EAAAA,EAAAA,MAEtE,SACJ00B,GAAQ,SAAE+N,IACR1nB,EACErK,GAAUqK,EAAMrK,cAA8BhU,IAAlBqe,EAAMrK,SAAyBzU,EAAKyU,QAEhEgyB,IAAwBngC,EAAAA,EAAAA,IAAgB,KAC5C03B,IACAZ,GAAiB,IAGbuC,IAAer5B,EAAAA,EAAAA,IAAgB,KACnCigC,EAAY,CAAExmC,OAAQC,EAAKU,GAAIqU,QAAS+J,EAAMpe,IAAK,IAG/Ck/B,IAAat5B,EAAAA,EAAAA,IAAgB,KACjC63B,IACAZ,GAAe,KAGX,eAAEoB,GAAc,IAAEvzB,KAAQwzB,EAAAA,EAAAA,GAAiB,CAC/C5+B,OACAD,SACA46B,cACAmB,QACAf,sBACAG,sBACAE,qBACAR,oBACAe,iBAAkB7c,EAClB1D,sBACA4E,SAAS,EACTd,eAEAyd,gBACAH,0BACAE,cAGIgK,IAAkBpgC,EAAAA,EAAAA,IAAgB,KACtCw2B,EAAS,CAAEp8B,GAAIX,EAAQ8U,SAAUiK,EAAMpe,GAAI++B,sBAAsB,IAE7DvD,GACFa,GACF,IAGI+C,GCzIO,SAA+B9+B,GAc3C,IAd4C,MAC7C8d,EAAK,KACL9e,EAAI,UACJ2mC,EAAS,UACTN,EAAS,aACT1G,EAAY,WACZC,GAQD5+B,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,OAAOK,EAAAA,EAAAA,KAAQ,KACb,MAAM,SACJ62B,EAAQ,QAAEhkB,EAAO,SAAE+xB,EAAU9lC,GAAIqU,GAC/B+J,EAEE/e,EAASC,EAAKU,IAEd,UACJkmC,EAAS,kBACTC,EAAiB,cACjBC,EAAa,sBACb/wB,EAAqB,iBACrBgxB,IACE1lC,EAAAA,EAAAA,MAEE2lC,GAAkBC,EAAAA,EAAAA,IAAkBjnC,EAAM8e,GAC1CooB,EAAkBlnC,EAAK8a,YAAapF,EAAAA,EAAAA,IAAiB1V,EAAM,gBAE3DmnC,EAAqB/G,EAAAA,IAAgC,CACzD5uB,MAAO,kBACP8G,KAAM,kBACN8pB,QAASA,KACP2E,EAAiB,CAAEhnC,OAAQC,EAAKU,GAAImU,SAAUE,GAAU,GAItDqyB,EAAmBtoB,EAAMma,cAAgB0N,EAC3C,CACAn1B,MAAOlQ,EAAK,cACZgX,KAAM,YACN8pB,QAASA,KACP0E,EAAc,CAAE/mC,SAAQgV,WAAU,QAGpCtU,EAEE4mC,EAAYH,EAAmBzO,EACjC,CACAjnB,MAAOlQ,EAAK,gBACZgX,KAAM,QACN8pB,QAASA,IAAMyE,EAAkB,CAAE9mC,SAAQgV,UAAS0jB,UAAU,KAE9D,CACAjnB,MAAOlQ,EAAK,YACZgX,KAAM,MACN8pB,QAASA,IAAMyE,EAAkB,CAAE9mC,SAAQgV,UAAS0jB,UAAU,UAC3Dh4B,EAED6mC,EAAetnC,EAAKyU,UAAuB,IAAZA,IAAkC,IAAZA,EACvD,CACAjD,MAAOlQ,EAAK,mBACZgX,KAAM,SACN8pB,QAASA,IAAMrsB,EAAsB,CAAEhW,SAAQgV,UAASN,SAAS,KAEjE,CACAjD,MAAQ,GAAElQ,EAAK,sBACfgX,KAAM,OACN8pB,QAASxC,GAGP2H,EAAmBP,EAAmBR,EACxC,CACAh1B,MAAOlQ,EAAK,0BACZgX,KAAM,eACN8pB,QAASA,IAAMwE,EAAU,CAAE7mC,SAAQgV,UAASyxB,UAAU,KAEtD,CACAh1B,MAAOlQ,EAAK,yBACZgX,KAAM,cACN8pB,QAASA,IAAMwE,EAAU,CAAE7mC,SAAQgV,UAASyxB,UAAU,UACnD/lC,EAED+mC,EAAenB,EAAY,CAC/B70B,MAAOlQ,EAAK,0BACZgX,KAAM,SACNmvB,aAAa,EACbrF,QAASzC,QACPl/B,EAEJ,OAAO+hC,EAAAA,EAAAA,IAAQ,CACb2E,EACAE,EACAD,EACAE,EACAC,EACAC,GACA,GACD,CAAC1oB,EAAO9e,EAAM2mC,EAAWrlC,EAAM+kC,EAAW1G,EAAcC,GAC7D,CDgCyB8H,CAAuB,CAC5C5oB,QACA9e,OACA2mC,UAAWhO,EACX0N,YACA1G,aAAc8G,GACd7G,gBAGF,OACE38B,EAAAA,GAAAA,cAACoV,EAAAA,EAAQ,CACPpX,WAAWiC,EAAAA,EAAAA,GD/JM,uBCiKf,OACA6I,GAAc,WACd,uBAEF5I,QAASujC,GACTjgC,MAAOA,EACP0R,KAAMioB,EAAAA,GAAgC,KAAGC,EAAAA,EAAAA,IAAmBtgC,EAAQ,SAAU+e,EAAMpe,WAAQD,EAC5Fq/B,eAAgBA,GAChBQ,mBAAiB,EACjBl1B,IAAKA,IAELnI,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,QACbgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,YACbgC,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe,UAC7BD,EAAAA,GAAAA,cAACwd,EAAAA,EAAS,CAAC3B,MAAOA,EAAO7d,UD/KkI,uBC+KrGma,oBAAqBA,IAC3EnY,EAAAA,GAAAA,cAAA,MAAIyB,IAAI,OAAOzD,UAAU,aAAYkR,EAAAA,EAAAA,GAAW2M,EAAMtN,SAEvDsN,EAAMrK,SAAWxR,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,oBAC/BgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,cACdulC,IACCvjC,EAAAA,GAAAA,cAAA,KAAGhC,WAAWiC,EAAAA,EAAAA,GACZ,OACA,kBDvLkF,0BC4LrFy3B,GACC13B,EAAAA,GAAAA,cAACw9B,EAAAA,EAAe,CACdj1B,QAASmvB,EACTvZ,eAAgBkb,KAItBr5B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,YACZ09B,KACD17B,EAAAA,GAAAA,cAACs9B,EAAAA,EAAS,CACRvgC,KAAMA,EACNy4B,SAAUA,GACVhkB,QAASA,GACTqK,MAAOA,EACP6Z,eAAgBA,MAIrBoF,GACC96B,EAAAA,GAAAA,cAAC0kC,EAAAA,EAAa,CACZ7tB,OAAQqjB,EACRpjB,QAASsjB,EACTrjB,oBAAqBikB,EACrB2J,sBAAoB,EACpBC,eAAgBlI,GAChBl8B,KAAMnC,EAAK,+BACXwmC,aAAcxmC,EAAK,YAGtB48B,GACCj7B,EAAAA,GAAAA,cAACu1B,EAAAA,EAAa,CACZ1e,OAAQwjB,EACRvjB,QAASyjB,EACTxjB,oBAAqBokB,GACrBr+B,OAAQA,EACRgV,QAAS+J,EAAMpe,KAGV,K,qEElOf,SAAgB,KAAO,uBAAuB,cAAc,uBAAuB,WAAa,uBAAuB,QAAU,uBAAuB,MAAQ,uBAAuB,YAAc,uBAAuB,SAAS,uBAAuB,MAAQ,uBAAuB,WAAW,uBAAuB,QAAU,wBC0BjUqnC,EAAY,EAAIxpB,EAAAA,GAwCtB,GAAe5e,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAA6B,IAA3B,OAAExC,GAAQwC,EAC1D,MAAMvC,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAC1BioC,EAAkBhoC,IAASA,EAAK8a,YAAapF,EAAAA,EAAAA,IAAiB1V,EAAM,iBAE1E,MAAO,CACL+gC,eAAeC,EAAAA,EAAAA,IAAoBnhC,EAAQ,MAC3CmoC,kBACD,GAPiBpoC,EAtC0BoB,IAExC,IAFyC,OAC7CjB,EAAM,cAAEghC,EAAa,gBAAEiH,GACxBhnC,EACC,MAAM,qBAAEinC,IAAyB5mC,EAAAA,EAAAA,MAE3BC,GAAOC,EAAAA,EAAAA,MACP,SAAEoJ,IAAa2C,EAAAA,EAAAA,MAEf46B,GAAoBzmC,EAAAA,EAAAA,KAAY,KACpCwmC,EAAqB,CAAEloC,UAAS,GAC/B,CAACA,EAAQkoC,IAEZ,OACEhlC,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,EAAAA,MACd3D,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,EAAAA,SACbm6B,GAAiB99B,EAAAA,GAAAA,cAACq+B,EAAAA,EAAuB,CAACz8B,QAASk8B,EAAev6B,KAAMuhC,KAE3E9kC,EAAAA,GAAAA,cAAA,MAAIhC,UAAW2F,EAAAA,MAAclC,IAAI,QAAQpD,EAAK,8BAC9C2B,EAAAA,GAAAA,cAAA,KAAGhC,WAAWiC,EAAAA,EAAAA,GAAe0D,EAAAA,YAAoBA,EAAAA,UAAkBlC,IAAI,QACpEpD,EAAK,oCAEP0mC,GACC/kC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLkP,QAAS9H,EACT42B,OAAK,EACLp+B,QAAS+kC,EACT1hC,KAAK,UACL7B,MAAOrD,EAAKqD,OAEZ1B,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,EAAAA,YACbtF,EAAK,gCAIR,KC0NV,GAAe3B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAQsoC,EAAUC,KACjBA,GAAkBnM,EAAAA,EAAAA,IAAuBp8B,IAEzC,MAAME,GAASM,EAAAA,EAAAA,IAAeR,GAAQ67B,iBAChC17B,EAAOD,GAASE,EAAAA,EAAAA,IAAWJ,EAAQE,QAAUU,GAEjDV,OAAQu7B,EACRzmB,SAAU0mB,IACRzmB,EAAAA,EAAAA,IAAyBjV,IAAW,CAAC,EAEzC,MAAO,CACLG,OACA0rB,eAAgB3rB,IAAWu7B,EAAgBC,OAAkB96B,EAC7D+7B,yBAAyBv4B,EAAAA,EAAAA,IAA0BpE,GACpD,GAfeD,EA5N0BoB,IASxC,IATyC,KAC7ChB,EAAI,eACJ0rB,EAAc,OACd5R,EAAM,SACNyoB,EAAQ,cACR8F,EAAa,oBACbruB,EAAmB,qBACnBsuB,EAAoB,wBACpB9L,GACDx7B,EACC,MAAM,gBACJk8B,EAAe,iBAAEqL,EAAgB,WAAEvL,IACjC37B,EAAAA,EAAAA,MAGE+J,GAAMzH,EAAAA,EAAAA,IAAuB,MAG7BqxB,GAAerxB,EAAAA,EAAAA,IAAuB,MAEtC6kC,GAAsB7kC,EAAAA,EAAAA,IAAuB,OAC7C,SAAEgH,IAAa2C,EAAAA,EAAAA,OAErB7K,EAAAA,EAAAA,KAAU,KACJzC,IAASA,EAAK+e,QAChBie,EAAW,CAAEj9B,OAAQC,EAAKU,IAC5B,GACC,CAACV,EAAMg9B,IAEV,MAAOyL,EAAYC,IAAiBj7B,EAAAA,EAAAA,KAAS,GACvCnM,GAAOC,EAAAA,EAAAA,KAEPonC,GAAcriC,EAAAA,EAAAA,IAAgB,KAClC42B,GAAiB,KAGnBz6B,EAAAA,EAAAA,KAAU,KACH+5B,GAA4B1iB,GAC/BE,KACF,GACC,CAACwiB,EAAyB1iB,EAAQE,IAErC,MAAM4uB,GAAuBtiC,EAAAA,EAAAA,IAAgB,KACtCtG,GACLuoC,EAAiB,CAAE7nC,GAAIV,EAAKU,GAAI++B,sBAAsB,GAAO,KAGzD,QAAEoF,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAS/P,EACTgQ,WAnD0B,OAsD5B6D,EAAAA,EAAAA,IAAeL,EAAqB3D,GAAStiC,IAAwB,IAAvB,eAAE0Z,GAAgB1Z,EAC9DmmC,GAAezsB,EAAe,IAGhC,MAAMogB,GAAaz6B,EAAAA,EAAAA,KAAQ,IAClB5B,GAAM+e,QACT+pB,EAAAA,EAAAA,IAAiB3mC,OAAOC,OAAOpC,EAAK+e,QAAS/e,EAAK+oC,uBAAuBzmC,KAAIxC,IAAA,IAAC,GAAEY,GAAIZ,EAAA,OAAKY,CAAE,IAC3F,IACH,CAACV,KAEE,cAAEujC,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAapH,EAAYr8B,GAAMU,KAEpE4mB,GAAaC,KAAWC,EAAAA,EAAAA,IAAkB,KAC1CxnB,GACLg9B,EAAW,CAAEj9B,OAAQC,EAAKU,IAAK,GAC9B27B,GAAar8B,GAAMgpC,aAAe3M,EAAW93B,QAAUvE,EAAKgpC,YAAaC,EAAAA,KAEtEC,IAAkBvlC,EAAAA,EAAAA,KAAO,GACzBue,GAAYpI,IAAWyoB,EACvB4G,IAAgB5c,EAAAA,EAAAA,GAAYrK,IAE9BinB,KAAkBjnB,KACpBgnB,GAAgB/kC,SAAU,IAG5BilC,EAAAA,EAAAA,GAAe,CACbhpC,SAAU8hB,GACVmnB,OAAQV,EACRW,KAAMtpC,GAAOqgC,EAAAA,EAAAA,IAAmBrgC,EAAKU,GAAI,SAAU8V,EAAAA,SAAkB/V,KAGvEgC,EAAAA,EAAAA,KAAU,IAAOyf,IAAYqnB,EAAAA,EAAAA,GAAsBZ,QAAeloC,GAAY,CAACkoC,EAAazmB,MAE5Fzf,EAAAA,EAAAA,KAAU,KACJ0mC,KAAkBjnB,KAEpBsnB,EAAAA,EAAAA,KAAoB,KAClB,IAAKp+B,EAAIjH,QAAS,OAElB,MAAMslC,GAA6BC,EAAAA,EAAAA,OACnCC,EAAAA,EAAAA,GAAqBv+B,EAAIjH,QAASslC,GAElCnB,MAEIpmB,IACFgnB,GAAgB/kC,SAAU,EAC1BiH,EAAIjH,QAASsC,MAAMmjC,UAAY,SAE/BV,GAAgB/kC,SAAU,EAC1BiH,EAAIjH,QAASsC,MAAMmjC,UAAY,GACjC,GAEJ,GACC,CAAC1nB,GAAWomB,EAAsBa,MAErC1mC,EAAAA,EAAAA,KAAU,KACR,GAAK4hB,EAAAA,GAIL,OAAO3S,EAAAA,EAAAA,IAActG,EAAIjH,QAAU,CACjCypB,wBAAyB,aACzBC,QAAUA,CAACnd,EAAGod,IAGRA,KAFmBxsB,EAAKqD,MAAQopB,EAAAA,GAAAA,KAAsBA,EAAAA,GAAAA,SAGxDmP,KACO,IAKX,GACD,CAACA,EAAiB57B,EAAKqD,QAmB1B,MAAMqe,QAA6BviB,IAAjBT,GAAM+e,OAExB,OACE9b,EAAAA,GAAAA,cAAA,OACEmI,IAAKA,EACLnK,WAAWiC,EAAAA,EAAAA,GCjNM,uBDmNfulC,GCnN+P,uBDoN/PnnC,EAAKqD,OCpNuC,wBDqN3C63B,GCrNsH,wBDuNzHqN,gBAAkB/vB,OAA+BrZ,EAAtBuZ,GAE3B/W,EAAAA,GAAAA,cAAA,OAAKvC,GAAG,kBAAkBO,UAAU,eAClCgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLgD,KAAK,UACLkM,MAAM,cACNvP,QAASwlC,EACT/1B,UAAWtR,EAAK,UAEhB2B,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,qBAGdjB,GACCiD,EAAAA,GAAAA,cAACmlB,EAAAA,EAAa,CACZhJ,UAAQ,EACRne,UCvO+W,uBDwO/WlB,OAAQC,EAAKU,GACbyC,QAASylC,IAIZ5oC,GAEGiD,EAAAA,GAAAA,cAAC6mC,EAAAA,EAAa,CACZ/pC,OAAQC,EAAKU,GACbmU,SAAU2B,EAAAA,GACVglB,gBAAgB,SAChBuO,kBAAkB,EAClBC,kBAAgB,EAChBr/B,SAAUA,EACV09B,cAAeA,KAKtBroC,GAAQiD,EAAAA,GAAAA,cAACgnC,EAAAA,EAAgB,CAAClqC,OAAQC,EAAKU,GAAIQ,iBAAiB,EAAOD,UC3P4H,yBD6PhMgC,EAAAA,GAAAA,cAAA,OAAKhC,UC7P0N,yBD+P/NgC,EAAAA,GAAAA,cAAC6kB,EAAAA,EAAc,CACb7mB,UAAU,0BACVmK,IAAK4pB,EACLjN,MAAOT,GACPge,iBAAkB2D,EAAAA,IAClB1D,yBAAuB,EACvBC,WAAYnJ,GAAY93B,QAAU,GAAK2lC,EAAAA,IACvChkB,WAAYqB,GACZ4iB,cAAeC,EAAAA,IACfC,eAAgBpnC,EAAAA,GAAAA,cAAA,OAAKmI,IAAKo9B,EAAqBvnC,UCxQsS,0BD0QpVN,QAAQ2mB,IAAa/iB,SA/E5B,WACE,MAAMohC,EAAiBtJ,EAAYjV,QAAQE,GAAa,IAExD,OAAOA,IAAahlB,KAAI,CAAC5B,EAAI4D,IAC3BrB,EAAAA,GAAAA,cAACqnC,EAAK,CACJhnC,IAAK5C,EACLX,OAAQC,EAAMU,GACdoe,MAAO9e,EAAM+e,OAAQre,GACrB+F,MAAQ,SAAQk/B,EAAiBrhC,GAAK4lC,EAAAA,SACtCn+B,WAAY2f,IAAmBhrB,EAC/B0a,oBAAqBypB,EACrBlI,cAAe6G,EAAiB9iC,GAChCg8B,UAAW6G,EAAc7iC,MAG/B,CAiEQ6pC,GAEDvnB,KAAcsE,IAAa/iB,QAC1BtB,EAAAA,GAAAA,cAAColB,EAAAA,EAAO,CAAC/kB,IAAI,cAGf0f,IAAqC,IAAxBsE,IAAa/iB,QAAgB+iB,GAAY,KAAOkjB,EAAAA,KAC7DvnC,EAAAA,GAAAA,cAACwnC,EAAU,CAAC1qC,OAAQC,EAAKU,KAEvB,I,yDEnRH,IAAKgqC,EAAkB,SAAlBA,GAAkB,OAAlBA,EAAAA,EAAkB,eAAlBA,EAAAA,EAAkB,qBAAlBA,EAAAA,EAAkB,eAAlBA,CAAkB,MAMvB,SAASC,EAAgDpH,GAC9D,OAAO3hC,EAAAA,EAAAA,KAAQ,KACb,MAAMgpC,EAAazoC,OAAOC,OAAOmhC,GAC3BsH,EAAaD,EAAWpoC,QAAQsoC,GAASA,EAAO,IAAGvmC,OACnDwmC,EAAeH,EAAWpoC,QAAQsoC,GAASA,EAAO,IAAGvmC,OAE3D,OAAQxE,IACN,MAAM28B,EAAY6G,EAAcxjC,GAChC,OAAkB,IAAd28B,EACKgO,EAAmBM,KAI1BtO,IAAcuO,KACXvO,KAAc,KACbmO,GAAcE,GAAgBrO,EAAY,GAC1CqO,EAAeF,GAAcnO,EAAY,EAEtCgO,EAAmBQ,QAGrBR,EAAmBS,IAAI,CAC/B,GACA,CAAC5H,GACN,C,0OC/BA,QAA4F,uBAA5F,EAAiT,uBAAjT,EAAyc,uBAAzc,EAAwe,uBC8Ble6H,EAAsBzG,OAAOpmB,EAAAA,IAsInC,GAAe5e,EAAAA,EAAAA,KAnI4BqB,IAIrC,IAJsC,KAC1ChB,EAAI,kBACJqrC,EAAiB,oBACjBjwB,GACDpa,EACC,MAAM,SAAE87B,IAAaz7B,EAAAA,EAAAA,MAGfiqC,GAAiB3nC,EAAAA,EAAAA,IAAuB,MAExC4nC,GAAgB5nC,EAAAA,EAAAA,IAAuB,MAEvCrC,GAAOC,EAAAA,EAAAA,MAENiqC,KAAoBC,IAAe7pC,EAAAA,EAAAA,KAAQ,IAC3C5B,EAAK+e,QAIH+pB,EAAAA,EAAAA,IAAiB3mC,OAAOC,OAAOpC,EAAK+e,aAASte,GAAW,GAAM4B,MAAM,EArB5D,GAkBN,IAIR,CAACrC,EAAK+e,UAEF2sB,EAAkBC,IAAuBl+B,EAAAA,EAAAA,KAAS,IAClDm+B,EAAkBC,IAAuBp+B,EAAAA,EAAAA,SAA6BhN,IAG3E0c,YAAa2uB,EACbC,gBAAiBC,IACfC,EAAAA,EAAAA,IAAcv7B,IACoB,IAAhC86B,EAAgBvS,cAEpBvoB,EAAEM,kBACFN,EAAEiU,iBAEFmY,EAAS,CACPp8B,GAAIV,EAAKU,GACTmU,SAAU22B,EAAgB9qC,GAC1B++B,sBAAsB,EACtByM,mBAAmBC,EAAAA,EAAAA,QACnB,IAmBJ,OAhBA1pC,EAAAA,EAAAA,KAAU,KACR,MAAM2pC,EAAqBd,EAAennC,QACpCkoC,EAAoBd,EAAcpnC,QACxC,IAAKioC,IAAuBC,EAAmB,OAE/C,MAAMC,EAAmBF,EAAmBG,YACtCC,EAAkBH,EAAkBE,YAEtCvkC,KAAKykC,IAAIH,EAAmBE,GAAmBpB,EACjDS,EAAoB7jC,KAAKC,IAAIqkC,EAAkBE,IAE/CX,OAAoBprC,GAEtBkrC,EAAoBW,EAAmBE,EAAgB,GACtD,CAAChB,EAAiBH,IAGnBpoC,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GD7FM,uBC+FfwoC,GD/F4zB,uBCgG5zBE,GDhGi5B,wBCkGn5BlnC,IAAKpD,EAAKqD,MAAQ,WAAQlE,EAC1BgG,MAAOmlC,EAAoB,wBAAuBA,WAAuBnrC,GAExE+qC,GACCvoC,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,GACd3D,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GDxG0P,uBC0GnQsoC,EAAgBvS,aAAeryB,GAEjCwE,IAAKmgC,EACLpoC,QAAS2oC,EACTlX,YAAaoX,GAEb/oC,EAAAA,GAAAA,cAACwd,EAAAA,EAAS,CACR3B,MAAO0sB,EACPpwB,oBAAqBA,IAEvBnY,EAAAA,GAAAA,cAAA,OAAKhC,UDpHsf,yBCoH5dkR,EAAAA,EAAAA,GAAWq5B,EAAgBh6B,SACxDo6B,GAAoBF,GACpBzoC,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,GACd3D,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,MAKtB3D,EAAAA,GAAAA,cAAA,OAAKhC,UD5HosB,wBC6HtsBwqC,EAAYnpC,KAAKwc,GAChB7b,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GD/H6K,uBCgIlK4b,EAAMma,aAAeryB,GAE3CtD,IAAKwb,EAAMpe,IAEXuC,EAAAA,GAAAA,cAACwd,EAAAA,EAAS,CACR3B,MAAOA,EACP7d,UDtI8hB,uBCuI9hBma,oBAAqBA,IAEvBnY,EAAAA,GAAAA,cAAA,QAAMhC,UDzIgnB,yBCyI3kBkR,EAAAA,EAAAA,GAAW2M,EAAMtN,YAKlEvO,EAAAA,GAAAA,cAAA,OAAKhC,UD9IsuB,2BCiJ7uBuqC,GAAmBvoC,EAAAA,GAAAA,cAAA,OAAKhC,WAAWiC,EAAAA,EAAAA,GAAe0D,EDjJmE,yBCiJhCtF,EAAK,YAC5F2B,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GDnJyW,uBCmJtUsoC,GAAiBvS,aAAeryB,GAC9EwE,IAAKkgC,EACLnoC,QAAS2oC,EACTlX,YAAaoX,GAEZX,KACCO,IAAqBF,GACrBzoC,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,GACd3D,EAAAA,GAAAA,cAAA,OAAKhC,UAAW2F,MAKlB,I,eCzHK,SAASg4B,EAAgB59B,GAiCrC,IAjCsC,KACvChB,EAAI,YACJ26B,EAAW,OACX56B,EAAM,aACNmf,EAAY,MACZ4c,EAAK,oBACLf,EAAmB,oBACnBG,EAAmB,iBACnBS,EAAgB,kBAChBf,EAAiB,mBACjBQ,EAAkB,oBAClBhgB,EAAmB,cACnBuhB,EAAa,UACbD,EAAS,wBACTF,EAAuB,QACvBxc,GAkBDhf,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEP6J,GAAMzH,EAAAA,EAAAA,IAAuB,MAE7B+oC,EAAW/R,IAAegS,EAAAA,EAAAA,IAAgBhS,IAEhDiS,EAAAA,EAAAA,GAAiB7sC,EAAQ2sC,EAAW/R,EAAYF,sBAAmBh6B,EAAWs6B,GAE9E,MAAM8R,EAAiBlS,KAAgBmS,EAAAA,EAAAA,IAAkBnS,IACrDhe,EAAAA,EAAAA,IAA4Bge,QAC5Bl6B,EACE+gB,GAAelc,EAAAA,EAAAA,GAASq1B,GAAc/sB,EAAAA,EAAAA,IAAoB+sB,EAAa,cAAWl6B,GAClFssC,EAAepsC,QAAQg6B,IAAeqS,EAAAA,EAAAA,IAAqBrS,IAE3DsS,GAAoBrrC,EAAAA,EAAAA,KAAQ,KAChC,IAAKs5B,EACH,OAIF,MAAMr5B,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,OAAOk5B,EAAoB54B,KAAK0T,GAAWnU,EAAUmU,KAASxT,OAAO7B,QAAQ,GAC5E,CAACu6B,IAEEgS,GAA4BzrC,EAAAA,EAAAA,KAAY,KAC5C,GAAIyd,GAAgByb,GAAezb,EAAapD,UAA+B,IAAnB6e,EAAY/uB,KACtE,OAAO3I,EAAAA,GAAAA,cAAC2d,EAAAA,EAAY,CAAC1B,aAAcA,IAGrC,GAAI4c,GAAOr4B,KAAKc,UAAYvE,GAAMwU,SAAWwL,GAC3C,OACE/c,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,eAAeyD,IAAKpD,EAAKqD,MAAQ,OAAS,OACrD1B,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,SAASK,EAAK,WAC7Bm2B,EAAAA,EAAAA,GAAuB,CACtBh0B,KAAMq4B,EAAMr4B,KACZ8zB,SAAUuE,EAAMvE,SAChBH,UAAU,EACV+V,uBAAuB,KAM/B,IAAKxS,EACH,OAGF,GAAI+R,EAAU,CACZ,MAAMh1B,EAAS1X,KAASwV,EAAAA,EAAAA,IAAcxV,IAAS26B,EAAYH,WAAaG,EAAY56B,QAEpF,OACEkD,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,uCAAuCyD,IAAKpD,EAAKqD,MAAQ,OAAS,QAC5EyoC,EAAAA,EAAAA,GACC9rC,EACAq5B,EACCjjB,OAAwCjX,EAA/Bm6B,EACVljB,EAAS1X,OAAOS,EAChBwsC,EACAlS,EACAK,EACAO,EACA,CAAE0R,YAAY,QACd5sC,OACAA,GAIR,CAEA,MAAM6sC,GAAaC,EAAAA,EAAAA,IAAqBjsC,EAAMvB,EAAQ66B,GAEtD,OACE33B,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,uCAAuCyD,IAAKpD,EAAKqD,MAAQ,OAAS,OAC5E2oC,GACCrqC,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,gBAAekR,EAAAA,EAAAA,GAAWm7B,IAC1CrqC,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,SAAQ,MAoEpC,SACEK,EAAckK,EAAqB4P,EAAiCoyB,EAAkBT,GAEtF,MAAMU,EACJxqC,EAAAA,GAAAA,cAACyqC,EAAAA,EAAc,CACbpsC,KAAMA,EACNkK,QAASA,EACTksB,QAAS/2B,QAAQ6sC,GACjBG,8BAA+BvyB,EAC/BwyB,YAAU,IAId,IAAKJ,EACH,OAAOC,EAGT,MAAMI,GAAYlsB,EAAAA,EAAAA,IAAoBnW,GAEtC,OACEvI,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,iBACdgC,EAAAA,GAAAA,cAAA,OACE0D,IAAK6mC,EACLnvB,IAAI,GACJpd,WACEiC,EAAAA,EAAAA,GAAe,uBAAwB6pC,GAAgB,QAASc,GAAa,4BAGhFpsB,EAAAA,EAAAA,IAAgBjW,IAAYvI,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,mBACzCwsC,EAGP,CAjGSK,CAAcxsC,EAAMq5B,EAAavf,EAAqBoG,GAAgBqrB,EAAgBE,GACrF,GAEL,CACD3R,EAAoBL,EAAqBkS,EAAmBjtC,EAAMD,EAAQ+7B,EAAO4Q,EACjFK,EAAc/sB,EAAS1e,EAAMq5B,EAAaC,EAAmBe,EAAkBna,EAAcqrB,EAC7FzxB,EAAqB8D,IAqDvB,OAnCAvP,EAAAA,EAAAA,KAAgB,KACd,MAAM+d,EAAUtiB,EAAIjH,QAEpB,GAAKq4B,GAA4B9O,EAAjC,CAKA,GAAIiP,IAAkB+N,EAAAA,EAAAA,QACpBhd,EAAQjnB,MAAMsnC,QAAU,KAExBxpB,EAAAA,EAAAA,KAAgB,KACdmJ,EAAQsgB,UAAUznC,IAAI,mBACtBmnB,EAAQjnB,MAAMsnC,QAAU,GAAG,QAExB,IAAIpR,IAAkB+N,EAAAA,EAAAA,KAQ3B,OAPAhd,EAAQjnB,MAAMmjC,UAAa,mBAAkBlN,EAAY0G,EAAAA,aAEzD7e,EAAAA,EAAAA,KAAgB,KACdmJ,EAAQsgB,UAAUznC,IAAI,qBACtBmnB,EAAQjnB,MAAMmjC,UAAY,EAAE,GAIhC,CAEAxjB,YAAW,MACT7B,EAAAA,EAAAA,KAAgB,KACdmJ,EAAQsgB,UAAUC,OAAO,kBAAmB,qBAC5CvgB,EAAQjnB,MAAMsnC,QAAU,GACxBrgB,EAAQjnB,MAAMmjC,UAAY,EAAE,GAC5B,GA1KmB,IA2KCsE,EAAAA,IA3BxB,CA2B4C,GAC3C,CAAC1R,EAAyBE,EAAWC,IAEjC,CACLgC,eAnDF,WACE,OAAI3+B,GAAMwU,UAAYwL,EAElB/c,EAAAA,GAAAA,cAACkrC,EAAoB,CACnBnuC,KAAMA,EACNqrC,kBAAmB6B,EACnB9xB,oBAAqBA,IAKpB8xB,GACT,EAwCE9hC,MAEJ,C,wECpNe,SAASgjC,EAAsCC,GAC5D,MAAMC,GAAcC,EAAAA,EAAAA,KACdC,GAAyC7qC,EAAAA,EAAAA,IAAO0qC,GAChDI,GAAuBliB,EAAAA,EAAAA,GAAY8hB,GAWzC,OAJyB,IAArBA,GAA8BI,IAAyBJ,IACzDG,EAAuCrqC,SAAU,GAG5C,CAAEqqC,yCAAwCE,gCATjD,WACEF,EAAuCrqC,QAAUxD,QAAQ0tC,GACzDC,GACF,EAOF,C,kFCde,SAAS7K,EAAapH,EAA6C/4B,GAChF,MAAMqrC,GAAY/sC,EAAAA,EAAAA,KAAQ,KACxB,GAAKy6B,EAIL,OAAOA,EAAWuS,QAAO,CAAC1V,EAAKx4B,EAAI4D,KACjC40B,EAAIx4B,GAAM4D,EACH40B,IACN,CAAC,EAA4B,GAC/B,CAACmD,IAEEwS,GAAgBtiB,EAAAA,EAAAA,GAAYoiB,GAC5BG,GAAaviB,EAAAA,EAAAA,GAAYjpB,GAEzBigC,GAAgB3hC,EAAAA,EAAAA,KAAQ,IACvB+sC,GAAcE,GAAiBvrC,IAAQwrC,GAIrCC,EAAAA,EAAAA,IAAUJ,GAAW,CAACK,EAAOtuC,SACLD,IAAtBouC,EAAcnuC,GAAoBsuC,EAAQH,EAAcnuC,IAAM,MAJ9D,CAAC,GAMT,CAAC4C,EAAKqrC,EAAWG,EAAYD,IAIhC,MAAO,CACLtL,gBACAC,kBAJuBmH,EAAAA,EAAAA,GAAqBpH,GAMhD,C,+CC3BO,SAAS0L,EACd3tC,EAAckK,EAAqBvJ,EAAoCJ,GAEvE,MAAM,SAAE24B,GAAahvB,EACrB,IAAKgvB,EACH,OAGF,MAAM9e,GAASpH,EAAAA,EAAAA,IAASkmB,GAAY34B,EAAU24B,GAAYv4B,EAAUu4B,GAEpE,IAAI8S,GAAa4B,EAAAA,EAAAA,IAAe5tC,EAAMoa,GAEtC,MAAM1b,EAAOiC,EAAUuJ,EAAQzL,QAS/B,OARIC,KACEsU,EAAAA,EAAAA,IAASkmB,IAAc9e,EAAmBvF,OAC5Cm3B,EAAc,GAAEhsC,EAAK,iBAAgBiZ,EAAAA,EAAAA,GAAajZ,EAAMtB,MAC/CmvC,EAAAA,EAAAA,IAAYnvC,KACrBstC,GAAe,OAAK/yB,EAAAA,EAAAA,GAAajZ,EAAMtB,OAIpCstC,CACT,C,4LCxBA,MAQA,EARgD1oC,IAC9C,MAAM,OAAEkV,GAAWlV,EACbwqC,GAAsB9W,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,uBAAwBze,GAGnF,OAAOs1B,EAAsBnsC,EAAAA,GAAAA,cAACmsC,EAAwBxqC,QAAYnE,CAAS,E,qCCoE7E,MA4VA,GAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAEW,IAFT,OACPC,EAAM,SAAE8U,EAAQ,gBAAE2mB,EAAe,SAAE7wB,GACpC7K,EACC,MAAME,GAAOC,EAAAA,EAAAA,IAAWJ,EAAQE,GAC1ByZ,EAAY7Y,QAAQX,IAAQwV,EAAAA,EAAAA,IAAcxV,IAC1CqvC,GAAWC,EAAAA,EAAAA,IAAmBzvC,GAC9B0vC,GAAsBC,EAAAA,EAAAA,IAA0B3vC,IAChD,eAAE4vC,GAAmB5vC,EAAO6vC,SAASC,MAE3C,IAAK3vC,GAAQA,EAAKkX,eAAgB04B,EAAAA,EAAAA,IAAqB/vC,GACrD,MAAO,CACLgwC,QAAQ,EACRR,WACAE,sBACAE,kBAIJ,MAAMK,GAAMC,EAAAA,EAAAA,IAAUlwC,EAAQE,GACxB6rB,GAAgBtX,EAAAA,EAAAA,IAASvU,QAA+CU,GAArCwU,EAAAA,EAAAA,IAAmBpV,EAAQE,GAC9D4rB,GAAerX,EAAAA,EAAAA,IAASvU,IAAUqV,EAAAA,EAAAA,IAAmBvV,EAAQE,QAAUU,EACvEuvC,EAAWpkB,GAAgBD,EAC3B5S,GAAiBC,EAAAA,EAAAA,IAAqBnZ,EAAQE,GAC9CkwC,EAAmC,WAApBzU,GAAgC3mB,IAAa2B,EAAAA,GAC5D05B,EAAyC,WAApB1U,GAAgC3mB,IAAa2B,EAAAA,GAClE25B,GAAqBC,EAAAA,EAAAA,IAAyBvwC,EAAQ8K,GAEtD0lC,EAAgB1vC,QAAQmvC,IAAOQ,EAAAA,EAAAA,IAAoBzwC,EAAQiwC,EAAIpvC,KAC/D6vC,GAAeF,GAAiB1vC,SAAQ6vC,EAAAA,EAAAA,IAA0B3wC,EAAQE,IAC1E0wC,EAAe9vC,SAClBsvC,GAAgBjwC,EAAKwU,WAAagF,IAAaI,EAAAA,EAAAA,IAAiB5Z,KAAUA,EAAK0wC,aAE5EC,EAAYV,GAAgBC,EAC5BU,EAAUC,EAAAA,KAAuBv8B,EAAAA,EAAAA,IAAStU,EAAKU,MAAQqY,IAAmB+2B,EAC1EgB,EAAUb,IAAiBl3B,IAAmB03B,EAC9CM,EAAWd,IAAiBQ,EAC5BO,EAAoBH,EAAAA,IAAuBZ,GAAgBjwC,EAAKe,aAChEkwC,EAAqBJ,EAAAA,IAAuBZ,IAAiBjwC,EAAKe,eAClEf,EAAKkxC,aAAaC,YAAenxC,EAAK8a,YAAapB,EAAAA,EAAAA,IAAiB1Z,IACpEoxC,EAAoBnB,GAAgBrkB,GAAcwlB,kBAClDC,EAAsBpB,EAAerkB,GAAc0lB,qBAAkB7wC,EACrE8wC,EAAmB5wC,QAAQX,GAAM0wC,aAAe1wC,EAAKwxC,cACrDC,EAAwB9wC,QAAQX,GAAM0wC,aAAe1wC,EAAK0xC,eAC1DC,IAAe1tC,EAAAA,EAAAA,IAA0BpE,GAEzC+xC,EAAgBjxC,SAAQkxC,EAAAA,EAAAA,IAAuChyC,EAAQE,IAG7E,MAAO,CACL8vC,QAAQ,EACRr2B,YACA22B,qBACAI,cACAF,gBACAI,eACAE,YACAC,UACAE,UACAM,oBACAL,WACAC,oBACAC,qBACAI,sBACAE,mBACAE,wBACAE,cACAG,cApBmBC,EAAAA,EAAAA,IAAuBlyC,EAAQE,KAAYiwC,GAAUgC,sBAqBxEJ,gBACArC,sBACAF,WACAI,iBACAwC,qBAAsBjyC,EAAKkyC,iBAC5B,GAzEetyC,EA1V6BoB,IA8B3C,IA9B4C,OAChDjB,EAAM,SACN8U,EAAQ,OACRg7B,EAAM,SACNllC,EAAQ,UACR6O,EAAS,YACT+2B,EAAW,cACXF,EAAa,aACbI,EAAY,UACZE,EAAS,QACTC,EAAO,QACPE,EAAO,kBACPM,EAAiB,SACjBL,EAAQ,kBACRC,EAAiB,mBACjBC,EAAkB,oBAClBI,EAAmB,mBACnBlB,EAAkB,iBAClBnG,EAAgB,iBAChBD,EAAgB,iBAChBwH,EAAgB,sBAChBE,EAAqB,YACrBE,EAAW,aACXG,EAAY,cACZF,EAAa,oBACbrC,EAAmB,SACnBF,EAAQ,qBACR4C,EAAoB,eACpBxC,EAAc,cACdpH,GACDrnC,EACC,MAAM,YACJmxC,EAAW,eACXC,EAAc,oBACdC,EAAmB,WACnBC,EAAU,4BACVC,EAA2B,4BAC3BC,EAA2B,iBAC3B38B,EAAgB,SAChBinB,EAAQ,uBACR2V,EAAsB,uBACtBC,GAAsB,sBACtBC,GAAqB,iBACrBC,KACEvxC,EAAAA,EAAAA,MAEEwxC,IAAgBlvC,EAAAA,EAAAA,IAA0B,MAC1CrC,IAAOC,EAAAA,EAAAA,MACNuxC,GAAYC,KAAiBtlC,EAAAA,EAAAA,KAAS,IACtCulC,GAAcC,KAAmBxlC,EAAAA,EAAAA,SAAsChN,GAExEyyC,IAAuB5sC,EAAAA,EAAAA,IAAgB,KAC3CysC,IAAc,GACd,MAAM1wB,EAAOwwB,GAAc1uC,QAASyM,wBACpCqiC,GAAgB,CAAE/qC,EAAGma,EAAK8wB,MAAOhrC,EAAGka,EAAK+wB,QAAS,IAG9CC,IAAwB/sC,EAAAA,EAAAA,IAAgB,KAC5CysC,IAAc,EAAM,IAGhBO,IAAuBhtC,EAAAA,EAAAA,IAAgB,KAC3C2sC,QAAgBxyC,EAAU,IAGtB8yC,IAAuBjtC,EAAAA,EAAAA,IAAgB,KAC3C6rC,EAAY,CAAEpyC,WACV0xC,GACF57B,EAAiB,CACfrK,QAAqBlK,GAAZkY,EAAiB,sCAA8C,sCAE5E,IAGIg6B,IAAiBltC,EAAAA,EAAAA,IAAgB,KACrC8rC,EAAe,CAAEqB,QAAS,UAAW,IAGjCC,IAAmBptC,EAAAA,EAAAA,IAAgB,KACvCgsC,EAAW,CAAEvyC,UAAS,IAGlB4zC,IAAuBrtC,EAAAA,EAAAA,IAAgB,KAEzCmsC,EADEb,EACqB,CAAE7xC,SAAQ6zC,oBAAgBnzC,GAI5B,CAAEV,SAAQ6zC,eAAgBrE,GAAsB,IAGnEsE,IAA0BvtC,EAAAA,EAAAA,IAAgB,KAC9CksC,EAA4B,CAAEsB,OAAQC,EAAAA,GAAAA,cAAiC,IAGnEC,IAAoB1tC,EAAAA,EAAAA,IAAgB,KACpC0jC,EACF3B,OAIFgK,IAEI1nC,EAEkBkR,SAAS8R,cAAgC,uBACjDrJ,QACHqtB,GAETsC,EAAAA,EAAAA,KAAe,MACbzK,EAAAA,EAAAA,IAAoB0K,EAAsB,IAG5C9tB,WAAW8tB,EAnHa,KAoH1B,IAGIC,IAAwB7tC,EAAAA,EAAAA,IAAgB,KAC5Cw2B,EAAS,CAAEp8B,GAAIX,EAAQ8U,SAAU2B,EAAAA,IAAiB,IAO9C49B,IAA0B9tC,EAAAA,EAAAA,IAAiBoK,IAC1CigC,GAAc9M,EAAAA,KAAUnzB,EAAE2jC,WAI/B3jC,EAAEiU,iBACFqvB,KAAmB,IAGfM,IAAsBhuC,EAAAA,EAAAA,IAAgB,CAACiuC,EAAiBC,KAC5D,MACMC,EAAkB,oBADLD,EAAS18B,MAAM,KAAK,GACe48B,gBAChDr3B,EAAO/b,GAAKmzC,GAClB,GAAIp3B,IAASo3B,EACX,OAAOnzC,GAAKizC,EAASl3B,GAGvB,MACMs3B,EADkB,IAAIC,KAAKC,aAAa,CAACxF,GAAW,CAAExqB,KAAM,aAC3BiwB,GAAGN,GAC1C,OAAOlzC,GAAM,GAAEizC,SAAgBI,EAAe,IAG1CI,IAAanzC,EAAAA,EAAAA,KAAQ,IACrBgwC,EAAsBtwC,GAAK,sBAExBgzC,GAAoB,oBAAqB/E,IAC/C,CAACA,EAAqB+E,GAAqB1C,EAAetwC,KAEvD0zC,IAAqBpzC,EAAAA,EAAAA,KAAQ,KACjC,GAAKqwC,EAEL,OAAOqC,GAAoB,yBAA0BrC,EAAqB,GACzE,CAACqC,GAAqBrC,IAEnBgD,IAAa3uC,EAAAA,EAAAA,IAAgB,KACjCosC,GAAuB,CAAE3yC,SAAQm1C,WAAW,IAC5CzC,EAAuB,CAAE1yC,SAAQ6zC,oBAAgBnzC,GAAY,IAGzD00C,IAAuB7uC,EAAAA,EAAAA,IAAgB,KAC3CqsC,GAAsB,CAAE5yC,UAAS,IAG7Bq1C,IAAuB9uC,EAAAA,EAAAA,IAAgB,KACtC2rC,IAELW,GAAiB,CACfnD,eAAgB,IAAIA,EAAgBwC,KAEtCQ,EAAuB,CAAE1yC,SAAQ6zC,oBAAgBnzC,IAEjDoV,EAAiB,CAAErK,QAAS8oC,GAAoB,wBAAyBrC,KAAwB,KAGnGtO,EAAAA,EAAAA,GAAW,CACT,QAASyQ,KAGX,MAAMiB,IAAkEzzC,EAAAA,EAAAA,KAAQ,IACvEW,IAAA,IAAC,UAAE+yC,EAAS,OAAEx7B,GAAQvX,EAAA,OAC3BU,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLiP,OAAQ09B,EACRz9B,MAAM,cACNlM,KAAK,UACLvF,UAAW6Y,EAAS,SAAW,GAC/B3W,QAASmyC,EACT1iC,UAAWtR,GAAK,qBAEhB2B,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,qBAAqB,mBAC3B,GAEV,CAACkvC,EAAoB7uC,KAExB,OACE2B,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,iBACZ6wC,GACC7uC,EAAAA,GAAAA,cAACsyC,EAAAA,EAAY,CACXt0C,UAAU,2CACVu0C,QAASH,GACTniB,UAAU,SAEVjwB,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACpc,KAAK,WAAWnV,QAASwwC,IAChCoB,IAEH9xC,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACpc,KAAK,UAAUnV,QAASgyC,IAC/B7zC,GAAK,2BAER2B,EAAAA,GAAAA,cAACwyC,EAAAA,EAAa,MACbxD,GACIhvC,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACpc,KAAK,YAAYnV,QAASiyC,IAAuBJ,IAChE/xC,EAAAA,GAAAA,cAACyxB,EAAAA,EAAQ,CAACpc,KAAK,eAAenV,QAAS8xC,IAAa3zC,GAAK,WAG3DqJ,GACA1H,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACG8mC,IAAqB0H,IAA0BhB,GAAgBc,IAC9DtuC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLiD,KAAK,OACLiM,QAAM,EACN8uB,OAAK,EACLp+B,QAASowC,IAERjyC,GAAKkY,EAAY,qBAAuB,qBAG5CuwB,GAAoB0H,GACnBxuC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLiD,KAAK,OACLiM,QAAM,EACN8uB,OAAK,EACLp+B,QAASowC,IAERjyC,GAAK,uBAGTyoC,GAAoBwG,GACnBttC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLiD,KAAK,OACLiM,QAAM,EACN8uB,OAAK,EACLp+B,QAASqwC,IAERlyC,GAAK,aAGTyoC,GAAoBsG,GACnBptC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLiD,KAAK,OACLiM,QAAM,EACN8uB,OAAK,EACLp+B,QAASuwC,IAERpyC,GAAK,eAGTqvC,GACC1tC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLiP,OAAQ09B,EACRz9B,MAAM,cACNlM,KAAK,UACLrD,QAAS6wC,GACTphC,UAAWtR,GAAK,mCAEhB2B,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,mBAAmB,oBAGnC2vC,GACC3tC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLkP,MAAM,cACNlM,KAAK,UAELrD,QA9JZ,WACEovC,EAA4B,CAAEv8B,OAAQjW,GACxC,EA6JY6S,UAAU,QAEV3P,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,kBAAkB,sBAKrC+oC,GAAoBrpC,QAAQ0wC,IAC5BpuC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLvC,UAAU,eACVwR,OAAQ09B,EACRz9B,MAAM,cACNlM,KAAK,UACLrD,QAAS0wC,GACTjhC,UAAuBtR,GAAZkY,EAAiB,oBAA4B,mBAExDvW,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,iBAAiB,mBAC9BgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,SAASowC,IAG5BpuC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL6H,IAAKynC,GACL5xC,UAAW6xC,GAAa,SAAW,GACnCtvC,OAAK,EACLiP,QAAS9H,EACTnE,KAAK,UACLkM,MAAM,cACN0S,SAAUyqB,EACVj9B,UAAU,eACVzP,QAAS+vC,IAETjwC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,iBAAiB,oBAE/B+xC,IACC/vC,EAAAA,GAAAA,cAACmsC,EAAmB,CAClBrvC,OAAQA,EACR8U,SAAUA,EACViF,OAAQg5B,GACR4C,OAAQ1C,GACR2C,iBAAkBhrC,IAAao/B,EAC/BvwB,UAAWA,EACX+2B,YAAaA,EACbF,cAAeA,EACfI,aAAcA,EACdE,UAAWA,EACXC,QAASA,EACTE,QAASA,EACTM,kBAAmBA,EACnBL,SAAUA,EACVC,kBAAmBA,EACnBC,mBAAoBA,EACpBI,oBAAqBA,EACrBuE,oBAAqB/B,GACrB7J,iBAAkBA,EAClB6L,mBAAoBtC,GACpBuC,cAAe9B,GACf+B,kBAAmB5B,GACnBp6B,QAASs5B,GACTr5B,oBAAqBs5B,KAGrB,KAiFV,SAASY,IACar4B,SAAS8R,cAAgC,oCAChDrJ,OACf,C,wECrfA,MAQA,EAR+C1f,IAC7C,MAAM,OAAEkV,GAAWlV,EACboxC,GAAqB1d,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,sBAAuBze,GAGjF,OAAOk8B,EAAqB/yC,EAAAA,GAAAA,cAAC+yC,EAAuBpxC,QAAYnE,CAAS,C,wECL3E,MAQA,EAR2CmE,IACzC,MAAM,OAAEkV,GAAWlV,EACbqxC,GAAa3d,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,kBAAmBze,GAGrE,OAAOm8B,EAAahzC,EAAAA,GAAAA,cAACgzC,EAAerxC,QAAYnE,CAAS,C,kJCE3D,MAmCA,GAAed,EAAAA,EAAAA,KAnCkBqB,IAA0C,IAAzC,QAAEk1C,EAAO,UAAEC,EAAS,aAAEC,GAAcp1C,EACpE,MAAOq1C,EAAWC,EAAaC,IAAiBxyC,EAAAA,EAAAA,KAY1C9C,GAAYiC,EAAAA,EAAAA,GAChB,aACAmzC,GAAa,WAGf,OACEpzC,EAAAA,GAAAA,cAAA,OACEhC,UAAWA,EACXu1C,OAAQJ,EACRvZ,YAAayZ,EACb7Q,YApBqB/0B,IACvB,MAAQ+lC,cAAeC,GAAahmC,EAEhCgmC,GACFhmC,EAAEM,kBAGJulC,GAAe,EAcb,oBAEAtzC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,kBACbgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAY,cAAYi1C,EAAU,QAAU,cACjDjzC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,SAAQ,iCACrBk1C,GAAalzC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,eAAei1C,EAAU,iBAAmB,wBAExE,ICrBH,IAAKS,EAAa,SAAbA,GAAa,OAAbA,EAAa,YAAbA,EAAa,oBAAbA,EAAa,uBAAbA,CAAa,MAMzB,MAoFA,GAAeh3C,EAAAA,EAAAA,KAlFgBqB,IAEzB,IAF0B,OAC9B8Y,EAAM,UAAE88B,EAAS,OAAEC,EAAM,aAAET,GAC5Bp1C,EAEC,MAAM81C,GAAiBnzC,EAAAA,EAAAA,IAAe,MAChCozC,GAAgBxqB,EAAAA,EAAAA,GAAYqqB,IAC5B,aAAEj0C,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkBiX,IAEjErX,EAAAA,EAAAA,KAAU,IAAOqX,GAASyvB,EAAAA,EAAAA,GAAsBsN,QAAUp2C,GAAY,CAACqZ,EAAQ+8B,IAE/E,MAAMG,GAAkB1wC,EAAAA,EAAAA,IAAgB2wC,UACtC,MAAQC,aAAcC,GAAOzmC,EAC7B,IAAI0mC,EAAgB,GAEpB,KAAID,EAAGC,OAASD,EAAGC,MAAM7yC,OAAS,IAAO4yC,EAAGpvB,OAAUovB,EAAGpvB,MAAMxjB,QAExD,GAAI4yC,EAAGpvB,OAASovB,EAAGpvB,MAAMxjB,OAAS,EAAG,CAC1C,MAAM8yC,QAAoBC,EAAAA,EAAAA,GAA8BH,EAAGpvB,OACvDsvB,GAAa9yC,SACf6yC,EAAQA,EAAMG,OAAOF,GAEzB,OANED,EAAQA,EAAMG,OAAOtuC,MAAMuuC,KAAKL,EAAGC,QAQrCP,IACAT,EAAagB,GAAOR,QAAoBn2C,EAAU,IAG9Cg3C,GAAuBnxC,EAAAA,EAAAA,IAAiBoK,IAC5C,MAAQwmC,aAAcC,GAAOzmC,EAEzBymC,EAAGC,OAASD,EAAGC,MAAM7yC,OAAS,IAChCsyC,IACAT,EAAantC,MAAMuuC,KAAKL,EAAGC,QAAQ,GACrC,IAGIhS,GAAkB9+B,EAAAA,EAAAA,IAAiBoK,IACvCA,EAAEM,kBAEF,MAAQgU,OAAQ0yB,EAAYjB,cAAeC,GAAahmC,EAGnDgnC,EAA8B5sC,QAAQ,4BAA8B4rC,IACvEI,EAAe3yC,QAAUoG,OAAO6b,YAAW,KACzCywB,GAAQ,GA9Cc,KAgD1B,IASF,IAAKl0C,EACH,OAGF,MAAMg1C,EAAoBf,GAAaG,EAEjC91C,GAAYiC,EAAAA,EAAAA,GAChB,WACAN,GAGF,OACEK,EAAAA,GAAAA,cAAC20C,EAAAA,EAAM,CAACC,YAAY,0BAClB50C,EAAAA,GAAAA,cAAA,OACEhC,UAAWA,EACXwkC,YAAaL,EACb0S,WAtBiBC,KACjBjB,EAAe3yC,SACjBoG,OAAOytC,aAAalB,EAAe3yC,QACrC,EAoBIqyC,OAAQK,EACR1zC,QAAS0zC,GAET5zC,EAAAA,GAAAA,cAACg1C,EAAU,CAAC7B,aAAcY,EAAiBb,WAAYwB,IACtDA,GAAqB10C,EAAAA,GAAAA,cAACg1C,EAAU,CAAC7B,aAAcqB,EAAsBvB,SAAO,KAExE,G,wECvGb,MAQA,EARyCtxC,IACvC,MAAM,OAAEkV,GAAWlV,EACbszC,GAAe5f,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,gBAAiBze,GAGrE,OAAOo+B,EAAej1C,EAAAA,GAAAA,cAACi1C,EAAiBtzC,QAAYnE,CAAS,C,6rBCFhD,MAAM03C,EAKnBC,YACEC,EACQC,EACAjoB,GACR,KAFQioB,UAAAA,EAAsB,KACtBjoB,QAAAA,EAA6BkoB,EAAA,qBAAAA,EAAA,kBALnB,GAOlBC,KAAKtrC,MAAQ2O,SAAS48B,cAAc,SACpCD,KAAKtrC,MAAMvG,IAAM0xC,EACjBG,KAAKtrC,MAAM4d,yBAA0B,EACrC0tB,KAAKtrC,MAAM2d,OAAQ,EACfwF,EAAQ5pB,OACV+xC,KAAKtrC,MAAMyV,aAAa,QAAS0N,EAAQ5pB,OAE3C+xC,KAAKtrC,MAAMzG,MAAMi+B,SAAW,WAC5B8T,KAAKtrC,MAAMwrC,OAENF,KAAKnoB,QAAQsoB,SAChBH,KAAKtrC,MAAM6d,MAAO,IAGpBxG,EAAAA,EAAAA,KAAgB,KACdi0B,KAAKF,UAAUM,YAAYJ,KAAKtrC,OAEhCsrC,KAAKK,4BAA4B,GAErC,CAEOC,QACDN,KAAK/pC,WAAc+pC,KAAKtrC,QAC5BsrC,KAAKK,6BACDL,KAAKtrC,MAAM6rC,SACbC,EAAAA,EAAAA,GAASR,KAAKtrC,OAEhBsrC,KAAK/pC,WAAY,EACnB,CAEOwqC,QACAT,KAAK/pC,WAAc+pC,KAAKtrC,QACxBsrC,KAAKtrC,MAAM6rC,QACdP,KAAKtrC,MAAM+rC,QAEbT,KAAK/pC,WAAY,EACnB,CAEOyqC,UACLV,KAAKS,QACLT,KAAKtrC,OAAO+gC,SACZuK,KAAKtrC,WAAQzM,CACf,CAEO04C,eAAezU,GACpB8T,KAAKnoB,QAAQqU,SAAWA,EACxB8T,KAAKK,4BACP,CAEQA,6BACN,MAAM,KAAEryC,EAAMk+B,UAAU,EAAEx8B,EAAC,EAAEC,IAAQqwC,KAAKnoB,SAC1C4jB,EAAAA,EAAAA,KAAe,KACb,IAAKuE,KAAKtrC,MAAO,OACjB,MAAMA,EAAQsrC,KAAKtrC,OACb,MAAE3F,EAAK,OAAEC,GAAWgxC,KAAKF,UAAU1nC,yBACzC2T,EAAAA,EAAAA,KAAgB,KACdrX,EAAMzG,MAAMkK,KAAQ,GAAE3I,KAAKxE,MAAM0E,EAAIX,OACrC2F,EAAMzG,MAAM+b,IAAO,GAAExa,KAAKxE,MAAM2E,EAAIX,OACpC0F,EAAMzG,MAAMc,MAAS,GAAEf,MACvB0G,EAAMzG,MAAMe,OAAU,GAAEhB,KAAQ,GAChC,GAEN,E,yFCtDF,MAAM4yC,EAAO,KAAO76B,EAAAA,G,qCCOpB,MAKM86B,EAAiB,iBAsCjBC,EAA8B,IAG9BC,EAAc,CAClB,MAAO,SAAU,QAAS,SAAU,WAAY,OAAQ,MAAO,OAAQ,YAAa,UAAW,UAAW,SA8f5G,GAAe55C,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAiD,IAA/C,OAAExC,EAAM,SAAE8U,GAAoBtS,EACrC,MAAM,oBAAEi3C,GAAwB35C,EAAO6vC,SAASC,MAEhD,MAAO,CACL6J,sBACAC,aAAc15C,GAAU8U,GAAW6kC,EAAAA,EAAAA,IAAmB75C,EAAQE,EAAQ8U,QAAYpU,EAClFk5C,oBAAoB/J,EAAAA,EAAAA,IAAqB/vC,GACzC+5C,uBAAuBC,EAAAA,EAAAA,IAA4Bh6C,GACpD,GATeD,EA9e4BoB,IAyB1C,IAzB2C,IAC/CoK,EAAG,GACH1K,EAAE,OACFX,EAAM,aACN+5C,EAAY,uBACZC,EAAsB,gBACtBC,EAAe,QACfC,EAAO,SACP75C,EAAQ,QACR85C,EAAO,YACP92B,EAAW,kBACX+2B,EAAiB,iBACjBC,EAAgB,aAChBC,EAAY,oBACZC,EAAmB,oBACnBC,EAAmB,4BACnBC,EAA2B,aAC3Bf,EAAY,mBACZE,GAAkB,sBAClBC,GAAqB,oBACrBJ,GAAmB,SACnBiB,GAAQ,kBACRC,GAAiB,OACjBC,GAAM,SACNC,IACD55C,EACC,MAAM,gBACJ65C,GAAe,mBACfC,GAAkB,oCAClBC,KACE15C,EAAAA,EAAAA,MAGJ,IAAIyiB,IAAWngB,EAAAA,EAAAA,IAAuB,MAClCyH,IACF0Y,GAAW1Y,GAIb,MAAM4vC,IAAsBr3C,EAAAA,EAAAA,IAAe,MAErCs3C,IAAWt3C,EAAAA,EAAAA,IAAuB,MAElCu3C,IAAmBv3C,EAAAA,EAAAA,IAAuB,MAE1CqtB,IAAkBrtB,EAAAA,EAAAA,IAA0B,MAE5Cw3C,IAAoBx3C,EAAAA,EAAAA,IAA0B,MAE9Cy3C,IAAuBz3C,EAAAA,EAAAA,IAAuB,MAE9CrC,IAAOC,EAAAA,EAAAA,KACP85C,IAAuB13C,EAAAA,EAAAA,KAAO,IAC7B23C,GAAqBC,GAAmBC,KAAsBz3C,EAAAA,EAAAA,MAC9D03C,GAA6BC,KAAkCjuC,EAAAA,EAAAA,OAC/DkuC,GAAeC,KAAoBnuC,EAAAA,EAAAA,OACnCouC,GAAyBC,KAA8BruC,EAAAA,EAAAA,KAAkB,IAC1E,SAAE9C,KAAa2C,EAAAA,EAAAA,MACfyuC,GAAiBpxC,KAAaqxC,EAAAA,IAAUC,EAAAA,KDtHjC,SACb/B,EACAp2B,EACAkN,EACAmqB,EACAC,EACAc,EACAtC,EACAK,EACA75C,GAEA,MAAMyxB,GAAcC,EAAAA,EAAAA,GAAwBhO,GAAWm2B,GACjDkC,GAAcC,EAAAA,EAAAA,GAAevqB,GAAa,GAC1CwqB,GAAc14C,EAAAA,EAAAA,IAAuC,IAAIy2B,KAEzDkiB,GAAeh2C,EAAAA,EAAAA,IAAiBi2C,IACpCA,EAAI30C,SAASlH,IACX,MAAM87C,EAASH,EAAYl4C,QAAQ46B,IAAIr+B,GACnC87C,IACFA,EAAOtD,UACPmD,EAAYl4C,QAAQk7B,OAAO3+B,GAC7B,GACA,IAGE+7C,GAAsBn2C,EAAAA,EAAAA,IAAgB,KAC1C,KAAK2zC,GAAYn2B,EAAS3f,SAAY6sB,EAAgB7sB,SAAYg3C,EAAkBh3C,SAAS,OAE7F,MAAMtE,GAASiC,EAAAA,EAAAA,MACT46C,EAAmB,IAAI52C,IAAIu2C,EAAYl4C,QAAQw4C,QAChC1zC,MAAMuuC,KAAK1zB,EAAS3f,QAAQy4C,iBAA8B,kBAElEh1C,SAAS8lB,IACpB,IAAKA,EAAQmvB,QAAQC,SACnB,OAEF,MAAMC,EAAY,GAAEb,IAAWxuB,EAAQmvB,QAAQC,WAAWjrB,GAAe,KACnE3C,EAAaxB,EAAQmvB,QAAQ3tB,WAEnCwtB,EAAiBrd,OAAO0d,GAExB,MAAMC,GAAWC,EAAAA,EAAAA,IAAgC/tB,GACjD,IAAK8tB,EACH,OAGF,MAAME,EAAelsB,EAAgB7sB,QAASyM,wBACxCusC,EAAgBzvB,EAAQ9c,wBACxB1I,GAAI1E,EAAAA,EAAAA,KAAO25C,EAAcxsC,KAAOusC,EAAavsC,MAAQusC,EAAa31C,MAAO,GACzEY,GAAI3E,EAAAA,EAAAA,KAAO25C,EAAc36B,IAAM06B,EAAa16B,KAAO06B,EAAa11C,OAAQ,GAE9E,GAAI60C,EAAYl4C,QAAQ8B,IAAI82C,GAG1B,YAFeV,EAAYl4C,QAAQ46B,IAAIge,GAChC5D,eAAejxC,EAAGC,GAI3B,MAAMi1C,EAAcv9C,EAAOw9C,aAAar7C,KAAKktB,GAC7C,IAAKkuB,EACH,OAEF,MAAME,EAAOF,GAAalrB,iBAAkBqrB,EAAAA,EAAAA,IAAgC19C,EAAQu9C,EAAYlrB,gBAC1FsrB,EAAW,CACftB,EAAUhtB,EAAY2C,GACtBrvB,OAAO7B,SAASgS,KAAK,MAsF7BskC,eAA2B10C,GAwBI,IAxBH,YAC1B66C,EAAW,gBACXpsB,EAAe,kBACfmqB,EAAiB,qBACjBC,EAAoB,SACpBoC,EAAQ,OACRC,EAAM,SACNT,EAAQ,SACRtY,EAAQ,KACR4Y,EAAI,UACJI,EAAS,YACTvB,GAaD55C,EACC,GAAI66C,EAAYO,SAAU,CACxB,MAAMjrC,EAAQ0qC,EAAYxrB,oBAAsB8rB,GAAYE,EAAAA,EAAAA,IAASF,QAAaj9C,EAE5Eo9C,SADgBC,EAAAA,EAAAA,MACCC,KACrBf,EACAM,EAAOnC,EAAkBh3C,QAAW6sB,EAAgB7sB,QACpDq5C,EACA,CACEh3C,KAAM4yC,EACN4E,OAAQtZ,EACRuZ,eAAgBX,GAElBG,EACA/qC,EAAQ,CAACA,EAAMwrC,EAAGxrC,EAAMyrC,EAAGzrC,EAAMoU,QAAKrmB,GAGxC,MAAO,CACLq4C,KAAMA,IAAM+E,EAAO/E,OACnBG,MAAOA,IAAM4E,EAAO5E,QACpBC,QAASA,IAAM2E,EAAOO,WAAWX,GACjCtE,eAAgBA,CAACjxC,EAAWC,IACnB01C,EAAOQ,sBAAsBZ,EAAQ,CAAEv1C,IAAGC,MAGvD,CAEA,GAAIi1C,EAAYxzB,QAAS,CACvB,MAAMnjB,EAAQ22C,EAAYxrB,oBAAsBuqB,EAAe,WAAUA,UAAiB17C,EACpF69C,EAAgB,IAAInG,EACxB6E,EACA5B,EAAqBj3C,QACrB,CAAEqC,KAAM4yC,EAAM1U,WAAUj+B,UAE1B,MAAO,CACLqyC,KAAMA,IAAMwF,EAAcxF,OAC1BG,MAAOA,IAAMqF,EAAcrF,QAC3BC,QAASA,IAAMoF,EAAcpF,UAC7BC,eAAgBA,CAACjxC,EAAWC,IAAcm2C,EAAcnF,eAAe,CAAEjxC,IAAGC,MAEhF,CAEA,MAAM,IAAIo2C,MAAM,gCAClB,EAvJMC,CAAa,CACXpB,cACApsB,kBACAmqB,oBACAC,uBACAoC,WACAC,OAAQV,EACRC,WACAM,OACA5Y,SAAU,CAAEx8B,IAAGC,KACfu1C,UAAW7rB,EACXsqB,gBACCsC,MAAMC,IACH9E,GACF8E,EAAU5F,OAGZuD,EAAYl4C,QAAQg7B,IAAI4d,EAAU2B,EAAU,GAC5C,IAGJpC,EAAarzC,MAAMuuC,KAAKkF,GAAkB,KAG5Cj6C,EAAAA,EAAAA,KAAU,KACDk8C,EAAAA,EAAAA,IAAkClC,IACxC,CAACA,KAEJh6C,EAAAA,EAAAA,KAAU,KACHy3C,KAAcp2B,EAAS3f,SAAY6sB,EAAgB7sB,SAAY/D,GAAa65C,GAMjFhG,EAAAA,EAAAA,KAAe,KACbwI,GAAqB,IANrBH,EAAarzC,MAAMuuC,KAAK6E,EAAYl4C,QAAQw4C,QAO5C,GACD,CAACzC,EAASuC,EAAqB34B,EAAUw4B,EAActrB,EAAiB5wB,EAAU65C,KAErFtqC,EAAAA,EAAAA,KAAgB,KACdkM,SAAS+iC,gBAAgBn4C,MAAMo4C,YAAY,8BAA+B1C,GAAe,OAAO,GAC/F,CAACA,KAEJ2C,EAAAA,EAAAA,IAAsB99C,IAAuB,IAArB+9C,GAAgB/9C,OACdP,IAApBs+C,GAAiCltB,IAAgBktB,GACnDtC,GACF,GACC,CAAC5qB,EAAa4qB,IAEjB,MAAMuC,GAA+BC,EAAAA,EAAAA,GACnCxC,EACA,CAACA,GA/He,KAiIhB,IAEFyC,EAAAA,EAAAA,GAAkBluB,EAAiBguB,GAEnC,MAAMG,GAAkB74C,EAAAA,EAAAA,IAAgB,KACtC+1C,EAAYl4C,QAAQyD,SAAS40C,IAC3BA,EAAOvD,OAAO,GACd,IAGEmG,GAAoB94C,EAAAA,EAAAA,IAAgB,KACnCszC,GAILyC,EAAYl4C,SAASyD,SAAS40C,IAC5BA,EAAO1D,MAAM,GACb,IAGEuG,GAAyB/4C,EAAAA,EAAAA,IAAgB,MAC7C2tC,EAAAA,EAAAA,IAAemL,EAAkB,KAMnCE,EAAAA,EAAAA,GAAkBH,EAAiBE,EACrC,CC5BEE,CACErF,EACAp2B,GACAkN,GACAmqB,GACAC,GACArB,EAAyB,aAAe,WACxCH,GACAK,EACA75C,GAGF,MAAMo/C,GAAiBzF,EAhGiB,IAgG6CpvC,GAAW,IAAM,IAChG80C,IAAoBn5C,EAAAA,EAAAA,IAAgB,WAAsB,IAArBo5C,EAAQtwC,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,IACjDuwC,EAAAA,EAAAA,KAAoB,KAClB,MAAMC,EAAW97B,GAAS3f,QAAS6uB,QAAyB,mBACtD6sB,EAAgBlb,OAAOib,EAASn5C,MAAMe,OAAOsuB,QAAQ,KAAM,KAC3DgqB,EAAQ5E,GAAiB/2C,SACzB,aAAE47C,GAAiBD,EACnBE,EAAYh4C,KAAKuH,IAAIwwC,EAAcP,IAEzC,GAAIQ,IAAcH,EAChB,OAGF,MAAMI,EAAcF,EAAeP,GAEnC,SAASU,IACP,MAAMC,EAAqBn4C,KAAKxE,MApJL,GAqJIwE,KAAKo4C,IAAIp4C,KAAKykC,IAAIuT,EAAYH,KAE7DD,EAASn5C,MAAMe,OAAU,GAAEw4C,MAC3BJ,EAASn5C,MAAM05C,mBAAsB,GAAEA,MACvCP,EAAS5R,UAAUqS,OAAO,YAAaJ,EACzC,CAEA,OAAIP,OAEFn7B,EAAAA,EAAAA,IAAgB27B,GAGTA,CACT,GAEJ,KAEAvwC,EAAAA,EAAAA,KAAgB,KACToqC,GACL0F,IAAkB,EAAM,GACvB,CAAC1F,EAAwB0F,KAE5B,MAAMa,IAAU38C,EAAAA,EAAAA,IAAOu2C,MACvBvqC,EAAAA,EAAAA,KAAgB,KACd,MAAM4wC,EAAOngD,EAAW85C,IAAY,GAEhCqG,IAASz8B,GAAS3f,QAASq8C,YAC7B18B,GAAS3f,QAASq8C,UAAYD,GAG5BA,IAAStF,GAAS92C,QAASq8C,YAC7BvF,GAAS92C,QAASq8C,UAAYD,GAG5BA,IAASD,GAAQn8C,UACnBm8C,GAAQn8C,QAAUo8C,EAElBd,IAAmBc,GACrB,GACC,CAACrG,EAAS95C,EAAUq/C,MAEL97C,EAAAA,EAAAA,IAAO5D,GACfoE,QAAUpE,EACpB,MAAM0gD,IAAan6C,EAAAA,EAAAA,IAAgB,KAC5Bwd,GAAS3f,WAIVu8C,EAAAA,EAAAA,MACFt6B,WAAWq6B,GAvMM,MA2MnBE,EAAAA,EAAAA,GAAqB78B,GAAS3f,SAAS,IAGnCy8C,IAA2Bt6C,EAAAA,EAAAA,IAAgB,KAC/Ck1C,KA/JJ,WACE,MAAMqF,EAAYt2C,OAAOu2C,eACpBD,IAIDA,EAAUE,gBACZF,EAAUE,kBACDF,EAAUG,OACnBH,EAAUG,QAEd,CAqJIC,EAAgB,IAGlB,SAASC,KAEP,GAAIlF,EAAAA,GACF,OAAO,EAGT,MAAM6E,EAAYt2C,OAAOu2C,eACzB,IAAKD,IAAcA,EAAUM,YAAc9F,GAAqBl3C,QAK9D,OAJAq3C,KACIS,EAAAA,IACFH,IAA2B,IAEtB,EAGT,MAAMsF,EAAiBP,EAAUQ,WAAW,GACtCC,EAAeF,EAAeG,WAAWxrB,OAC/C,QACEykB,KACIgH,EAAAA,EAAAA,GAAuBJ,EAAgBpH,GAAmByH,EAAAA,OAC1DH,IACDI,EAAAA,EAAAA,GAAqBJ,KACpBF,EAAeO,gBAEnBnG,MACO,EAIX,CAEA,SAASoG,KACP,IAAKV,KACH,OAGF,GAAIrF,GACF,OAGF,MAAMuF,EAAiB72C,OAAOu2C,eAAgBO,WAAW,GACnDQ,EAAgBT,EAAexwC,wBAC/BkxC,EAAeh+B,GAAS3f,QAAS6uB,QAAyB,mBAAsBpiB,wBAEtF,IAAI1I,EAAK25C,EAAclxC,KAAOkxC,EAAct6C,MAAQ,EAAKu6C,EAAanxC,KAElEzI,EAAIoxC,EACNpxC,EAAIoxC,EACKpxC,EAAI45C,EAAav6C,MAAQ+xC,IAClCpxC,EAAI45C,EAAav6C,MAAQ+xC,GAG3BoC,GAA+B,CAC7BxzC,IACAC,EAAG05C,EAAcr/B,IAAMs/B,EAAat/B,MAGtCo5B,GAAiBwF,GACjB7F,IACF,CAEA,SAASwG,KACH/G,GAAoB72C,SACtBoG,OAAOytC,aAAagD,GAAoB72C,SAG1C62C,GAAoB72C,QAAUoG,OAAO6b,WAAWw7B,GA7Ob,IA8OrC,EAkHAn/C,EAAAA,EAAAA,KAAU,KACJ4hB,EAAAA,IAIAg2B,GACFoG,IACF,GACC,CAAC1gD,EAAQ0gD,GAAYhH,EAAcY,KAEtC53C,EAAAA,EAAAA,KAAU,KACR,IACG1C,GACEi6C,IAAoByH,EAAAA,KACpBnH,GACAyB,IACApC,GAEH,OAGF,MAAMqI,EAAyBtxC,IAC7B,IAAIuxC,EAAAA,EAAAA,MACF,OAGF,MAAM,IAAE3+C,GAAQoN,EACVsU,EAAStU,EAAEsU,OAEjB,IAAKA,GAAUu0B,EAAY9yB,SAASnjB,GAClC,OAGF,MAAM4+C,EAAQp+B,GAAS3f,QACjBg+C,EAAuBtmC,SAASilC,gBAAgBsB,YAEtD,MACI9+C,EAAI+gC,WAAW,UAAa3zB,EAAE2jC,UAAoB,UAAR/wC,KAAsB6+C,GACnD,SAAXzxC,EAAE0zB,OAAoB1zB,EAAEyzB,SAAWzzB,EAAEwzB,UAA+B,UAAnBlf,EAAOq9B,UAM5DH,GACGl9B,IAAWk9B,GACQ,UAAnBl9B,EAAOq9B,SACY,aAAnBr9B,EAAOq9B,UACNr9B,EAAOs9B,kBACX,EACA3B,EAAAA,EAAAA,GAAqBuB,GAAO,GAAM,GAElC,MAAMK,EAAW,IAAIC,cAAc9xC,EAAEmU,KAAMnU,GAC3CwxC,EAAMO,cAAcF,EACtB,GAKF,OAFA1mC,SAASioB,iBAAiB,UAAWke,GAAuB,GAErD,KACLnmC,SAASmoB,oBAAoB,UAAWge,GAAuB,EAAK,CACrE,GACA,CAACjiD,EAAQi6C,EAAiB+B,GAAgBpC,GAAoBW,KAEjE73C,EAAAA,EAAAA,KAAU,KACR,MAAMigD,GAAkB3uC,EAAAA,EAAAA,KAAUrD,IAClB,QAAVA,EAAEpN,MAAkB2+C,EAAAA,EAAAA,QACtBvxC,EAAEiU,kBACFJ,EAAAA,EAAAA,IAAgBk8B,IAClB,GAva6B,KAwaA,GAAM,GAErC,OAAOkC,EAAAA,EAAAA,GAAyB,CAAEC,MAAOF,GAAkB,GAC1D,CAACjC,MAEJh+C,EAAAA,EAAAA,KAAU,KACR,MAAMy/C,EAAQp+B,GAAS3f,QAEvB,SAAS0+C,IACPX,EAAMY,MACR,CAMA,OAJIvI,GACF2H,EAAMpe,iBAAiB,QAAS+e,GAG3B,KACLX,EAAMle,oBAAoB,QAAS6e,EAAc,CAClD,GACA,CAACtI,IAEJ,MAAMwI,IAAYxpB,EAAAA,EAAAA,IAAgB,IAAM54B,QAAQP,GAAY85C,MAAY,CAAC95C,EAAU85C,IAE7Ej5C,IAAYiC,EAAAA,EAAAA,GAChB,+BACA6/C,IAAa,UACbxI,GAAuB,kBAGzB,OACEt3C,EAAAA,GAAAA,cAAA,OAAKvC,GAAIA,EAAIyC,QAASo3C,EAAsBG,QAAoBj6C,EAAWiE,IAAKpD,GAAKqD,MAAQ,WAAQlE,GACnGwC,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GAAe,gBAAiBm2C,GAC3CuB,SAAUA,GACVz3C,QAAU42C,GAA2BK,OAAiC35C,EA7G5E,WACMs5C,GAA0BK,GAC9BW,GAAoC,CAAEh7C,UACxC,GA4GMkD,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,0BACbgC,EAAAA,GAAAA,cAAA,OACEmI,IAAK0Y,GACLpjB,GAAIs5C,GAAmByH,EAAAA,IACvBxgD,UAAWA,GACX+hD,gBAAiBjJ,GAA0BK,EAC3Cj1B,KAAK,UACLzgB,IAAI,OACJogB,SAAU,EACV3hB,QAASs9C,GACT17B,SAhKV,SAAsBrU,GACpB,MAAM,UAAE8vC,EAAS,YAAEyC,GAAgBvyC,EAAE4R,cAKrC,GAHAm4B,GApTc,SAoTL+F,EAA0B,GAAKA,IAIrCn8B,EAAAA,MACI4+B,IAAgBA,EAAY1+C,UAE3B2+C,EAAAA,KAAsB1C,EAAU/5B,SAAS,kBAC1C+5B,EAAU/5B,SAAS,gBACxB,CACA,MAAMo6B,EAAYt2C,OAAOu2C,eACrBD,IACF/8B,GAAS3f,QAAS2+C,OAClBjC,EAAUE,mBACVJ,EAAAA,EAAAA,GAAqB78B,GAAS3f,SAAU,GAE5C,CACF,EA6IUg/C,UAtMV,SAAuBzyC,GAErB,MAAM,YAAE0yC,GAAgB1yC,EAElB6vC,EAAOrG,IAEb,IAAKkJ,IAAgB7C,IAAS7vC,EAAEwzB,SAAWxzB,EAAEyzB,SAAU,CACrD,MAAMP,EAA6B,cAAVlzB,EAAEpN,IAAsB,EAAc,YAAVoN,EAAEpN,KAAqB,OAAI7C,EAChF,GAAImjC,EAIF,OAHAlzB,EAAEiU,sBAEFm2B,GAAmB,CAAElX,oBAGzB,CAEKwf,GAAyB,UAAV1yC,EAAEpN,KAAoBoN,EAAE2jC,SAahC+O,GAAyB,YAAV1yC,EAAEpN,KAAsBi9C,GAAS7vC,EAAEwzB,SAAYxzB,EAAEyzB,SAAYzzB,EAAE2yC,OAIxF3yC,EAAEsU,OAAO8e,iBAAiB,QAASie,GAA6B,CAAEuB,MAAM,KAHxE5yC,EAAEiU,iBACFk2B,OAbGkB,KAE0B,UAAxBvC,KAAoC9oC,EAAE2jC,UACX,eAAxBmF,KAAyC9oC,EAAEyzB,SAAWzzB,EAAEwzB,YAG9DxzB,EAAEiU,iBAEF62B,KACAb,KAQN,EAoKU/lB,YAtOV,SAAyBlkB,GAcvB,SAAS6yC,EAAuBC,GAC1BA,aAAchB,eAA4B,QAAXgB,EAAGlgD,KAA4B,WAAXkgD,EAAGlgD,MAI1D8iB,YAAW,KACTi1B,GAAqBl3C,SAAU,CAAK,GA9SR,KAiT9BoG,OAAOy5B,oBAAoB,UAAWuf,GACtCh5C,OAAOy5B,oBAAoB,YAAauf,GAC1C,CAxBiB,IAAb7yC,EAAEQ,OAOFmqC,GAAqBl3C,UAIzBk3C,GAAqBl3C,SAAU,EAe/B0X,SAASioB,iBAAiB,YAAayf,GACvC1nC,SAASioB,iBAAiB,UAAWyf,KA1BhB7yC,EAAE4R,cAAc0Q,QAAS,2BAA6BtiB,EAAEsU,QAEhE8e,iBAAiB,UAAWie,GAA6B,CAAEuB,MAAM,GAyBhF,EA0MUthC,cAAei6B,EAAAA,GA7IzB,SAAkCvrC,GAC3BwwC,OAILpF,IAA4BD,IAEvBA,GAMHL,MALA9qC,EAAEiU,iBACFjU,EAAEM,kBAEF4wC,MAIJ,OA8HiEnhD,EACvDgjD,cAAexH,EAAAA,GAAa8F,QAA8BthD,EAC1D,aAAY2iB,KAEZ+2B,GACAl3C,EAAAA,GAAAA,cAAA,QACEhC,WAAWiC,EAAAA,EAAAA,GACT,oBACC62C,IAA2BK,GAAoB,aAElD11C,IAAI,SAEFq1C,IAA2BK,GACxBn3C,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,0CACjBmiB,GAGLngB,EAAAA,GAAAA,cAAA,UAAQmI,IAAK4lB,GAAiB/vB,UAAU,kBACxCgC,EAAAA,GAAAA,cAAA,UAAQmI,IAAK+vC,GAAmBl6C,UAAU,kBAC1CgC,EAAAA,GAAAA,cAAA,OAAKmI,IAAKgwC,GAAsBn6C,UAAU,+BAG9CgC,EAAAA,GAAAA,cAAA,OAAKmI,IAAK8vC,GAAkBj6C,WAAWiC,EAAAA,EAAAA,GAAe,gBAAiBm2C,EAAgB,UACrFp2C,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,0BACbgC,EAAAA,GAAAA,cAAA,OAAKmI,IAAK6vC,GAAUh6C,WAAWiC,EAAAA,EAAAA,GAAejC,GAAW,SAAUyD,IAAI,gBAGzDjE,IAAjBq5C,GACC72C,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,uBAAuByD,IAAI,QACvCo1C,GAGL72C,EAAAA,GAAAA,cAACygD,EAAAA,EAAa,CACZ5pC,OAAQwhC,GACRqI,eAAgBlI,GAChBE,cAAeA,GACfC,iBAAkBA,GAClB7hC,QAAS6mC,KAEVzG,GAAqBl3C,EAAAA,GAAAA,cAAA,QAAMhC,UAAU,uBAAsBkR,EAAAA,EAAAA,GAAWgoC,IACnE,I,yKCrkBV,MAQA,EARuCv1C,IACrC,MAAM,OAAEkV,GAAWlV,EACbg/C,GAAatrB,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,cAAeze,GAGjE,OAAO8pC,EAAa3gD,EAAAA,GAAAA,cAAC2gD,EAAeh/C,QAAYnE,CAAS,EC6L3D,GAAed,EAAAA,EAAAA,KAvJwBqB,IAqBjC,IArBkC,OACtCjB,EAAM,SACN8U,EAAQ,SACRlK,EAAQ,YACRk5C,EAAW,gBACXC,EAAe,QACf7J,EAAO,iBACP8J,EAAgB,eAChBC,EAAc,gBACdC,EAAe,oBACfC,EAAmB,gBACnBC,EAAe,YACfC,EAAW,kBACXC,EAAiB,iBACjBjK,EAAgB,eAChBkK,EAAc,cACdC,EAAa,oBACbC,EAAmB,gBACnBC,EAAe,mBACfC,EAAkB,UAClBzjD,GACDD,EACC,MAAM,sBACJ2jD,EAAqB,kBACrBC,EAAiB,eACjBC,EAAc,qBACdC,IACEzjD,EAAAA,EAAAA,MAGE0jD,GAAaphD,EAAAA,EAAAA,IAAuB,OAEnCqhD,EAAoBC,IAA+BlhD,EAAAA,EAAAA,MACnDwuB,EAAqB2yB,IAA0Bz3C,EAAAA,EAAAA,SAAsChN,GAEtF0kD,GAA4BjiD,EAAAA,EAAAA,GAChC,6BACC+2C,GAAW,YACZ+K,EACKjB,GAAoB,cACpBA,GAAoB,cAGrBqB,GAA2B9+C,EAAAA,EAAAA,IAAgB,KAC/Ck+C,MACAC,MACAT,IACA,MAAMqB,EAAYN,EAAW5gD,QAC7B,IAAKkhD,EAAW,OAChB,MAAM,EAAEn9C,EAAC,EAAEC,GAAMk9C,EAAUz0C,wBAC3Bs0C,EAAuB,CAAEh9C,IAAGC,KAAI,IAG5Bm9C,GAAmBh/C,EAAAA,EAAAA,IAAiBue,IAC3B,aAATA,GACF8/B,EAAsB,CAAEY,MAAO,KAC/BX,EAAkB,CAAEW,WAAO9kD,MAE3BmkD,EAAkB,CAAEW,MAAO,KAC3BZ,EAAsB,CAAEY,WAAO9kD,IACjC,IAGI+kD,GAAuBl/C,EAAAA,EAAAA,IAAgB,KAC3C,MAAMm/C,EAAe5pC,SAAS8R,cAC5B02B,EAAoBqB,EAAAA,IAAoCC,EAAAA,KAGrDh7C,GAAY86C,IAAiB5pC,SAAS+pC,eAK3CH,GAAc3C,OACd18B,YAAW,KACTo+B,MACAR,GAAgB,GA3GgB,MAoGhCA,GAQ+B,IAG7BlxB,GAAoBxsB,EAAAA,EAAAA,IAAgB,IAAMy+C,EAAW5gD,UACrD4uB,GAAiBzsB,EAAAA,EAAAA,IAAgB,IAAMy+C,EAAW5gD,SAAS6uB,QAAQ,mCACnEC,GAAiB3sB,EAAAA,EAAAA,IAAgB,IAAMuV,SAAS8R,cAAc,kCAC9D6F,GAAYltB,EAAAA,EAAAA,IAAgB,KAAM,CAAGmtB,YAAY,OAEjD,UACJP,EAAS,UAAEC,EAAS,iBAAEC,EAAgB,iBAAEC,EAAkB5sB,MAAO6sB,IAC/DC,EAAAA,EAAAA,GACFhB,EACAO,EACAC,EACAE,EACAO,GAGF,OACEvwB,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACG0H,EACC1H,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLtC,UAAWkkD,EACX3hD,OAAK,EACLkP,MAAM,cACNvP,QAAS4gD,EAAmBE,EAAkBuB,EAC9C5yC,UAAU,gCAEV3P,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,oBACbgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,uBACZ8iD,IAAqBiB,GAAsB/hD,EAAAA,GAAAA,cAACooB,EAAAA,EAAO,CAAC3Y,MAAM,UAG7DzP,EAAAA,GAAAA,cAAC4iD,EAAAA,EAAqB,CACpB5kD,WAAWiC,EAAAA,EAAAA,GAAe,qBAAsB6gD,GAAoB,aACpEvgD,OAAK,EACLkP,MAAM,cACNozC,WAAYV,EACZxyC,UAAU,gCAEV3P,EAAAA,GAAAA,cAAA,OAAKmI,IAAK25C,EAAY9jD,UAAU,wBAChCgC,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,qBAIjBgC,EAAAA,GAAAA,cAAC2gD,EAAU,CACT7jD,OAAQA,EACR8U,SAAUA,EACViF,OAAQiqC,GAAoBpjD,QAAQ+jD,GACpCb,YAAaA,EACbC,gBAAiBA,EACjBj9C,OAAQo+C,EACRlrC,QAASkqC,EACTM,cAAeA,EACfJ,gBAAiBA,EACjBD,oBAAqBA,EACrBE,YAAaA,EACbE,eAAgBA,EAChByB,aAAcT,EACdT,eAAgBA,EAChBC,qBAAsBA,EACtBT,kBAAmBA,EACnBjK,iBAAkBA,EAClBn5C,UAAWA,EACXiyB,UAAWmxB,EAAoBnxB,OAAYzyB,EAC3C0yB,UAAWkxB,EAAoBlxB,OAAY1yB,EAC3C2yB,iBAAkBixB,EAAoBjxB,OAAmB3yB,EACzD4yB,iBAAkBgxB,EAAoBhxB,OAAmB5yB,EACzDgG,MAAO49C,EAAoB/wB,OAAY7yB,IAExC,G,6LC1JP,MAAMulD,EAAsE,CAC1EC,EAAG,OACHC,OAAQ,OACRC,EAAG,SACHC,GAAI,SACJC,EAAG,YACHC,IAAK,gBACLC,KAAM,YACNC,KAAM,WAEFC,EAAa5qC,SAAS48B,cAAc,OA4c1C,GAAe94C,EAAAA,EAAAA,KA1cqBqB,IAM9B,IAN+B,OACnC8Y,EAAM,eACN6pC,EAAc,cACdhI,EAAa,iBACbC,EAAgB,QAChB7hC,GACD/Y,EAEC,MAAMg0B,GAAerxB,EAAAA,EAAAA,IAAuB,MAEtC+iD,GAAkB/iD,EAAAA,EAAAA,IAAyB,OAC3C,aAAEhB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkBiX,IAC1D6sC,EAAmBC,EAAiBC,IAAoB9iD,EAAAA,EAAAA,MACxD+iD,EAASC,IAAct5C,EAAAA,EAAAA,IAAS,KAChCu5C,EAAeC,IAAoBx5C,EAAAA,EAAAA,KAAS,IAC5Cy5C,EAAgBC,IAAqB15C,EAAAA,EAAAA,OACrC25C,EAAqBC,IAA0B55C,EAAAA,EAAAA,IAA+B,CAAC,IAEtFhL,EAAAA,EAAAA,KAAU,IAAOqX,GAASyvB,EAAAA,EAAAA,GAAsBxvB,QAAWtZ,GAAY,CAACqZ,EAAQC,KAChFutC,EAAAA,EAAAA,GACExtC,EACAkb,EACAjb,GACA,IAGFtX,EAAAA,EAAAA,KAAU,KACJkkD,EACFD,EAAgBviD,QAASmgB,SAEzByiC,EAAW,IACXE,GAAiB,GACnB,GACC,CAACN,KAEJlkD,EAAAA,EAAAA,KAAU,KACHE,IACHkkD,IACAQ,EAAuB,CAAC,GACxBF,OAAkB1mD,GACpB,GACC,CAAComD,EAAkBlkD,KAEtBF,EAAAA,EAAAA,KAAU,KACR,IAAKqX,IAAW6hC,EACd,OAGF,MAAM4L,EAAwC,CAAC,EAC/C,IAAI,cAAEC,GAAkB7L,EAAc8L,wBACtC,KAAOD,GAAiBA,EAAc9mD,KAAO+gD,EAAAA,KAAmB,CAC9D,MAAMiG,EAAa1B,EAAwBwB,EAAcnF,SACrDqF,IACFH,EAAgBG,IAAc,GAGhCF,EAAgBA,EAAcA,aAChC,CAEAH,EAAuBE,EAAgB,GACtC,CAACztC,EAAQ6hC,EAAeiL,IAE3B,MAAMe,GAAmBrhD,EAAAA,EAAAA,IAAgB,KACvC,IAAKq1C,EACH,OAGF,MAAMkF,EAAYt2C,OAAOu2C,eACrBD,IACFA,EAAUE,kBACVF,EAAU+G,SAASjM,GACrB,IAGIkM,GAAsBvhD,EAAAA,EAAAA,IAAgB,KAC1C,MAAMu6C,EAAYt2C,OAAOu2C,eACrBD,GACFjF,EAAiBiF,EAAUQ,WAAW,GACxC,IAGIyG,GAAkBxhD,EAAAA,EAAAA,IAAiByhD,IACvC,GAAKpM,EASL,OANA8K,EAAWuB,gBAAgBrM,EAAcsM,iBACrCF,GACFtB,EAAW7J,iBAAiBsL,EAAAA,IAA6BtgD,SAASugD,IAChEA,EAAGC,YAAYD,EAAGE,aAAa,OAAQ,IAGpC5B,EAAWjG,SAAS,IAGvB8H,GAAqBhiD,EAAAA,EAAAA,IAAgB,KACzC,GAAKq1C,EAIL,OAAOA,EAAc8L,wBAAwBD,aAAa,IAG5D,SAASe,IACP,MAAMrG,EAAQwE,EAAgBviD,QAC9B,IAAK+9C,EACH,OAGF,MAAM,YAAE3V,EAAW,YAAEic,EAAW,WAAEC,GAAevG,EACjD,GAAIsG,GAAejc,EAEjB,YADA4a,OAAkB1mD,GAIpB,IAAIQ,EAAY,GACZwnD,EAAaD,EAAcjc,IAC7BtrC,EAAY,cAEVwnD,EAAa,IACfxnD,GAAa,cAGfkmD,EAAkBlmD,EACpB,CAOA,SAASynD,EAAyBplD,GAChC,GAAI8jD,EAAoB9jD,GACtB,MAAO,SAGT,GAAY,cAARA,GAA+B,kBAARA,GACzB,GAAInB,OAAOw6C,KAAKyK,GAAqBvvB,MAClC8wB,GAASA,IAASrlD,GAAO3C,QAAQymD,EAAoBuB,MAEtD,MAAO,gBAEJ,GAAIvB,EAAoBwB,WAAaxB,EAAoByB,cAC9D,MAAO,UAIX,CAEA,MAAMC,GAAoBxiD,EAAAA,EAAAA,IAAgB,KACxC,GAAI8gD,EAAoB2B,QAAS,CAC/B,MAAMr7B,EAAU46B,IAChB,IACG3M,IACGjuB,GACDA,EAAQmvB,QAAQmM,aAAelxB,EAAAA,GAAAA,UAC9BpK,EAAQu1B,YAEZ,OASF,OANAv1B,EAAQ06B,YAAY16B,EAAQu1B,kBAC5BoE,GAAwBE,IAAe,IAClCA,EACHwB,SAAS,KAIb,CAEA,MAAMtlD,EAAOqkD,IACbjsC,SAASotC,YACP,cAAc,EAAQ,2CAA0CnxB,EAAAA,GAAAA,YAAkCr0B,YAEpGsW,GAAS,IAGLmvC,GAAiB5iD,EAAAA,EAAAA,IAAgB,KACrC+gD,GAAwBE,IAEtB1rC,SAASotC,YAAY1B,EAAgB4B,KAAO,eAAiB,QAC7DhnD,OAAOw6C,KAAK4K,GAAiB3/C,SAAStE,IACvB,WAARA,GAA4B,cAARA,IAAwB3C,QAAQ4mD,EAAgBjkD,KACvEuY,SAASotC,YAAY3lD,EACvB,IAGFukD,IACO,IACFN,EACH4B,MAAO5B,EAAgB4B,QAEzB,IAGEC,GAAmB9iD,EAAAA,EAAAA,IAAgB,KACvCuV,SAASotC,YAAY,UACrBpB,IACAR,GAAwBE,IAAe,IAClCA,EACH8B,QAAS9B,EAAgB8B,UACxB,IAGCC,GAAsBhjD,EAAAA,EAAAA,IAAgB,KAC1CuV,SAASotC,YAAY,aACrBpB,IACAR,GAAwBE,IAAe,IAClCA,EACHgC,WAAYhC,EAAgBgC,aAC3B,IAGCC,GAA0BljD,EAAAA,EAAAA,IAAgB,KAC9C,GAAI8gD,EAAoByB,cAAe,CACrC,MAAMn7B,EAAU46B,IAChB,IACG3M,IACGjuB,GACmB,QAApBA,EAAQ20B,UACP30B,EAAQu1B,YAEZ,OASF,OANAv1B,EAAQ06B,YAAY16B,EAAQu1B,kBAC5BoE,GAAwBE,IAAe,IAClCA,EACHsB,eAAe,KAInB,CAEA,MAAMplD,EAAOqkD,IACbjsC,SAASotC,YAAY,cAAc,EAAQ,QAAOxlD,WAClDsW,GAAS,IAGL0vC,GAAsBnjD,EAAAA,EAAAA,IAAgB,KAC1C,GAAI8gD,EAAoBwB,UAAW,CACjC,MAAMl7B,EAAU46B,IAChB,IACG3M,IACGjuB,GACmB,SAApBA,EAAQ20B,UACP30B,EAAQu1B,YAEZ,OASF,OANAv1B,EAAQ06B,YAAY16B,EAAQu1B,kBAC5BoE,GAAwBE,IAAe,IAClCA,EACHqB,WAAW,KAIf,CAEA,MAAMnlD,EAAOqkD,GAAgB,GAC7BjsC,SAASotC,YAAY,cAAc,EAAQ,6CAA4CxlD,YACvFsW,GAAS,IAGL2vC,GAAuBpjD,EAAAA,EAAAA,IAAgB,KAC3C,MAAMqjD,IAAoBC,EAAAA,EAAAA,GAAe9C,IAAY,IAAIhvC,MAAM,KAAKxV,IAAIunD,WAAWl3C,KAAK,KAExF,GAAIq0C,EAAe,CACjB,MAAMt5B,EAAU46B,IAChB,IAAK56B,GAA+B,MAApBA,EAAQ20B,QACtB,OAOF,OAJC30B,EAA8BvV,KAAOwxC,OAEtC5vC,GAGF,CAEA,MAAMtW,EAAOqkD,GAAgB,GAC7BH,IACA9rC,SAASotC,YACP,cACA,EACC,WAAUU,yCAAwDlmD,SAErEsW,GAAS,IAGLgqB,GAAgBz9B,EAAAA,EAAAA,IAAiBoK,IACrC,MAUM0xB,EAVqD,CACzD0nB,EACAhjC,EAAGoiC,EACHxyC,EAAG4yC,EACHhlD,EAAG8kD,EACHW,EAAGN,EACH1xC,EAAGyxC,EACHQ,EAAGlB,GCjWM,SAAyBp4C,GACtC,MAAMpN,EAAMoN,EAAEpN,KAAOoN,EAAE0zB,KAEvB,OAAO9gC,EAAI+gC,WAAW,OAAS/gC,EAAIjB,MAAM,GAAG4nD,cAAgB3mD,CAC9D,CDgWoC4mD,CAAgBx5C,KAG9CA,EAAE2yC,SACG3yC,EAAEyzB,SAAWzzB,EAAEwzB,UAChB9B,IAKN1xB,EAAEiU,iBACFjU,EAAEM,kBACFoxB,IAAS,KAGX3/B,EAAAA,EAAAA,KAAU,KACJqX,GACF+B,SAASioB,iBAAiB,UAAWC,GAGhC,IAAMloB,SAASmoB,oBAAoB,UAAWD,KACpD,CAACjqB,EAAQiqB,IAEZ,MAAMziC,GAAOC,EAAAA,EAAAA,KASb,IAAKoB,EACH,OAGF,MAAM1B,GAAYiC,EAAAA,EAAAA,GAChB,gBACAN,EACA+jD,GAAqB,sBAGjBwD,GAA0BjnD,EAAAA,EAAAA,GAC9B,iCACAvC,QAAQmmD,EAAQviD,SAAW,SAGvBkC,GAAQk9C,EACT,SAAQA,EAAez7C,aAAay7C,EAAex7C,8BAA8Bw7C,EAAez7C,OACjG,GAEJ,OACEjF,EAAAA,GAAAA,cAAA,OACEmI,IAAK4pB,EACL/zB,UAAWA,EACXwF,MAAOA,GACP08C,UA/BJ,SAAgCzyC,GAChB,UAAVA,EAAEpN,KAAmBqjD,IACvB+C,IACAh5C,EAAEiU,iBAEN,EA4BIiQ,YAAaxc,EAAAA,GAEbnV,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,yBACbgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmP,MAAM,cACNE,UAAU,eACV3R,UAAWynD,EAAyB,WACpCvlD,QAAS2lD,GAET7lD,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,0BAEfgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,0BACfgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmP,MAAM,cACNE,UAAU,YACV3R,UAAWynD,EAAyB,QACpCvlD,QAAS+lD,GAETjmD,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,oBAEfgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmP,MAAM,cACNE,UAAU,cACV3R,UAAWynD,EAAyB,UACpCvlD,QAASimD,GAETnmD,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,sBAEfgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmP,MAAM,cACNE,UAAU,kBACV3R,UAAWynD,EAAyB,aACpCvlD,QAASmmD,GAETrmD,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,0BAEfgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmP,MAAM,cACNE,UAAU,qBACV3R,UAAWynD,EAAyB,iBACpCvlD,QAASqmD,GAETvmD,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,6BAEfgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmP,MAAM,cACNE,UAAU,iBACV3R,UAAWynD,EAAyB,aACpCvlD,QAASsmD,GAETxmD,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,yBAEfgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,0BACfgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACmP,MAAM,cAAcE,UAAWtR,EAAK,2BAA4B6B,QAASyjD,GAC/E3jD,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,qBAIjBgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,8BACbgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,yBACbgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACmP,MAAM,cAAcE,UAAWtR,EAAK,UAAW6B,QAAS0jD,GAC9D5jD,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,0BAEfgC,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,0BAEfgC,EAAAA,GAAAA,cAAA,OACEhC,WAAWiC,EAAAA,EAAAA,GAAe,uCAAwCgkD,IAElEjkD,EAAAA,GAAAA,cAAA,SACEmI,IAAKs7C,EACLzlD,UAAU,+BACV4jB,KAAK,OACLvb,MAAOw9C,EACP1jC,YAAY,eACZwB,aAAa,MACbwlC,UAAU,MACV1lD,IAAI,OACJqgB,SAvTZ,SAA6BrU,GAC3Bq2C,EAAWr2C,EAAEsU,OAAO1b,OACpBi/C,GACF,EAqTY3N,SAAU2N,KAIdtlD,EAAAA,GAAAA,cAAA,OAAKhC,UAAWkpD,GACdlnD,EAAAA,GAAAA,cAAA,OAAKhC,UAAU,0BACfgC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmP,MAAM,cACNE,UAAWtR,EAAK,QAChBL,UAAU,gBACVkC,QAASumD,GAETzmD,EAAAA,GAAAA,cAAA,KAAGhC,UAAU,wBAKjB,G,kDE3fKg2C,eAAeK,EAA8B+S,GAC1D,MAAMjT,EAAgB,GAEtB,SAASkT,EAAwBC,EAA+B1iD,GAC9D,OAAO,IAAI2iD,SAASC,IAClB,GAAIF,aAAiBntC,KACnBg6B,EAAM5yC,KAAK+lD,GACXE,EAAQF,QACH,GAAIA,EAAMG,OAAQ,CACvB,MAAMC,EAAW9iD,EAAK+iD,YACrBL,EAA8BM,MAAMA,IACnCzT,EAAM5yC,KAAKqmD,GACXJ,EAAQI,EAAK,IACZ,KAGGF,GACFvT,EAAM5yC,KAAKmmD,GAEbF,EAAQE,EAAS,GAErB,MAAWJ,EAAMO,aACIP,EAAmCQ,eAC5CC,aAAaC,IACrB,MAAMC,EAAkB,GACxB,IAAK,IAAI5mD,EAAI,EAAGA,EAAI2mD,EAAQ1mD,OAAQD,IAClC4mD,EAAgB1mD,KAAK8lD,EAAwBW,EAAQ3mD,GAAIuD,IAE3D4iD,EAAQD,QAAQW,IAAID,GAAiB,GAEzC,GAEJ,CAEA,MAAMA,EAAkB,GACxB,IAAK,IAAI5mD,EAAI,EAAGA,EAAI+lD,EAAkB9lD,OAAQD,IAAK,CACjD,MAAMuD,EAAOwiD,EAAkB/lD,GAC/B,GAAkB,SAAduD,EAAKujD,KAAiB,CACxB,MAAMb,EAAQ1iD,EAAKwjD,oBAAsBxjD,EAAK+iD,YAC1CL,GACFW,EAAgB1mD,KAAK8lD,EAAwBC,EAAO1iD,GAExD,CACF,CAIA,aAFM2iD,QAAQW,IAAID,IAEXI,EAAAA,EAAAA,IAAclU,EACvB,C,mCClDA,MAAMmU,EAAQ,oBACRC,EAAW,mBACXC,EAAgB,oBAChBC,EAAoB,OAEnB,SAASC,EAAiBpL,GAC/B,OAAOA,EACJzqB,QAAQ01B,EAAU,KAClB11B,QAAQy1B,EAAO,MACfz1B,QAAQ21B,EAAe,IACvB31B,QAAQ41B,EAAmB,GAChC,C,kBCTO,SAASlK,EAAuBJ,EAAuBwK,GAC5D,MAAM,wBAAEnE,GAA4BrG,EACpC,IAAIyK,EAAiCpE,EACjCqE,EAAa,EACjB,KAAOD,GAAcA,EAAWnrD,KAAOkrD,GAAWE,EANxB,GAOxBD,EAAaA,EAAWrE,cACxBsE,IAGF,OAAOnrD,QAAQkrD,GAAcA,EAAWnrD,KAAOkrD,EACjD,C,+MCSA,MACMG,EAAmB,IAAIC,OAAQ,IAAGC,EAAAA,EAAAA,WAAyB,KAC3DC,EAAuB,IAAIF,OAAQ,GAAEG,EAAAA,IAAAA,UAA2B,KAEvD,SAASC,EACtBlX,EACAgF,EACAmS,EACAC,EACAxoC,EACAu5B,GAEA,MAAM,wBAAEkP,EAAuB,yBAAEC,IAA6BnrD,EAAAA,EAAAA,OAEvDorD,EAAkBC,EAAoBC,IAAwB5oD,EAAAA,EAAAA,IAAQ,GAEvE6oD,GAA4BC,EAAAA,EAAAA,KAAqB,KACrD,MAAMtM,EAAOrG,IACb,GAAKhF,GAAcqL,GAAS+L,KAAqBQ,WAEhCvM,EAAKhc,MAAM2e,EAAAA,GAAqB+I,EAAAA,EAAeE,EAAAA,KAKhE,OAF4BY,EAAAA,EAAAA,IAAuBjpC,EAAS3f,SAEjCogC,MAAM2e,EAAAA,GAAqB6I,EAAmBG,KAAwB,EAAE,GAClG,CAAChS,EAASoS,EAAmBxoC,EAAUoxB,GA1B3B,KA4BT8X,GAAeC,EAAAA,EAAAA,GACnBL,EAA2B,CAACA,EAA2B1S,EAASoS,IAAoB,GAGhFlsD,GAAWm5B,EAAAA,EAAAA,IAAgB,IAAM54B,QAAQqsD,MAAiB,CAACA,IAC3DE,EAAkBvsD,QAAQ08C,GAAc94C,SAE9C9B,EAAAA,EAAAA,KAAU,KACR,IAAKyyC,EAAW,OAEhB,MAAMiY,EAAYH,IACdG,EACGD,GACHX,EAAwB,CACtB53B,MAAOuuB,EAAAA,GAAqBiK,EAAYA,EAAU5oB,MAAM,kBAAkB,KAI9EioB,GACF,GACC,CAACtX,EAAW8X,EAAcE,EAAiBV,EAA0BD,IAExE,MAAMa,GAAoB9mD,EAAAA,EAAAA,IAAiBquB,IACzC,MAAMw4B,EAAYH,IAClB,IAAK9X,IAAciY,EAAW,OAE9B,MAAME,EAAUvpC,EAAS3f,QACnBmpD,GAAsBP,EAAAA,EAAAA,IAAuBM,GAC7CE,EAAYrK,EAAAA,GACdiK,EAEAA,EAAUr3B,QAAQ,wBAAyB,QACzC03B,EAAQ,IAAIxB,OAAQ,IAAGuB,UAAmB,IAE1CE,EADUH,EAAoB/oB,MAAMipB,GAAQ,GAC5BjpD,OAAS4oD,EAAU5oD,OACnCmpD,EAAUJ,EAAoBx3B,QAAQ03B,GAAOG,EAAAA,EAAAA,IAAqBh5B,GAAOi5B,OAAOH,IAChFI,EAAqBR,EAAQ7M,UAAUsN,UAAUR,EAAoB/oD,QAE3E8nD,EAAS,GAAEqB,IAAUG,MAErBrkB,EAAAA,EAAAA,KAAoB,MAClBmX,EAAAA,EAAAA,GAAqB0M,GAAS,GAAM,EAAK,GACzC,IAKJ,OAFA5qD,EAAAA,EAAAA,IAAUkqD,EAAsB,CAACA,EAAsBzS,IAEhD,CACL6T,yBAA0BptD,QAAQP,GAAY8sD,IAAoBT,GAClEuB,wBAAyBtB,EACzBU,oBAEJ,C,kOCnEA,IAAIa,EACAC,EACAC,EAEAC,EACAC,EACJ,MAKMC,GAA0BC,EAAAA,EAAAA,IAiJhC,SAA6BvsD,EAA6BwsD,EAA0BC,GAClF,OAAKzsD,GAASwsD,EAAejqD,OAItBpC,OAAOC,QAAOssD,EAAAA,EAAAA,IAAW1sD,EAAMwsD,IAAiBnsD,MAAM,EAAGosD,GAHvDloC,EAAAA,CAIX,IAtJMooC,GAAqBJ,EAAAA,EAAAA,IAwJ3B,SACEvsD,EACA4sD,EACAC,GAEA,MAAMC,EAAS3sD,OAAOC,OAAOJ,GAEvB+sD,GAAWC,EAAAA,EAAAA,IAA4BF,EAAQ,UAC/CG,EAAsBL,GACxB7f,EAAAA,EAAAA,IAAU6f,GAAoBM,GACvB/sD,OAAOC,QAAOssD,EAAAA,EAAAA,IAAWK,EAAUG,MAE1C,CAAC,EACCC,EAAkBN,GACpB9f,EAAAA,EAAAA,IAAU8f,GAAgBK,GACnB/sD,OAAOC,QAAOssD,EAAAA,EAAAA,IAAWK,EAAUG,MAE1C,CAAC,EAECE,EAAY,IAAKH,KAAwBE,GACzCE,EAAY,GAAgB9X,OAAOp1C,OAAOw6C,KAAKsS,GAAsB9sD,OAAOw6C,KAAKwS,IAEjFG,EAASR,EAAOlgB,QAAO,CAAC5lC,EAAQ2rB,KACpCA,EAAM46B,MAAM3nD,SAASyV,IACdrU,EAAOqU,KACVrU,EAAOqU,GAAQ,IAGjBrU,EAAOqU,GAAM7Y,KAAKmwB,EAAM,IAGnB3rB,IACN,CAAC,GAEEumD,EAAQptD,OAAOw6C,KAAK2S,GACpBE,EAAeH,EAASzgB,QAAO,CAAC3mC,EAAKwnD,IAAYznD,KAAKC,IAAIA,EAAKwnD,EAAQlrD,SAAS,GAEtF,MAAO,CACL6qD,YACAC,WACAC,SACAC,QACAC,eAEJ,IAnMME,GAAsBnB,EAAAA,EAAAA,IAqM5B,SAAyBoB,EAAkBntD,EAAgBisD,GACzD,MAAM,UACJW,EAAS,SAAEC,EAAQ,OAAEC,EAAM,MAAEC,EAAK,aAAEC,GAClCG,EAEJ,IAAIC,EAAmB,GAEvB,GAAIptD,EAAO+B,OAASirD,EAClB,OAAOjpC,EAAAA,EAGT,MAAMspC,EAAkBR,EAAS7sD,QAAQitD,GAAYA,EAAQprB,WAAW7hC,KAASokB,OACjFgpC,EAAUA,EAAQrY,OAAOp1C,OAAOC,QAAOssD,EAAAA,EAAAA,IAAWU,EAAYS,IAAkBC,QAGhF,MAAMC,EAAeR,EAAM/sD,QAAQ6a,GAASA,EAAKgnB,WAAW7hC,KAK5D,OAJAotD,EAAUA,EAAQrY,OAAOp1C,OAAOC,QAAOssD,EAAAA,EAAAA,IAAWY,EAAQS,IAAeD,QAEzEF,GAAUI,EAAAA,EAAAA,IAAOJ,GAEZA,EAAQrrD,OAINqrD,EAAQvtD,MAAM,EAAGosD,GAHfloC,EAAAA,CAIX,IA5NA,IACE6nC,EAAkB,wCAClBC,EAAoB,SAKtB,CAJE,MAAO39C,GAEP09C,EAAkB,yCAClBC,EAAoB,aACtB,CAEe,SAAS4B,EACtB/a,EACAgF,EACAmS,GAKA,IAJAT,EAAOx8C,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAGqyC,EAAAA,IACV+M,EAAwBp/C,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EACxBmuD,EAA4Cx/C,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAC5CouD,EAAwCz/C,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAExC,MAAOgsD,EAAkBC,EAAoBC,IAAwB5oD,EAAAA,EAAAA,IAAQ,IAEtE/B,EAAMkuD,IAAWziD,EAAAA,EAAAA,OACjB0iD,EAAgBC,IAAqB3iD,EAAAA,EAAAA,IAAkB8Y,EAAAA,IACvD8pC,EAAsBC,IAA2B7iD,EAAAA,EAAAA,IAAuB8Y,EAAAA,IAG/E9jB,EAAAA,EAAAA,KAAU,KAGR,SAASy9C,IACPgQ,EAAQ/B,EAAUW,OACpB,CAJK5Z,IAMDiZ,EACFjO,IAEAqQ,IAAkB9R,KAAKyB,GACzB,GACC,CAAChL,IAEJ,MAAMsb,GAA2B3D,EAAAA,EAAAA,KAAqB,KACpD,MAAMtM,EAAOrG,IACb,OAAOhF,GAAaqL,EAAK95B,SAAS,MAAOklC,EAAAA,EAAAA,GAAiBpL,GAAMhc,MAAM6pB,KAAmB,GAAGr4B,YAASt1B,CAAS,GAC7G,CAACy5C,EAAShF,GAhDE,KAkDTub,GAAexD,EAAAA,EAAAA,GACnBuD,EAA0B,CAACA,EAA0BtW,IAAU,GAG3DwW,GAAiBpqD,EAAAA,EAAAA,IAAiBwoD,IAGtC,GAFAsB,EAAkBtB,GAEdA,IAAWvoC,EAAAA,EAEb,YADA+pC,EAAwB/pC,EAAAA,GAI1B,MAAMoqC,EAAe7B,EAAOxsD,KAAKqyB,GAAUA,EAAMi8B,SAC3CvT,GAAewT,EAAAA,EAAAA,KACnBC,EAAAA,EAAAA,KAA2BhvD,EAAAA,EAAAA,MAAa6uD,GACxC,MAEFL,EAAwBjT,EAAa,IAGjC0T,GAAczqD,EAAAA,EAAAA,IAAgB,SAACquB,GAAgD,IAApBq8B,EAAO5hD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACtE,MAAMmxC,EAAOrG,IACb,IAAKqG,EAAM,OAEX,MAAM0Q,EAAU1Q,EAAK2Q,YAAY,IAAKF,EAAUzQ,EAAK2Q,YAAY,KAAO,OAAIzwD,GAE5E,IAAiB,IAAbwwD,EAAgB,CAClB,MAAME,EAA6B,iBAAVx8B,GAAqBxiB,EAAAA,EAAAA,GAAWwiB,EAAO,CAAC,gBAAiBg5B,EAAAA,EAAAA,IAAqBh5B,GACvG03B,EAAS,GAAE9L,EAAKuN,UAAU,EAAGmD,KAAWE,KAExC,MAAM1L,EAAemG,IAAYnK,EAAAA,IAC7B5lC,SAAS8R,cAA8Bg4B,EAAAA,KACvC9pC,SAASu1C,eAAexF,IAE5BpiB,EAAAA,EAAAA,KAAoB,MAClBmX,EAAAA,EAAAA,GAAqB8E,GAAc,GAAM,EAAK,GAElD,CAEAiL,EAAenqC,EAAAA,EACjB,IAqCA,OAnCA9jB,EAAAA,EAAAA,KAAU,KACR,MAAM4uD,EAAYZ,IAClB,IAAKY,IAAcrvD,EAEjB,YADA0uD,EAAenqC,EAAAA,GAIjB,MAAM+qC,EAAsBD,EAAU9sD,OAAS,GAAK8sD,EAAUE,SAAS,KAEjE/uD,EAAS6uD,EAAUvD,UAAU,EAAGwD,EAAsB,EAAID,EAAU9sD,OAAS,OAAI9D,GACvF,IAAImvD,EAAmBrpC,EAAAA,EAEvB,GAAK/jB,GAEE,GAAuB,IAAlBA,EAAO+B,QAAgB8pD,EAAkBmD,KAAKhvD,IAAYA,EAAO+B,QA5GvD,EA4GoF,CACxG,MAAMorD,EAAUhB,EAAmB3sD,EAAM4sD,EAAmBC,GAC5De,EAAUF,EAAoBC,EAASntD,EAAOynD,cA/G/B,GAgHjB,OAJE2F,EAAUtB,EAAwBtsD,EAAMwsD,EA5GzB,IAkHZoB,EAAQrrD,OAKT+sD,EACFP,EAAYnB,EAAQ,GAAGgB,QAAQ,GAE/BF,EAAed,GAPfc,EAAenqC,EAAAA,EAQjB,GACC,CACDqoC,EAAmB5sD,EAAMyuD,EAAc5B,EAAekC,EAAavC,EAAgBkC,KAGrFjuD,EAAAA,EAAAA,IAAUkqD,EAAsB,CAACA,EAAsBzS,IAEhD,CACLuX,mBAAoB9wD,QAAQwvD,EAAe5rD,QAAU8rD,EAAqB9rD,UAAYkoD,EACtFiF,kBAAmBhF,EACnByD,iBACAE,uBACAU,cAEJ,CAEA9Z,eAAesZ,IAQb,OAPKtC,IACHA,EAAmB,qCACnBC,SAAsBD,GAAkB0D,QAExCxD,GAAYyD,EAAAA,EAAAA,IAAgB1D,IAGvBD,CACT,C,qLCtKA,IAAI4D,EACJ,IACEA,EAAqB,iCAIvB,CAHE,MAAOnhD,GAEPmhD,EAAqB,6BACvB,CAEe,SAASC,EACtB5c,EACAgF,EACAmS,EACAC,EACAxoC,EACAiuC,EACAC,EACAn4C,GAEA,MAAOo4C,EAAeC,IAAoBzkD,EAAAA,EAAAA,OACnCg/C,EAAkBC,EAAoBC,IAAwB5oD,EAAAA,EAAAA,IAAQ,GAEvEouD,GAA8BtF,EAAAA,EAAAA,KAAqB,KACvD,MAAMtM,EAAOrG,IACb,IAAKhF,IAAcoX,KAAqBQ,YAAcvM,EAAK95B,SAAS,KAAM,OAE1E,MAAM6mC,GAAsBP,EAAAA,EAAAA,IAAuBjpC,EAAS3f,SAE5D,OAAOwnD,EAAAA,EAAAA,GAAiB2B,GAAqB/oB,MAAMstB,KAAsB,GAAG97B,MAAM,GACjF,CAACmf,EAAWgF,EAASoS,EAAmBxoC,GA9B5B,KAgCTsuC,GAAiBnF,EAAAA,EAAAA,GACrBkF,EAA6B,CAACA,EAA6BjY,EAASoS,IAAoB,GAGpF+F,GAAoBpF,EAAAA,EAAAA,IAAiB,IAClC/X,GAAagF,IAAU7V,WAAW,MACxC,CAAC6V,EAAShF,KAEbzyC,EAAAA,EAAAA,KAAU,KACR,MAAM6vD,EAAcF,IAEpB,IAAKE,IAAiBP,IAAoBC,EAExC,YADAE,OAAiBzxD,GAKnB,MAAMoB,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,IAAKH,EAEH,YADAqwD,OAAiBzxD,GAInB,MAAM8xD,EAAYR,GAAkBnjB,QAAO,CAAC1V,EAAes5B,KACrDA,EAAOx8C,SAAW6D,GACpBqf,EAAI10B,KAAKguD,EAAOx8C,QAGXkjB,IACN,IAEG12B,EAAS8vD,EAAYxE,UAAU,GAC/B2E,GAAcC,EAAAA,EAAAA,KAAkB1C,EAAAA,EAAAA,IAAO,IACtCqC,KAAuBL,GAAoB,MAC5CO,GAAa,KACf1wD,EAAWW,GAEf0vD,EAAiB/vD,OAAOC,QAAOssD,EAAAA,EAAAA,IAAW7sD,EAAW4wD,IAAc,GAClE,CAAC54C,EAAek4C,EAAkBC,EAAiBI,EAAgBC,IAEtE,MAAMM,GAAgBrsD,EAAAA,EAAAA,IAAgB,SAAC+N,GAAsC,IAAvBu+C,EAAUxjD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAC9D,IAAKiF,EAAK4B,aAAcsD,EAAAA,EAAAA,IAAuBlF,GAC7C,OAGF,MAAMsD,GAAe6I,EAAAA,EAAAA,IAAgBnM,GAC/Bw+C,GAAsBt5C,EAAAA,EAAAA,IAAuBlF,IAAS,GACtDy+C,EAAen7C,EAChB,IAAGA,IACH,uEAEqBmgB,EAAAA,GAAAA,yCACJzjB,EAAK3T,0EAGpBmyD,QAEDxF,EAAUvpC,EAAS3f,QACnBmpD,GAAsBP,EAAAA,EAAAA,IAAuBM,GAC7C0F,EAA2BC,EAAoB1F,GAC/C2D,EAAU8B,EAAyB7B,YAAY,KAC/C+B,GAAsBt7C,EAAeA,EAAapT,OAAS,EAAIsuD,EAAoBtuD,SACpFwuD,EAAyBxuD,OAAS0sD,GAEvC,IAAiB,IAAbA,EAAgB,CAClB,MAAMvD,EAAW,GAAEqF,EAAyBG,OAAO,EAAGjC,KAAW6B,UAC3DjF,EAAqBmF,EAAoB3F,EAAQ7M,WAAWsN,UAAUiF,EAAyBxuD,QAC/F4uD,GAAgBC,EAAAA,EAAAA,IAAiB/F,GACvChB,EAAS,GAAEqB,IAAUG,MAErBrkB,EAAAA,EAAAA,KAAoB,KAClB,MAAM6pB,EAAmBF,EAAgBF,EAAqB,GAC9DtS,EAAAA,EAAAA,GAAqB0M,EAASuF,GAC1BS,GAAoB,IACtBC,EAAAA,EAAAA,IAAiBjG,EAASgG,EAC5B,GAEJ,CAEAnB,OAAiBzxD,EACnB,IAIA,OAFAgC,EAAAA,EAAAA,IAAUkqD,EAAsB,CAACA,EAAsBzS,IAEhD,CACLqZ,qBAAsB5yD,QAAQsxD,GAAe1tD,SAAWkoD,GACxD+G,oBAAqB9G,EACrBiG,gBACAc,qBAAsBxB,EAE1B,CAIA,SAASe,EAAoBzS,GAC3B,OAAOA,EAAKzqB,QAAQ,kCAAmC,OACzD,C,wEC/Ie,SAAS49B,EAAmCC,EAAiBC,GAC1E,MAAMC,OAAuBpzD,IAAVmzD,EACb1qB,GAAkBvlC,EAAAA,EAAAA,IAAOkwD,GACzBC,GAAanwD,EAAAA,EAAAA,MACb2qC,GAAcC,EAAAA,EAAAA,KAkCpB,OAhCAwlB,EAAAA,EAAAA,IAAc,KACRF,IAIJ3qB,EAAgB/kC,SAAU,EAEtB2vD,EAAW3vD,UACb6zC,aAAa8b,EAAW3vD,SACxB2vD,EAAW3vD,aAAU1D,GACvB,GAECkzD,IAEHlxD,EAAAA,EAAAA,KAAU,KACR,GAAIoxD,GAAc3qB,EAAgB/kC,QAChC,OAGF,MAAM+7C,EAAOA,KACXhX,EAAgB/kC,SAAU,EAC1BmqC,GAAa,EAGXslB,EAAS,EACXE,EAAW3vD,QAAUoG,OAAO6b,WAAW85B,EAAM0T,GAE7C1T,GACF,GAECyT,GAEIzqB,EAAgB/kC,OACzB,C,yFC7BO,MAAM6vD,EAAwC,CACnD,CAAE17C,KAAM,OAAQ9G,MAAO,iBAAkBlO,IAAK,YAC9C,CAAEgV,KAAM,eAAgB9G,MAAO,oBAAqBlO,IAAK,eACzD,CAAEgV,KAAM,QAAS9G,MAAO,eAAgBlO,IAAK,UAC7C,CAAEgV,KAAM,UAAW9G,MAAO,iBAAkBlO,IAAK,YACjD,CAAEgV,KAAM,OAAQ9G,MAAO,aAAclO,IAAK,SAG/B2wD,EAAwC,CACnD,CAAE37C,KAAM,OAAQ9G,MAAO,cAAelO,IAAK,gBAC3C,CAAEgV,KAAM,UAAW9G,MAAO,iBAAkBlO,IAAK,mBACjD,CAAEgV,KAAM,YAAa9G,MAAO,aAAclO,IAAK,gBAG3C4wD,EAA2D,CAC/D,kBAAmB,OAAQ,WAAY,SAAU,WAAY,eAEzDC,EAA2D,CAC/D,kBAAmB,kBAAmB,eAAgB,eAGjD,SAASC,EAAkBt1B,EAAqBu1B,EAA+BC,GACpF,IAAIC,EAA4B,GAC5BC,EAA6C,GAEjD,GAAa,aAATH,EAAqB,CACvB,MAAM,gBACJI,KACGC,GACDJ,EACAx1B,EAAM41B,gBAAkB,CAAC,GACzBC,EAAAA,EAAAA,IACA71B,EAAM81B,OACNV,GAGJK,EAAkBE,GAAmB,GACrCD,EAAqBryD,OAAOw6C,KAAK+X,GAC9BlyD,QAAQc,GAAQ3C,QAAQ+zD,EAAepxD,KAC5C,KAAO,CACL,MAAM,gBACJuxD,KACGC,GACDR,EACAx1B,EAAMg2B,gBAAkB,CAAC,GACzBH,EAAAA,EAAAA,IACA71B,EAAM81B,OACNT,GAGJI,EAAkBM,GAAmB,GACrCL,EAAqBryD,OAAOw6C,KAAKmY,GAC9BtyD,QAAQc,GAAQ3C,QAAQm0D,EAAexxD,KAC5C,CAEA,MAAO,CACLixD,kBACAC,oBAEJ,CAEA,SAASO,EAAuBL,GAC9B,GAAIA,EAAgB,CAClB,MAAM,gBACJD,KACGO,GACDN,EAEJ,GACEvyD,OAAOC,OAAO4yD,GAASxyD,OAAO7B,SAAS4D,OAAS,GAC5CkwD,GAAiBlwD,OAErB,MAAO,GAGT,GAAIywD,EAAQC,KACV,MAAO,OACF,GAAID,EAAQE,OACjB,MAAO,SACF,GAAIF,EAAQG,SACjB,MAAO,WACF,GAAIH,EAAQI,SACjB,MAAO,WACF,GAAIJ,EAAQK,YACjB,MAAO,cAEX,CAEA,MAAO,EACT,CAyBA,MAAMC,EAA8B,CAClCjB,KAAM,SACNkB,WAAY,GACZX,OAAQ,CACNpjD,MAAO,GACPijD,gBAAiB,GACjBI,gBAAiB,KAIfW,EAA6DA,CACjE12B,EACAra,KAEA,OAAQA,EAAOI,MACb,IAAK,WACH,MAAO,IACFia,EACH81B,OAAQ,IACH91B,EAAM81B,OACTpjD,MAAOiT,EAAO2c,SAEhB2hB,WAAW,GAEf,IAAK,cACH,MAAO,IACFjkB,EACHrC,SAAUhY,EAAO2c,QACjBizB,KAAM,QAEV,IAAK,qBACH,MAAO,IACFv1B,EACH41B,gBAAgBC,EAAAA,EAAAA,IACd71B,EAAM81B,OACNV,IAGN,IAAK,qBACH,MAAO,IACFp1B,EACHg2B,gBAAgBH,EAAAA,EAAAA,IACd71B,EAAM81B,OACNT,IAGN,IAAK,oBACH,MAAO,IACFr1B,EACH41B,eAAgBjwC,EAAO2c,QACvBm0B,WAAY,IAEhB,IAAK,oBACH,MAAO,IACFz2B,EACHg2B,eAAgBrwC,EAAO2c,QACvBm0B,WAAY,IAEhB,IAAK,cACH,OAAIz2B,EAAM41B,eACD,IACF51B,EACH81B,OAAQ,KACHa,EAAAA,EAAAA,IAAK32B,EAAM81B,OAAQV,GACtB1iD,MAAOstB,EAAM81B,OAAOpjD,MAAQstB,EAAM81B,OAAOpjD,MAAQujD,EAAuBj2B,EAAM41B,mBAC3E51B,EAAM41B,gBAEXA,oBAAgBj0D,EAChB80D,WAAY,GACZxS,WAAW,GAEJjkB,EAAMg2B,eACR,IACFh2B,EACH81B,OAAQ,KACHa,EAAAA,EAAAA,IAAK32B,EAAM81B,OAAQT,MACnBr1B,EAAMg2B,gBAEXA,oBAAgBr0D,EAChB80D,WAAY,GACZxS,WAAW,GAGNjkB,EAEX,IAAK,aAAc,CACjB,MAAQp+B,GAAI+7B,EAAQ,YAAEtnB,KAAgBy/C,GAAWnwC,EAAO2c,QAExD,MAAO,CACLizB,KAAM,OACN53B,WACAm4B,SACAW,WAAY,GAEhB,CACA,IAAK,gBACH,MAAO,IACFz2B,EACHy2B,WAAY9wC,EAAO2c,SAGvB,IAAK,eACH,MAAO,IACFtC,EACHikB,UAAWt+B,EAAO2c,SAGtB,IAAK,eACH,MAAO,IACFtC,EACH9b,UAAWyB,EAAO2c,SAGtB,IAAK,WACH,MAAO,IACFtC,EACH9b,WAAW,EACXE,MAAOuB,EAAO2c,SAGlB,IAAK,gBACH,MAAO,IACFtC,EACH81B,OAAQ,IACH91B,EAAM81B,OACTc,WAAYjxC,EAAO2c,UAGzB,IAAK,QACH,OAAOk0B,EACT,QACE,OAAOx2B,EAAM,EAQnB,EAJ0B62B,KACjBC,EAAAA,EAAAA,GAAWJ,EAAgBF,E,mGClQ7B,SAASzI,EACdgJ,EACAC,EACAC,GAEA,IADAC,EAAO5mD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAEP,OAAO6vC,EAAAA,EAAAA,IAAsBgX,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMC,EAAiBC,EAC5B,CAEO,SAASE,EACdC,EACAC,GAEW,IADXJ,EAAO5mD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAEP,MAAMinD,EAAoBxJ,GAAqB,IAAMsJ,KAAY,CAACA,GAAWC,EAAIJ,GAEjF,OAAO/I,EAAAA,EAAAA,GACLoJ,EAAmB,CAACA,EAAmBF,IAAW,EAEtD,CAEO,SAASG,EACdT,EACAC,EACAM,GAGA,IAFAJ,EAAO5mD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACPmnD,EAAMnnD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAEN,OAAO+1B,EAAAA,EAAAA,IAAsB8wB,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMM,EAAIJ,EAASO,EACxB,CAEO,SAASC,EACdL,EACAC,GAGW,IAFXJ,EAAO5mD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACPmnD,EAAMnnD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAEN,MAAMqnD,EAAoBH,GAAqB,IAAMH,KAAY,CAACA,GAAWC,EAAIJ,EAASO,GAE1F,OAAOtJ,EAAAA,EAAAA,GACLwJ,EAAmB,CAACA,EAAmBN,IAAW,EAEtD,C,mJCuJA,SAASO,EAAkBC,GACzB,IAAIC,EAAsC,CAAC,EAC3C,GAAID,GAAiBA,EAAcxyD,QAAS,CAC1C,MAAM,KACJ20C,EAAI,MAAEG,EAAK,eAAEtqC,EAAc,MAAEkoD,EAAK,iBAAEC,EAAgB,qBAAEC,EAAoB,QAAEjqC,EAAO,OAAEC,GACnF4pC,EAAcxyD,QAClByyD,EAAgB,CACd9d,KAAMA,KACJA,EAAK+d,EAAMlwD,IAAI,EAEjBsyC,MAAOA,KACLA,GAAO,EAET+d,KAAMA,KACJ/d,IACAtqC,EAAe,IACftN,EAAAA,EAAAA,MAAa41D,kBAAkB,EAEjCC,aAAexyC,IACb,MAAMyyC,EAAWzyC,EAAM0yC,YA9ML,GA+MlBzoD,EAAe3G,KAAKC,IAAI4uD,EAAMnsC,YAAcysC,EAAU,GAAG,EAE3DE,YAAc3yC,IACZ,MAAMyyC,EAAWzyC,EAAM0yC,YAlNL,GAmNlBzoD,EAAe3G,KAAKuH,IAAIsnD,EAAMnsC,YAAcysC,EAAUN,EAAMjoD,UAAU,EAExE0oD,OAAS5yC,IACHA,EAAM6yC,UACR5oD,EAAe+V,EAAM6yC,SACvB,GAICxqC,MACH6pC,EAAcY,UAAY,KACxBV,GAAkB,GAGjBhqC,MACH8pC,EAAca,cAAgB,KAC5BV,GAAsB,EAG5B,CACA,OAAOH,CACT,CAEA,QAxOuB,SACrBc,EACAC,EACAC,EACAjxD,EACAkxD,EACAC,EACAC,GAMG,IALH3lC,EAAUhjB,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACV4oD,EAAgC5oD,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAChCw3D,EAAkC7oD,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAClCy3D,EAAU9oD,UAAA7K,OAAA,SAAA9D,IAAA2O,UAAA,KAAAA,UAAA,IACV+oD,EAAiB/oD,UAAA7K,OAAA,SAAA9D,IAAA2O,UAAA,KAAAA,UAAA,IAGjB,MAAMunD,GAAgBhzD,EAAAA,EAAAA,IAAoC,OAEnD8K,EAAW2pD,IAAgB3qD,EAAAA,EAAAA,KAAS,GAC3C,IAAI4qD,EAAgB5pD,EAEpB,MAAOxD,EAAcqtD,IAAmB7qD,EAAAA,EAAAA,IAAiB,GAEnDW,GAAoB9H,EAAAA,EAAAA,IAAgB,KACxC8xD,GAAa,GACTH,GAAeA,GAAe,KAGpClE,EAAAA,EAAAA,IAAc,KACZ4C,EAAcxyD,SAAUo0D,EAAAA,EAAAA,IAASb,EAASE,GAAW,CAACY,EAAW9nD,KAC/D,OAAQ8nD,GACN,IAAK,SAAU,CACb,MAAM,UACJC,EAAS,gBAAEC,EAAe,YAAEC,EAAW,MAAE9B,GACvCF,EAAcxyD,QAClBi0D,GAAa,IAEbQ,EAAAA,EAAAA,GAAqBd,EAAUpB,EAAkBC,KACjDkC,EAAAA,EAAAA,IAAiB,WACjB,MAAM,YAAEC,IAAgBz4D,EAAAA,EAAAA,KAAeyB,EAAAA,EAAAA,OACvC22D,EAAUK,EAAYC,QACtBJ,EAAYh4D,QAAQm4D,EAAYrkD,UAChC,MAAM7F,EAAWioD,EAAMjoD,UAAY+1B,OAAOq0B,SAASnC,EAAMjoD,UAAYioD,EAAMjoD,SAAW+oD,GACpE,UAAdC,GAAyBhpD,EAAWqqD,EAAAA,MACtCP,EAAgBI,EAAYI,eAG9BC,EAAAA,EAAAA,IAAiB,CACfvqD,SAAUioD,EAAMjoD,UAAY,EAC5BsqD,aAAcrC,EAAMqC,aACpBx0B,SAAUmyB,EAAMnsC,cAElB,KACF,CACA,IAAK,eAAgB,CACnB,MAAM,MAAEmsC,GAAUF,EAAcxyD,SAChCg1D,EAAAA,EAAAA,IAAiB,CACfvqD,SAAUioD,EAAMjoD,UAAY,EAC5BsqD,aAAcrC,EAAMqC,aACpBx0B,SAAUmyB,EAAMnsC,cAElB,KACF,CACA,IAAK,UACH0tC,GAAa,IACbS,EAAAA,EAAAA,IAAiB,UACjB,MACF,IAAK,eAAgB,CACnB,MAAM,MAAEhC,GAAUF,EAAcxyD,QAC1ByK,EAAWioD,EAAMjoD,UAAY+1B,OAAOq0B,SAASnC,EAAMjoD,UAAYioD,EAAMjoD,SAAW+oD,EACjFQ,GAAmBG,EAAgBzB,EAAMnsC,YAAc9b,GAC5D,KACF,CACA,IAAK,WACHiqD,EAAAA,EAAAA,IAAiB,UAKrBhB,IAAWW,KAAa9nD,EAAE,GACzBsnD,EAAa5pD,GAEhB,MAAM,MAAEyoD,GAAUF,EAAcxyD,QAE3BsK,GAAcooD,EAAM9d,SACvBqf,GAAa,GAGbC,GAAgB,GAGdN,GACFA,EAAOlB,EACT,GACC,CAACa,KAEJj1D,EAAAA,EAAAA,KAAU,KACJgM,GAAaqpD,IAAUsB,EAAAA,EAAAA,IAAetB,EAAS,GAClD,CAACA,EAAUrpD,IAEd,MAAM,KACJqqC,EAAI,MACJG,EAAK,eACLtqC,EAAc,MACdkoD,EAAK,QACL3d,EAAO,UACPuf,EAAS,KACTzB,EAAI,QACJlqC,EAAO,OACPC,EAAM,iBACN+pC,EAAgB,qBAChBC,EAAoB,gBACpB2B,EAAe,YACfC,GACEhC,EAAcxyD,QACZyK,EAAWioD,EAAMjoD,UAAY+1B,OAAOq0B,SAASnC,EAAMjoD,UAAYioD,EAAMjoD,SAAW+oD,GAGtFl1D,EAAAA,EAAAA,KAAU,MACJmM,IAAayqD,EAAAA,EAAAA,GAAwBxC,IAAWsB,GAClDG,EAAgBzB,EAAMnsC,YAAc9b,EACtC,GACC,CAACA,EAAU3D,EAAc4rD,EAAOsB,KAGnC11D,EAAAA,EAAAA,KAAU,IAAM,KACdy2C,EAAQgf,EAAW,GAClB,CAAChf,EAASgf,KAGbpZ,EAAAA,EAAAA,IAAsB99C,IAA+B,IAA7Bs4D,EAAgBC,GAAQv4D,EAC1Cs4D,IAAmBlnC,GAAczrB,IAAQ4yD,GAKzC1C,EAAMlwD,KAAOkwD,EAAM9d,QAInB3mB,GAAczrB,IAAQ8H,GACxBqqC,EAAKnyC,EACP,GACC,CAACyrB,EAAYzrB,EAAK8H,EAAWqqC,EAAM+d,EAAMlwD,IAAKkwD,EAAM9d,SAEvD,MAAMygB,GAAgBlzD,EAAAA,EAAAA,IAAgB,KAChCK,GACFmyC,EAAKnyC,EACP,IAGI+H,GAAYpI,EAAAA,EAAAA,IAAgB,KAC5BmI,EACFwqC,IAEAugB,GACF,IAGIC,GAAUnzD,EAAAA,EAAAA,IAAiBozD,IAC/B/qD,EAAe+qD,GACX9qD,GACF0pD,EAAgBzB,EAAMnsC,YAAc9b,EACtC,IAGF,MAAO,CACLH,UAAW4pD,EACXptD,eACAyD,YACAuqC,QACAH,KAAM0gB,EACNxC,OACAroD,eAAgB8qD,EAChBhB,YACAkB,WAAY9C,EACZjoD,WACAkoD,mBACAC,uBACAjqC,UACAC,SACA2rC,kBACAC,cAEJ,C,4FClMe,SAAS96C,EACtB1Y,GAMA,IALA0uD,EAAUzkD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACVwqD,EAAiBxqD,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EACjB2H,EAAMgH,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAPO,EAQbyqD,EAAuBzqD,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EACvBq5D,EAAwB1qD,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAGxB,MAAM4O,GAAY1L,EAAAA,EAAAA,IAA0B,MACtCo2D,GAAYp2D,EAAAA,EAAAA,MAmDlB,OAjDAowD,EAAAA,EAAAA,IAAc,KACPF,IACHkG,EAAU51D,SAAU,EACtB,GACC,CAACgB,EAAS0uD,KAEbpxD,EAAAA,EAAAA,KAAU,KACR,MAAMwE,EAASoI,EAAUlL,QAEzB,IAAKgB,IAAY8B,GAAU4sD,GAAckG,EAAU51D,QACjD,OAGF41D,EAAU51D,SAAU,EAEpB,MAAM61D,EAAM,IAAIC,MAEVC,EAAcA,KAClB,MAAM3yD,EAAQsyD,GAAkBG,EAAIzyD,MAC9BC,EAASsyD,GAAmBE,EAAIxyD,OAChCC,EAAMR,EAAOS,WAAW,KAAM,CAAEyyD,OAAO,KAE7C51C,EAAAA,EAAAA,KAAgB,KACdtd,EAAOM,MAAQA,EACfN,EAAOO,OAASA,EAEZsW,EAAAA,KACFrW,EAAIjF,OAAU,QAAO4F,QAGvBX,EAAI2yD,UAAUJ,EAAe,GAAT5xD,EAAsB,GAATA,EAAYb,EAAiB,EAATa,EAAYZ,EAAkB,EAATY,GAErE0V,EAAAA,KACHu8C,EAAAA,EAAAA,GAAS5yD,EAAK,EAAG,EAAGF,EAAOC,EAAQY,EA/C1B,EAgDX,GACA,EAGJ4xD,EAAIM,OAAS,KACPV,GACF3lB,EAAAA,EAAAA,IAAeimB,GAEfA,GACF,EAGFF,EAAIrzD,IAAMxB,CAAO,GAChB,CAACA,EAAS0uD,EAAYiG,EAAiBD,EAAgBzxD,EAAQwxD,IAE3DvqD,CACT,C,kHC1DA,MA6HA,EA7H8B,SAAArO,GAsBJ,IAtBK,KAC7BhB,EAAI,KACJqU,EAAI,SACJooB,EAAQ,SACRhE,EAAQ,QACRhkB,EAAO,gBACP0nB,EAAe,aACfwD,EAAY,WACZC,EAAU,uBACVC,EAAsB,aACtB/P,GAYD9uB,EAAEu5D,EAAUnrD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACX,MAAM9N,GAAOC,EAAAA,EAAAA,MAEP,OAAE4U,GAAW9B,GAAQ,CAAC,EACtBmmD,EAAyBnmD,GAAM3T,KAAO+5D,EAAAA,IAE5C,OAAO74D,EAAAA,EAAAA,KAAQ,KACb,IAAK5B,EACH,OAGF,MAAM,iBACJ06D,EAAgB,qBAChB5kD,EAAoB,mBACpB6kD,EAAkB,iBAClBC,EAAgB,iBAChB7zB,IACE1lC,EAAAA,EAAAA,MAEE8lC,EAAqB/G,EAAAA,IAAgC,CACzD5uB,MAAOqpD,EAAAA,IAAc,qBAAuB,kBAC5CviD,KAAM,kBACN8pB,QAASA,KACP2E,EAAiB,CAAEhnC,OAAQC,EAAKU,IAAK,GAInCo6D,EAAoB3+B,EAAkB,CAC1C3qB,MAAOlQ,EAAK,+BACZgX,KAAM,SACN8pB,QAASvC,QACPp/B,EAEE4mC,EAAY5O,EACd,CACAjnB,MAAOlQ,EAAK,gBACZgX,KAAM,QACN8pB,QAASA,IAAMs4B,EAAiB,CAAEh6D,GAAIV,EAAKU,GAAI+7B,SAAUA,KAEzD,CAAEjrB,MAAOlQ,EAAK,YAAagX,KAAM,MAAO8pB,QAASA,IAAMs4B,EAAiB,CAAEh6D,GAAIV,EAAKU,GAAI+7B,SAAUA,KAE/F6K,EAAa7yB,EACf,CACAjD,MAAOlQ,EAAK,mBACZgX,KAAM,SACN8pB,QAASA,IAAMtsB,EAAqB,CAAE/V,OAAQC,EAAKU,GAAI+T,SAAS,KAEhE,CACAjD,MAAQ,GAAElQ,EAAK,sBACfgX,KAAM,OACN8pB,QAASxC,GAGb,GAAI26B,EACF,OAAO/3B,EAAAA,EAAAA,IAAQ,CAAC2E,EAAoBE,EAAWyzB,EAAmBxzB,IAGpE,MAAMyzB,EAAoB/6D,EAAKi5B,aAAej5B,EAAKq5B,cAC/C,CAAE7nB,MAAOlQ,EAAK,cAAegX,KAAM,YAAa8pB,QAASA,IAAMw4B,EAAiB,CAAEl6D,GAAIV,EAAKU,WAC3FD,EACEu6D,EAAuBh7D,EAAKi5B,aAAej5B,EAAKq5B,eAAmBr5B,EAAKwU,aAE1E/T,EADA,CAAE+Q,MAAOlQ,EAAK,gBAAiBgX,KAAM,SAAU8pB,QAASA,IAAMw4B,EAAiB,CAAEl6D,GAAIV,EAAKU,MAGxFu6D,GAAgBC,EAAAA,EAAAA,IAAel7D,GACjC,CAAEwR,MAAOlQ,EAAK,aAAcgX,KAAM,YAAa8pB,QAASA,IAAMu4B,EAAmB,CAAEj6D,GAAIV,EAAKU,MAC5F,CAAE8Q,MAAOlQ,EAAK,WAAYgX,KAAM,UAAW8pB,QAASA,IAAMu4B,EAAmB,CAAEj6D,GAAIV,EAAKU,MAGtFy6D,EADYrrC,KAAiBta,EAAAA,EAAAA,IAAcxV,KAASmvC,EAAAA,EAAAA,IAAYnvC,IAAUqU,IAASA,EAAK8B,QAE1F,CAAE3E,MAAOlQ,EAAK,qBAAsBgX,KAAM,OAAQ8pB,QAAStS,QAC3DrvB,EAEE+mC,EAAe,CACnBh2B,OAAO8C,EAAAA,EAAAA,IAAStU,EAAKU,IACjBY,EAAK,UACLA,GAAK85D,EAAAA,EAAAA,IAAiBp7D,GACpB,cACCwV,EAAAA,EAAAA,IAAcxV,GAAQ,eAAiB,oBAC9CsY,KAAM,SACNmvB,aAAa,EACbrF,QAASzC,GAGL07B,OAA0B56D,IAAbg8B,EAEnB,OAAO+F,EAAAA,EAAAA,IAAQ,CACb2E,EACA2zB,EACAC,EACAC,EACA3zB,GACClxB,GAAUmxB,GACVnxB,IAAWqkD,IAA2Ba,GAAcJ,EACrDE,EACA3zB,GACA,GACD,CACDxnC,EAAMqU,EAAM8nB,EAAiB76B,EAAMu+B,EAAwBpH,EAAU8hC,EAAY9lD,EACjFkrB,EAAcC,EAAY9P,EAAc2M,EAAUtmB,EAAQqkD,GAE9D,C,mFC/FA,QAzBA,SAA6Bc,EAAuC3H,GAAgD,IAAA4H,EAAA,IAAjBC,EAAOpsD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACxG,MAAMymD,EAAWlC,EAAe2H,EAAsC,IAAOA,EACjE,QAAZC,EAAA5H,SAAY,IAAA4H,IAAZ5H,EAAiB,CAAC2H,IAElB,MAAOnF,EAAUF,IAAYwF,EAAAA,EAAAA,KACvBC,GAAcC,EAAAA,EAAAA,GAAY9F,GAEhC,SAAS+F,IACP,MAAMC,EAAkBH,EAAYv3D,QAChCq3D,EACDK,EAAqC5F,GAEtCA,EAAU4F,IAEd,CAQA,OALA9H,EAAAA,EAAAA,GAAc6H,EAAoBjI,IAGlCmI,EAAAA,EAAAA,GAAgBF,EAAoBjI,GAE7BwC,CACT,C,8FCmBA,QAxCA,SAA4B4F,EAAmCpI,GAAgD,IAAA4H,EAAA,IAAjBC,EAAOpsD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACnG,MAAMymD,EAAWlC,EAAeoI,EAAkC,IAAQA,IAC9D,QAAZR,EAAA5H,SAAY,IAAA4H,IAAZ5H,EAAiB,CAACoI,IAElB,MAAMC,GAAWr4D,EAAAA,EAAAA,MACX2qC,GAAcC,EAAAA,EAAAA,KACdmtB,GAAcC,EAAAA,EAAAA,GAAY9F,GAEhC,SAAS+F,IAAmC,IAAhBK,EAAM7sD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAChC,MAAMysD,EAAkBH,EAAYv3D,QACpC,GAAIq3D,EACDK,GAAsCK,IACjCF,EAAS73D,UAAY+3D,IACvBF,EAAS73D,QAAU+3D,EACnB5tB,IACF,QAEG,CACL,MAAM4tB,EAAYL,IACdG,EAAS73D,UAAY+3D,IACvBF,EAAS73D,QAAU+3D,EAEdD,GACH3tB,IAGN,CACF,CAUA,OARAylB,EAAAA,EAAAA,IAAc,KACZ6H,GAAmB,EAAK,GAEvBjI,IAGHmI,EAAAA,EAAAA,GAAgBF,EAAoBjI,GAE7BqI,EAAS73D,OAClB,C,6DCpDe,SAASyoC,EACtB7sC,EACAuR,EACA9F,EACA2wD,GAEA,MAAM,YAAEC,IAAgB/6D,EAAAA,EAAAA,OAExBoB,EAAAA,EAAAA,KAAU,KACJ6O,IAAc9F,GAChB4wD,EAAY,CAAEr8D,SAAQuR,UAAWA,EAAY6qD,iBAAkBA,GACjE,GACC,CAACp8D,EAAQyL,EAAS8F,EAAW6qD,GAClC,C,2FCNO,SAASv6B,EAA8BnF,GAC5C,MAAM6R,GAAcC,EAAAA,EAAAA,KAIpB,OAFA9rC,EAAAA,EAAAA,KAAU,KAAM45D,EAAAA,EAAAA,IAAsB5/B,EAAU6R,IAAc,CAAC7R,EAAU6R,KAElEguB,EAAAA,EAAAA,IAAc7/B,EACvB,CAEO,SAASsF,IACd,MAAMuM,GAAcC,EAAAA,EAAAA,KAIpB,OAFA9rC,EAAAA,EAAAA,KAAU,KAAM85D,EAAAA,EAAAA,IAA0BjuB,IAAc,CAACA,KAElDkuB,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAMnuB,GAAcC,EAAAA,EAAAA,KAIpB,OAFA9rC,EAAAA,EAAAA,KAAU,KAAMi6D,EAAAA,EAAAA,IAAsBpuB,IAAc,CAACA,KAE9CquB,EAAAA,EAAAA,KACT,C,mFC5Be,SAASC,IAA8C,IAA1B5gC,EAAgB5sB,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAC1D,MAAMytD,GAA4Bl5D,EAAAA,EAAAA,IAAOq4B,GACnC8gC,GAAwBn5D,EAAAA,EAAAA,KAAO,GAC/B2qC,GAAcC,EAAAA,EAAAA,MAEpBwlB,EAAAA,EAAAA,IAAc,KACR/3B,IACF6gC,EAA0B14D,SAAU,EACtC,GACC,CAAC63B,IAEJ,MAAM+gC,GAA+Bz2D,EAAAA,EAAAA,IAAgB,KACnDu2D,EAA0B14D,SAAU,EACpC24D,EAAsB34D,SAAU,EAChCmqC,GAAa,IAGT0uB,GAAiC12D,EAAAA,EAAAA,IAAgB,KACrDw2D,EAAsB34D,SAAU,EAChCmqC,GAAa,IAGf,MAAO,CACL2uB,uBAAwBJ,EAA0B14D,QAClD+4D,mBAAoBJ,EAAsB34D,QAC1C44D,+BACAC,iCAEJ,C,gFCtBA,MAAMG,EAAOC,IAEE,SAASC,EAAcC,EAAgBC,GACpD,MAAOC,EAAcC,IAAmBhwD,EAAAA,EAAAA,IAAS9M,QAAQw8D,GAAQthD,SAASshD,KAqD1E,OAnCAxtD,EAAAA,EAAAA,KAAgB,KACd,MAAMzC,EAAQowD,EAAMn5D,QACdu5D,EAAWA,KACf,MAAMxoB,EAAYv0C,QAAQw8D,GAAQthD,SAASshD,IAC3CM,EAAgBvoB,GAEhBhoC,EAAOywD,SAAWzoB,CAAS,EAEvB0oB,EAAgBA,KAAQH,GAAgB,EAAK,EAC7CI,EAAeA,KACnBJ,GAAgB,GAChBF,GAAY,EAAM,EAYpB,OATA1hD,SAASioB,iBAAiB,mBAAoB45B,GAAU,GACxD7hD,SAASioB,iBAAiB,yBAA0B45B,GAAU,GAC9D7hD,SAASioB,iBAAiB,sBAAuB45B,GAAU,GAEvDxwD,IACFA,EAAM42B,iBAAiB,wBAAyB85B,GAAe,GAC/D1wD,EAAM42B,iBAAiB,sBAAuB+5B,GAAc,IAGvD,KACLhiD,SAASmoB,oBAAoB,mBAAoB05B,GAAU,GAC3D7hD,SAASmoB,oBAAoB,yBAA0B05B,GAAU,GACjE7hD,SAASmoB,oBAAoB,sBAAuB05B,GAAU,GAC1DxwD,IACFA,EAAM82B,oBAAoB,wBAAyB45B,GAAe,GAClE1wD,EAAM82B,oBAAoB,sBAAuB65B,GAAc,GACjE,CACD,GAEA,IAEEV,GAASnhB,EAAAA,GAIP,CAACwhB,EAvDcM,KAqGjB,IAA+B5wD,EApG7BowD,EAAMn5D,UAAag5D,GAAQnhB,EAAAA,OAoGE9uC,EAjGZowD,EAAMn5D,SAkGpB45D,kBACR7wD,EAAM6wD,oBACG7wD,EAAM8wD,wBACf9wD,EAAM8wD,0BACG9wD,EAAM+wD,sBACf/wD,EAAM+wD,wBACG/wD,EAAMgxD,sBACfhxD,EAAMgxD,uBAxGNT,GAAgB,GAAK,EAGAU,KAChBb,EAAMn5D,UAyGT0X,SAASsiD,eACXtiD,SAASsiD,iBACAtiD,SAASuiD,oBAClBviD,SAASuiD,sBACAviD,SAASwiD,uBAClBxiD,SAASwiD,yBACAxiD,SAASyiD,sBAClBziD,SAASyiD,uBA5GTb,GAAgB,GAAM,GAuCf,EAAC,EAIZ,CAEO,MAAMc,EAAsBA,KACjC,MAAOf,EAAcC,IAAmBhwD,EAAAA,EAAAA,KAAS,GAuBjD,OArBAhL,EAAAA,EAAAA,KAAU,KACR,MAAMi7D,EAAWA,KACfD,EAiCC,WACL,MAAMe,EAAiBpB,IACvB,OAAOz8D,QAAQ69D,GAAkB3iD,SAAS2iD,GAC5C,CApCsBC,GAAoB,EAGhCC,EAAyBn0D,OAAOo0D,UAAUC,GAAGC,EAAAA,EAAAA,kBAAiCpB,GAOpF,OANAlzD,OAAOo0D,UAAUnB,eAAe/e,KAAKgf,GAErC5hD,SAASioB,iBAAiB,mBAAoB45B,GAAU,GACxD7hD,SAASioB,iBAAiB,yBAA0B45B,GAAU,GAC9D7hD,SAASioB,iBAAiB,sBAAuB45B,GAAU,GAEpD,KACLgB,MAEA7iD,SAASmoB,oBAAoB,mBAAoB05B,GAAU,GAC3D7hD,SAASmoB,oBAAoB,yBAA0B05B,GAAU,GACjE7hD,SAASmoB,oBAAoB,sBAAuB05B,GAAU,EAAM,CACrE,GACA,IAEIF,CAAY,EAGrB,SAASJ,IACP,YAA0C,IAA/BvhD,SAASijD,kBACX,yBAC2C,IAAlCjjD,SAASkjD,qBAClB,4BAC8C,IAArCljD,SAASmjD,wBAClB,0BAEF,EACT,C,6DC3Ge,SAASC,EAAqBC,GAC3C,MAAOC,EAAUC,IAAY3D,EAAAA,EAAAA,KA+B7B,OA7BAh5D,EAAAA,EAAAA,KAAU,KACR,SAAS48D,IACP,MAAMxe,EAAYt2C,OAAOu2C,eACzB,IAAKD,GAAWM,WAAY,OAE5B,MAAMme,EAAQze,EAAUQ,WAAW,GACnC,IAAKie,EACH,OAIF,IADgBzjD,SAAS8R,cAAcuxC,GAErC,OAGF,MAAM,wBAAEzX,GAA4B6X,GACpB7X,aAAmC8X,QAC/C9X,EACAA,EAAwBD,eAChBx0B,QAAQksC,IAClBE,EAASE,EAEb,CAIA,OAFAzjD,SAASioB,iBAAiB,kBAAmBu7B,GAEtC,IAAMxjD,SAASmoB,oBAAoB,kBAAmBq7B,EAAkB,GAC9E,CAACH,EAAeE,IAEZD,CACT,C,kDCnCA,MA4BA,EA5B4B,SAC1BnqC,EACA6+B,GAEG,IADH2L,EAAoBpwD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,IAEpB3M,EAAAA,EAAAA,KAAU,KACR,GAAIoxD,EACF,OAGF,MAAMvb,EAAYtjB,EAAa7wB,QAE/B,SAASs7D,EAAa/uD,GAEfA,EAAEgvD,SACLpnB,EAAWmQ,YAAc/3C,EAAEivD,OAAS,EAChCH,GAAsB9uD,EAAEiU,iBAEhC,CAIA,OAFA2zB,EAAUxU,iBAAiB,QAAS27B,EAAc,CAAEG,SAAUJ,IAEvD,KACLlnB,EAAUtU,oBAAoB,QAASy7B,EAAa,CACrD,GACA,CAACzqC,EAAc6+B,EAAY2L,GAChC,C,iECxBA,MAAMK,EAAc,IAAI/5D,IAAI,CAAC,QAAS,WAAY,WAE5C+xD,GAAWiI,EAAAA,EAAAA,KAGV,SAASn8B,EAAWo8B,IACzBt9D,EAAAA,EAAAA,KAAU,KACR,IAAKs9D,EACH,OAGF,MAAM9U,EAAU9oD,OAAO8oD,QAAQ8U,GAc/B,OAAOlI,EAASx9B,aAZhB,SAAuB3pB,IAgB3B,SAAyBA,GACvB,QAAIA,EAAEsU,kBAAkBg7C,eACdH,EAAY55D,IAAIyK,EAAEsU,OAAOq9B,QAIrC,EArBW4d,CAAgBvvD,IAIrBu6C,EAAQrjD,SAAQ5G,IAAuB,IAArBk/D,EAAQ99B,GAAQphC,GCoDjC,SAA0Bk/D,GAC/B,OAAQx7C,GAlCV,SAAuBw7C,EAAgBx7C,GACrC,MAAM,IACJrG,EAAG,KAAE8hD,EAAI,KAAEC,EAAI,IAAEC,EAAG,MAAE57B,EAAK,IAAEnhC,GAC3B48D,GACE,OACJ7c,EAAM,QAAElf,EAAO,QAAED,EAAO,SAAEmQ,EAAU/wC,IAAKg9D,GACvC57C,EAEJ,GAAIrG,IAAQglC,EACV,OAAO,EAGT,GAAIgd,GACF,IAAKl8B,IAAYD,EACf,OAAO,MAEJ,CACL,GAAIi8B,IAASh8B,EACX,OAAO,EAET,GAAIi8B,IAASl8B,EACX,OAAO,CAEX,CACA,OAAIO,IAAU4P,GAIP1zC,QAAQ2C,IACTg9D,EAAWrW,gBAAkB3mD,EAAI2mD,eAChCvlC,EAAM0f,KAAKtO,QAAQ,MAAO,IAAIm0B,gBAAkB3mD,EAAI2mD,eAC7D,CAGoBsW,CA1Db,SAAqBL,GAC1B,MAAMvjB,EAAOujB,EACVjW,cACAnyC,MAAM,KACNxV,KAAKk+D,GAASA,EAAKzqC,SAEhB0qC,EAA+B,CACnCpiD,IAAKs+B,EAAKl2B,SAAS,OACnB05C,KAAMxjB,EAAKl2B,SAAS,QACpB25C,KAAMzjB,EAAKl2B,SAAS,QACpB45C,IAAK1jB,EAAKl2B,SAAS,OACnBge,MAAOkY,EAAKl2B,SAAS,UAGjBi6C,EAAe,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAItD,MAAO,IACFD,EACHn9D,IAJcq5C,EAAK/tB,MAAMtrB,IAASo9D,EAAaj6C,SAASnjB,KAM5D,CAoCkCq9D,CAAYT,GAASx7C,EACvD,EDrDYk8C,CAAiBV,EAAjBU,CAAyBlwD,IAC3B0xB,EAAQ1xB,EACV,GAEJ,GAE0C,GACzC,CAACqvD,GACN,CAxBAlkD,SAAS+iC,gBAAgB9a,iBAAiB,UAAW+zB,EAASgJ,a,wEEG/C,SAASC,EACtBh9C,EACAhK,EACAC,GAEA,MAAM,SAAEpP,IAAa2C,EAAAA,EAAAA,OAErB7K,EAAAA,EAAAA,KAAU,KACJqX,EACGnP,GACHyb,YAAW,MACT7B,EAAAA,EAAAA,KAAgB,KACVT,EAAS3f,SAAS48D,aACpBj9C,EAAS3f,QAAQmgB,OACnB,GACA,GAlBW,MAsBbR,EAAS3f,SAAS48D,aACpBj9C,EAAS3f,QAAQ2+C,OAGf/oC,GACFqM,WAAWrM,EA1BS,KA4BxB,GACC,CAAC+J,EAAUnZ,EAAUmP,EAAQC,GAClC,C,gHCvBe,SAAS7L,EACtB8yD,GAKA,IAJAl8D,EAAMsK,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACN6xD,EAAW7xD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAG5J,EAAAA,GAAAA,QACdouD,EAAsBxkD,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EACtBygE,EAAa9xD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAEb,MAAMtB,EAAYkzD,EAAY/zC,EAAAA,GAA0B+zC,QAAavgE,EAC/D0gE,EAAcF,IAAgBz7D,EAAAA,GAAAA,QAClC47D,EAAAA,IAA4BH,IAAgBz7D,EAAAA,GAAAA,YAExC8oC,GAAcC,EAAAA,EAAAA,KACd7tC,GAAK2gE,EAAAA,EAAAA,MACJrzD,EAAcszD,IAAmB7zD,EAAAA,EAAAA,IAASK,IAAcqzD,EAAc,EAAI,GAC3EI,GAAe59D,EAAAA,EAAAA,MAEf69D,GAAiB5/D,EAAAA,EAAAA,KAAQ,KACtB6/D,EAAAA,EAAAA,KAAUt6D,IACXo6D,EAAap9D,WAAayvD,GAAUv/B,KAAKC,MAAQitC,EAAap9D,QAAUyvD,IAC1E0N,EAAgBn6D,EAClB,GAtBoB,KAuBA,IACrB,CAACysD,IAiDJ,OA/CAnxD,EAAAA,EAAAA,KAAU,MACHqC,GAAUk8D,IACRlzD,EAmBMqzD,GACT/6C,YAAW,KACTk7C,EAnDiB,IAmDkB,GAlDnB,OA8BlBA,EAAgB,GAEZC,EAAap9D,SACf8oB,EAAAA,GAA2Bu0C,GAG7BD,EAAap9D,QAAUkwB,KAAKC,MAE5BrH,EAAAA,GAAkB+zC,EAAWC,EAAaC,EAAeM,EAAgB9gE,GAAI+9C,MAAK,KAChF,MAAMijB,EAAYrtC,KAAKC,MAAQitC,EAAap9D,QAC5Co9D,EAAap9D,aAAU1D,GAElBmzD,GAAS8N,GAAa9N,EACzBtlB,IAEAloB,WAAWkoB,EAAaslB,EAAQ8N,EAClC,KAON,GACC,CACD58D,EAAQk8D,EAAWlzD,EAAWmzD,EAAa3yB,EAAa6yB,EAAavN,EAAO4N,EAAgBN,EAAexgE,KAG7G+B,EAAAA,EAAAA,KAAU,KACJqC,GAAUy8D,EAAap9D,UACzB8oB,EAAAA,GAA2Bu0C,GAC3BF,EAAgB,GAChBC,EAAap9D,aAAU1D,EACzB,GACC,CAAC+gE,EAAgB18D,KAEpBrC,EAAAA,EAAAA,KAAU,IACD,KACDu+D,GACF/zC,EAAAA,GAA2B+zC,EAAWtgE,EACxC,GAED,CAACA,EAAIsgE,IAED,CAAElzD,YAAWE,eACtB,C,sEChFA,IAAI2zD,EAEW,SAASC,EACtB9nD,EAAiBC,GACjB,IAD8C8nD,EAAgBzyD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAJrC,IAI4DykD,EAAUzkD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAE/F,MAAM0yD,GAAgBn+D,EAAAA,EAAAA,KAAO,GAEvBo+D,GAAkBz7D,EAAAA,EAAAA,IAAgB,KACtCw7D,EAAc39D,SAAU,CAAI,KAG9B1B,EAAAA,EAAAA,KAAU,KACJk/D,IACF3pB,aAAa2pB,GACbA,OAAelhE,IAGbqZ,GAAWuK,EAAAA,IAAiBwvC,IAC9B8N,EAAep3D,OAAO6b,YAAW,KAC1B07C,EAAc39D,SACjB4V,GACF,GACoB,EAAnB8nD,GACL,GACC,CAAChO,EAAY/5C,EAAQ+nD,EAAkB9nD,IAE1C,MAAMioD,GAAmB17D,EAAAA,EAAAA,IAAgB,KACvCw7D,EAAc39D,SAAU,CAAI,IAGxB89D,GAAmB37D,EAAAA,EAAAA,IAAgB,KACvCw7D,EAAc39D,SAAU,EAEpBw9D,IACF3pB,aAAa2pB,GACbA,OAAelhE,GAGjBkhE,EAAep3D,OAAO6b,YAAW,KAC1B07C,EAAc39D,SACjB4V,GACF,GACC8nD,EAAiB,IAGtB,MAAO,CAACG,EAAkBC,EAAkBF,EAC9C,C,mFC/Ce,SAASG,EAA0B/9D,EAAYyK,GAC5D,MAAMuzD,GAAO51C,EAAAA,EAAAA,GAAYpoB,GAAS,GAC5B2vD,GAAanwD,EAAAA,EAAAA,MACb2qC,GAAcC,EAAAA,EAAAA,KAEd6zB,EAAmBj+D,QAEnBk+D,EAAgBF,QAiBtB,OAfIC,GAAoBtO,EAAW3vD,UACjC6zC,aAAa8b,EAAW3vD,SACxB2vD,EAAW3vD,aAAU1D,IAGvBszD,EAAAA,EAAAA,IAAc,KAERnlD,IAAawzD,GAAoBC,IAAkBvO,EAAW3vD,UAChE2vD,EAAW3vD,QAAUoG,OAAO6b,YAAW,KACrC0tC,EAAW3vD,aAAU1D,EACrB6tC,GAAa,GACZ1/B,GACL,GACC,CAACA,EAAU0/B,EAAa8zB,EAAkBC,IAErCvO,EAAW3vD,SAAYyK,IAAYwzD,EAA6BD,EAAVh+D,CAChE,C,6DCvBe,SAASyxD,EACtB0M,EACAC,GAEA,MAAMj0B,GAAcC,EAAAA,EAAAA,KACdi0B,GAAa7+D,EAAAA,EAAAA,IAAO2+D,GACpBxjC,GAAQn7B,EAAAA,EAAAA,IAAO4+D,GAEf3mD,GAAWna,EAAAA,EAAAA,KAAagjB,IAC5Bqa,EAAM36B,QAAUq+D,EAAWr+D,QAAQ26B,EAAM36B,QAASsgB,GAClD6pB,IACOxP,EAAM36B,UACZ,IAEH,MAAO,CACL26B,EAAM36B,QACNyX,EAEJ,C,kDCxBe,SAAS6mD,EAAgBrM,EAAYJ,EAAmBO,GAAkC,IAAhBT,EAAS1mD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAG,GACnG,OAAO+1B,EAAAA,EAAAA,IAAsBnxB,IAC3BA,GAAI,GAEH8hD,EAAMM,EAAIJ,EAASO,EACxB,C,6HCAA,MAQA,EAR0C3xD,IACxC,MAAM,OAAEkV,GAAWlV,EACb89D,GAAgBpqC,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,iBAAkBze,GAGvE,OAAO4oD,EAAgBz/D,EAAAA,GAAAA,cAACy/D,EAAkB99D,QAAYnE,CAAS,ECsDjE,EArDoBkiE,CAClBC,EACAC,EACAC,KAEA,MAAMxhE,GAAOC,EAAAA,EAAAA,MACNwhE,EAAaC,IAAkBv1D,EAAAA,EAAAA,MAEhCw1D,GAAwB38D,EAAAA,EAAAA,IAAgB,SAACsF,GAAqC,IAAzBs3D,EAAY9zD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAErE,MAAM+zD,EAAcn7D,KAAKxE,MAAMwE,KAAKC,IAAI2D,EAAKw3D,UAAW/uC,KAAKC,MAAQ,KAAa,MAC7E4uC,EAAe,GAAI3uC,EAAAA,EAAAA,OACxBwuC,IAAcI,GACdH,OAAeviE,EACjB,IAEM4iE,GAAmC/8D,EAAAA,EAAAA,IAAgB,KACvD28D,EAAsB,IAAI5uC,KAA6B,IAAxBivC,EAAAA,MAA+B,EAAK,IAG/DC,GAAsBj9D,EAAAA,EAAAA,IAAgB,KAC1C08D,OAAeviE,GACfoiE,KAAY,IAGRW,GAAkBl9D,EAAAA,EAAAA,IAAiBm9D,IACvCT,GAAe,IAAMS,GAAc,IAG/BC,EAAuBZ,EAAS,IAAIzuC,KAAc,IAATyuC,GAAiB,IAAIzuC,KACpEqvC,EAAqBC,WAAW,GAChCD,EAAqBE,gBAAgB,GAErC,MAAMC,EAAmB,IAAIxvC,KAiB7B,OAhBAwvC,EAAiBC,YAAYD,EAAiBE,cAAgB,GAgBvD,CAACP,EAbNvgE,EAAAA,GAAAA,cAACy/D,EAAa,CACZ5oD,OAAQnZ,QAAQoiE,GAChBiB,gBAAc,EACdC,WAAYP,EAAqBN,UACjCc,OAAOC,EAAAA,EAAAA,IAAcN,GACrBO,cAAY,EACZC,kBAAmBzB,EAAyBthE,EAAK,gCAA6Bb,EAC9EsZ,QAASwpD,EACT1/C,SAAUo/C,EACVqB,oBAAqB1B,EAAyBS,OAAmC5iE,IAInD,C,mFCvDpC,MASA,EAT6B8jE,CAACxkE,EAAiB8U,KACtCjT,EAAAA,EAAAA,KAAQ,KACN6/D,EAAAA,EAAAA,KAAUh9C,IACV1kB,GAAW8U,IAChBxT,EAAAA,EAAAA,MAAamjE,kBAAkB,CAAEzkE,SAAQ8U,WAAU4P,UAAS,GAC3DggD,EAAAA,MACF,CAAC1kE,EAAQ8U,G,6DCXC,SAAS4mD,EAAaiJ,GAAa,IAAAC,EAChD,MAAMC,GAAYjhE,EAAAA,EAAAA,MAElB,OADiB,QAAjBghE,EAAAC,EAAUzgE,eAAO,IAAAwgE,IAAjBC,EAAUzgE,SAAY86B,EAAAA,EAAAA,IAAgBylC,IAC/BE,EAAUzgE,OACnB,C,uECHO,SAAS23D,EAAgB+I,EAA4BlR,GAE1D,MAAMmR,GAAanhE,EAAAA,EAAAA,KAAO,GACtBmhE,EAAW3gE,UACb2gE,EAAW3gE,SAAU,EAErBwvD,GAAc/rD,SAASm9D,KACjBvrC,EAAAA,EAAAA,IAASurC,IACXA,EAAWC,UAAUH,EACvB,MAIJzlC,EAAAA,EAAAA,IAAc,IACL,MACL6lC,EAAAA,EAAAA,IAAcJ,EAAO,GAG3B,C,kDCJA,QAhBA,SAAoBK,EAAsBtR,GACxC,MAAMuR,GAAgBxhE,EAAAA,EAAAA,IAAOuhE,IAE7Bv1D,EAAAA,EAAAA,KAAgB,KACdw1D,EAAchhE,QAAU+gE,CAAQ,GAC/B,CAACA,KAEJziE,EAAAA,EAAAA,KAAU,KACR,GAAqB,iBAAVmxD,EACT,OAEF,MAAMlzD,EAAK0lB,YAAW,IAAM++C,EAAchhE,WAAWyvD,GACrD,MAAO,IAAM5b,aAAat3C,EAAG,GAC5B,CAACkzD,GACN,C,mCChBO,IAAKiL,EAAa,SAAbA,GAAa,OAAbA,EAAa,sCAAbA,EAAa,4BAAbA,EAAa,sCAAbA,CAAa,K,0dCoFzB,MAAMuG,EAKJhtB,YACSpzB,EACCy1B,EACA4qB,GACR,KAHOrgD,OAAAA,EAAc,KACby1B,SAAAA,EAAsC,KACtC4qB,QAAAA,EAAgB9sB,EAAA,qBAPF,IAAIne,KAA4Bme,EAAA,+BAEtB,IAAIne,IAOtC,CAGO8e,UACP,CAEA6E,OAAqB,QAAAunB,EAAAl2D,UAAA7K,OAAbghE,EAAI,IAAAt8D,MAAAq8D,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAp2D,UAAAo2D,GACVhtB,KAAKitB,YAAY,CACf5gD,KAAM,OACN0gD,QAEJ,CAEAG,QAAQC,GACN,MAAM,cAAEC,EAAa,wBAAEC,GAA4BrtB,KAE7ClnC,GAAYw0D,EAAAA,EAAAA,KACZ1kC,EAA0B,CAC9Bvc,KAAM,aACNvT,eACGq0D,GAGCI,EAAe,CAAEz0D,aAGjB00D,EAAwB,IAAIxb,SAAQ,CAACC,EAASwb,KAClD9jE,OAAO+jE,OAAOH,EAAc,CAAEtb,UAASwb,UAAS,IAGlD,GAAqD,mBAA1C7kC,EAAQmkC,KAAKnkC,EAAQmkC,KAAKhhE,OAAS,GAAmB,CAC/D68B,EAAQ+kC,cAAe,EAEvB,MAAMjB,EAAW9jC,EAAQmkC,KAAKa,MAC9BL,EAAab,SAAWA,EACxBW,EAAwB1mC,IAAI+lC,EAAUa,EACxC,CAeA,OAbAH,EAAczmC,IAAI7tB,EAAWy0D,GAC7BC,EACGK,OAAM,KAAe,IACrBC,SAAQ,KACPV,EAAcvmC,OAAO/tB,GAEjBy0D,EAAab,UACfW,EAAwBxmC,OAAO0mC,EAAab,SAC9C,IAGJ1sB,KAAKitB,YAAYrkC,GAEV4kC,CACT,CAEAO,eAAeC,GACbA,EAAiBC,YAAa,EAE9B,MAAM,UAAEn1D,GAAcknC,KAAKqtB,wBAAwB9mC,IAAIynC,IAAqB,CAAC,EACxEl1D,GAILknC,KAAKitB,YAAY,CACf5gD,KAAM,iBACNvT,aAEJ,CAEAo1D,UAAU/8D,GACR,MAAM,cAAEi8D,EAAa,QAAEP,GAAY7sB,KACnC,GAAI7uC,EAAK07D,UAAYA,EAOrB,GAHkB,WAAd17D,EAAKkb,MAAqB2zB,KAAKiC,UACjCjC,KAAKiC,SAAS9wC,EAAKg9D,QAEH,mBAAdh9D,EAAKkb,KAA2B,CAClC,MAAMkhD,EAAeH,EAAc7mC,IAAIp1B,EAAK2H,WACxCy0D,IACEp8D,EAAKuZ,MACP6iD,EAAaE,OAAOt8D,EAAKuZ,OAEzB6iD,EAAatb,QAAQ9gD,EAAKi9D,UAGhC,MAAO,GAAkB,mBAAdj9D,EAAKkb,KACO+gD,EAAc7mC,IAAIp1B,EAAK2H,YAC9B4zD,cAAcv7D,EAAKk9D,mBAC5B,GAAkB,mBAAdl9D,EAAKkb,KACd,MAAM,IAAI05B,MAAM50C,EAAKuZ,OAAO1X,QAEhC,CAEQi6D,YAAY97D,GAClBA,EAAK07D,QAAU7sB,KAAK6sB,QAEpB7sB,KAAKxzB,OAAOygD,YAAY97D,EAC1B,EAGK,SAASm9D,EACdC,EACAtsB,EACA4qB,GAEA,MAAM2B,EAAY,IAAI5B,EAAkB2B,EAAQtsB,EAAU4qB,GAE1D,SAAS4B,EAAajmE,GAA+B,IAA9B,KAAE2I,GAA0B3I,EACjDgmE,EAAUN,UAAU/8D,EACtB,CAQA,OANAo9D,EAAOjjC,iBAAiB,UAAWmjC,GAEnCD,EAAU9tB,QAAU,KAClB6tB,EAAO/iC,oBAAoB,UAAWijC,EAAc,EAG/CD,CACT,C,iFC/MA,MAEME,EAAsC,IAAI9sC,IAEjC,SAAS+sC,EAAwB7uB,EAAwB3nC,GAA2C,IAA7B/B,EAAQQ,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAJrE,KAKlBnL,EAAAA,EAAAA,KAA0BnC,EAAAA,EAAAA,SAC7B8M,EAAW,GAGb,MAAMjK,EAA0C,QAAlC2zC,EAAU+P,aAAa,QAC/B,WACJI,EAAYlc,YAAa66B,EAAc,YAAE5e,EAAa3L,SAAS,SAAEwqB,IAC/D/uB,EAEJ,IAAIgvB,EAAO32D,EAAO83C,EAElB,GAAI6e,EAAO,EAAG,CACZ,MAAMC,GAAiB9e,GAAc9jD,GAAS,EAAI,GAClD2iE,EAAOt/D,KAAKC,IAAIq/D,EAAMC,EACxB,MAAO,GAAID,EAAO,EAAG,CACnB,MAAMC,EAAgB/e,GAAeC,EAAa2e,GAClDE,EAAOt/D,KAAKuH,IAAI+3D,EAAMC,EACxB,CAEA,GAAa,IAATD,EACF,OAAO9c,QAAQC,UAGb4c,GAAYH,EAASjhE,IAAIohE,IAC3BH,EAASnoC,IAAIsoC,EAAbH,GAGF,MAAMliD,EAASyjC,EAAa6e,EAE5B,OAAO,IAAI9c,SAAeC,KACxBlmC,EAAAA,EAAAA,KAAgB,KACd,GAAiB,IAAb3V,EAGF,OAFA0pC,EAAUmQ,WAAazjC,OACvBylC,IAIF,IAAI+c,GAAY,EAChB,MAAM9mE,EAAKsH,KAAKy/D,SAASlmB,WACzBjJ,EAAUuE,QAAQwqB,SAAW3mE,EAC7BwmE,EAAS/nC,IAAIz+B,GAAI,KACf8mE,GAAY,CAAI,IAGlBlvB,EAAU7xC,MAAMihE,eAAiB,OAEjC,MAAMC,EAAUtzC,KAAKC,OAErBszC,EAAAA,EAAAA,KAAQ,KACN,GAAIJ,EAAW,OAAO,EAEtB,MAAMK,EAAI7/D,KAAKuH,KAAK8kB,KAAKC,MAAQqzC,GAAW/4D,EAAU,GAEhDk5D,EAAcR,GAAQ,EAAIS,EAAWF,IAU3C,OATAvvB,EAAUmQ,WAAazgD,KAAKxE,MAAMwhB,EAAS8iD,GAEvCD,GAAK,IACPvvB,EAAU7xC,MAAMihE,eAAiB,UAC1BpvB,EAAUuE,QAAQwqB,SACzBH,EAAS7nC,OAAO3+B,GAChB+pD,KAGKod,EAAI,CAAC,GACXtjD,EAAAA,GAAgB,GACnB,GAEN,CAEA,SAASwjD,EAAWF,GAClB,OAAO,GAAM,EAAIA,IAAM,GACzB,C,+IChEA,IACIG,EADApkE,GAAc,EAGH,SAASqkE,IAAsD,QAAA3C,EAAAl2D,UAAA7K,OAArCghE,EAAI,IAAAt8D,MAAAq8D,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAp2D,UAAAo2D,GAC3CwC,EAAczC,EAAKljE,MAAM,EAAG,GAE5B,MAAM6lE,EAASC,KAAwBH,GAEjCI,EAAyB7C,EAAK,GACpC,GAAI6C,EACF,OAAOF,GAGT3jD,EAAAA,EAAAA,IAAgB2jD,EAElB,CAEO,SAASG,IACTzkE,KAIL0kE,EAAAA,EAAAA,OAEAr0B,EAAAA,EAAAA,KAAe,MACb1vB,EAAAA,EAAAA,IAAgB4jD,KAAwBH,GAAc,IAE1D,CAEA,SAASG,EACP7vB,EACA5qB,EACAgX,GAMA,IALA6jC,EAAMn5D,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAG,EACTo5D,EAAWp5D,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAGq5D,EAAAA,IACdC,EAA+Bt5D,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAC/BkoE,EAAsBv5D,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EACtBmoE,EAAoCx5D,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAGlCioE,IAAmBG,EAAAA,GAAAA,SACf5kE,EAAAA,EAAAA,KAA0BnC,EAAAA,EAAAA,SAE9B6mE,EAAgB,GAGlB,MAAQ/rC,UAAWksC,EAAYC,aAAcC,GAAkBt7C,GACvDu7C,UAAWC,EAAkBH,aAAcI,EAAe,aAAEppB,GAAiBzH,EAC/E8wB,EAAwBR,GAA8BtwB,EAAUuE,QAAQwsB,aAC1E1kC,OAAO2T,EAAUuE,QAAQwsB,cACzBF,EAEJ,IAAIG,EACJ,OAAQ5kC,GACN,IAAK,QACH4kC,EAAYR,EAAaP,GAAWtsB,EAAAA,GAAa,EAAI,GACrD,MACF,IAAK,MACHqtB,EAAYR,EAAaE,EAAgBT,EAAUa,EACnD,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACHE,EAAWN,EAAgBI,EACtBN,EAAaE,EAAgB,EAAII,EAAwB,EACzDN,EAAaP,EAItB,MAAMgB,EAAaC,EAAoBlxB,EAAWgxB,EAAUd,EAAaE,GAEzE,IAAIpB,EAAOgC,EAAWC,EACtB,GAAIjC,EAAO,EAAG,CACZ,MAAMC,GAAiBgC,EACvBjC,EAAOt/D,KAAKC,IAAIq/D,EAAMC,EACxB,MAAO,GAAID,EAAO,EAAG,CACnB,MAAMC,EAAgBxnB,GAAgBwpB,EAAaH,GACnD9B,EAAOt/D,KAAKuH,IAAI+3D,EAAMC,EACxB,CAEA,MAAMkC,EAAUzhE,KAAKykC,IAAI66B,GAEzB,MAAO,KACL,GAAImC,EAAU,EAKZ,YAJIP,IAAqBK,IACvBjxB,EAAU2wB,UAAYM,IAM1B,MAAMvkD,EAASukD,EAAajC,EAE5B,GAAsB,IAAlBqB,EAEF,YADArwB,EAAU2wB,UAAYjkD,GAIxBphB,GAAc,EAEd,MAAMmkE,EAAa0B,GAAWC,EAAAA,IAA4CC,EAAkBC,EACtFh7D,EAAW+5D,GACfkB,EAAAA,IACGJ,EAAUhB,EAAAA,KAA6BqB,EAAAA,IAA2BD,EAAAA,KAEjElC,EAAUtzC,KAAKC,MACfy1C,GAAuBrgC,EAAAA,EAAAA,OAE7BsgC,EAAAA,EAAAA,KAAc,KACZ,MAAMnC,EAAI7/D,KAAKuH,KAAK8kB,KAAKC,MAAQqzC,GAAW/4D,EAAU,GAChDk5D,EAAcR,GAAQ,EAAIS,EAAWF,IACrCoC,EAAejiE,KAAKxE,MAAMwhB,EAAS8iD,GAWzC,OATAxvB,EAAU2wB,UAAYgB,EAEtBrmE,EAAcikE,EAAI,GAAKoC,IAAiBjlD,EAEnCphB,IACHokE,OAAcvnE,EACdspE,KAGKnmE,CAAW,GACjB2gB,EAAAA,GAAgB,CAEvB,CAEO,SAAS2lD,IACd,OAAOtmE,CACT,CAEA,SAAS4lE,EACPlxB,EACAgxB,GAGA,IAFAd,EAAWp5D,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAGq5D,EAAAA,IACdC,EAA+Bt5D,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAE/B,MAAM,UAAEwoE,GAAc3wB,EAEtB,QAAuB73C,IAAnBioE,EAA8B,CAChC,MAAMyB,EAASb,EAAWL,EAE1B,GAAIkB,GAAU3B,EACZ,OAAOS,GAAakB,EAAS3B,GACxB,GAAI2B,EAAS3B,EAClB,OAAOS,GAAakB,EAAS3B,EAEjC,KAAO,IAAIE,IAAmBG,EAAAA,GAAAA,GAC5B,OAAOS,EAAWd,EACb,GAAIE,IAAmBG,EAAAA,GAAAA,KAC5B,OAAO7gE,KAAKC,IAAI,EAAGqhE,EAAWd,EAChC,CAEA,OAAOS,CACT,CAEA,SAASU,EAAgB9B,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAEA,SAAS+B,EAAe/B,GACtB,OAAO,GAAM,EAAIA,IAAM,GACzB,C,gJC5JA,MAAMuC,EAAS,IAAIhwC,IACnB,IAGIiwC,EAHAC,EAAwB,GACxBC,EAAwB,GA0D5B,SAASC,EAAS9S,EAAkB+S,GAClC,MAAMC,EAAeL,GAAkBD,EAAOrrC,IAAIsrC,GAC9CK,IACFA,EAAa19D,MAAMisC,QACnByxB,EAAa19D,MAAM0d,YAAc,EAC7BggD,EAAazS,eAAeyS,EAAazS,iBAG/C,MAEM0S,EAAcC,EAAgBlT,GAFrBr3D,EAAAA,EAAAA,KAAeyB,EAAAA,EAAAA,OAAag3D,YAAYntD,QAAUoG,EAAAA,GAAAA,OAEZ04D,GACrD,IAAKE,EACH,OAGF,IAAKP,EAAOnkE,IAAI0kE,GAId,YAFAtpE,EAAAA,EAAAA,MAAawpE,iBAAgBC,EAAAA,EAAAA,IAAgBC,EAAaJ,GAAaK,aAKzE,MAAMC,EAAYb,EAAOrrC,IAAI4rC,GAEzBM,EAAUjT,aACZiT,EAAUjT,cAGZqS,EAAiBM,EAEbM,EAAUj+D,MAAMrG,MAClBqyC,EAAAA,EAAAA,GAASiyB,EAAUj+D,MAEvB,CAEO,SAASk+D,IACd,MAAMR,EAAeL,GAAkBD,EAAOrrC,IAAIsrC,GAC9CK,GACFA,EAAa19D,MAAMisC,OAEvB,CAEO,SAASsf,EACdb,EACAE,EACAx1B,EACA41B,EACAC,GAEA,IAAKmS,EAAOnkE,IAAIyxD,GAAU,CACxB,MAAMyT,EAxGV,SACEzT,EACA7yC,EACAmzC,EACAC,GAEA,MAAMjrD,EAAQ,IAAIo+D,MAElB,SAASC,EAAY7S,GACnB,OAAQ9nD,IACD05D,EAAOnkE,IAAIyxD,MAIZ2B,EAAAA,EAAAA,GAAwBrsD,IAI5Bo9D,EAAOrrC,IAAI24B,GAAUG,SAASjwD,SAASw6B,IACrCA,EAAQo2B,EAAW9nD,EAAE,IACrB,CAEN,CAoBA,OAlBA1D,EAAM82B,iBAAiB,aAAcunC,EAAY,iBACjDr+D,EAAM82B,iBAAiB,OAAQunC,EAAY,WAC3Cr+D,EAAM82B,iBAAiB,QAASunC,EAAY,YAC5Cr+D,EAAM82B,iBAAiB,YAAaunC,EAAY,gBAChDr+D,EAAM82B,iBAAiB,aAAcunC,EAAY,iBACjDr+D,EAAM82B,iBAAiB,UAAWunC,EAAY,cAC9Cr+D,EAAM82B,iBAAiB,SAAS,KACzBsmC,EAAOnkE,IAAIyxD,MAIZ2B,EAAAA,EAAAA,GAAwBrsD,IAI5Bw9D,EAAS9S,GAAQ,IAGZ,CACL1qD,QACA6X,OACAgyC,MAAO,IAAIyU,MAAMt+D,EAAO,CACtB+xB,IAAKA,CAAC/Z,EAAQ1hB,IAAgC0hB,EAAO1hB,KAEvDu0D,SAAU,GACVG,cACAC,gBAEJ,CAoDkBsT,CAAY7T,EAASE,EAAWI,EAAaC,GAC3DmS,EAAOjrC,IAAIu4B,EAASyT,GAwIxB,SAAyBA,EAAczT,GAClB,UAAfyT,EAAMtmD,MAAqB0lD,EAAW9jD,SAASixC,KACjD6S,EAAW/lE,KAAKkzD,GAChB6S,EAAW3jD,KAAK4kD,IAGC,UAAfL,EAAMtmD,MAAqBylD,EAAW7jD,SAASixC,KACjD4S,EAAW9lE,KAAKkzD,GAChB4S,EAAW1jD,KAAK4kD,GAEpB,CAjJIC,CAAgBN,EAAOzT,EACzB,CACA,MAAM,MAAE1qD,EAAK,MAAE6pD,EAAK,SAAEgB,GAAauS,EAAOrrC,IAAI24B,GAI9C,OAFAG,EAASrzD,KAAK49B,GAEP,CACL0W,KAAKnyC,GACH,IAAKqG,EAAM+rC,OAAQ,OACnB,MAAM2xB,EAAeL,GAAkBD,EAAOrrC,IAAIsrC,GAC9CK,GAAgBL,IAAmB3S,IACrCgT,EAAa19D,MAAMisC,QACnByxB,EAAa19D,MAAM0d,YAAc,GAC7B2uC,EAAAA,EAAAA,GAAwBqR,EAAa19D,SACvC09D,EAAa19D,MAAM6vC,QAAQ6uB,sBAAwB,QAEjDhB,EAAazS,eAAeyS,EAAazS,iBAG/CoS,EAAiB3S,EAEZ1qD,EAAMrG,MACTqG,EAAMrG,IAAMA,EACZqG,EAAM2+D,QAAU,OAEZhlE,EAAI8f,SAAS,kBAAoBmlD,EAAAA,YAC5B5+D,EAAM6vC,QAAQ6uB,uBACrBG,EAAAA,EAAAA,GAA4B7+D,MAIhCgsC,EAAAA,EAAAA,GAAShsC,GA+Hf,SAAsB6X,EAAqB6yC,GACzC,IAAIr3D,EAAAA,EAAAA,KAAeyB,EAAAA,EAAAA,OAAagqE,aAAaC,iBAAmBC,EAAAA,GAAAA,MAA2B,OAC3F,MAAM,OAAEjsE,IAAW+qE,EAAAA,EAAAA,IAAgBC,EAAarT,GAASsT,YACnDiB,GAAen3D,EAAAA,EAAAA,KAAyBhT,EAAAA,EAAAA,QAAc/B,OACtDmsE,EAAexrE,GACnBA,EAAG2jC,WAAY,MAAKtkC,MAAcksE,GAAgBvrE,EAAG2jC,WAAY,MAAK4nC,KAG3D,UAATpnD,IACF0lD,EAAaA,EAAW/nE,OAAO0pE,IAGpB,UAATrnD,IACFylD,EAAaA,EAAW9nE,OAAO0pE,GAEnC,CA7IMC,CAAavU,EAAWF,EAC1B,EAEAze,QACMoxB,IAAmB3S,GACrB1qD,EAAMisC,OAEV,EAEA+d,OACE,GAAIqT,IAAmB3S,EAAS,CAE9B,MAAM6B,EAAUvsD,EAAMrG,IACtBqG,EAAMisC,SAENzP,EAAAA,EAAAA,KAAoB,KAClBx8B,EAAMrG,IAAM,GACZqG,EAAMrG,IAAM4yD,CAAO,GAEvB,CACF,EAEA5qD,eAAe+qD,GACT2Q,IAAmB3S,IACjB1qD,EAAMo/D,SACRp/D,EAAMo/D,SAAS1S,GAEf1sD,EAAM0d,YAAcgvC,EAG1B,EAEAjB,UAAUM,GACJsR,IAAmB3S,IACrB1qD,EAAM+rD,OAASA,EACf/rD,EAAM6d,OAAQ,EAElB,EAEA6tC,gBAAgB2T,GACVhC,IAAmB3S,IACrB1qD,EAAMksD,aAAemT,EAEzB,EAEA1T,YAAY9tC,GAER7d,EAAM6d,WADMpqB,IAAVoqB,GACa7d,EAAM6d,MAEPA,CAElB,EAEAgsC,QAEAC,mBACE0T,EAAS9S,EACX,EAEA3qC,OAAMA,KACI69C,EAAgBlT,GAASr3D,EAAAA,EAAAA,KAAeyB,EAAAA,EAAAA,OAAag3D,YAAYntD,QAG3EmhB,QAAOA,KACG89C,EAAgBlT,GAASr3D,EAAAA,EAAAA,KAAeyB,EAAAA,EAAAA,OAAag3D,YAAYntD,QAAQ,GAGnForD,uBACEyT,EAAS9S,GAAS,EACpB,EAEAxe,UAAuC,IAA/BozB,EAAqBl9D,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAC3B,MAAM+7D,EAAQf,EAAOrrC,IAAI24B,GACpByT,IAILA,EAAMtT,SAAWsT,EAAMtT,SAASr1D,QAAQ+pE,GAAMA,IAAMnqC,IAE/C+oC,EAAMtT,SAAStzD,SAClB4mE,EAAMn+D,MAAMisC,QACZmxB,EAAO/qC,OAAOq4B,GAEV4U,GAgCZ,SAAyBnB,EAAczT,GACrC,MAAM8U,EAAiBrkB,GAAgBA,IAAOuP,EAC3B,UAAfyT,EAAMtmD,OACR0lD,EAAaA,EAAW/nE,OAAOgqE,IAGd,UAAfrB,EAAMtmD,OACRylD,EAAaA,EAAW9nE,OAAOgqE,GAEnC,CAxCUC,CAAgBtB,EAAOzT,GAGrBA,IAAY2S,IACdA,OAAiB5pE,IAGvB,EAEJ,CAEA,SAASisE,EAAcvB,GACrB,OAAQA,EAAMtmD,MACZ,IAAK,QAAS,OAAO0lD,EACrB,IAAK,QAAS,OAAOD,EACrB,QAAS,OAEb,CA0CA,SAASM,EAAgB+B,GAA2E,IAAvDhhE,EAAMyD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAG2C,EAAAA,GAAAA,OAAoB04D,EAAwBr7D,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAChG,MAAM0qE,EAAQf,EAAOrrC,IAAI4tC,GACnBC,EAAQF,EAAcvB,GAC5B,IAAKyB,EAAO,OAEZ,GAAIjhE,IAAWoG,EAAAA,GAAAA,OAAoB,CACjC,MAAM86D,EAAQD,EAAMxlD,QAAQulD,GAC5B,GAAIE,EAAQ,EAAG,OAEf,OAAOD,EAAMC,GADKpC,GAAkB,EAAI,GAE1C,CAEA,MAAM,OAAE1qE,IAAW+qE,EAAAA,EAAAA,IAAgBC,EAAa4B,GAAW3B,YACrD8B,EAAYF,EAAMpqE,QAAQ9B,GAAOA,EAAG2jC,WAAY,MAAKtkC,OACrD8sE,EAAQC,EAAU1lD,QAAQulD,GAChC,GAAIE,EAAQ,EAAG,OACf,IAAI/+C,EAAYniB,IAAWoG,EAAAA,GAAAA,QAAsB,EAAI,EAErD,OADI04D,IAAgB38C,IAAc,GAC3Bg/C,EAAUD,EAAQ/+C,EAC3B,CAEO,SAAShf,EAAYtD,GAC1B,MAAQ,IAAEuhE,EAAAA,EAAAA,IAAcvhE,MAAYA,EAAQI,MAC9C,CAEA,SAASm/D,EAAarT,GAGpB,MAAO,CACLsT,WAHiBtT,EAAQnzB,MAAM,qBAAsB,GAIrD34B,KAHW+4B,OAAO+yB,EAAQ5/C,MAAM,KAAKsuD,OAKzC,CAGA,SAASoF,EAAkBwB,EAAeC,GACxC,IAAKD,IAAQC,EAAK,OAAO,EACzB,MAAQrhE,KAAMshE,EAASlC,WAAYmC,GAAWpC,EAAaiC,IACnDphE,KAAMwhE,EAASpC,WAAYqC,GAAWtC,EAAakC,GACrDniC,EAAOsiC,EAAUF,EACvB,OAAgB,IAATpiC,EAAauiC,EAAOC,cAAcH,GAAUriC,CACrD,C,ghBC3VO,IAAK/c,EAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,WAAdA,EAAAA,EAAc,eAAdA,EAAAA,EAAc,eAAdA,EAAAA,EAAc,iBAAdA,CAAc,MA+DnB,MAAMw/C,EAA4B,GAMzC,SAASC,EAAY3mD,EAAUC,GAC7B,OAAKA,EACE9e,KAAKylE,MAAO3mD,EAAE4mD,MAAQ7mD,EAAE6mD,MAAS5mD,EAAE6mD,MAAQ9mD,EAAE8mD,OADrC,CAEjB,CAEA,SAASC,EAAe/mD,EAAUC,GAChC,MAAO,CACL5e,GAAI2e,EAAE6mD,MAAQ5mD,EAAE4mD,OAAS,EACzBvlE,GAAI0e,EAAE8mD,MAAQ7mD,EAAE6mD,OAAS,EAE7B,CAEA,IAAIE,EAAgB,EACpB,MAAMC,EAAW,IC7DV,MAeL11B,cAKwB,IALZ,UACV21B,EAAY,EAAC,YACbC,EAAc,IAAG,UACjBC,EAAY,IAAG,MACfra,EAAQ,KACOxkD,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAG,CAAC,EAACmpC,EAAA,yBAAAA,EAAA,2BAAAA,EAAA,yBAAAA,EAAA,qBAAAA,EAAA,4BAAAA,EAAA,8BAAAA,EAAA,+BACpBC,KAAKu1B,UAAYA,EACjBv1B,KAAKw1B,YAAcA,EACnBx1B,KAAKy1B,UAAYA,EACjBz1B,KAAKob,MAAQA,EACbpb,KAAK01B,aAAe,IAAIjlE,MAAuB,EAAjBuvC,KAAKu1B,WAAerlE,KAAK,GACvD8vC,KAAK21B,eAAiB,IAAIllE,MAAuB,EAAjBuvC,KAAKu1B,WAAerlE,KAAK,GACzD8vC,KAAK41B,gBAAkB,IAAInlE,MAAuB,EAAjBuvC,KAAKu1B,WAAerlE,KAAK,EAC5D,CAEA2lE,MAAM39D,GACJ,IAAI49D,EAWJ,YATqB7tE,KADrBiQ,EAAIA,EAAE69D,eAAiB79D,GACjB89D,WACJF,EAAY59D,EAAE89D,gBACQ/tE,IAAbiQ,EAAEivD,OACX2O,GAAwB,GAAZ59D,EAAEivD,YACQl/D,IAAbiQ,EAAE+9D,QAAqC,IAAb/9D,EAAE+9D,SACrCH,GAAwB,GAAZ59D,EAAE+9D,QAEhBj2B,KAAK41B,gBAAgB5pE,KAAK6vB,KAAKC,OAC/BkkB,KAAK41B,gBAAgB3pC,QACjB6pC,EAAY,GACd91B,KAAK01B,aAAa1pE,KAAK8pE,GACvB91B,KAAK01B,aAAazpC,QACX+T,KAAKk2B,UAAU,KAEtBl2B,KAAK21B,eAAe3pE,KAAK8pE,GACzB91B,KAAK21B,eAAe1pC,QACb+T,KAAKk2B,WAAW,GAE3B,CAEAA,UAAU5gD,GACR,MAAM6gD,GAA4B,IAAf7gD,EAAmB0qB,KAAK21B,eAAiB31B,KAAK01B,aACjE,QAAsBztE,IAAlBkuE,EAAW,GAAkB,OAAO7gD,EACxC,GACE0qB,KAAK41B,gBAAiC,EAAjB51B,KAAKu1B,UAAgB,GAAKv1B,KAAKob,MAAQv/B,KAAKC,OAC9Dq6C,EAAW,KAAOA,EAA4B,EAAjBn2B,KAAKu1B,UAAgB,GAErD,OAAO,EAET,MAAMa,EAAgBD,EAAWtsE,MAAM,EAAGm2C,KAAKu1B,WACzCc,EAAgBF,EAAWtsE,MAAMm2C,KAAKu1B,UAA4B,EAAjBv1B,KAAKu1B,WACtDe,EAASF,EAAchgC,QAAO,CAACi5B,EAAG9vD,IAAM8vD,EAAI9vD,IAC5Cg3D,EAASF,EAAcjgC,QAAO,CAACi5B,EAAG9vD,IAAM8vD,EAAI9vD,IAC5Ci3D,EAAaF,EAASF,EAAcrqE,OACpC0qE,EAAaF,EAASF,EAActqE,OAC1C,OAAOyD,KAAKykC,IAAIuiC,GAAchnE,KAAKykC,IAAIwiC,EAAaz2B,KAAKy1B,YACpDz1B,KAAKw1B,YAAchmE,KAAKykC,IAAIwiC,EACnC,GDT4B,CAC5BlB,UAAW,EACXC,YAAa,GACbC,UAAW,GACXra,MAAO,MAGF,SAASliD,EAAcgc,EAAsB2C,GAAyB,IAAA6+C,EAAAC,EAAAC,EAC3E,IAAIC,EACAC,GAAW,EACXC,GAAY,EACZC,GAAY,EACZC,EAAkB,EAClBC,EAA+B,QAAtBR,EAAG7+C,EAAQs/C,mBAAW,IAAAT,EAAAA,EAAI,EACnCU,EAAoB,CACtB1nE,EAAG,EACHC,EAAG,GAED0nE,EAAiB,CACnB3nE,GAAG,EACHC,GAAG,GAEL,MAAM2nE,EAAoBC,EAAAA,EAAAA,MAC1B,IAIIC,EAJAC,EAAqB,CACvB/nE,EAAG4nE,EAAkBvoE,MAAQ,EAC7BY,EAAG2nE,EAAkBtoE,OAAS,GAGhC,MAAM0oE,EAAyB,QAAlBf,EAAG9+C,EAAQ6/C,eAAO,IAAAf,EAAAA,EAAI,EAC7BgB,EAAyB,QAAlBf,EAAG/+C,EAAQ8/C,eAAO,IAAAf,EAAAA,EAAI,EAEnC,SAASz9D,EAAUjB,GACjB,IAAI2f,EAAQ+/C,0BACT1/D,EAAEsU,OAAuBla,QAAQulB,EAAQ+/C,2BACtC1/D,EAAEsU,OAAuBgO,QAAQ3C,EAAQ+/C,yBAF/C,CASA,GAFAf,EAAe3+D,EAEA,cAAXA,EAAEmU,MACCwL,EAAQggD,gBAAkBhgD,EAAQxe,QACrCnB,EAAEiU,iBAGJ9I,SAASioB,iBAAiB,YAAawsC,GACvCz0D,SAASioB,iBAAiB,UAAWlyB,QAChC,GAAe,eAAXlB,EAAEmU,KAAuB,CAGlC,MAAMG,EAAStU,EAAEsU,OACjBA,EAAO8e,iBAAiB,YAAawsC,EAAQ,CAAE1Q,SAAS,IACxD56C,EAAO8e,iBAAiB,WAAYlyB,GACpCoT,EAAO8e,iBAAiB,cAAelyB,GAEnC,YAAalB,SACCjQ,IAAZiQ,EAAEg9D,QACJh9D,EAAEg9D,MAAQh9D,EAAE6/D,QAAQ,GAAG7C,YAGTjtE,IAAZiQ,EAAEi9D,QACJj9D,EAAEi9D,MAAQj9D,EAAE6/D,QAAQ,GAAG5C,OAGA,IAArBj9D,EAAE6/D,QAAQhsE,SACZkrE,EAAkBjC,EAAY98D,EAAE6/D,QAAQ,GAAI7/D,EAAE6/D,QAAQ,IACtDN,EAAqBrC,EAAel9D,EAAE6/D,QAAQ,GAAI7/D,EAAE6/D,QAAQ,KAGlE,CAEIlgD,EAAQmgD,YACV30D,SAAS40D,KAAKziC,UAAUznC,IAAI,mBAG1B8pB,EAAQ1e,WACV0e,EAAQ1e,UAAUjB,EAxCpB,CA0CF,CAEA,SAASkB,EAAUlB,GACb2+D,IACEh/C,EAAQmgD,YACV30D,SAAS40D,KAAKziC,UAAUC,OAAO,mBAGjCpyB,SAASmoB,oBAAoB,UAAWpyB,GACxCiK,SAASmoB,oBAAoB,YAAassC,GACzCjB,EAAarqD,OAAuBgf,oBAAoB,cAAepyB,GACvEy9D,EAAarqD,OAAuBgf,oBAAoB,WAAYpyB,GACpEy9D,EAAarqD,OAAuBgf,oBAAoB,YAAassC,GAElEt0B,EAAAA,IAAU3rB,EAAQzC,yBACpB3kB,MAAMuuC,KAAK37B,SAAS+gC,iBAA8BvsB,EAAQzC,0BACvDhmB,SAAS8oE,IACRA,EAAWjqE,MAAMkqE,SAAW,EAAE,IAIhCjgE,IACE4+D,EACEj/C,EAAQze,WACVye,EAAQze,UAAUlB,GAEA,YAAXA,EAAEmU,OACPwL,EAAQugD,eAAiBv8C,KAAKC,MAAQu5C,EAAgB,IACxDx9C,EAAQugD,cAAclgE,EAAG,CACvBmgE,QAASxB,EAAc3B,MACvBoD,QAASzB,EAAc1B,SAEhBt9C,EAAQltB,SAAc,WAAYuN,GAAmB,IAAbA,EAAEQ,QACnDmf,EAAQltB,QAAQuN,GAElBm9D,EAAgBx5C,KAAKC,SAK3Bg7C,GAAW,EACXC,GAAY,EACZC,GAAY,EACZC,EAAkB,EAClBC,GAAYqB,EAAAA,EAAAA,IAAMrB,EAAWQ,EAASC,GACtCH,OAAmBvvE,EACnBmvE,EAAoB,CAClB1nE,EAAG,EACHC,EAAG,GAEL0nE,EAAiB,CACf3nE,GAAG,EACHC,GAAG,GAEL,MAAM6oE,EAAgBjB,EAAAA,EAAAA,MACtBE,EAAqB,CACnB/nE,EAAG8oE,EAAczpE,MAAQ,EACzBY,EAAG6oE,EAAcxpE,OAAS,GAE5B6nE,OAAe5uE,CACjB,CAEA,SAAS6vE,EAAO5/D,GACd,GAAI2+D,EAAc,CAChB,GAAe,cAAX3+D,EAAEmU,MAAyB,YAAanU,SAC1BjQ,IAAZiQ,EAAEg9D,QACJh9D,EAAEg9D,MAAQh9D,EAAE6/D,QAAQ,GAAG7C,YAGTjtE,IAAZiQ,EAAEi9D,QACJj9D,EAAEi9D,MAAQj9D,EAAE6/D,QAAQ,GAAG5C,OAGrBt9C,EAAQ4gD,QAAUxB,EAAkB,GAA0B,IAArB/+D,EAAE6/D,QAAQhsE,QAAc,CACnE,MAAM2sE,EAAc1D,EAAY98D,EAAE6/D,QAAQ,GAAI7/D,EAAE6/D,QAAQ,IAClDY,EAAcvD,EAAel9D,EAAE6/D,QAAQ,GAAI7/D,EAAE6/D,QAAQ,IACrDa,EAAcD,EAAYjpE,EAAI+nE,EAAmB/nE,EACjDmpE,EAAcF,EAAYhpE,EAAI8nE,EAAmB9nE,EACjDmpE,EAAaJ,EAAczB,EACjCp/C,EAAQ4gD,OAAOvgE,EAAG,CAChB4gE,aACAC,eAAgBtB,EAAmB/nE,EACnCspE,eAAgBvB,EAAmB9nE,EACnCipE,cACAC,cACAI,eAAgBN,EAAYjpE,EAC5BwpE,eAAgBP,EAAYhpE,IAEX,IAAfmpE,IAAkBhC,GAAW,EACnC,CAGF,MAAM8B,EAAc1gE,EAAEg9D,MAAS2B,EAAa3B,MACtC2D,EAAc3gE,EAAEi9D,MAAS0B,EAAa1B,OAExC3lE,KAAKykC,IAAI2kC,IAhMK,IAgM8BppE,KAAKykC,IAAI4kC,IAhMvC,MAiMhB/B,GAAW,GAGb,IAAIqC,GAAsB,EAEtBthD,EAAQxe,SACVwe,EAAQxe,OAAOnB,EAAG2+D,EAAc,CAC9B+B,cACAC,gBAEFM,GAAsB,GAGpBthD,EAAQxC,UAAY0hD,IACtBA,EAaN,SAAiB7+D,EAAgC0gE,EAAqBC,GAEpE,GAAIr1B,EAAAA,GAAQ,CACV,MAAM9zC,EAAKwI,EAAqB6/D,QAAQ,GAAG7C,MAC3C,GAAIxlE,GAAKqlE,GAA6BrlE,GAAK6nE,EAAAA,EAAAA,MAAiBxoE,MAAQgmE,EAClE,OAAO,CAEX,CAEA,MAAMqE,EAAO5pE,KAAKykC,IAAI2kC,GAChBS,EAAO7pE,KAAKykC,IAAI4kC,GAEtB,GAAID,GAAeC,GACHrpE,KAAKC,IAAI2pE,EAAMC,GAAQ7pE,KAAKuH,IAAIqiE,EAAMC,GAExC,EACV,OAAO,EAIX,IAAIC,EAOJ,GANIF,GAhPgB,GAiPlBE,EAAO,IACED,GAlPS,KAmPlBC,EAAO,MAGJA,EACH,OAAO,EAGT,GAAK9B,GAEE,GAAIA,IAAqB8B,EAE9B,OAAO,OAHP9B,EAAmB8B,EAMrB,OAiGJ,SACEphE,EACAqhE,EACAX,EACAC,EACAxjD,GAEA,MAAyB,MAArBkkD,EAEOlkD,EAAQnd,EADb0gE,EAAc,EACErjD,EAAeikD,KAEfjkD,EAAekkD,OAEL,MAArBF,GAEAlkD,EAAQnd,EADb2gE,EAAc,EACEtjD,EAAemkD,GAEfnkD,EAAeokD,KAKvC,CAvHWC,CAAa1hE,EAAGohE,EAAMV,EAAaC,EAAahhD,EAAQxC,QACjE,CApDkBA,CAAQnd,EAAG0gE,EAAaC,GACpCM,EAAsBpC,GAGpBvzB,EAAAA,IAAU21B,GAAuBthD,EAAQzC,yBAC3C3kB,MAAMuuC,KAAK37B,SAAS+gC,iBAA8BvsB,EAAQzC,0BACvDhmB,SAAS8oE,IACRA,EAAWjqE,MAAMkqE,SAAW,QAAQ,GAG5C,CACF,CA2CA,MAAM0B,GAAmBt+D,EAAAA,EAAAA,IAASnC,EAlQH,KAkQwC,GACjE0gE,GAAmBv+D,EAAAA,EAAAA,IAASnC,EApQH,KAoQwC,GAEvE,SAAS2gE,EAAe7hE,GAClB4+D,IACJ39D,EAAUjB,GACV4+D,GAAW,EACXW,EAAqB,CAAE/nE,EAAGwI,EAAExI,EAAGC,EAAGuI,EAAEvI,GACtC,CA2CA,SAASqqE,EAAQ9hE,GACf,IAAK2f,EAAQ4gD,SAAW5gD,EAAQxe,OAAQ,OACxC,GAAIwe,EAAQ+/C,0BACT1/D,EAAEsU,OAAuBla,QAAQulB,EAAQ+/C,0BACtC1/D,EAAEsU,OAAuBgO,QAAQ3C,EAAQ+/C,0BAE7C,OAEF1/D,EAAEiU,iBACFjU,EAAEM,kBACF,MAAM,cAAEyhE,EAAgB,GAAMpiD,EAC9B,GAAIA,EAAQugD,eAAiBzuE,OAAOuwE,GAAGhiE,EAAEgvD,QAAS,IAAMv9D,OAAOuwE,GAAGhiE,EAAEivD,QAAS,IAAMjvD,EAAEyzB,QAKnF,OAJAouC,EAAe7hE,GACfg/D,EAAYA,EAAY,EAAI,EAAI+C,EAChCpiD,EAAQugD,cAAclgE,EAAG,CAAEmgE,QAASngE,EAAEg9D,MAAOoD,QAASpgE,EAAEi9D,aACxD2B,GAAW,GAGb,MAAMqD,EAAiBjiE,EAAEwzB,SAAWxzB,EAAEyzB,SAAWzzB,EAAE2jC,SAInD,GAHIs+B,GA5DN,SAAqBjiE,GACnB,IAAK2f,EAAQ4gD,OAAQ,OACrBsB,EAAe7hE,GACf,MAAM0gE,EAAc1gE,EAAExI,EAAI+nE,EAAmB/nE,EACvCmpE,EAAc3gE,EAAEvI,EAAI8nE,EAAmB9nE,EACvCyqE,GAAQ7B,EAAAA,EAAAA,IAAMrgE,EAAEivD,QAAS,GAAI,IACnC+P,GAAqB,IAARkD,EACblD,GAAYqB,EAAAA,EAAAA,IAAMrB,EAAqB,GAAVQ,EAAyB,EAAVC,GAC5CX,GAAY,EACZn/C,EAAQ4gD,OAAOvgE,EAAG,CAChBmiE,MAAMrvE,EAAAA,EAAAA,IAAMksE,EAAW,GACvB6B,eAAgBtB,EAAmB/nE,EACnCspE,eAAgBvB,EAAmB9nE,EACnCipE,cACAC,cACAI,eAAgB/gE,EAAExI,EAClBwpE,eAAgBhhE,EAAEvI,IAEpBmqE,EAAiB5hE,EACnB,CA0CIoiE,CAAYpiE,IAETiiE,IAAmBnD,EAAW,CAEjC,MAAMuD,EAAcjF,EAASO,MAAM39D,IACjB,IAAdg/D,GAAmBqD,IA7C3B,SAAqBriE,GACnB,IAAK2f,EAAQxe,OAAQ,OACrB0gE,EAAe7hE,GAEVm/D,EAAe3nE,GAAKF,KAAKgrE,KAAKpD,EAAkB1nE,KAAOF,KAAKgrE,KAAKtiE,EAAEgvD,UACtEkQ,EAAkB1nE,GAAKwI,EAAEgvD,QAEtBmQ,EAAe1nE,GAAKH,KAAKgrE,KAAKpD,EAAkBznE,KAAOH,KAAKgrE,KAAKtiE,EAAEivD,UACtEiQ,EAAkBznE,GAAKuI,EAAEivD,QAE3B,MAAM,EAAEz3D,EAAC,EAAEC,GAAMynE,EACjBv/C,EAAQxe,OAAOnB,EAAG2+D,EAAe,CAC/B+B,YAAalpE,EACbmpE,YAAalpE,IACZ,CAAC8qE,EAAIC,KACNrD,EAAiB,CAAE3nE,EAAG+qE,EAAI9qE,EAAG+qE,EAAI,IAEnCb,EAAiB3hE,EACnB,CA4BMyiE,CAAYziE,EAEhB,CACF,CAMA,OAJAgd,EAAQoW,iBAAiB,QAAS0uC,GAClC9kD,EAAQoW,iBAAiB,YAAanyB,GACtC+b,EAAQoW,iBAAiB,aAAcnyB,EAAW,CAAEiuD,SAAUvvC,EAAQ+iD,eAE/D,KACLxhE,IACA8b,EAAQsW,oBAAoB,QAASwuC,GACrC9kD,EAAQsW,oBAAoB,aAAcryB,GAC1C+b,EAAQsW,oBAAoB,YAAaryB,EAAU,CAEvD,C,yGEzZO,SAAS0hE,EAAQC,GACtB,MAAO,CACLC,SAASD,EAAMxlB,UAAU,EAAG,GAAI,IAChCylB,SAASD,EAAMxlB,UAAU,EAAG,GAAI,IAChCylB,SAASD,EAAMxlB,UAAU,EAAG,GAAI,IAEpC,CAOO,SAAS0lB,EAAQF,GACtB,MAAMG,EAAKH,EAAM,GAAG/xB,SAAS,IACvBmyB,EAAKJ,EAAM,GAAG/xB,SAAS,IACvBoyB,EAAKL,EAAM,GAAG/xB,SAAS,IAC7B,OAAqB,GAAbkyB,EAAGlvE,OAAc,IAAMkvE,EAAKA,IAAoB,GAAbC,EAAGnvE,OAAc,IAAMmvE,EAAKA,IAAoB,GAAbC,EAAGpvE,OAAc,IAAMovE,EAAKA,EAC5G,CAaO,SAASC,EAAO5yE,GAAgE,IAA9Dk9C,EAAGC,EAAGr3B,GAA4B9lB,EACzDk9C,GAAK,IACLC,GAAK,IACLr3B,GAAK,IAEL,IACIylD,EAAYx0D,EADZ9P,EAAMD,KAAKC,IAAIi2C,EAAGC,EAAGr3B,GAAIvX,EAAMvH,KAAKuH,IAAI2uC,EAAGC,EAAGr3B,GACvB+sD,EAAY5rE,EAEnC6rE,EAAI7rE,EAAMsH,EAGd,GAFAwI,EAAW,GAAP9P,EAAW,EAAI6rE,EAAI7rE,EAEnBA,GAAOsH,EACTg9D,EAAI,MACC,CACL,OAAQtkE,GACN,KAAKi2C,EACHquB,GAAKpuB,EAAIr3B,GAAKgtD,GAAK31B,EAAIr3B,EAAI,EAAI,GAC/B,MACF,KAAKq3B,EACHouB,GAAKzlD,EAAIo3B,GAAK41B,EAAI,EAClB,MACF,KAAKhtD,EACHylD,GAAKruB,EAAIC,GAAK21B,EAAI,EAItBvH,GAAK,CACP,CAEA,MAAO,CAACA,EAAGx0D,EAAG87D,EAChB,CAaO,SAASE,EAAOxxE,GAAgE,IACjF27C,EAAYC,EAAYr3B,GADLylD,EAAGx0D,EAAG87D,GAA4BtxE,EAGrD+B,EAAI0D,KAAKe,MAAU,EAAJwjE,GACfyH,EAAQ,EAAJzH,EAAQjoE,EACZ0lD,EAAI6pB,GAAK,EAAI97D,GACbk8D,EAAIJ,GAAK,EAAIG,EAAIj8D,GACjB8vD,EAAIgM,GAAK,GAAK,EAAIG,GAAKj8D,GAE3B,OAAQzT,EAAI,GACV,KAAK,EACH45C,EAAI21B,EACJ11B,EAAI0pB,EACJ/gD,EAAIkjC,EACJ,MACF,KAAK,EACH9L,EAAI+1B,EACJ91B,EAAI01B,EACJ/sD,EAAIkjC,EACJ,MACF,KAAK,EACH9L,EAAI8L,EACJ7L,EAAI01B,EACJ/sD,EAAI+gD,EACJ,MACF,KAAK,EACH3pB,EAAI8L,EACJ7L,EAAI81B,EACJntD,EAAI+sD,EACJ,MACF,KAAK,EACH31B,EAAI2pB,EACJ1pB,EAAI6L,EACJljC,EAAI+sD,EACJ,MACF,KAAK,EACH31B,EAAI21B,EACJ11B,EAAI6L,EACJljC,EAAImtD,EAIR,MAAO,CACLjsE,KAAKxE,MAAU,IAAJ06C,GACXl2C,KAAKxE,MAAU,IAAJ26C,GACXn2C,KAAKxE,MAAU,IAAJsjB,GAEf,CAEOmwB,eAAei9B,EAAgB99C,GAEpC,MACM+9C,EAAuC,CAAC,EAAG,EAAG,GACpD,IAAIxqE,EACApC,EACAC,EAEAjD,EADAD,GAAK,EAEL8vE,EAAgC,CAAC,EAAG,EAAG,GACvC3mB,EAAQ,EAEZ,MAAMxmD,EAAS4U,SAAS48B,cAAc,UAChC47B,EAAUptE,EAAOS,YAAcT,EAAOS,WAAW,MACvD,IAAK2sE,EACH,OAAOF,EAGT,MAAMG,QAAcC,EAAAA,EAAAA,IAAan+C,GACjC5uB,EAAS8sE,EAAME,eAAiBF,EAAMvL,cAAgBuL,EAAM9sE,OAC5DD,EAAQ+sE,EAAMG,cAAgBH,EAAM/nC,aAAe+nC,EAAM/sE,MACzDN,EAAOO,OAASA,EAChBP,EAAOM,MAAQA,EAEf8sE,EAAQja,UAAUka,EAAO,EAAG,GAE5B,IACE3qE,EAAO0qE,EAAQK,aAAa,EAAG,EAAGntE,EAAOC,EAG3C,CAFE,MAAOkJ,GACP,OAAOyjE,CACT,CAKA,IAHA5vE,EAASoF,EAAKA,KAAKpF,QAGXD,GAAKqwE,IAAiBpwE,GACH,IAArBoF,EAAKA,KAAKrF,EAAI,OAChBmpD,EACF2mB,EAAI,IAAMzqE,EAAKA,KAAKrF,GACpB8vE,EAAI,IAAMzqE,EAAKA,KAAKrF,EAAI,GACxB8vE,EAAI,IAAMzqE,EAAKA,KAAKrF,EAAI,IAO1B,OAJA8vE,EAAI,GAAKpsE,KAAKe,MAAMqrE,EAAI,GAAK3mB,GAC7B2mB,EAAI,GAAKpsE,KAAKe,MAAMqrE,EAAI,GAAK3mB,GAC7B2mB,EAAI,GAAKpsE,KAAKe,MAAMqrE,EAAI,GAAK3mB,GAEtB2mB,CACT,CAEO,SAASQ,EAAaC,GAC3B,MAAO32B,EAAGC,EAAGr3B,GAAK+tD,EAElB,MADa,MAAS32B,EAAI,MAASC,EAAI,MAASr3B,CAElD,CAGO,SAASguD,EAAgBD,GAC9B,IAAKE,EAAKC,EAAY1rE,GAASsqE,EAAQiB,GAOvC,OALAG,EAAahtE,KAAKuH,IAAI,EAAGylE,EAAa,IAAO,IAAO,EAAIA,IACxD1rE,EAAQA,EAAQ,GACZtB,KAAKC,IAAI,EAAW,IAARqB,GACZtB,KAAKC,IAAI,EAAGD,KAAKuH,IAAI,EAAG,EAAY,IAARjG,IAExB,QAAa,IAANyrE,MAA2B,IAAbC,OAA8B,IAAR1rE,SACrD,C,iBC3Me,SAAS2rE,EAAc1wE,EAAgBsoE,GACpD,OAAOA,EAAQ7kE,KAAKe,MAAM8jE,EAAQtoE,GAAUA,CAC9C,C,iECSA,IAAI2wE,EAAsC,GACtCC,GAAU,EAEC,SAASC,EAASh/C,EAAai/C,GAC5CH,EAAiB1wE,KAAK,CAAE4xB,MAAKi/C,aACxBF,IACHA,GAAU,EACV/uD,YAAW6wB,gBAOfA,iBACE,IAAIwW,EAAQ,EACZ,IAAK,MAAM6nB,KAAmBJ,EAC5BK,EAAYD,GACZ7nB,IArBoB,KAsBhBA,UACIxU,EAAAA,EAAAA,IAtBW,KAuBjBwU,EAAQ,GAGZynB,EAAmB,EACrB,CAjBYM,GACNL,GAAU,CAAK,GAXE,KAcvB,CAeA,SAASI,EAAWv0E,GAAqC,IAApC,IAAEo1B,EAAG,SAAEi/C,GAA2Br0E,EACrD,MAAM4V,EAAOiF,SAAS48B,cAAc,KACpC7hC,EAAKuB,KAAOie,EACZxf,EAAKw+D,SAAWC,EAChB,IACEz+D,EAAK6+D,OAIP,CAHE,MAAOC,GAEPC,QAAQzyD,MAAMwyD,EAChB,CACF,C,gDC9Ce,SAAS/0B,EAAqBjzB,EAAsBkoD,EAAiBC,GAClF,IAAKD,GAASloD,IAAY7R,SAAS+pC,cACjC,OAGF,MAAM/E,EAAYt2C,OAAOu2C,eACnBwe,EAAQzjD,SAASi6D,cACjBC,EAAYroD,EAAQqoD,WAAaroD,EAElCrJ,EAAAA,IAAiBwxD,GAA0BE,GAAcA,EAAUC,WAKxE1W,EAAM2W,mBAAmBJ,EAAuBnoD,EAAUqoD,GAE1DzW,EAAM4W,UAAS,GACfr1B,EAAUE,kBACVF,EAAU+G,SAAS0X,IARjB5xC,EAAQpJ,OASZ,C,kDCjBe,SAAS6xD,IACtB,MAAMt1B,EAAYt2C,OAAOu2C,eACzB,IAAIs1B,EAAoBv1B,GAAWM,WAAaN,EAAUQ,WAAW,GAAG4G,qBAAkBxnD,EAE1F,MAAM41E,EAA2Bx1B,GAAWy1B,WAAaz1B,EAAU01B,YAAc,GAC5EC,EAAuB31B,EAAUy1B,UAAWG,EAAAA,KACjD,IAAKL,GAA6D,IAAxCA,EAAkBM,kBAC1C,OAGF,MAAMpnD,EAAarmB,MAAMuuC,KAAK4+B,EAAkBO,UAC7C/nC,QAAO,CAAC5lC,EAAQ4tE,IAbA,IAcXA,EAAKC,UAA6BD,EAAK5oC,UAAU8oC,SAAS,sBACrD7tE,MAAMuuC,KAAKo/B,EAAKh6B,iBAAiB,aACrChO,QAAO,CAAC1V,EAAK69C,IAAc79C,EAAIqe,OAAO5S,OAAQoyC,EAA0Bl6B,QAAQvrC,aAAatI,GAhBnF,IAiBJ4tE,EAAKC,UAA6BD,EAAK5oC,UAAU8oC,SAAS,WAC5D9tE,EAAOuuC,OAAO5S,OAAQiyC,EAAqB/5B,QAAQvrC,YAGrDtI,GACN,IAGL,KAAOotE,EAAkBY,YACvBZ,EAAkBa,YAAYb,EAAkBY,YAQlD,OANAZ,OAAoB31E,EAEf41E,GACH/mD,EAAW82C,MAGN92C,CACT,CAEA,SAASknD,EAAuB9oD,EAAezsB,GAC7C,QAtCmB,IAsCfysB,EAAQmpD,WAA8BnpD,EAAwBsgB,UAAU8oC,SAAS71E,OAI9EysB,EAAQm+B,YAAa2qB,EAAuB9oD,EAAQm+B,WAAY5qD,EACzE,C,kDC3CO,SAASi2E,EAAoB/uB,GAClC,GAAyB,SAArBA,EAAG1hD,MAAM0wE,QACX,OAAO,EAGT,MAAM90D,EAAO8lC,EAAGv3C,yBACRpJ,OAAQ4vE,GAAiBrH,EAAAA,EAAAA,MAEjC,OAAQ1tD,EAAKG,KAAO40D,GAAmB/0D,EAAKG,IAAMH,EAAK7a,QAAW,CACpE,C,gFCaA,MAAM6vE,EAAmB,CACvBv+B,UAAMr4C,EACNw4C,WAAOx4C,EACPy2D,kBAAcz2D,EACd42D,iBAAa52D,EACbg3D,mBAAeh3D,EACf+2D,eAAW/2D,EACXu2D,UAAMv2D,EACN62D,YAAQ72D,GAGH,SAASm4D,EAAqBd,EAA0BD,GAC7D,MAAM,aAAEyf,GAAiB/sE,OAAOgtE,UAC5BD,GACExf,GAAUsB,EAAetB,GACzBD,GAAU2f,EAAwB3f,IAGtC8d,QAAQ8B,KAAK,iDAEjB,CAEO,SAASre,EAAetB,GAC7B,MAAM,aAAEwf,GAAiB/sE,OAAOgtE,UAC5BD,IAEFA,EAAaxf,SAAWA,QAAAA,EAAY,KAExC,CAEO,SAAS0f,EAAwB3f,GACtC,MAAM,aAAEyf,GAAiB/sE,OAAOgtE,UAC5BD,GACFn1E,OAAO8oD,QAAQ,IAAKosB,KAAqBxf,IAAYjwD,SAAQ5G,IAAoB,IAAlBsC,EAAK8+B,GAAQphC,EAC1E,IAEEs2E,EAAaI,iBAAiBp0E,EAAK8+B,EAEnC,CADA,MAAOszC,GACP,IAIR,CAEO,SAASiC,IACd,MAAM,aAAEL,GAAiB/sE,OAAOgtE,UAC5BD,IAEFA,EAAaxf,SAAW,KACxB0f,EAAwBH,GACpBC,EAAaM,gBAAeN,EAAaM,cAAgB,QAC7DN,EAAane,qBAEjB,CAEO,SAASN,IAAgE,IAA/C/5B,EAAoC1vB,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAG,OACtE,MAAM,aAAEkoE,GAAiB/sE,OAAOgtE,UAC5BD,GAAgBA,EAAaM,gBAC/BN,EAAaM,cAAgB94C,EAEjC,CAEO,SAASq6B,EAAiBr6B,GAC/B,IAAKA,QAA4Br+B,IAAnBq+B,EAAM4F,eAA6CjkC,IAAnBq+B,EAAMlwB,SAAwB,OAC5EkwB,EAAM4F,SAAW18B,KAAKuH,IAAIuvB,EAAM4F,SAAU5F,EAAMlwB,UAEhD,MAAM,aAAE0oE,GAAiB/sE,OAAOgtE,UAChCD,GAAcne,mBAAmBr6B,EACnC,CAEO,SAAS+4C,EAAkBt1E,GAEN,IAFO,MACjCiP,EAAK,OAAEsmE,EAAM,MAAEC,EAAK,QAAEC,GACEz1E,EACxB,GAAI,kBAAmBgI,OACrB,OAAO,IAAIA,OAAO0tE,cAAc,CAC9BzmE,QACAsmE,SACAC,QACAC,WAIN,C,kDCxGA,MAAME,EAAQ,IAAIC,QAKH,SAAS5pB,EAAgC6pB,GACtD,OAAO,WACL,MAAMC,EAASH,EAAMn5C,IAAIq5C,GAAI,QAAA9S,EAAAl2D,UAAA7K,OADpBghE,EAAI,IAAAt8D,MAAAq8D,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAp2D,UAAAo2D,GAEb,GAAI6S,IAAUC,EAAAA,EAAAA,IAAqBD,EAAOE,SAAUhT,GAClD,OAAO8S,EAAOG,WAGhB,MAAMxvE,EAASovE,KAAM7S,GAErB,OADA2S,EAAM/4C,IAAIi5C,EAAI,CAAEG,SAAUhT,EAAMiT,WAAYxvE,IACrCA,CACT,CACF,C,kDChBA,MAEMyvE,EAAgB,IAAIzsB,OAAQ,OAAMC,EAAAA,EAAAA,YAA0B,IAwClE,EAtC8BxoD,IAC5B,MAAMi1E,EAAQj1E,EAAKqU,MAAM,MACnB6gE,EAAsBD,EAAM/lE,KAAK,IACvC,GAAIgmE,EAAoBp0E,OANPq0E,IAOf,OAAO,EAIT,IADoBj4E,QAAQg4E,EAAoBp0C,MAAMk0C,IAEpD,OAAO,EAET,MAAMI,EAAeH,EAAMp2E,KAAKw2E,IAC9B,IAAIC,EAAa,EACjB,KAAO9sB,EAAAA,EAAAA,KAAkB6sB,IAGvB,GAFAC,IAEIA,EApBW,IAsBb,OADA9sB,EAAAA,EAAAA,UAAyB,GACjB,EAIZ,OAAO8sB,CAAU,IAGnB,IAAI9wE,EAAMywE,EAAMn0E,OAChB,IAAK,IAAID,EAAI,EAAGA,EAAIu0E,EAAat0E,OAAQD,IAAK,CAC5C,IAAyB,IAArBu0E,EAAav0E,GACf,OAAO,EAELu0E,EAAav0E,GAAK2D,IACpBA,EAAM4wE,EAAav0E,GAEvB,CAEA,OAAO2D,CAAG,C,wFCpCL,MAAM+wE,EAAmE,CAC9E/yB,EAAGnuB,EAAAA,GAAAA,KACHouB,OAAQpuB,EAAAA,GAAAA,KACRquB,EAAGruB,EAAAA,GAAAA,OACHsuB,GAAItuB,EAAAA,GAAAA,OACJmhD,IAAKnhD,EAAAA,GAAAA,UACLuuB,EAAGvuB,EAAAA,GAAAA,UACHohD,EAAGphD,EAAAA,GAAAA,OACHqhD,OAAQrhD,EAAAA,GAAAA,OACRwuB,IAAKxuB,EAAAA,GAAAA,OACLyuB,KAAMzuB,EAAAA,GAAAA,KACNshD,IAAKthD,EAAAA,GAAAA,IACLuhD,WAAYvhD,EAAAA,GAAAA,YAKC,SAASwhD,EACtB/4B,GACkB,IADJg5B,EAAiBnqE,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAAUoqE,EAAYpqE,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GAErD,MAAMqqE,EAAW59D,SAAS48B,cAAc,OACxCghC,EAASj5B,UAAYg5B,EAAej5B,EACZm5B,EAApBH,EAAkCI,EAAmBp5B,GAAuBA,GAChFq5B,EAAgBH,GAChB,MAAMh2E,EAAOg2E,EAASI,UAAU9jD,OAAOD,QAAQ,WAAY,IACrDgkD,EAAYL,EAASI,UAAUzyD,QAAQ3jB,EAAK,IAClD,IAAIs2E,GAAaD,EACbE,EAAoB,EACxB,MAAMziD,EAA+B,GAErC,SAAS0iD,EAAUrD,GACjB,GAAIA,EAAKC,WAAaqD,KAAKC,aAAc,OACzC,MAAM,MAAEtN,EAAK,OAAEz1D,GAAWgjE,EAAsBxD,EAAMnzE,EAAMs2E,GAE5D,GAAI3iE,EACF2iE,EAAYlN,EACZt1C,EAAS/yB,KAAK4S,QACT,GAAIw/D,EAAK3zB,YAAa,CAE3B,GAAc,IAAV4pB,GAA2C,KAA5B+J,EAAK3zB,YAAYltB,OAClC,OAEFgkD,GAAanD,EAAK3zB,YAAY1+C,MAChC,CAEIqyE,EAAKyD,iBAAmBL,GA9BP,IA+BnBA,GAAqB,EACrB/wE,MAAMuuC,KAAKo/B,EAAK0D,YAAY1yE,QAAQqyE,GAExC,CAOA,OALAhxE,MAAMuuC,KAAKiiC,EAASa,YAAY1yE,SAASgvE,IACvCoD,EAAoB,EACpBC,EAAUrD,EAAK,IAGV,CACLnzE,OACA8zB,SAAUA,EAAShzB,OAASgzB,OAAW92B,EAE3C,CAEO,SAASm5E,EAAgBH,GAC9BA,EAAS78B,iBAAiB,OAAOh1C,SAASgvE,IACpCA,EAAK/5B,QAAQ3tB,WACf0nD,EAAK3zB,YAAe2zB,EAA0Bv4D,KAAO,GAErDu4D,EAAKxuB,YAAYwuB,EAAKv4D,KAAO,GAC/B,GAEJ,CAEA,SAASq7D,EAAcn5B,GACrB,IAAIg6B,EAAah6B,EAAKl+C,MAAM,GAsD5B,OAnDAk4E,EAAaA,EAAWzkD,QAAQ,UAAW,KAG3CykD,EAAaA,EAAWzkD,QAAQ,4BAA6B,MAE7DykD,EAAaA,EAAWzkD,QAAQ,gBAAiB,MAGjDykD,EAAaA,EAAWzkD,QAAQ,qBAAsB,MACtDykD,EAAaA,EAAWzkD,QAAQ,SAAU,MAC1CykD,EAAaA,EAAWzkD,QAAQ,WAAY,IAG5CykD,EAAaA,EAAWzkD,QAAQ,sCAAuC,oCACvEykD,EAAaA,EAAWzkD,QAAQ,kCAAmC,iBACnEykD,EAAaA,EAAWzkD,QAAQ,uBAAwB,iBAGxDykD,EAAaA,EAAWzkD,QACtB,wEACA,mBAIGotB,EAAAA,KAEHq3B,EAAaA,EAAWzkD,QAAQ,oCAAqC,SAEvEykD,EAAaA,EAAWzkD,QACtB,0FACA,wCAIFykD,EAAaA,EAAWzkD,QACtB,wEACA,aAEFykD,EAAaA,EAAWzkD,QACtB,wEACA,aAEFykD,EAAaA,EAAWzkD,QACtB,wEACA,aAEFykD,EAAaA,EAAWzkD,QACtB,wEACC,2BAA0BgC,EAAAA,GAAAA,sBAGtByiD,CACT,CAEA,SAASZ,EAAmBp5B,GAC1B,OAAOA,EAAKzqB,QAAQ,IAAIk2B,OAAQ,qBAAoBwuB,EAAAA,YAA0B,MAAM,CAACtsD,EAAGzqB,EAAMmT,IAEpF,YADIA,EAAK6P,SAAS,OAAS7P,EAAOA,EAAK6P,SAAS,KAAQ,UAAS7P,IAAU,UAASA,QACjEnT,SAE/B,CAEA,SAAS22E,EACPxD,EACA6D,EACAV,GAEA,MAAMl1D,EAyER,SAA+B+xD,GAC7B,GAAIA,aAAgB5W,aAAe4W,EAAK/5B,QAAQmM,WAC9C,OAAO4tB,EAAK/5B,QAAQmM,WAGtB,GAAIgwB,EAA0BpC,EAAK8D,UACjC,OAAO1B,EAA0BpC,EAAK8D,UAGxC,GAAsB,MAAlB9D,EAAK8D,SAAkB,CACzB,MAAMhlC,EAASkhC,EACf,OAAIlhC,EAAOmH,QAAQmM,aAAelxB,EAAAA,GAAAA,YACzBA,EAAAA,GAAAA,YAEL4d,EAAOmH,QAAQmM,aAAelxB,EAAAA,GAAAA,IACzBA,EAAAA,GAAAA,IAEL4d,EAAOv9B,KAAKksB,WAAW,WAClBvM,EAAAA,GAAAA,MAEL4d,EAAOv9B,KAAKksB,WAAW,QAClBvM,EAAAA,GAAAA,MAEL4d,EAAOv9B,OAASu9B,EAAOuN,YAClBnrB,EAAAA,GAAAA,QAGFA,EAAAA,GAAAA,GACT,CAEA,MAAsB,SAAlB8+C,EAAK8D,SACC9D,EAAqB/5B,QAAQmM,WAGjB,QAAlB4tB,EAAK8D,UACF9D,EAA0B/5B,QAAQ3tB,WAC9B4I,EAAAA,GAAAA,iBAFX,CAOF,CAlHe6iD,CAAsB/D,GAEnC,IAAK/xD,IAAS+xD,EAAK3zB,YACjB,MAAO,CACL4pB,MAAOkN,EACP3iE,YAAQ3W,GAIZ,MAAMm6E,EAAWH,EAAQrzD,QAAQwvD,EAAK3zB,YAAa82B,GAG7ClN,EAAQ+N,GAAY,EAAIA,EAAWb,EACnC5P,EAASsQ,EAAQ3sB,UAAU,EAAG+e,GAAOtoE,QACrC,OAAEA,GAAWk2E,EAAQ3sB,UAAU+e,EAAOA,EAAQ+J,EAAK3zB,YAAY1+C,QAErE,OAAIsgB,IAASiT,EAAAA,GAAAA,QACJ,CACL+0C,QACAz1D,OAAQ,CACNyN,OACAslD,SACA5lE,SACA6xB,IAAMwgD,EAA2Bz+D,OAInC0M,IAASiT,EAAAA,GAAAA,YACJ,CACL+0C,QACAz1D,OAAQ,CACNyN,OACAslD,SACA5lE,SACAyR,OAAS4gE,EAA2B/5B,QAAQ7mC,SAK9C6O,IAASiT,EAAAA,GAAAA,IACJ,CACL+0C,QACAz1D,OAAQ,CACNyN,OACAslD,SACA5lE,SACA8qC,SAAWunC,EAAwB/5B,QAAQxN,WAK7CxqB,IAASiT,EAAAA,GAAAA,YACJ,CACL+0C,QACAz1D,OAAQ,CACNyN,OACAslD,SACA5lE,SACA2qB,WAAa0nD,EAA0B/5B,QAAQ3tB,aAK9C,CACL29C,QACAz1D,OAAQ,CACNyN,OACAslD,SACA5lE,UAGN,C,wEC1NA,MAAMs2E,EAAch/D,SAAS48B,cAAc,OAEpC,SAASqiC,EAAsBv6B,GACpC,MAAMM,EAAYt2C,OAAOu2C,eAEzB,GAAID,GAAWQ,YAAcR,EAAUM,WAAY,CACjD,MAAMme,EAAQze,EAAUQ,WAAW,GACnCie,EAAMyb,iBAEN,MAAMtB,EAAWna,EAAM0b,yBAAyBz6B,GAC1C06B,EAAmBxB,EAAS1D,UAClCzW,EAAM4b,WAAWzB,GACbwB,GACF3b,EAAM6b,cAAcF,GACpB3b,EAAM8b,YAAYH,IAElB3b,EAAM4W,UAAS,GAEjBr1B,EAAUE,kBACVF,EAAU+G,SAAS0X,EACrB,CACF,CAEO,SAASvS,EAAuBzU,EAAyB+iC,GAC9D,IAAK/iC,EACH,MAAO,GAGT,MAAMgjC,EAAM/wE,OAAOu2C,eACnB,IAAKw6B,IAAQA,EAAIn6B,WACf,OAAO7I,EAAUkI,UAGnB,MAAM8e,EAAQgc,EAAIj6B,WAAW,GAAGk6B,aAChC,OAAKjc,EAAMkc,eAAeljC,GAIrB+iC,GAAsB/iC,EAAUw+B,SAASxX,EAAM7X,0BAIpD6X,EAAM4W,UAAS,GACf5W,EAAMmc,SAASnjC,EAAW,GAE1BuiC,EAAYr6B,UAAY,GACxBq6B,EAAYjiC,YAAY0mB,EAAMrX,iBAEvB4yB,EAAYr6B,WATV,GAJAlI,EAAUkI,SAcrB,CAGO,SAAS4S,EAAiB1lC,GAC/B,IAAIylC,EAAgB,EACpB,MAAMtS,EAAYt2C,OAAOu2C,eACzB,IAAKD,GAAsC,IAAzBA,EAAUM,WAC1B,OAAOgS,EAGT,MAAMmM,EAAQze,EAAUQ,WAAW,GAC7Bq6B,EAAapc,EAAMic,aAKzB,OAJAG,EAAWzF,mBAAmBvoD,GAC9BguD,EAAWC,OAAOrc,EAAMsc,aAActc,EAAMuc,WAC5C1oB,EAAgBuoB,EAAWn6B,WAAWh9C,OAE/B4uD,CACT,CAGO,SAASG,EAAiB5lC,EAAegX,GAC9C,IAAK,MAAMkyC,KAAQlpD,EAAQ4sD,WACzB,GAAI1D,EAAKC,WAAaqD,KAAK4B,UAAW,CACpC,GAAKlF,EAAcryE,QAAUmgC,EAAU,CACrC,MAAM46B,EAAQzjD,SAASi6D,cACjBj1B,EAAYt2C,OAAOu2C,eAMzB,OALAwe,EAAMmc,SAAS7E,EAAMlyC,GACrB46B,EAAM4W,UAAS,GACfr1B,EAAUE,kBACVF,EAAU+G,SAAS0X,IAEX,CACV,CACE56B,GAAY,WAAYkyC,EAAOA,EAAKryE,OAAmB,CAE3D,MAEE,IAAkB,KADlBmgC,EAAW4uB,EAAiBsjB,EAAMlyC,IAEhC,OAAQ,EAKd,OAAOA,CACT,CAEO,SAASq3C,IACIxxE,OAAOu2C,gBACdC,iBACb,C,kBClGA,IAAIi7B,EAEG,SAASC,IAAsF,IAAhEC,EAAM9sE,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,GAAAA,UAAA,GAAG,IAAK81D,EAA4B91D,UAAA7K,OAAA,EAAA6K,UAAA,QAAA3O,EAAE07E,EAAU/sE,UAAA7K,OAAA,QAAA9D,IAAA2O,UAAA,IAAAA,UAAA,GACrF4sE,IACHA,EAAengE,SAAS48B,cAAc,SACtCujC,EAAar5D,aAAa,OAAQ,SAGpCq5D,EAAar5D,aAAa,SAAUu5D,GAEhCC,EACFH,EAAaI,gBAAgB,YAE7BJ,EAAar5D,aAAa,WAAY,YAIxCq5D,EAAaK,SAAW,KACxBL,EAAa1yE,MAAQ,GACrB0yE,EAAaK,SAAWnX,EAExB8W,EAAavG,OACf,C","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useFullscreen.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { makeTrackId } from '../../util/audioPlayer';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { AvatarSize } from './Avatar';\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: (ApiUser | ApiChat)[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport {\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, activeChatUsernames, topicId, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import React, {\n  memo, useRef, useState, useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import React, { useEffect, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import React, {\n  useRef, useEffect, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  currentUserId?: string;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  currentUserId,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, chat.id === currentUserId);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PickerSelectedItem));\n","import React, { useEffect, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  selectChatMessages,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon ${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, memo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic, ApiPhoto,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\n\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? (lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized')\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleClickPremium = useLastCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { getServerTimeOffset } from '../../util/serverTime';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    messageId: message.id,\n    isSimple,\n    isProtected,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './MuteChatModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport type { Signal } from '../../../util/signals';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { getGlobal } from '../global';\nimport { createSignal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\nimport { addCallback } from '../lib/teact/teactn';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatBadge from './ChatBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\nimport { getChatTitle } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\n\nimport ListItem from '../../ui/ListItem';\nimport Badge from '../../ui/Badge';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    };\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    };\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    };\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\nimport type { SettingsScreens } from '../../../types';\nimport type { GlobalState } from '../../../global/types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_APP } from '../../../util/windowEnvironment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport Archive from './Archive';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const { openChat, openNextChat, closeForumPanel } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ChatBadge from './ChatBadge';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useOrderDiff from './hooks/useOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { LangFn } from '../../../../hooks/useLang';\nimport useLang from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiMessage, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isUserId(chatId) ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject, ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useLayoutEffect,\n} from '../../../lib/teact/teact';\nimport { requestMutation, requestForcedReflow } from '../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    isAttachmentModalInput ? 'attachment' : 'composer',\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport type { OwnProps } from './SymbolMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { IAnchorPosition } from '../../../types';\nimport type { ApiVideo, ApiSticker } from '../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isReady,\n  isSymbolMenuOpen,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n  isSymbolMenuForced,\n  className,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : EDITABLE_INPUT_CSS_SELECTOR,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={className}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { pick, omit } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Signal } from '../util/signals';\nimport type { Scheduler } from '../util/schedulers';\n\nimport useThrottledCallback from './useThrottledCallback';\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { selectTabState } from '../global/selectors';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useSyncEffect from './useSyncEffect';\nimport useLastCallback from './useLastCallback';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport { IS_ELECTRON, SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSyncEffect from './useSyncEffect';\nimport useSignal from './useSignal';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useLayoutEffect, useState, useEffect } from '../lib/teact/teact';\nimport { IS_IOS } from '../util/windowEnvironment';\n\nimport { ElectronEvent } from '../types/electron';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, setIsPlayed: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS)) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const video = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      video!.controls = isEnabled;\n    };\n    const listenerEnter = () => { setIsFullscreen(true); };\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      setIsPlayed(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (video) {\n      video.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      video.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (video) {\n        video.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        video.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(video: HTMLVideoElement) {\n  if (video.requestFullscreen) {\n    video.requestFullscreen();\n  } else if (video.webkitRequestFullscreen) {\n    video.webkitRequestFullscreen();\n  } else if (video.webkitEnterFullscreen) {\n    video.webkitEnterFullscreen();\n  } else if (video.mozRequestFullScreen) {\n    video.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\n\nimport useLastCallback from './useLastCallback';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_DOWNLOADED = 'update-downloaded',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { animate } from './animation';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './windowEnvironment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './windowEnvironment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './windowEnvironment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\nimport windowSize from './windowSize';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  const currentWindowSize = windowSize.get();\n  let initialTouchCenter = {\n    x: currentWindowSize.width / 2,\n    y: currentWindowSize.height / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    const newWindowSize = windowSize.get();\n    initialTouchCenter = {\n      x: newWindowSize.width / 2,\n      y: newWindowSize.height / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= windowSize.get().width - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    isZooming = true;\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1 || isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","has","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","size","style","buildStyle","src","styles","onLoad","AnimatedIcon","noTransition","renderWaveform","canvas","spikes","progress","peak","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","Math","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","decodeWaveform","encoded5bit","bitsCount","valuesCount","floor","result","Array","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","interpolateArray","data","fitCount","newData","springFactor","leftFiller","rightFiller","_data","_data$idx","_data2","idx","val","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","getSeeklineSpikeAmounts","isMobile","withAvatar","MIN_SPIKES","matches","MAX_SPIKES","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","canvasRef","waveform","min","durationFactor","spikesCount","Uint8Array","useLayoutEffect","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","peers","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isSavedMessages","isText","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","SUPPORTED_VIDEO_CONTENT_TYPES","mimeType","SUPPORTED_IMAGE_CONTENT_TYPES","handleClick","File","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","alt","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","MessageOutgoingStatus","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","onContextMenu","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","top","shiftX","shiftY","setAttribute","Keys","Transition","activeKey","DEFAULT_TEXT","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","autoComplete","type","tabIndex","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","disabled","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","setTimeout","lockedSelectedIds","unlockedSelectedIds","MEMO_EMPTY_ARRAY","unlockedIds","includes","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","indexOf","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","items","renderCheckbox","Checkbox","allowDisabledClick","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noEmojiStatus","adminMember","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","isPrivate","mediaViewer","currentTopicId","userFullInfo","chatFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","usePrevious","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","element","querySelector","selectorToPreventScroll","onSwipe","direction","SwipeDirection","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","onEmojiStatusClick","canCopyTitle","ProfilePhoto","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","CustomEmoji","documentId","observeIntersectionForPlaying","blankUrl","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","contentForStatusMenuContext","arg","noPlay","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isCurrentUserPremium","noShowPremium","sharedCanvasRef","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","openStickerSet","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","isPremium","stickerSetInfo","isLocked","shouldPlay","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","emojiStatus","expires","Date","now","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","MenuItem","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","StickerView","containerRef","isSmall","shouldLoop","shouldPreloadPreview","withSharedAnimation","noFastClick","Menu","autoClose","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","entities","contentNotSupportedText","renderTextWithEntities","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","useModuleLoader","Bundles","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","acc","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isShown","useDerivedState","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","bySelector","Map","addCallback","selector","setter","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","messageListType","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","draft","selectDraft","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","onDragEnter","openChat","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","get","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","shouldReplaceHistory","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withPortalForMenu","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedIconFromSticker","fluid","pill","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","archiveUnreadCount","useFolderManagerForUnreadCounters","chatsCount","previewItems","arr","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","buttonClassName","Badge","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","shouldIgnoreDragRef","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_APP","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","isArchiveInList","shift","position","Number","LeftColumnContent","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","ownProps","detachWhenChanged","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","hash","captureEscKeyListener","requestNextMutation","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","withForumActions","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","noForumTopicPanel","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","observeIntersectionForLoading","inChatList","isSpoiler","renderSummary","opacity","classList","remove","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","reduce","prevOrderById","prevChatId","mapValues","order","getSenderName","getSenderTitle","isChatGroup","HeaderMenuContainer","language","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","settings","byKey","selectIsInSelectMode","noMenu","bot","selectBot","fullInfo","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","handleSearchClick","requestMeasure","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","buttonText","doNotTranslateText","handleHide","isEnabled","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","onTrigger","DropdownMenu","trigger","MenuSeparator","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","CustomEmojiTooltip","CustomSend","isQuick","isGeneric","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerId","onDragOver","handleDragOver","clearTimeout","DropTarget","EmojiTooltip","AbsoluteVideo","constructor","videoUrl","container","_defineProperty","this","createElement","load","noLoop","appendChild","recalculatePositionAndSize","play","paused","safePlay","pause","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","replyingToId","selectReplyingToId","isSelectModeActive","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","captionLimit","isAttachmentModalInput","editableInputId","isReady","getHtml","forcedPlaceholder","canSendPlainText","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","onScroll","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_IOS","IS_ANDROID","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","ids","player","synchronizeElements","playerIdsToClear","keys","querySelectorAll","dataset","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","customEmojis","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","hexToRgb","lottie","ensureRLottie","init","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","addCustomEmojiInputRenderCallback","documentElement","setProperty","useEffectWithPrevDeps","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","scrollHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","html","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","isTouched","contentEditable","textContent","IS_EMOJI_SUPPORTED","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","SymbolMenu","canSendGifs","canSendStickers","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","isAttachmentModal","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","isSymbolMenuForced","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","query","handleSymbolMenuOpen","messageInput","EDITABLE_INPUT_MODAL_CSS_SELECTOR","EDITABLE_INPUT_CSS_SELECTOR","activeElement","ResponsiveHoverButton","onActivate","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","setHtml","getSelectionRange","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","extractLastEmojiThrottled","useThrottledResolver","collapsed","getHtmlBeforeSelection","getLastEmoji","useDerivedSignal","hasCustomEmojis","lastEmoji","insertCustomEmoji","inputEl","htmlBeforeSelection","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","useEmojiTooltip","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","atIndex","lastIndexOf","emojiHtml","getElementById","emojiCode","newShouldAutoInsert","endsWith","test","isEmojiTooltipOpen","closeEmojiTooltip","default","uncompressEmoji","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","insertMention","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","isDisabled","timeoutRef","useSyncEffect","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","ms","throttledResolver","useDebouncedResolver","noLast","useDebouncedSignal","debouncedResolver","makeMediaHandlers","controllerRef","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","registerMediaSession","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","withRaf","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","alpha","drawImage","fastBlur","onload","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","_dependencies","isAsync","useSignal","resolverRef","useStateRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","newValue","replyOriginForId","loadMessage","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","setIsPlayed","isFullscreen","setIsFullscreen","listener","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","fullscreenProp","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","useGetSelectionRange","inputSelector","getRange","setRange","onSelectionChange","range","Element","shouldPreventDefault","handleScroll","deltaX","deltaY","passive","IGNORE_TAGS","createCallbackManager","hotkeys","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","useInputFocusOnOpen","isConnected","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","throttle","spentTime","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","handleMouseEnter","handleMouseLeave","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","useRunDebounced","CalendarModal","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","useSendMessageAction","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","initial","_signalRef$current","signalRef","effect","isFirstRun","dependency","subscribe","cleanupEffect","callback","savedCallback","ConnectorClass","channel","_len","args","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","reject","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","update","response","callbackArgs","createConnector","worker","connector","handleMessage","stopById","animateHorizontalScroll","containerWidth","scrollId","path","remainingPath","isStopped","random","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","animateScroll","mutate","createMutateFunction","shouldReturnMutationFn","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","elementTop","offsetHeight","elementHeight","scrollTop","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","newScrollTop","isAnimatingScroll","offset","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","currentId","queue","index","chatAudio","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","getDistance","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","currentWindowSize","windowSize","initialSwipeAxis","initialTouchCenter","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","touches","withCursor","body","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","newWindowSize","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","delta","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","d","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","context","image","preloadImage","naturalHeight","naturalWidth","getImageData","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","pendingDownloads","planned","download","filename","pendingDownload","downloadOne","processQueue","click","err","console","force","forcePlaceCaretAtEnd","createRange","lastChild","nodeValue","selectNodeContents","collapse","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","node","nodeType","contains","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","ENTITY_CLASS_BY_NODE_NAME","INS","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","withMarkdownLinks","skipMarkdown","fragment","parseMarkdown","parseMarkdownLinks","fixImageContent","innerText","trimShift","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","getEntityDataFromNode","hasChildNodes","childNodes","parsedHtml","RE_LINK_TEMPLATE","rawText","nodeName","getEntityTypeFromNode","rawIndex","extractorEl","insertHtmlInSelection","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","caretRange","setEnd","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","openSystemFilesDialog","accept","noMultiple","removeAttribute","onchange"],"sourceRoot":""}