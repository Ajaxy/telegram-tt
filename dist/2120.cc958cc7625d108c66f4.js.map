{"version":3,"file":"2120.cc958cc7625d108c66f4.js","mappings":"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","sources":["webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/ui/Separator.module.scss?e4cd","webpack://telegram-t/./src/components/ui/Separator.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/ui/TextTimer.tsx","webpack://telegram-t/./src/components/ui/Toggle.module.scss?0590","webpack://telegram-t/./src/components/ui/Toggle.tsx","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.module.scss?3a84","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.tsx","webpack://telegram-t/./src/components/ui/placeholder/Skeleton.tsx"],"sourcesContent":["import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} draggable={false} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Y3ZoW17O\",\"default\":\"DWjOG2Ze\",\"alternate\":\"Lq67O2D2\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmIsDestructive?: boolean;\n  isConfirmDisabled?: boolean;\n  isOnlyConfirm?: boolean;\n  areButtonsInColumn?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  confirmHandler: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmIsDestructive,\n  isConfirmDisabled,\n  isOnlyConfirm,\n  areButtonsInColumn,\n  className,\n  children,\n  confirmHandler,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm', className)}\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n          disabled={isConfirmDisabled}\n        >\n          {confirmLabel}\n        </Button>\n        {!isOnlyConfirm && <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToDataUri, blobToFile } from '../../util/files';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Loading from './Loading';\nimport Modal from './Modal';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kWQHzIMD\",\"isDragging\":\"k0c5WDAy\",\"knob\":\"UpzQzcvs\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport styles from './Draggable.module.scss';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <i className=\"icon icon-sort\" aria-hidden />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject, UIEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { LoadMoreDirection } from '../../types';\n\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\nimport buildStyle from '../../util/buildStyle';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce } from '../../util/schedulers';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onWheel?: (e: React.WheelEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onWheel,\n  onClick,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      const container = containerRef.current!;\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = container;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = container;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(container, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      onWheel={onWheel}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onClick={onClick}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Button from './Button';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport RippleEffect from './RippleEffect';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: IconName;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: IconName;\n  iconClassName?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: IconName;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  menuBubbleClassName?: string;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  iconClassName,\n  leftElement,\n  buttonClassName,\n  menuBubbleClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    isStatic && 'allow-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {leftElement}\n        {icon && (\n          <i className={buildClassName('icon', `icon-${icon}`, iconClassName)} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <i className={`icon icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu with-menu-transitions\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n          bubbleClassName={menuBubbleClassName}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                <span className=\"list-item-ellipsis\">\n                  {renderText(action.title)}\n                </span>\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"h039vb1K\",\"thin\":\"NGKaFgra\",\"thick\":\"_BdnjPEa\"};","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'thin' | 'thick';\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className, size = 'thin' }) => {\n  return (\n    <div className={buildClassName(styles.root, styles[size], className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport trapFocus from '../../util/trapFocus';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nexport const ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  contentClassName?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: React.RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  contentClassName,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className={buildClassName('modal-content custom-scroll', contentClassName)} style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default freezeWhenClosed(Modal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { CallbackAction } from '../../global/types';\nimport type { TextPart } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction | CallbackAction[];\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { animate, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useDevicePixelRatio from '../../hooks/window/useDevicePixelRatio';\n\nimport Icon from '../common/Icon';\n\nimport './ProgressSpinner.scss';\n\nconst SIZES = {\n  s: 42, m: 48, l: 54, xl: 52,\n};\nconst STROKE_WIDTH = 2;\nconst STROKE_WIDTH_XL = 3;\nconst PADDING = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\nconst GROW_DURATION = 600; // 0.6 s\nconst ROTATE_DURATION = 2000; // 2 s\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  rotationOffset?: number;\n  withColor?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  rotationOffset,\n  withColor,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const width = SIZES[size];\n  const progressRef = useStateRef(progress);\n\n  const dpr = useDevicePixelRatio();\n\n  const color = useDynamicColorListener(canvasRef, !withColor);\n\n  useEffect(() => {\n    let isFirst = true;\n    let growFrom = MIN_PROGRESS;\n    let growStartedAt: number | undefined;\n    let prevProgress: number | undefined;\n\n    animate(() => {\n      if (!canvasRef.current) {\n        return false;\n      }\n\n      if (progressRef.current !== prevProgress) {\n        growFrom = Math.min(Math.max(MIN_PROGRESS, prevProgress || 0), MAX_PROGRESS);\n        growStartedAt = Date.now();\n        prevProgress = progressRef.current;\n      }\n\n      const targetProgress = Math.min(Math.max(MIN_PROGRESS, progressRef.current), MAX_PROGRESS);\n      const t = Math.min(1, (Date.now() - growStartedAt!) / GROW_DURATION);\n      const animationFactor = timingFunctions.easeOutQuad(t);\n      const currentProgress = growFrom + (targetProgress - growFrom) * animationFactor;\n\n      drawSpinnerArc(\n        canvasRef.current,\n        width * dpr,\n        (size === 'xl' ? STROKE_WIDTH_XL : STROKE_WIDTH) * dpr,\n        color ?? 'white',\n        currentProgress,\n        dpr,\n        isFirst,\n        rotationOffset,\n      );\n\n      isFirst = false;\n\n      return currentProgress < 1;\n    }, requestMutation);\n  }, [progressRef, size, width, dpr, rotationOffset, color]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      {!noCross && <Icon name=\"close\" />}\n      <canvas ref={canvasRef} className=\"ProgressSpinner_canvas\" style={`width: ${width}; height: ${width}px;`} />\n    </div>\n  );\n};\n\nfunction drawSpinnerArc(\n  canvas: HTMLCanvasElement,\n  size: number,\n  strokeWidth: number,\n  color: string,\n  progress: number,\n  dpr: number,\n  shouldInit = false,\n  rotationOffset?: number,\n) {\n  const centerCoordinate = size / 2;\n  const radius = (size - strokeWidth) / 2 - PADDING * dpr;\n  const offset = rotationOffset ?? (Date.now() % ROTATE_DURATION) / ROTATE_DURATION;\n  const startAngle = (2 * Math.PI) * offset;\n  const endAngle = startAngle + (2 * Math.PI) * progress;\n  const ctx = canvas.getContext('2d')!;\n\n  if (shouldInit) {\n    canvas.width = size;\n    canvas.height = size;\n\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = strokeWidth;\n  }\n\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(centerCoordinate, centerCoordinate, radius, startAngle, endAngle);\n  ctx.stroke();\n}\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  className?: string;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  className,\n  onChange,\n}) => {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    'Radio',\n    className,\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n  className?: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          className={option.className}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Loading from './Loading';\nimport Transition from './Transition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading = false,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(isLoading)}\n        className=\"icon-container\"\n      >\n        {isLoading ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : (\n          <i className=\"icon icon-search search-icon\" />\n        )}\n      </Transition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"axfkbhWJ\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { openSystemFilesDialog } from '../../util/systemFilesDialog';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    openSystemFilesDialog('image/png, image/jpeg', ((event) => {\n      const target = event.target as HTMLInputElement;\n      if (!target?.files?.[0]) {\n        return;\n      }\n      setSelectedFile(target.files[0]);\n    }), true);\n  }, []);\n\n  return (\n    <>\n      <input ref={inputRef} className={styles.input} onClick={handleClick} />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"separator\":\"LxlpQKLr\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport styles from './Separator.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n};\n\nfunction Separator({ children, className }: OwnProps) {\n  const lang = useLang();\n\n  return (\n    <div\n      dir={lang.isRtl ? 'rtl' : undefined}\n      className={buildClassName(styles.separator, className)}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Separator;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <i className=\"icon icon-down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useShowTransition from '../../hooks/useShowTransition';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.LegacyRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={buildClassName(className, transitionClassNames)}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport { MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\n\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuPosition, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    textarea.style.height = '0';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = e.currentTarget.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      e.currentTarget.value = e.currentTarget.value.replace(/\\n/g, ' ');\n      e.currentTarget.selectionEnd = previousSelectionEnd;\n    }\n    e.currentTarget.style.height = '0';\n    e.currentTarget.style.height = `${e.currentTarget.scrollHeight}px`;\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import React, { type FC, memo, useEffect } from '../../lib/teact/teact';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\n\ntype OwnProps = {\n  langKey: string;\n  endsAt: number;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 500; // Sometimes second gets skipped if using 1000\n\nconst TextTimer: FC<OwnProps> = ({ langKey, endsAt, onEnd }) => {\n  const lang = useLang();\n  const forceUpdate = useForceUpdate();\n\n  const serverTime = getServerTime();\n  const isActive = serverTime < endsAt;\n  useInterval(forceUpdate, isActive ? UPDATE_FREQUENCY : undefined);\n\n  useEffect(() => {\n    if (!isActive) {\n      onEnd?.();\n    }\n  }, [isActive, onEnd]);\n\n  if (!isActive) return undefined;\n\n  const timeLeft = endsAt - serverTime;\n  const formattedTime = formatMediaDuration(timeLeft);\n\n  return (\n    <span>\n      {lang(langKey, formattedTime)}\n    </span>\n  );\n};\n\nexport default memo(TextTimer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eGD1rubd\",\"widget\":\"EXXsQxeq\",\"min\":\"C4vXj96y\",\"mid\":\"nRNm3LRD\",\"max\":\"LdztzMx0\",\"filler\":\"kudEBJOk\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Toggle.module.scss';\n\ninterface OwnProps {\n  value: 'min' | 'mid' | 'max';\n}\n\nfunction Toggle({ value }: OwnProps) {\n  return (\n    <div className={buildClassName(styles.root, 'Toggle')} aria-hidden>\n      <i className={buildClassName(styles.filler, styles[value])} />\n      <i className={buildClassName(styles.widget, styles[value])} />\n    </div>\n  );\n}\n\nexport default memo(Toggle);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Oob7moh7\",\"avatar\":\"ao0o6F_1\",\"info\":\"e94nYlC4\",\"title\":\"ANs9RCJu\",\"subtitle\":\"RSn3O5Rx\",\"animated\":\"AtWkrIxV\",\"slide\":\"_iiRl0o2\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './PlaceholderChatInfo.module.scss';\n\nconst PlaceholderChatInfo = () => {\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.avatar, styles.animated)} />\n      <div className={styles.info}>\n        <div className={buildClassName(styles.title, styles.animated)} />\n        <div className={buildClassName(styles.subtitle, styles.animated)} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PlaceholderChatInfo);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n"],"names":["memo","AvatarEditable","title","disabled","isForForum","currentAvatarBlobUrl","onChange","selectedFile","setSelectedFile","useState","croppedBlobUrl","setCroppedBlobUrl","useEffect","handleAvatarCrop","useCallback","croppedImg","undefined","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","buildClassName","React","createElement","className","role","tabIndex","type","event","target","files","value","accept","src","draggable","alt","CropModal","file","onClose","Badge","text","isAlternateColor","ShowTransition","isOpen","Boolean","AnimatedCounter","CheckboxGroup","id","options","selected","round","loadingOptions","values","setValues","handleChange","checked","currentTarget","newValues","filter","v","map","option","Checkbox","label","subLabel","indexOf","isLoading","ConfirmDialog","header","textParts","confirmLabel","confirmIsDestructive","isConfirmDisabled","isOnlyConfirm","areButtonsInColumn","children","confirmHandler","onCloseAnimationEnd","lang","useLang","containerRef","useRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","split","textPart","ref","onKeyDown","Button","isText","onClick","color","cropperResultOptions","quality","format","circle","size","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","async","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","error","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","hasCloseButton","Loading","ariaLabel","ZERO_POINT","x","y","Draggable","onDrag","onDragEnd","style","externalStyle","knobStyle","isDisabled","state","setState","isDragging","origin","translation","handleMouseDown","e","stopPropagation","preventDefault","getClientCoordinate","current","handleMouseMove","handleMouseUp","window","addEventListener","removeEventListener","fullClassName","cssStyles","useMemo","buildStyle","onMouseDown","onTouchStart","touches","clientX","clientY","FloatingActionButton","isShown","buttonClassName","isRtl","InfiniteScroll","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onWheel","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","direction","LoadMoreDirection","Backwards","Forwards","length","scrollHeight","clientHeight","useLayoutEffect","requestForcedReflow","container","newScrollTop","listItemElements","querySelectorAll","currentAnchor","Array","from","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","useLastCallback","listLength","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","teactFastList","IS_ANDROID","ListItem","buttonRef","icon","iconClassName","leftElement","menuBubbleClassName","secondaryIcon","rightElement","allowDisabledClick","ripple","narrow","inactive","focus","destructive","multiline","isStatic","contextActions","withPortalForMenu","href","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","withPortal","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","Main","handleClick","Auxiliary","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleSecondaryIconMouseDown","useFastClick","Secondary","ButtonElementTag","dir","RippleEffect","Menu","autoClose","bubbleClassName","action","MenuSeparator","key","MenuItem","handler","renderText","styles","root","ANIMATION_DURATION","freezeWhenClosed","dialogRef","contentClassName","isSlim","noBackdrop","noBackdropClose","onEnter","shouldSkipHistoryAnimations","shouldRender","transitionClassNames","useShowTransition","modalRef","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","trapFocus","useHistoryBack","isActive","onBack","useLayoutEffectWithPrevDeps","prevIsOpen","body","classList","toggle","dispatchHeavyAnimationEvent","remove","Portal","Notification","message","duration","containerId","onDismiss","actionText","actions","getActions","setIsOpen","timerRef","closeAndDismiss","setTimeout","ANIMATION_END_DELAY","isArray","forEach","cb","payload","captureEscKeyListener","clearTimeout","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","SIZES","s","m","l","xl","MIN_PROGRESS","ProgressSpinner","progress","square","transparent","noCross","rotationOffset","withColor","canvasRef","progressRef","useStateRef","dpr","useDevicePixelRatio","useDynamicColorListener","growStartedAt","prevProgress","isFirst","growFrom","animate","Math","min","max","Date","now","targetProgress","t","animationFactor","timingFunctions","easeOutQuad","currentProgress","canvas","strokeWidth","shouldInit","centerCoordinate","radius","offset","startAngle","PI","endAngle","ctx","getContext","lineCap","strokeStyle","lineWidth","clearRect","beginPath","arc","stroke","drawSpinnerArc","requestMutation","Icon","name","Radio","hidden","Spinner","RadioGroup","loadingOption","RangeSlider","step","bold","renderValue","Number","mainClassName","trackWidth","openTimeout","isFirstTimeActivation","ResponsiveHoverButton","onActivate","buttonProps","isMouseInside","_extends","SearchInput","parentContainerClassName","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","element","Transition","shouldCleanup","activeKey","backgroundColor","props","hasArrow","labelText","htmlFor","SelectAvatar","openSystemFilesDialog","Fragment","ShowMoreButton","count","itemName","itemPluralName","isHidden","isCustom","noCloseTransition","shouldAnimateFirstRender","usePrevious","prevChildren","fromChildrenRef","isFirstRender","Switcher","noAnimation","onCheck","classNames","Tab","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextRootElementSelector","tabRef","add","tabEl","prevTabEl","parentElement","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","transform","forceReflow","SCROLL_DURATION","IS_IOS","TabList","tabs","areFolders","activeTab","big","onSwitchTab","useHorizontalScroll","scrollWidth","scrollLeft","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","i","ALL_FOLDER_ID","TextArea","success","readOnly","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","textarea","previousSelectionEnd","selectionEnd","replace","TextTimer","langKey","endsAt","onEnd","forceUpdate","useForceUpdate","serverTime","getServerTime","useInterval","timeLeft","formattedTime","formatMediaDuration","filler","widget","PlaceholderChatInfo","Skeleton","variant","animation","forceAspectRatio","inline","aspectRatio"],"sourceRoot":""}